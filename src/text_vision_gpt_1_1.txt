Solver: gpt4-text-vision
 = = = = = = = = = = = = starting new task: `ROT Details [m=50] rocstories - 0 - 99` = = = = = = = = = = = = 
First instance id: 32971
instance_id: 32974 <-> row_number: 3
 --> inputs: ['rot-agree', 'rot-categorization', 'rot-moral-foundations', 'char-involved-general', 'rot-rewrite', 'rot-judgment', 'agency-fwd', 'action-fwd-good', 'fwd-agree', 'fwd-legal', 'fwd-pressure', 'char-involved-fwd', 'fwd-hypothetical', 'n-characters']
 --> Looking up gold labels from row index 3 of `input.csv` (unique inputs). 
 --> input labels: {'rot-agree': [3, 4, 4, 3, 3, 3, 4, 3, 4, 3, 4, 3, 4, 2, 3, 3, 2, 3, 3, 3, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 4, 4, 3, 3, 3, 4, 3, 4, 3, 4], 'rot-categorization': ['morality-ethics|advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'description', 'advice', 'advice', 'social-norms|description', 'morality-ethics|advice', 'morality-ethics|social-norms', 'social-norms|advice', 'advice', 'advice', 'morality-ethics', 'advice', 'advice', 'advice', 'advice', 'advice', 'morality-ethics', 'advice', 'social-norms', 'morality-ethics|advice', 'advice', 'advice', 'advice', 'morality-ethics|advice', 'social-norms|advice', 'social-norms|advice', 'advice', 'morality-ethics|advice', 'advice', 'morality-ethics|social-norms', 'advice', 'advice', 'advice', 'morality-ethics', 'advice', 'advice', 'morality-ethics|advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice'], 'rot-moral-foundations': ['care-harm|sanctity-degradation', '', 'care-harm', 'authority-subversion', 'care-harm', '', 'care-harm', 'sanctity-degradation', 'care-harm|authority-subversion', '', 'care-harm', 'care-harm', 'care-harm|authority-subversion|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', '', 'care-harm', 'care-harm', 'care-harm', 'care-harm', 'care-harm|fairness-cheating', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm', 'care-harm', 'care-harm', 'care-harm', '', '', 'care-harm', 'care-harm', 'sanctity-degradation', 'care-harm|sanctity-degradation', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm', 'care-harm', 'care-harm', '', 'care-harm', 'care-harm', '', 'care-harm', 'care-harm', 'care-harm'], 'char-involved-general': ['char-0', 'char-0', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-0'], 'rot-rewrite': ['avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'not disturbing animals in the wild.', 'avoiding disturbing animals in the wild', 'disturbing animals in the wild', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'not disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild'], 'rot-judgment': ["It's good", 'good', "It's good", "it's good", "It's good", "It's good", "It's good", "it's good", 'good', "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", 'good', 'good', "It's good", "It's good", "It's good", "It's good", "it's good", "It's good", "It's good", "It's good", "It's good", "it's good", "it's good", 'good', "It's good", "it's good", "It's good", 'you should avoid it', "It's good", "It's good", "it's good", "It's good", 'good', "It's good", "It's good", "it's good", "It's good", "It's good", "It's good", "it's good", "it's good", 'good', "It's good", "it's good", "It's good"], 'agency-fwd': ['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency'], 'action-fwd-good': [1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'fwd-agree': [3.0, 4.0, 2.0, 3.0, 3.0, 4.0, 4.0, 3.0, 4.0, 3.0, 4.0, 3.0, 4.0, 2.0, 3.0, 3.0, 2.0, 4.0, 3.0, 3.0, 4.0, 4.0, 4.0, 4.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 4.0, 3.0, 3.0, 3.0, 4.0, 4.0, 4.0, 3.0, 4.0], 'fwd-legal': ['legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal'], 'fwd-pressure': [2.0, -1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 0.0, 1.0, 0.0, 2.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 1.0, -1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0], 'char-involved-fwd': ['char-0', 'char-0', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-0'], 'fwd-hypothetical': ['hypothetical', 'probable', 'hypothetical', 'explicit', 'hypothetical', 'probable', 'probable', 'probable', '', 'hypothetical', 'probable', 'probable-no', 'probable-no', 'probable', 'probable', 'hypothetical', 'probable', 'hypothetical', 'probable', 'hypothetical', 'explicit-no', 'explicit', 'hypothetical', 'probable', 'probable-no', 'probable-no', 'hypothetical', 'hypothetical', 'probable', 'probable', 'hypothetical', 'probable-no', 'probable-no', 'hypothetical', 'hypothetical', 'probable', 'probable', '', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'probable', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'probable'], 'n-characters': [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]}
 - - - - - -  starting a new element: `Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-agree
Executing one action: self.actions.modify_radio('rot-agree', '3')
We are going to select this radio button: <input type="radio" name="rot-agree" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-categorization
Executing one action: self.actions.modify_checkbox('rot-categorization', 'advice')
Looking for checkboxes with `name`: `rot-categorization` the values: `['advice']`
About to check this checkbox: <input type="checkbox" name="rot-categorization" value="advice">
 - - - - - -  starting a new element: `Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-moral-foundations
Executing one action: self.actions.modify_checkbox('rot-moral-foundations', 'care-harm')
Looking for checkboxes with `name`: `rot-moral-foundations` the values: `['care-harm']`
About to check this checkbox: <input type="checkbox" name="rot-moral-foundations" value="care-harm">
 - - - - - -  starting a new element: `Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-general
Executing one action: self.actions.modify_radio('char-involved-general', 'char-0')
We are going to select this radio button: <input type="radio" name="char-involved-general" value="char-0" required="">
 - - - - - -  starting a new element: `Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-rewrite
Executing one action: self.actions.modify_text('rot-rewrite', 'avoiding disturbing animals in the wild')
Add text `avoiding disturbing animals in the wild` to this text input: <input type="text" class="text" name="rot-rewrite" value="It's good to avoid disturbing animals in the wild." id="rot-rewrite">
 - - - - - -  starting a new element: `Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-judgment
Executing one action: self.actions.modify_text('rot-judgment', 'It is good')
Add text `It is good` to this text input: <input type="text" class="text" name="rot-judgment" id="rot-judgment">
 - - - - - -  starting a new element: `Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: agency-fwd
Executing one action: self.actions.modify_radio('agency-fwd', 'agency')
We are going to select this radio button: <input type="radio" name="agency-fwd" value="agency" required="">
 - - - - - -  starting a new element: `Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: action-fwd-good
Executing one action: self.actions.modify_radio('action-fwd-good', '1')
We are going to select this radio button: <input type="radio" name="action-fwd-good" value="1" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-agree
Executing one action: self.actions.modify_radio('fwd-agree', '3')
We are going to select this radio button: <input type="radio" name="fwd-agree" value="3" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-legal
Executing one action: self.actions.modify_radio('fwd-legal', 'legal')
We are going to select this radio button: <input type="radio" name="fwd-legal" value="legal" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-pressure
Executing one action: self.actions.modify_radio('fwd-pressure', '2')
We are going to select this radio button: <input type="radio" name="fwd-pressure" value="2" required="required">
 - - - - - -  starting a new element: `Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-fwd
Executing one action: self.actions.modify_radio('char-involved-fwd', 'char-none')
We are going to select this radio button: <input type="radio" name="char-involved-fwd" value="char-none" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `fwd-hypothetical` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `n-characters` since it is not visible.
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['advice']
 visible_values : ['advice']
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['care-harm']
 visible_values : ['care-harm']
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-0']
 visible_values : ['char-0']
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['avoiding disturbing animals in the wild']
 visible_values : ['avoiding disturbing animals in the wild']
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['It is good']
 visible_values : ['It is good']
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['agency']
 visible_values : ['agency']
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['legal']
 visible_values : ['legal']
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-none']
 visible_values : ['char-none']
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : []
 visible_values : []
input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[3, 4, 4, 3, 3, 3, 4, 3, 4, 3, 4, 3, 4, 2, 3, 3, 2, 3, 3, 3, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 4, 4, 3, 3, 3, 4, 3, 4, 3, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['advice|morality-ethics', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'description', 'advice', 'advice', 'description|social-norms', 'advice|morality-ethics', 'morality-ethics|social-norms', 'advice|social-norms', 'advice', 'advice', 'morality-ethics', 'advice', 'advice', 'advice', 'advice', 'advice', 'morality-ethics', 'advice', 'social-norms', 'advice|morality-ethics', 'advice', 'advice', 'advice', 'advice|morality-ethics', 'advice|social-norms', 'advice|social-norms', 'advice', 'advice|morality-ethics', 'advice', 'morality-ethics|social-norms', 'advice', 'advice', 'advice', 'morality-ethics', 'advice', 'advice', 'advice|morality-ethics', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice']` - type: `<class 'list'>`
----> baseline_answer: `advice` - type: `<class 'str'>`
Model answers: advice 
Gold answers: ['advice|morality-ethics', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'description', 'advice', 'advice', 'description|social-norms', 'advice|morality-ethics', 'morality-ethics|social-norms', 'advice|social-norms', 'advice', 'advice', 'morality-ethics', 'advice', 'advice', 'advice', 'advice', 'advice', 'morality-ethics', 'advice', 'social-norms', 'advice|morality-ethics', 'advice', 'advice', 'advice', 'advice|morality-ethics', 'advice|social-norms', 'advice|social-norms', 'advice', 'advice|morality-ethics', 'advice', 'morality-ethics|social-norms', 'advice', 'advice', 'advice', 'morality-ethics', 'advice', 'advice', 'advice|morality-ethics', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['care-harm|sanctity-degradation', '', 'care-harm', 'authority-subversion', 'care-harm', '', 'care-harm', 'sanctity-degradation', 'authority-subversion|care-harm', '', 'care-harm', 'care-harm', 'authority-subversion|care-harm|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', '', 'care-harm', 'care-harm', 'care-harm', 'care-harm', 'care-harm|fairness-cheating', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm', 'care-harm', 'care-harm', 'care-harm', '', '', 'care-harm', 'care-harm', 'sanctity-degradation', 'care-harm|sanctity-degradation', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm', 'care-harm', 'care-harm', '', 'care-harm', 'care-harm', '', 'care-harm', 'care-harm', 'care-harm']` - type: `<class 'list'>`
----> baseline_answer: `care-harm` - type: `<class 'str'>`
Model answers: care-harm 
Gold answers: ['care-harm|sanctity-degradation', '', 'care-harm', 'authority-subversion', 'care-harm', '', 'care-harm', 'sanctity-degradation', 'authority-subversion|care-harm', '', 'care-harm', 'care-harm', 'authority-subversion|care-harm|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', '', 'care-harm', 'care-harm', 'care-harm', 'care-harm', 'care-harm|fairness-cheating', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm', 'care-harm', 'care-harm', 'care-harm', '', '', 'care-harm', 'care-harm', 'sanctity-degradation', 'care-harm|sanctity-degradation', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm', 'care-harm', 'care-harm', '', 'care-harm', 'care-harm', '', 'care-harm', 'care-harm', 'care-harm']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-0', 'char-0', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-0']` - type: `<class 'list'>`
----> baseline_answer: `char-0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `['avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'not disturbing animals in the wild.', 'avoiding disturbing animals in the wild', 'disturbing animals in the wild', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'not disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild']`
----> answers: `['avoiding disturbing animals in the wild', 'disturbing animals in the wild', 'not disturbing animals in the wild.', 'avoiding disturbing animals in the wild.']` - type: `<class 'list'>`
----> baseline_answer: `avoiding disturbing animals in the wild` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `["It's good", 'good', "It's good", "it's good", "It's good", "It's good", "It's good", "it's good", 'good', "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", 'good', 'good', "It's good", "It's good", "It's good", "It's good", "it's good", "It's good", "It's good", "It's good", "It's good", "it's good", "it's good", 'good', "It's good", "it's good", "It's good", 'you should avoid it', "It's good", "It's good", "it's good", "It's good", 'good', "It's good", "It's good", "it's good", "It's good", "It's good", "It's good", "it's good", "it's good", 'good', "It's good", "it's good", "It's good"]`
----> answers: `['you should avoid it', 'good', "It's good", "it's good"]` - type: `<class 'list'>`
----> baseline_answer: `It is good` - type: `<class 'str'>`
 --> scores:  0.6666666666666666
----> per-field score: 0.6666666666666666
 ------- evaluating input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency']` - type: `<class 'list'>`
----> baseline_answer: `agency` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[3.0, 4.0, 2.0, 3.0, 3.0, 4.0, 4.0, 3.0, 4.0, 3.0, 4.0, 3.0, 4.0, 2.0, 3.0, 3.0, 2.0, 4.0, 3.0, 3.0, 4.0, 4.0, 4.0, 4.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 4.0, 3.0, 3.0, 3.0, 4.0, 4.0, 4.0, 3.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal']` - type: `<class 'list'>`
----> baseline_answer: `legal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[2.0, -1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 0.0, 1.0, 0.0, 2.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 1.0, -1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-0', 'char-0', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-0']` - type: `<class 'list'>`
----> baseline_answer: `char-none` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `fwd-hypothetical` since it is not visible.
 ------- evaluating input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `n-characters` since it is not visible.
 --> Per-instance overall score: 0.8055555555555557
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0], 'checkbox': [1.0, 1.0], 'text': [1.0, 0.6666666666666666]}
instance_id: 32980 <-> row_number: 9
 --> inputs: ['rot-agree', 'rot-categorization', 'rot-moral-foundations', 'char-involved-general', 'rot-rewrite', 'rot-judgment', 'agency-fwd', 'action-fwd-good', 'fwd-agree', 'fwd-legal', 'fwd-pressure', 'char-involved-fwd', 'fwd-hypothetical', 'n-characters']
 --> Looking up gold labels from row index 9 of `input.csv` (unique inputs). 
 --> input labels: {'rot-agree': [3, 4, 3, 3, 3, 3, 3, 4, 4, 3, 3, 3, 4, 4, 2, 4, 3, 3, 4, 3, 3, 4, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 4, 4, 4, 3, 3, 3, 4, 4, 2, 4, 3, 4], 'rot-categorization': ['morality-ethics|social-norms', 'advice', 'advice', 'social-norms', 'social-norms|description', 'advice|description', 'social-norms', 'advice', 'social-norms', 'social-norms', 'advice', 'advice', 'social-norms|advice', 'morality-ethics|social-norms', 'advice', 'social-norms|advice', 'morality-ethics|social-norms', 'social-norms', 'social-norms|advice', 'social-norms', 'advice', 'social-norms', 'social-norms', 'social-norms', 'advice', 'social-norms', 'social-norms|advice', 'social-norms|advice', 'social-norms', 'advice', 'social-norms|advice', 'advice', 'advice', 'social-norms|advice', 'social-norms|advice', 'advice', 'advice', 'description', 'advice|description', 'social-norms', 'morality-ethics|advice', 'social-norms|advice', 'social-norms|advice', 'social-norms', 'social-norms', 'advice', 'description', 'social-norms', 'advice', 'social-norms'], 'rot-moral-foundations': ['care-harm', '', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating|loyalty-betrayal', 'authority-subversion', 'care-harm', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating|loyalty-betrayal', 'fairness-cheating', 'fairness-cheating|authority-subversion|sanctity-degradation', 'care-harm', 'fairness-cheating', 'fairness-cheating', 'care-harm|authority-subversion', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating|authority-subversion', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'care-harm|fairness-cheating|loyalty-betrayal', 'fairness-cheating', 'fairness-cheating|authority-subversion', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', '', 'fairness-cheating', 'care-harm|fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'care-harm', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', '', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating'], 'char-involved-general': ['char-1', 'char-1', 'char-2', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'rot-rewrite': ['letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'having to let other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'not letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beating you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition', 'not letting other people beat you in a competition.', 'letting other people beat you in a competition', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition'], 'rot-judgment': ["You don't have to", "don't have to", "don't have to", "isn't required", "don't have to", "you don't have to", "don't have to", "it's isn't required", "don't have to", 'expected', "Don't have to", "You don't have to", "You don't have to", "you don't have to", "don't have to", "You don't have to", "don't have to", "You don't have to", "You don't have to", "You don't have to", "it's not expected", "don't have to", "You don't have to", "You don't have to", "don't have to", "don't have to", "You don't have to", "don't have to", "don't have to", "You shouldn't", "don't have to", "don't", "you don't have to", "don't have to", "You don't have to", "you don't have to", "You don't have to", "don't have to", "You don't have to", "it's not expected", "You shouldn't", "You don't have to", "don't have to", "don't have to", "don't have to", 'okay', "don't have to", "You don't have to", "don't have to", "You don't have to"], 'agency-fwd': ['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency'], 'action-fwd-good': [-1.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0, 1.0, 0.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, -1.0], 'fwd-agree': [2.0, 4.0, 2.0, 3.0, 3.0, 3.0, 3.0, 4.0, 4.0, 4.0, 3.0, 3.0, 4.0, 3.0, 2.0, 2.0, 1.0, 3.0, 1.0, 3.0, 3.0, 4.0, 2.0, 3.0, 2.0, 2.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 2.0, 3.0, 2.0, 2.0, 3.0, 2.0, 4.0, 3.0, 2.0, 3.0, 3.0, 4.0, 2.0, 2.0, 2.0, 2.0], 'fwd-legal': ['legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal'], 'fwd-pressure': [-1.0, -2.0, -2.0, 0.0, -1.0, -1.0, -1.0, -1.0, -2.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0, -1.0, -1.0, 0.0, 0.0, 0.0, -2.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -2.0, 0.0, -1.0, 0.0, -1.0, 2.0, -1.0, -1.0, -1.0, -1.0], 'char-involved-fwd': ['char-1', 'char-1', 'char-2', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'fwd-hypothetical': ['explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit-no', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit'], 'n-characters': [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]}
 - - - - - -  starting a new element: `Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-agree
Executing one action: self.actions.modify_radio('rot-agree', '3')
We are going to select this radio button: <input type="radio" name="rot-agree" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-categorization
Executing one action: self.actions.modify_checkbox('rot-categorization', 'advice')
Looking for checkboxes with `name`: `rot-categorization` the values: `['advice']`
About to check this checkbox: <input type="checkbox" name="rot-categorization" value="advice">
 - - - - - -  starting a new element: `Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-moral-foundations
Executing one action: self.actions.modify_checkbox('rot-moral-foundations', 'fairness-cheating')
Looking for checkboxes with `name`: `rot-moral-foundations` the values: `['fairness-cheating']`
About to check this checkbox: <input type="checkbox" name="rot-moral-foundations" value="fairness-cheating">
 - - - - - -  starting a new element: `Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-general
Executing one action: self.actions.modify_radio('char-involved-general', 'char-1')
We are going to select this radio button: <input type="radio" name="char-involved-general" value="char-1" required="">
 - - - - - -  starting a new element: `Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-rewrite
Executing one action: self.actions.modify_text('rot-rewrite', 'letting other people beat you in a competition')
Add text `letting other people beat you in a competition` to this text input: <input type="text" class="text" name="rot-rewrite" value="You don't have to let other people beat you in a competition." id="rot-rewrite">
 - - - - - -  starting a new element: `Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-judgment
Executing one action: self.actions.modify_text('rot-judgment', 'letting other people beat you in a competition is discretionary')
Add text `letting other people beat you in a competition is discretionary` to this text input: <input type="text" class="text" name="rot-judgment" id="rot-judgment">
 - - - - - -  starting a new element: `Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: agency-fwd
Executing one action: self.actions.modify_radio('agency-fwd', 'agency')
We are going to select this radio button: <input type="radio" name="agency-fwd" value="agency" required="">
 - - - - - -  starting a new element: `Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: action-fwd-good
Executing one action: self.actions.modify_radio('action-fwd-good', '0')
We are going to select this radio button: <input type="radio" name="action-fwd-good" value="0" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-agree
Executing one action: self.actions.modify_radio('fwd-agree', '2')
We are going to select this radio button: <input type="radio" name="fwd-agree" value="2" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-legal
Executing one action: self.actions.modify_radio('fwd-legal', 'legal')
We are going to select this radio button: <input type="radio" name="fwd-legal" value="legal" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-pressure
Executing one action: self.actions.modify_radio('fwd-pressure', '2')
We are going to select this radio button: <input type="radio" name="fwd-pressure" value="2" required="required">
 - - - - - -  starting a new element: `Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-fwd
Executing one action: self.actions.modify_radio('char-involved-fwd', 'char-1')
We are going to select this radio button: <input type="radio" name="char-involved-fwd" value="char-1" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-hypothetical
Executing one action: self.actions.modify_radio('fwd-hypothetical', 'explicit-no')
We are going to select this radio button: <input type="radio" name="fwd-hypothetical" value="explicit-no" required="required">
 - - - - - -  starting a new element: `Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `n-characters` since it is not visible.
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['advice']
 visible_values : ['advice']
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['fairness-cheating']
 visible_values : ['fairness-cheating']
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-1']
 visible_values : ['char-1']
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['letting other people beat you in a competition']
 visible_values : ['letting other people beat you in a competition']
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['letting other people beat you in a competition is discretionary']
 visible_values : ['letting other people beat you in a competition is discretionary']
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['agency']
 visible_values : ['agency']
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['legal']
 visible_values : ['legal']
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-1']
 visible_values : ['char-1']
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['explicit-no']
 visible_values : ['explicit-no']
input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[3, 4, 3, 3, 3, 3, 3, 4, 4, 3, 3, 3, 4, 4, 2, 4, 3, 3, 4, 3, 3, 4, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 4, 4, 4, 3, 3, 3, 4, 4, 2, 4, 3, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['morality-ethics|social-norms', 'advice', 'advice', 'social-norms', 'description|social-norms', 'advice|description', 'social-norms', 'advice', 'social-norms', 'social-norms', 'advice', 'advice', 'advice|social-norms', 'morality-ethics|social-norms', 'advice', 'advice|social-norms', 'morality-ethics|social-norms', 'social-norms', 'advice|social-norms', 'social-norms', 'advice', 'social-norms', 'social-norms', 'social-norms', 'advice', 'social-norms', 'advice|social-norms', 'advice|social-norms', 'social-norms', 'advice', 'advice|social-norms', 'advice', 'advice', 'advice|social-norms', 'advice|social-norms', 'advice', 'advice', 'description', 'advice|description', 'social-norms', 'advice|morality-ethics', 'advice|social-norms', 'advice|social-norms', 'social-norms', 'social-norms', 'advice', 'description', 'social-norms', 'advice', 'social-norms']` - type: `<class 'list'>`
----> baseline_answer: `advice` - type: `<class 'str'>`
Model answers: advice 
Gold answers: ['morality-ethics|social-norms', 'advice', 'advice', 'social-norms', 'description|social-norms', 'advice|description', 'social-norms', 'advice', 'social-norms', 'social-norms', 'advice', 'advice', 'advice|social-norms', 'morality-ethics|social-norms', 'advice', 'advice|social-norms', 'morality-ethics|social-norms', 'social-norms', 'advice|social-norms', 'social-norms', 'advice', 'social-norms', 'social-norms', 'social-norms', 'advice', 'social-norms', 'advice|social-norms', 'advice|social-norms', 'social-norms', 'advice', 'advice|social-norms', 'advice', 'advice', 'advice|social-norms', 'advice|social-norms', 'advice', 'advice', 'description', 'advice|description', 'social-norms', 'advice|morality-ethics', 'advice|social-norms', 'advice|social-norms', 'social-norms', 'social-norms', 'advice', 'description', 'social-norms', 'advice', 'social-norms']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['care-harm', '', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating|loyalty-betrayal', 'authority-subversion', 'care-harm', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating|loyalty-betrayal', 'fairness-cheating', 'authority-subversion|fairness-cheating|sanctity-degradation', 'care-harm', 'fairness-cheating', 'fairness-cheating', 'authority-subversion|care-harm', 'fairness-cheating', 'fairness-cheating', 'authority-subversion|fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'care-harm|fairness-cheating|loyalty-betrayal', 'fairness-cheating', 'authority-subversion|fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', '', 'fairness-cheating', 'care-harm|fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'care-harm', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', '', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating']` - type: `<class 'list'>`
----> baseline_answer: `fairness-cheating` - type: `<class 'str'>`
Model answers: fairness-cheating 
Gold answers: ['care-harm', '', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating|loyalty-betrayal', 'authority-subversion', 'care-harm', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating|loyalty-betrayal', 'fairness-cheating', 'authority-subversion|fairness-cheating|sanctity-degradation', 'care-harm', 'fairness-cheating', 'fairness-cheating', 'authority-subversion|care-harm', 'fairness-cheating', 'fairness-cheating', 'authority-subversion|fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'care-harm|fairness-cheating|loyalty-betrayal', 'fairness-cheating', 'authority-subversion|fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', '', 'fairness-cheating', 'care-harm|fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'care-harm', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', '', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-2', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `['letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'having to let other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'not letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beating you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition', 'not letting other people beat you in a competition.', 'letting other people beat you in a competition', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition']`
----> answers: `['not letting other people beat you in a competition.', 'letting other people beat you in a competition', 'letting other people beat you in a competition.', 'letting other people beating you in a competition.', 'having to let other people beat you in a competition.']` - type: `<class 'list'>`
----> baseline_answer: `letting other people beat you in a competition` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `["You don't have to", "don't have to", "don't have to", "isn't required", "don't have to", "you don't have to", "don't have to", "it's isn't required", "don't have to", 'expected', "Don't have to", "You don't have to", "You don't have to", "you don't have to", "don't have to", "You don't have to", "don't have to", "You don't have to", "You don't have to", "You don't have to", "it's not expected", "don't have to", "You don't have to", "You don't have to", "don't have to", "don't have to", "You don't have to", "don't have to", "don't have to", "You shouldn't", "don't have to", "don't", "you don't have to", "don't have to", "You don't have to", "you don't have to", "You don't have to", "don't have to", "You don't have to", "it's not expected", "You shouldn't", "You don't have to", "don't have to", "don't have to", "don't have to", 'okay', "don't have to", "You don't have to", "don't have to", "You don't have to"]`
----> answers: `["you don't have to", "Don't have to", "don't have to", "isn't required", 'expected', "You shouldn't", "You don't have to", "it's isn't required", "don't", 'okay', "it's not expected"]` - type: `<class 'list'>`
----> baseline_answer: `letting other people beat you in a competition is discretionary` - type: `<class 'str'>`
 --> scores:  0.15384615384615383
----> per-field score: 0.15384615384615383
 ------- evaluating input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency']` - type: `<class 'list'>`
----> baseline_answer: `agency` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[-1.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0, 1.0, 0.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, -1.0]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[2.0, 4.0, 2.0, 3.0, 3.0, 3.0, 3.0, 4.0, 4.0, 4.0, 3.0, 3.0, 4.0, 3.0, 2.0, 2.0, 1.0, 3.0, 1.0, 3.0, 3.0, 4.0, 2.0, 3.0, 2.0, 2.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 2.0, 3.0, 2.0, 2.0, 3.0, 2.0, 4.0, 3.0, 2.0, 3.0, 3.0, 4.0, 2.0, 2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal']` - type: `<class 'list'>`
----> baseline_answer: `legal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[-1.0, -2.0, -2.0, 0.0, -1.0, -1.0, -1.0, -1.0, -2.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0, -1.0, -1.0, 0.0, 0.0, 0.0, -2.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -2.0, 0.0, -1.0, 0.0, -1.0, 2.0, -1.0, -1.0, -1.0, -1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-2', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit-no', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit']` - type: `<class 'list'>`
----> baseline_answer: `explicit-no` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `n-characters` since it is not visible.
 --> Per-instance overall score: 0.6272189349112426
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0], 'checkbox': [1.0, 1.0, 1.0, 1.0], 'text': [1.0, 0.6666666666666666, 1.0, 0.15384615384615383]}
instance_id: 32973 <-> row_number: 2
 --> inputs: ['rot-agree', 'rot-categorization', 'rot-moral-foundations', 'char-involved-general', 'rot-rewrite', 'rot-judgment', 'agency-fwd', 'action-fwd-good', 'fwd-agree', 'fwd-legal', 'fwd-pressure', 'char-involved-fwd', 'fwd-hypothetical', 'n-characters']
 --> Looking up gold labels from row index 2 of `input.csv` (unique inputs). 
 --> input labels: {'rot-agree': [4, 3, 3, 2, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 4, 4, 3, 3, 3, 4, 4, 3, 3, 4, 3, 2, 3, 3, 3, 3, 2, 2, 3, 3, 3, 4, 3, 4, 2, 3, 3, 3, 3, 4], 'rot-categorization': ['morality-ethics', 'morality-ethics', 'morality-ethics', 'morality-ethics', 'morality-ethics|social-norms', 'social-norms|advice', 'social-norms|advice', 'morality-ethics', 'morality-ethics', 'morality-ethics', 'advice', 'social-norms', 'morality-ethics', 'advice', 'social-norms', 'advice', 'social-norms', 'morality-ethics', 'social-norms', 'social-norms', 'morality-ethics', 'morality-ethics', 'morality-ethics|advice', 'morality-ethics|social-norms', 'morality-ethics|social-norms|advice', 'morality-ethics|social-norms', 'morality-ethics|description', 'morality-ethics|social-norms', 'morality-ethics|advice', 'social-norms|description', 'morality-ethics|social-norms', 'morality-ethics', 'advice', 'social-norms|advice', 'social-norms|advice', 'morality-ethics|social-norms', 'description', 'social-norms|advice', 'morality-ethics', 'morality-ethics|advice', 'social-norms', 'advice', 'morality-ethics', 'morality-ethics', 'morality-ethics|advice', 'advice', '', 'morality-ethics|advice', 'morality-ethics|advice', 'morality-ethics'], 'rot-moral-foundations': ['fairness-cheating|sanctity-degradation', 'sanctity-degradation', 'care-harm|fairness-cheating', 'sanctity-degradation', '', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'fairness-cheating', 'care-harm', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm|sanctity-degradation', 'sanctity-degradation', '', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm|fairness-cheating', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm|sanctity-degradation', 'fairness-cheating', 'care-harm', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm', '', 'fairness-cheating|sanctity-degradation', 'care-harm|sanctity-degradation', 'fairness-cheating', 'care-harm', '', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'care-harm'], 'char-involved-general': ['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'rot-rewrite': ['being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'Being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'Being gluttonous.', 'being gluttonous', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous', 'being gluttonous.', 'being gluttonous.', 'being gluttonous'], 'rot-judgment': ["It's wrong", "It's wrong", "it's wrong", "It's wrong", "It's wrong", "it's wrong", "It's wrong.", "it's wrong", 'wrong', "It's wrong", "It's wrong to", "It's wrong", "It's wrong", "it's wrong", "It's wrong", "it's wrong", "It's wrong", "it's wrong", 'wrong', "It's wrong", "It's wrong", "It's wrong", "It's wrong", "It's wrong", "It's wrong", "it's wrong", "It's wrong", "It's wrong", "It's wrong", "It's wrong", "It's wrong", "it's wrong", "It's wrong", "it's wrong", "It's wrong", "it's wrong", "It's wrong", "It's wrong", 'wrong', "It's wrong", "it's wrong", "It's wrong", "It's wrong", "It's wrong to", "It's wrong", "it's wrong", "it's wrong", 'wrong', "It's wrong", "It's wrong"], 'agency-fwd': ['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency'], 'action-fwd-good': [-1.0, -2.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -2.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0], 'fwd-agree': [4.0, 3.0, 3.0, 2.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 2.0, 2.0, 3.0, 3.0, 2.0, 3.0, 4.0, 4.0, 3.0, 3.0, 3.0, 4.0, 4.0, 3.0, 4.0, 4.0, 3.0, 2.0, 3.0, 3.0, 3.0, 3.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 3.0, 4.0, 2.0, 3.0, 3.0, 2.0, 3.0, 4.0], 'fwd-legal': ['legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal'], 'fwd-pressure': [-2.0, -1.0, -2.0, 0.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -2.0, -2.0, -2.0, -2.0, 0.0, -2.0, 0.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -2.0, -1.0, -2.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0], 'char-involved-fwd': ['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'fwd-hypothetical': ['probable', 'explicit', 'probable', 'explicit', 'probable', 'explicit', 'probable', 'hypothetical', 'probable', 'explicit', 'explicit', 'explicit', 'explicit', 'probable', 'explicit', 'probable', 'probable', 'explicit', 'explicit', 'explicit', 'hypothetical', 'explicit', 'probable', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'probable', 'probable', 'explicit', 'probable', 'explicit', 'hypothetical', 'probable', 'probable-no', 'probable', 'probable', 'explicit', 'probable', 'probable', 'hypothetical', 'probable', 'explicit', 'explicit', 'probable', 'probable', 'hypothetical', 'explicit', 'explicit'], 'n-characters': [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]}
 - - - - - -  starting a new element: `Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-agree
Executing one action: self.actions.modify_radio('rot-agree', '3')
We are going to select this radio button: <input type="radio" name="rot-agree" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-categorization
Executing one action: self.actions.modify_checkbox('rot-categorization', 'morality-ethics')
Looking for checkboxes with `name`: `rot-categorization` the values: `['morality-ethics']`
About to check this checkbox: <input type="checkbox" name="rot-categorization" value="morality-ethics">
 - - - - - -  starting a new element: `Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-moral-foundations
Executing one action: self.actions.modify_checkbox('rot-moral-foundations', 'sanctity-degradation')
Looking for checkboxes with `name`: `rot-moral-foundations` the values: `['sanctity-degradation']`
About to check this checkbox: <input type="checkbox" name="rot-moral-foundations" value="sanctity-degradation">
 - - - - - -  starting a new element: `Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-general
Executing one action: self.actions.modify_radio('char-involved-general', 'char-1')
We are going to select this radio button: <input type="radio" name="char-involved-general" value="char-1" required="">
 - - - - - -  starting a new element: `Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-rewrite
Executing one action: self.actions.modify_text('rot-rewrite', 'being gluttonous')
Add text `being gluttonous` to this text input: <input type="text" class="text" name="rot-rewrite" value="It's wrong to be gluttonous." id="rot-rewrite">
 - - - - - -  starting a new element: `Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-judgment
Executing one action: self.actions.modify_radio('rot-judgment', 'Very bad')
The input value (`Very bad`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('rot-judgment', 'Very bad'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: agency-fwd
Executing one action: self.actions.modify_radio('agency-fwd', 'experience')
We are going to select this radio button: <input type="radio" name="agency-fwd" value="experience" required="">
 - - - - - -  starting a new element: `Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `action-fwd-good` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `fwd-agree` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `fwd-legal` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `fwd-pressure` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `char-involved-fwd` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `fwd-hypothetical` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `n-characters` since it is not visible.
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['morality-ethics']
 visible_values : ['morality-ethics']
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['sanctity-degradation']
 visible_values : ['sanctity-degradation']
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-1']
 visible_values : ['char-1']
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['being gluttonous']
 visible_values : ['being gluttonous']
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : [None]
 visible_values : [None]
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['experience']
 visible_values : ['experience']
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : []
 visible_values : []
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : []
 visible_values : []
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : []
 visible_values : []
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : []
 visible_values : []
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : []
 visible_values : []
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : []
 visible_values : []
input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[4, 3, 3, 2, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 4, 4, 3, 3, 3, 4, 4, 3, 3, 4, 3, 2, 3, 3, 3, 3, 2, 2, 3, 3, 3, 4, 3, 4, 2, 3, 3, 3, 3, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['morality-ethics', 'morality-ethics', 'morality-ethics', 'morality-ethics', 'morality-ethics|social-norms', 'advice|social-norms', 'advice|social-norms', 'morality-ethics', 'morality-ethics', 'morality-ethics', 'advice', 'social-norms', 'morality-ethics', 'advice', 'social-norms', 'advice', 'social-norms', 'morality-ethics', 'social-norms', 'social-norms', 'morality-ethics', 'morality-ethics', 'advice|morality-ethics', 'morality-ethics|social-norms', 'advice|morality-ethics|social-norms', 'morality-ethics|social-norms', 'description|morality-ethics', 'morality-ethics|social-norms', 'advice|morality-ethics', 'description|social-norms', 'morality-ethics|social-norms', 'morality-ethics', 'advice', 'advice|social-norms', 'advice|social-norms', 'morality-ethics|social-norms', 'description', 'advice|social-norms', 'morality-ethics', 'advice|morality-ethics', 'social-norms', 'advice', 'morality-ethics', 'morality-ethics', 'advice|morality-ethics', 'advice', '', 'advice|morality-ethics', 'advice|morality-ethics', 'morality-ethics']` - type: `<class 'list'>`
----> baseline_answer: `morality-ethics` - type: `<class 'str'>`
Model answers: morality-ethics 
Gold answers: ['morality-ethics', 'morality-ethics', 'morality-ethics', 'morality-ethics', 'morality-ethics|social-norms', 'advice|social-norms', 'advice|social-norms', 'morality-ethics', 'morality-ethics', 'morality-ethics', 'advice', 'social-norms', 'morality-ethics', 'advice', 'social-norms', 'advice', 'social-norms', 'morality-ethics', 'social-norms', 'social-norms', 'morality-ethics', 'morality-ethics', 'advice|morality-ethics', 'morality-ethics|social-norms', 'advice|morality-ethics|social-norms', 'morality-ethics|social-norms', 'description|morality-ethics', 'morality-ethics|social-norms', 'advice|morality-ethics', 'description|social-norms', 'morality-ethics|social-norms', 'morality-ethics', 'advice', 'advice|social-norms', 'advice|social-norms', 'morality-ethics|social-norms', 'description', 'advice|social-norms', 'morality-ethics', 'advice|morality-ethics', 'social-norms', 'advice', 'morality-ethics', 'morality-ethics', 'advice|morality-ethics', 'advice', '', 'advice|morality-ethics', 'advice|morality-ethics', 'morality-ethics']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['fairness-cheating|sanctity-degradation', 'sanctity-degradation', 'care-harm|fairness-cheating', 'sanctity-degradation', '', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'fairness-cheating', 'care-harm', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm|sanctity-degradation', 'sanctity-degradation', '', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm|fairness-cheating', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm|sanctity-degradation', 'fairness-cheating', 'care-harm', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm', '', 'fairness-cheating|sanctity-degradation', 'care-harm|sanctity-degradation', 'fairness-cheating', 'care-harm', '', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'care-harm']` - type: `<class 'list'>`
----> baseline_answer: `sanctity-degradation` - type: `<class 'str'>`
Model answers: sanctity-degradation 
Gold answers: ['fairness-cheating|sanctity-degradation', 'sanctity-degradation', 'care-harm|fairness-cheating', 'sanctity-degradation', '', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'fairness-cheating', 'care-harm', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm|sanctity-degradation', 'sanctity-degradation', '', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm|fairness-cheating', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm|sanctity-degradation', 'fairness-cheating', 'care-harm', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm', '', 'fairness-cheating|sanctity-degradation', 'care-harm|sanctity-degradation', 'fairness-cheating', 'care-harm', '', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'care-harm']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `['being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'Being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'Being gluttonous.', 'being gluttonous', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous', 'being gluttonous.', 'being gluttonous.', 'being gluttonous']`
----> answers: `['Being gluttonous.', 'being gluttonous.', 'being gluttonous']` - type: `<class 'list'>`
----> baseline_answer: `being gluttonous` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `["It's wrong", "It's wrong", "it's wrong", "It's wrong", "It's wrong", "it's wrong", "It's wrong.", "it's wrong", 'wrong', "It's wrong", "It's wrong to", "It's wrong", "It's wrong", "it's wrong", "It's wrong", "it's wrong", "It's wrong", "it's wrong", 'wrong', "It's wrong", "It's wrong", "It's wrong", "It's wrong", "It's wrong", "It's wrong", "it's wrong", "It's wrong", "It's wrong", "It's wrong", "It's wrong", "It's wrong", "it's wrong", "It's wrong", "it's wrong", "It's wrong", "it's wrong", "It's wrong", "It's wrong", 'wrong', "It's wrong", "it's wrong", "It's wrong", "It's wrong", "It's wrong to", "It's wrong", "it's wrong", "it's wrong", 'wrong', "It's wrong", "It's wrong"]`
----> answers: `["It's wrong to", "it's wrong", "It's wrong", 'wrong', "It's wrong."]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency']` - type: `<class 'list'>`
----> baseline_answer: `experience` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `action-fwd-good` since it is not visible.
 ------- evaluating input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `fwd-agree` since it is not visible.
 ------- evaluating input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `fwd-legal` since it is not visible.
 ------- evaluating input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `fwd-pressure` since it is not visible.
 ------- evaluating input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `char-involved-fwd` since it is not visible.
 ------- evaluating input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `fwd-hypothetical` since it is not visible.
 ------- evaluating input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `n-characters` since it is not visible.
 --> Per-instance overall score: 0.7142857142857143
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'text': [1.0, 0.6666666666666666, 1.0, 0.15384615384615383, 1.0, 0.0]}
instance_id: 32977 <-> row_number: 6
 --> inputs: ['rot-agree', 'rot-categorization', 'rot-moral-foundations', 'char-involved-general', 'rot-rewrite', 'rot-judgment', 'agency-fwd', 'action-fwd-good', 'fwd-agree', 'fwd-legal', 'fwd-pressure', 'char-involved-fwd', 'fwd-hypothetical', 'n-characters']
 --> Looking up gold labels from row index 6 of `input.csv` (unique inputs). 
 --> input labels: {'rot-agree': [2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2], 'rot-categorization': ['social-norms|description', 'morality-ethics', 'morality-ethics', 'advice', 'social-norms|advice', 'morality-ethics', 'morality-ethics|advice', 'advice|description', 'advice', 'social-norms', 'advice', 'advice', 'advice', 'social-norms|advice', 'advice', 'advice', 'morality-ethics|social-norms', 'advice', 'social-norms', 'description', 'description', 'advice', 'advice', 'description', 'description', 'social-norms', 'advice', 'description', 'morality-ethics', 'advice', 'advice', 'social-norms|advice', 'social-norms|advice', 'advice', 'advice', 'social-norms|advice', 'advice', 'description', 'advice', 'description', 'social-norms|advice', 'morality-ethics|advice', 'advice', 'description', 'advice', 'advice', 'morality-ethics|advice', 'morality-ethics|advice', 'advice', 'morality-ethics'], 'rot-moral-foundations': ['', 'fairness-cheating', '', 'fairness-cheating', '', 'sanctity-degradation', '', '', '', '', '', 'care-harm', '', '', 'care-harm', '', 'fairness-cheating|sanctity-degradation', 'fairness-cheating', '', '', '', '', '', '', 'fairness-cheating', 'care-harm|fairness-cheating', '', '', 'care-harm|fairness-cheating', '', '', '', '', '', '', 'care-harm', '', '', 'care-harm', '', 'fairness-cheating', '', '', '', 'fairness-cheating', '', 'care-harm', 'care-harm', 'fairness-cheating', ''], 'char-involved-general': ['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'rot-rewrite': ['playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money', 'playing games of chance where you can win money', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money'], 'rot-judgment': ["It's good", "It's good", 'good', "It's good", "it's good", "It's good", "It's good", "it's good", "it's good", 'good', "It's good", "It's good", "It's good", "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", "It's good", 'good', 'good', "It's good", "It's good", "it's good", "it's good", "It's good", "It's good", "It's good", "it's good", 'good', "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", "It's good", "it's good", "it's good", "it's good", "It's good", "It's good", "It's good", "It's good"], 'agency-fwd': ['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency'], 'action-fwd-good': [1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, -1.0, 1.0, 1.0, 1.0], 'fwd-agree': [2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, 1.0, 2.0, 1.0, 3.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, 2.0, 2.0, 4.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 3.0, 3.0, 2.0, 2.0, 2.0, 2.0], 'fwd-legal': ['legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'tolerated', 'tolerated', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'tolerated', 'tolerated', 'legal', 'legal', 'tolerated', 'tolerated', 'legal', 'tolerated', 'tolerated', 'tolerated', 'tolerated', 'legal', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'tolerated'], 'fwd-pressure': [0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0], 'char-involved-fwd': ['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'fwd-hypothetical': ['probable', 'probable', 'hypothetical', 'probable', 'probable', 'hypothetical', 'probable', 'probable', 'probable', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'probable', 'hypothetical', 'probable', 'probable', 'explicit', 'hypothetical', 'hypothetical', 'probable', 'probable', 'explicit', 'probable', 'hypothetical', 'probable', 'hypothetical', 'explicit', 'explicit', 'hypothetical', 'hypothetical', 'probable', 'probable', 'hypothetical', 'hypothetical', 'probable', 'explicit', 'hypothetical', 'probable'], 'n-characters': [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]}
 - - - - - -  starting a new element: `Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-agree
Executing one action: self.actions.modify_radio('rot-agree', '2')
We are going to select this radio button: <input type="radio" name="rot-agree" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-categorization
Executing one action: self.actions.modify_checkbox('rot-categorization', 'advice')
Looking for checkboxes with `name`: `rot-categorization` the values: `['advice']`
About to check this checkbox: <input type="checkbox" name="rot-categorization" value="advice">
 - - - - - -  starting a new element: `Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-moral-foundations
Executing one action: self.actions.modify_checkbox('rot-moral-foundations', 'care-harm')
Looking for checkboxes with `name`: `rot-moral-foundations` the values: `['care-harm']`
About to check this checkbox: <input type="checkbox" name="rot-moral-foundations" value="care-harm">
 - - - - - -  starting a new element: `Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-general
Executing one action: self.actions.modify_radio('char-involved-general', 'char-1')
We are going to select this radio button: <input type="radio" name="char-involved-general" value="char-1" required="">
 - - - - - -  starting a new element: `Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-rewrite
Executing one action: self.actions.modify_text('rot-rewrite', 'playing games of chance where you can win money')
Add text `playing games of chance where you can win money` to this text input: <input type="text" class="text" name="rot-rewrite" value="It's good to play games of chance where you can win money." id="rot-rewrite">
 - - - - - -  starting a new element: `Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-judgment
Executing one action: self.actions.modify_text('rot-judgment', 'good')
Add text `good` to this text input: <input type="text" class="text" name="rot-judgment" id="rot-judgment">
 - - - - - -  starting a new element: `Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: agency-fwd
Executing one action: self.actions.modify_radio('agency-fwd', 'agency')
We are going to select this radio button: <input type="radio" name="agency-fwd" value="agency" required="">
 - - - - - -  starting a new element: `Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: action-fwd-good
Executing one action: self.actions.modify_radio('action-fwd-good', '2')
We are going to select this radio button: <input type="radio" name="action-fwd-good" value="2" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-agree
Executing one action: self.actions.modify_radio('fwd-agree', '3')
We are going to select this radio button: <input type="radio" name="fwd-agree" value="3" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-legal
Executing one action: self.actions.modify_radio('fwd-legal', 'legal')
We are going to select this radio button: <input type="radio" name="fwd-legal" value="legal" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-pressure
Executing one action: self.actions.modify_radio('fwd-pressure', '2')
We are going to select this radio button: <input type="radio" name="fwd-pressure" value="2" required="required">
 - - - - - -  starting a new element: `Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-fwd
Executing one action: self.actions.modify_radio('char-involved-fwd', 'char-1')
We are going to select this radio button: <input type="radio" name="char-involved-fwd" value="char-1" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-hypothetical
Executing one action: self.actions.modify_radio('fwd-hypothetical', 'hypothetical')
We are going to select this radio button: <input type="radio" name="fwd-hypothetical" value="hypothetical" required="required">
 - - - - - -  starting a new element: `Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `n-characters` since it is not visible.
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['advice']
 visible_values : ['advice']
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['care-harm']
 visible_values : ['care-harm']
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-1']
 visible_values : ['char-1']
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['playing games of chance where you can win money']
 visible_values : ['playing games of chance where you can win money']
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['good']
 visible_values : ['good']
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['agency']
 visible_values : ['agency']
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['legal']
 visible_values : ['legal']
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-1']
 visible_values : ['char-1']
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['hypothetical']
 visible_values : ['hypothetical']
input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['description|social-norms', 'morality-ethics', 'morality-ethics', 'advice', 'advice|social-norms', 'morality-ethics', 'advice|morality-ethics', 'advice|description', 'advice', 'social-norms', 'advice', 'advice', 'advice', 'advice|social-norms', 'advice', 'advice', 'morality-ethics|social-norms', 'advice', 'social-norms', 'description', 'description', 'advice', 'advice', 'description', 'description', 'social-norms', 'advice', 'description', 'morality-ethics', 'advice', 'advice', 'advice|social-norms', 'advice|social-norms', 'advice', 'advice', 'advice|social-norms', 'advice', 'description', 'advice', 'description', 'advice|social-norms', 'advice|morality-ethics', 'advice', 'description', 'advice', 'advice', 'advice|morality-ethics', 'advice|morality-ethics', 'advice', 'morality-ethics']` - type: `<class 'list'>`
----> baseline_answer: `advice` - type: `<class 'str'>`
Model answers: advice 
Gold answers: ['description|social-norms', 'morality-ethics', 'morality-ethics', 'advice', 'advice|social-norms', 'morality-ethics', 'advice|morality-ethics', 'advice|description', 'advice', 'social-norms', 'advice', 'advice', 'advice', 'advice|social-norms', 'advice', 'advice', 'morality-ethics|social-norms', 'advice', 'social-norms', 'description', 'description', 'advice', 'advice', 'description', 'description', 'social-norms', 'advice', 'description', 'morality-ethics', 'advice', 'advice', 'advice|social-norms', 'advice|social-norms', 'advice', 'advice', 'advice|social-norms', 'advice', 'description', 'advice', 'description', 'advice|social-norms', 'advice|morality-ethics', 'advice', 'description', 'advice', 'advice', 'advice|morality-ethics', 'advice|morality-ethics', 'advice', 'morality-ethics']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['', 'fairness-cheating', '', 'fairness-cheating', '', 'sanctity-degradation', '', '', '', '', '', 'care-harm', '', '', 'care-harm', '', 'fairness-cheating|sanctity-degradation', 'fairness-cheating', '', '', '', '', '', '', 'fairness-cheating', 'care-harm|fairness-cheating', '', '', 'care-harm|fairness-cheating', '', '', '', '', '', '', 'care-harm', '', '', 'care-harm', '', 'fairness-cheating', '', '', '', 'fairness-cheating', '', 'care-harm', 'care-harm', 'fairness-cheating', '']` - type: `<class 'list'>`
----> baseline_answer: `care-harm` - type: `<class 'str'>`
Model answers: care-harm 
Gold answers: ['', 'fairness-cheating', '', 'fairness-cheating', '', 'sanctity-degradation', '', '', '', '', '', 'care-harm', '', '', 'care-harm', '', 'fairness-cheating|sanctity-degradation', 'fairness-cheating', '', '', '', '', '', '', 'fairness-cheating', 'care-harm|fairness-cheating', '', '', 'care-harm|fairness-cheating', '', '', '', '', '', '', 'care-harm', '', '', 'care-harm', '', 'fairness-cheating', '', '', '', 'fairness-cheating', '', 'care-harm', 'care-harm', 'fairness-cheating', '']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `['playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money', 'playing games of chance where you can win money', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money']`
----> answers: `['playing games of chance where you can win money', 'playing games of chance where you can win money.']` - type: `<class 'list'>`
----> baseline_answer: `playing games of chance where you can win money` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `["It's good", "It's good", 'good', "It's good", "it's good", "It's good", "It's good", "it's good", "it's good", 'good', "It's good", "It's good", "It's good", "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", "It's good", 'good', 'good', "It's good", "It's good", "it's good", "it's good", "It's good", "It's good", "It's good", "it's good", 'good', "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", "It's good", "it's good", "it's good", "it's good", "It's good", "It's good", "It's good", "It's good"]`
----> answers: `['good', "It's good", "it's good"]` - type: `<class 'list'>`
----> baseline_answer: `good` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency']` - type: `<class 'list'>`
----> baseline_answer: `agency` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, -1.0, 1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, 1.0, 2.0, 1.0, 3.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, 2.0, 2.0, 4.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 3.0, 3.0, 2.0, 2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'tolerated', 'tolerated', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'tolerated', 'tolerated', 'legal', 'legal', 'tolerated', 'tolerated', 'legal', 'tolerated', 'tolerated', 'tolerated', 'tolerated', 'legal', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'tolerated']` - type: `<class 'list'>`
----> baseline_answer: `legal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['probable', 'probable', 'hypothetical', 'probable', 'probable', 'hypothetical', 'probable', 'probable', 'probable', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'probable', 'hypothetical', 'probable', 'probable', 'explicit', 'hypothetical', 'hypothetical', 'probable', 'probable', 'explicit', 'probable', 'hypothetical', 'probable', 'hypothetical', 'explicit', 'explicit', 'hypothetical', 'hypothetical', 'probable', 'probable', 'hypothetical', 'hypothetical', 'probable', 'explicit', 'hypothetical', 'probable']` - type: `<class 'list'>`
----> baseline_answer: `hypothetical` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `n-characters` since it is not visible.
 --> Per-instance overall score: 0.6923076923076923
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'text': [1.0, 0.6666666666666666, 1.0, 0.15384615384615383, 1.0, 0.0, 1.0, 1.0]}
instance_id: 32975 <-> row_number: 4
 --> inputs: ['rot-agree', 'rot-categorization', 'rot-moral-foundations', 'char-involved-general', 'rot-rewrite', 'rot-judgment', 'agency-fwd', 'action-fwd-good', 'fwd-agree', 'fwd-legal', 'fwd-pressure', 'char-involved-fwd', 'fwd-hypothetical', 'n-characters']
 --> Looking up gold labels from row index 4 of `input.csv` (unique inputs). 
 --> input labels: {'rot-agree': [4, 3, 4, 4, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 2, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 2, 1, 3, 3, 4, 3, 3, 2, 3, 3, 3, 4], 'rot-categorization': ['morality-ethics', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics', 'advice', 'morality-ethics', 'advice|description', 'morality-ethics|advice', 'social-norms', 'social-norms', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics', 'social-norms', 'morality-ethics', 'social-norms', 'social-norms|advice', 'social-norms|advice', 'morality-ethics', 'social-norms', 'morality-ethics', 'morality-ethics', 'social-norms|advice', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics|advice', 'advice', 'social-norms', 'morality-ethics|social-norms', 'social-norms', 'social-norms|advice', 'social-norms|advice', 'social-norms|advice', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'description', 'social-norms', 'morality-ethics', 'morality-ethics|advice', 'social-norms|advice', 'social-norms', 'advice', 'morality-ethics|social-norms', 'social-norms', '', 'morality-ethics', 'morality-ethics', 'morality-ethics', 'social-norms'], 'rot-moral-foundations': ['care-harm|fairness-cheating', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|fairness-cheating', 'loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', '', 'loyalty-betrayal|authority-subversion', 'care-harm', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm|authority-subversion', 'loyalty-betrayal', 'fairness-cheating', 'care-harm|loyalty-betrayal', 'care-harm|fairness-cheating|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm', '', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm', 'loyalty-betrayal', 'loyalty-betrayal', 'care-harm', '', 'loyalty-betrayal', 'loyalty-betrayal'], 'char-involved-general': ['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'rot-rewrite': ['being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you', 'being ashamed of people that love you.', 'being ashamed of people that love you'], 'rot-judgment': ["It's rude", "It's rude", "It's rude", "it's rude", "It's rude", "It's rude", "it's rude", "It's rude", "it's rude", 'rude', "it's rude", "It's rude", "It's rude", "It's rude", "it's rude", "It's rude", "It's rude", "It's rude", 'rude', "It's rude", "It's rude", "It's rude", "It's rude", "it's rude", "it's rude", "It's rude", "It's rude", "It's rude", "it's rude", 'rude', "It's rude", "it's rude", "It's rude", "It's rude", 'it is rude', "It's rude", "It's rude to", "it's rude", 'rude', "It's rude", "It's rude", "it's rude", "It's wrong", "It's rude", "It's rude", "it's rude", "It's rude", "it's rude", "It's rude", "It's rude"], 'agency-fwd': ['agency', 'experience', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'experience', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency'], 'action-fwd-good': [-1.0, '', -1.0, -1.0, -2.0, '', -1.0, -1.0, '', -1.0, -1.0, '', -1.0, -1.0, -1.0, -1.0, '', -1.0, -1.0, -1.0, -1.0, '', -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, '', -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0], 'fwd-agree': [4.0, '', 4.0, 4.0, 2.0, '', 3.0, 3.0, '', 3.0, 3.0, '', 3.0, 2.0, 4.0, 2.0, '', 3.0, 2.0, 4.0, 3.0, '', 3.0, 3.0, 3.0, 4.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 4.0, 3.0, 3.0, 2.0, 3.0, 2.0, 2.0, 3.0, '', 4.0, 3.0, 3.0, 2.0, 3.0, 3.0, 3.0, 4.0], 'fwd-legal': ['legal', '', 'legal', 'legal', 'legal', '', 'legal', 'legal', '', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal'], 'fwd-pressure': [-1.0, '', -2.0, -2.0, -2.0, '', -2.0, -1.0, '', -1.0, -1.0, '', -1.0, 0.0, -2.0, -2.0, '', -2.0, -2.0, -2.0, -1.0, '', -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, '', 0.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0], 'char-involved-fwd': ['char-1', '', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', '', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'fwd-hypothetical': ['probable', '', 'explicit', 'probable', 'explicit', '', 'hypothetical', 'probable', '', 'probable', 'explicit', '', 'hypothetical', 'probable', 'probable', 'hypothetical', '', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', '', 'probable', 'probable', 'hypothetical', 'probable', 'hypothetical', 'probable', 'probable', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'explicit', 'probable', 'hypothetical', 'hypothetical', 'probable', 'probable', 'hypothetical', 'explicit', '', 'hypothetical', 'probable', 'hypothetical', 'probable', 'hypothetical', 'probable', 'hypothetical', 'probable'], 'n-characters': [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]}
 - - - - - -  starting a new element: `Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-agree
Executing one action: self.actions.modify_radio('rot-agree', '3')
We are going to select this radio button: <input type="radio" name="rot-agree" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-categorization
Executing one action: self.actions.modify_checkbox('rot-categorization', 'morality-ethics')
Looking for checkboxes with `name`: `rot-categorization` the values: `['morality-ethics']`
About to check this checkbox: <input type="checkbox" name="rot-categorization" value="morality-ethics">
 - - - - - -  starting a new element: `Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-moral-foundations
Executing one action: self.actions.modify_checkbox('rot-moral-foundations', 'care-harm')
Looking for checkboxes with `name`: `rot-moral-foundations` the values: `['care-harm']`
About to check this checkbox: <input type="checkbox" name="rot-moral-foundations" value="care-harm">
 - - - - - -  starting a new element: `Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-general
Executing one action: self.actions.modify_radio('char-involved-general', 'char-1')
We are going to select this radio button: <input type="radio" name="char-involved-general" value="char-1" required="">
 - - - - - -  starting a new element: `Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-rewrite
Executing one action: self.actions.modify_text('rot-rewrite', 'being ashamed of people that love you')
Add text `being ashamed of people that love you` to this text input: <input type="text" class="text" name="rot-rewrite" value="It's rude to be ashamed of people that love you." id="rot-rewrite">
 - - - - - -  starting a new element: `Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-judgment
Executing one action: self.actions.modify_text('rot-judgment', 'Being ashamed of people that love you is rude')
Add text `Being ashamed of people that love you is rude` to this text input: <input type="text" class="text" name="rot-judgment" id="rot-judgment">
 - - - - - -  starting a new element: `Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: agency-fwd
Executing one action: self.actions.modify_radio('agency-fwd', 'experience')
We are going to select this radio button: <input type="radio" name="agency-fwd" value="experience" required="">
 - - - - - -  starting a new element: `Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `action-fwd-good` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `fwd-agree` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `fwd-legal` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `fwd-pressure` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `char-involved-fwd` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `fwd-hypothetical` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `n-characters` since it is not visible.
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['morality-ethics']
 visible_values : ['morality-ethics']
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['care-harm']
 visible_values : ['care-harm']
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-1']
 visible_values : ['char-1']
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['being ashamed of people that love you']
 visible_values : ['being ashamed of people that love you']
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['Being ashamed of people that love you is rude']
 visible_values : ['Being ashamed of people that love you is rude']
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['experience']
 visible_values : ['experience']
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : []
 visible_values : []
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : []
 visible_values : []
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : []
 visible_values : []
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : []
 visible_values : []
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : []
 visible_values : []
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : []
 visible_values : []
input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[4, 3, 4, 4, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 2, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 2, 1, 3, 3, 4, 3, 3, 2, 3, 3, 3, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['morality-ethics', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics', 'advice', 'morality-ethics', 'advice|description', 'advice|morality-ethics', 'social-norms', 'social-norms', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics', 'social-norms', 'morality-ethics', 'social-norms', 'advice|social-norms', 'advice|social-norms', 'morality-ethics', 'social-norms', 'morality-ethics', 'morality-ethics', 'advice|social-norms', 'social-norms', 'morality-ethics|social-norms', 'advice|morality-ethics', 'advice', 'social-norms', 'morality-ethics|social-norms', 'social-norms', 'advice|social-norms', 'advice|social-norms', 'advice|social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'description', 'social-norms', 'morality-ethics', 'advice|morality-ethics', 'advice|social-norms', 'social-norms', 'advice', 'morality-ethics|social-norms', 'social-norms', '', 'morality-ethics', 'morality-ethics', 'morality-ethics', 'social-norms']` - type: `<class 'list'>`
----> baseline_answer: `morality-ethics` - type: `<class 'str'>`
Model answers: morality-ethics 
Gold answers: ['morality-ethics', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics', 'advice', 'morality-ethics', 'advice|description', 'advice|morality-ethics', 'social-norms', 'social-norms', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics', 'social-norms', 'morality-ethics', 'social-norms', 'advice|social-norms', 'advice|social-norms', 'morality-ethics', 'social-norms', 'morality-ethics', 'morality-ethics', 'advice|social-norms', 'social-norms', 'morality-ethics|social-norms', 'advice|morality-ethics', 'advice', 'social-norms', 'morality-ethics|social-norms', 'social-norms', 'advice|social-norms', 'advice|social-norms', 'advice|social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'description', 'social-norms', 'morality-ethics', 'advice|morality-ethics', 'advice|social-norms', 'social-norms', 'advice', 'morality-ethics|social-norms', 'social-norms', '', 'morality-ethics', 'morality-ethics', 'morality-ethics', 'social-norms']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['care-harm|fairness-cheating', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|fairness-cheating', 'loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', '', 'authority-subversion|loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'authority-subversion|care-harm', 'loyalty-betrayal', 'fairness-cheating', 'care-harm|loyalty-betrayal', 'care-harm|fairness-cheating|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm', '', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm', 'loyalty-betrayal', 'loyalty-betrayal', 'care-harm', '', 'loyalty-betrayal', 'loyalty-betrayal']` - type: `<class 'list'>`
----> baseline_answer: `care-harm` - type: `<class 'str'>`
Model answers: care-harm 
Gold answers: ['care-harm|fairness-cheating', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|fairness-cheating', 'loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', '', 'authority-subversion|loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'authority-subversion|care-harm', 'loyalty-betrayal', 'fairness-cheating', 'care-harm|loyalty-betrayal', 'care-harm|fairness-cheating|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm', '', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm', 'loyalty-betrayal', 'loyalty-betrayal', 'care-harm', '', 'loyalty-betrayal', 'loyalty-betrayal']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `['being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you', 'being ashamed of people that love you.', 'being ashamed of people that love you']`
----> answers: `['being ashamed of people that love you.', 'being ashamed of people that love you']` - type: `<class 'list'>`
----> baseline_answer: `being ashamed of people that love you` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `["It's rude", "It's rude", "It's rude", "it's rude", "It's rude", "It's rude", "it's rude", "It's rude", "it's rude", 'rude', "it's rude", "It's rude", "It's rude", "It's rude", "it's rude", "It's rude", "It's rude", "It's rude", 'rude', "It's rude", "It's rude", "It's rude", "It's rude", "it's rude", "it's rude", "It's rude", "It's rude", "It's rude", "it's rude", 'rude', "It's rude", "it's rude", "It's rude", "It's rude", 'it is rude', "It's rude", "It's rude to", "it's rude", 'rude', "It's rude", "It's rude", "it's rude", "It's wrong", "It's rude", "It's rude", "it's rude", "It's rude", "it's rude", "It's rude", "It's rude"]`
----> answers: `['it is rude', "It's rude to", 'rude', "It's rude", "It's wrong", "it's rude"]` - type: `<class 'list'>`
----> baseline_answer: `Being ashamed of people that love you is rude` - type: `<class 'str'>`
 --> scores:  0.3333333333333333
----> per-field score: 0.3333333333333333
 ------- evaluating input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['agency', 'experience', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'experience', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency']` - type: `<class 'list'>`
----> baseline_answer: `experience` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `action-fwd-good` since it is not visible.
 ------- evaluating input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `fwd-agree` since it is not visible.
 ------- evaluating input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `fwd-legal` since it is not visible.
 ------- evaluating input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `fwd-pressure` since it is not visible.
 ------- evaluating input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `char-involved-fwd` since it is not visible.
 ------- evaluating input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `fwd-hypothetical` since it is not visible.
 ------- evaluating input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `n-characters` since it is not visible.
 --> Per-instance overall score: 0.7619047619047619
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'text': [1.0, 0.6666666666666666, 1.0, 0.15384615384615383, 1.0, 0.0, 1.0, 1.0, 1.0, 0.3333333333333333]}
instance_id: 32978 <-> row_number: 7
 --> inputs: ['rot-agree', 'rot-categorization', 'rot-moral-foundations', 'char-involved-general', 'rot-rewrite', 'rot-judgment', 'agency-fwd', 'action-fwd-good', 'fwd-agree', 'fwd-legal', 'fwd-pressure', 'char-involved-fwd', 'fwd-hypothetical', 'n-characters']
 --> Looking up gold labels from row index 7 of `input.csv` (unique inputs). 
 --> input labels: {'rot-agree': [3, 3, 1, 2, 3, 2, 2, 3, 4, 2, 2, 1, 1, 3, 2, 2, 2, 3, 2, 1, 3, 1, 3, 4, 2, 3, 2, 2, 2, 3, 1, 2, 3, 2, 2, 2, 2, 2, 2, 3, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3], 'rot-categorization': ['morality-ethics', 'description', 'social-norms', 'social-norms', 'morality-ethics', 'description', 'advice', 'social-norms|advice', 'social-norms', 'social-norms', 'social-norms|advice', 'morality-ethics', 'morality-ethics', 'morality-ethics|social-norms', 'social-norms|advice', 'description', 'morality-ethics', 'description', 'social-norms', 'social-norms', 'advice', 'morality-ethics|advice', 'social-norms|advice', 'morality-ethics', 'description', 'social-norms|description', 'advice', 'description', 'description', 'social-norms|advice', 'description', 'social-norms', 'morality-ethics', 'social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'morality-ethics', 'social-norms|description', 'morality-ethics|social-norms', 'morality-ethics', 'social-norms', '', 'morality-ethics', 'description', 'morality-ethics|advice', 'morality-ethics|advice', 'morality-ethics', 'morality-ethics'], 'rot-moral-foundations': ['loyalty-betrayal|authority-subversion', '', 'fairness-cheating|authority-subversion', 'authority-subversion', 'care-harm', 'fairness-cheating|loyalty-betrayal|authority-subversion', 'fairness-cheating', 'care-harm|authority-subversion', 'authority-subversion', 'care-harm|authority-subversion', 'care-harm', 'care-harm', 'authority-subversion', 'fairness-cheating|authority-subversion', 'care-harm|authority-subversion', '', 'fairness-cheating|loyalty-betrayal', 'fairness-cheating|authority-subversion', 'fairness-cheating', '', 'loyalty-betrayal', 'care-harm', 'fairness-cheating|authority-subversion', 'fairness-cheating|loyalty-betrayal', 'fairness-cheating', 'care-harm|authority-subversion', 'authority-subversion', 'loyalty-betrayal|authority-subversion', 'care-harm', 'loyalty-betrayal|authority-subversion', 'care-harm', 'authority-subversion', 'fairness-cheating|loyalty-betrayal|authority-subversion', '', 'care-harm|authority-subversion', '', 'loyalty-betrayal|authority-subversion', 'loyalty-betrayal|authority-subversion', 'authority-subversion', 'care-harm', 'fairness-cheating|authority-subversion', 'fairness-cheating|authority-subversion', 'authority-subversion', 'care-harm', 'authority-subversion', 'loyalty-betrayal', 'care-harm|authority-subversion', 'care-harm', 'care-harm|authority-subversion', 'authority-subversion'], 'char-involved-general': ['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-1', 'char-1', 'char-1', 'char-1', 'char-2', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'rot-rewrite': ['a parent enrolling a child in classes without permission.', 'enrolling your child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'enrolling a child in classes without their permission as a parent', 'Enrolling children in classes without permission.', 'enrolling your child in classes without permission.', 'enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'a parent enrolling a child in classes without their permission.', 'enrolling your child in classes without permission', 'a parent enrolling a child in classes without permission.', 'enrolling your child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'parents enrolling their children in classes without their permission', 'enrolling your child in classes without permission.', 'being a parent and enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'parent enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'enrolling your child in classes without permission', 'a parent  enrolling a child in classes without permission.', 'enrolling your child in classes without permission', 'a parent enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'enrolling your child in classes without permission.', 'a parent enrolling a child in classes without permission', 'parent enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'parents  enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'a parent  enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'enrolling your child in classes without permission.', 'a parent enrolling a child in classes without permission', 'enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'parent enrolling a child in classes without permission.', 'enrolling a child in classes without permission.'], 'rot-judgment': ["It's hurtful", 'hurtful', "it's hurtful", "it's hurtful", "It's hurtful", "it's hurtful", "It's hurtful.", "it's hurtful", 'hurtful', "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", 'hurtful', "It's hurtful", 'hurtful', "it's hurtful", 'hurtful', "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "it's hurtful", "it's hurtful", 'hurtful', "It's hurtful", "it's hurtful", "It's hurtful", "It's hurtful", "it's hurtful", "It's hurtful", "It's hurtful", "it's hurtful", 'hurtful', "It's hurtful", "It's wrong", "It's hurtful", "It's hurtful", "It's hurtful", "it's hurtful", "It's hurtful", "it's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "it's hurtful"], 'agency-fwd': ['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency'], 'action-fwd-good': [-1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -2.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, '', -2.0, 0.0, -1.0, 0.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, '', -1.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0, -1.0, '', -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0], 'fwd-agree': [2.0, 3.0, 1.0, 2.0, 3.0, 2.0, 1.0, 2.0, 4.0, 2.0, 2.0, 1.0, 0.0, 3.0, 2.0, 2.0, 2.0, 2.0, 1.0, 1.0, '', 1.0, 3.0, 4.0, 2.0, 3.0, 2.0, 2.0, 3.0, 3.0, 3.0, 2.0, '', 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, '', 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, 2.0, 3.0], 'fwd-legal': ['legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated'], 'fwd-pressure': [-1.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0, -1.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, '', 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, '', 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, '', -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, -2.0], 'char-involved-fwd': ['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'fwd-hypothetical': ['probable', 'hypothetical', 'explicit', 'explicit', 'probable', 'explicit', 'hypothetical', 'hypothetical', 'probable', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'explicit', 'hypothetical', 'hypothetical', '', 'hypothetical', 'explicit', 'probable', 'explicit', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', '', 'explicit', 'hypothetical', 'explicit', 'hypothetical', 'probable', 'explicit', 'hypothetical', 'probable', '', 'hypothetical', 'explicit', 'hypothetical', 'probable', 'probable', 'hypothetical', 'hypothetical', 'hypothetical'], 'n-characters': [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]}
 - - - - - -  starting a new element: `Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-agree
Executing one action: self.actions.modify_radio('rot-agree', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-categorization
Executing one action: self.actions.modify_checkbox('rot-categorization', 'morality-ethics')
Looking for checkboxes with `name`: `rot-categorization` the values: `['morality-ethics']`
About to check this checkbox: <input type="checkbox" name="rot-categorization" value="morality-ethics">
 - - - - - -  starting a new element: `Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-moral-foundations
Executing one action: self.actions.modify_checkbox('rot-moral-foundations', 'care-harm')
Looking for checkboxes with `name`: `rot-moral-foundations` the values: `['care-harm']`
About to check this checkbox: <input type="checkbox" name="rot-moral-foundations" value="care-harm">
 - - - - - -  starting a new element: `Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-general
Executing one action: self.actions.modify_radio('char-involved-general', 'char-1')
We are going to select this radio button: <input type="radio" name="char-involved-general" value="char-1" required="">
 - - - - - -  starting a new element: `Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-rewrite
Executing one action: self.actions.modify_text('rot-rewrite', 'enrolling a child in classes without permission')
Add text `enrolling a child in classes without permission` to this text input: <input type="text" class="text" name="rot-rewrite" value="It's hurtful for  a parent to enroll a child in classes without permission." id="rot-rewrite">
 - - - - - -  starting a new element: `Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-judgment
Executing one action: self.actions.modify_radio('rot-judgment', 'Very bad')
The input value (`Very bad`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('rot-judgment', 'Very bad'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: agency-fwd
Executing one action: self.actions.modify_radio('agency-fwd', 'agency')
We are going to select this radio button: <input type="radio" name="agency-fwd" value="agency" required="">
 - - - - - -  starting a new element: `Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: action-fwd-good
Executing one action: self.actions.modify_radio('action-fwd-good', '2')
We are going to select this radio button: <input type="radio" name="action-fwd-good" value="2" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-agree
Executing one action: self.actions.modify_radio('fwd-agree', '2')
We are going to select this radio button: <input type="radio" name="fwd-agree" value="2" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-legal
Executing one action: self.actions.modify_radio('fwd-legal', 'legal')
We are going to select this radio button: <input type="radio" name="fwd-legal" value="legal" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-pressure
Executing one action: self.actions.modify_radio('fwd-pressure', '1')
We are going to select this radio button: <input type="radio" name="fwd-pressure" value="1" required="required">
 - - - - - -  starting a new element: `Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-fwd
Executing one action: self.actions.modify_radio('char-involved-fwd', 'char-1')
We are going to select this radio button: <input type="radio" name="char-involved-fwd" value="char-1" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-hypothetical
Executing one action: self.actions.modify_radio('fwd-hypothetical', 'explicit')
We are going to select this radio button: <input type="radio" name="fwd-hypothetical" value="explicit" required="required">
 - - - - - -  starting a new element: `Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `n-characters` since it is not visible.
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : []
 visible_values : []
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['morality-ethics']
 visible_values : ['morality-ethics']
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['care-harm']
 visible_values : ['care-harm']
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-1']
 visible_values : ['char-1']
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['enrolling a child in classes without permission']
 visible_values : ['enrolling a child in classes without permission']
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : [None]
 visible_values : [None]
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['agency']
 visible_values : ['agency']
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['legal']
 visible_values : ['legal']
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-1']
 visible_values : ['char-1']
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['explicit']
 visible_values : ['explicit']
input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[3, 3, 1, 2, 3, 2, 2, 3, 4, 2, 2, 1, 1, 3, 2, 2, 2, 3, 2, 1, 3, 1, 3, 4, 2, 3, 2, 2, 2, 3, 1, 2, 3, 2, 2, 2, 2, 2, 2, 3, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['morality-ethics', 'description', 'social-norms', 'social-norms', 'morality-ethics', 'description', 'advice', 'advice|social-norms', 'social-norms', 'social-norms', 'advice|social-norms', 'morality-ethics', 'morality-ethics', 'morality-ethics|social-norms', 'advice|social-norms', 'description', 'morality-ethics', 'description', 'social-norms', 'social-norms', 'advice', 'advice|morality-ethics', 'advice|social-norms', 'morality-ethics', 'description', 'description|social-norms', 'advice', 'description', 'description', 'advice|social-norms', 'description', 'social-norms', 'morality-ethics', 'social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'morality-ethics', 'description|social-norms', 'morality-ethics|social-norms', 'morality-ethics', 'social-norms', '', 'morality-ethics', 'description', 'advice|morality-ethics', 'advice|morality-ethics', 'morality-ethics', 'morality-ethics']` - type: `<class 'list'>`
----> baseline_answer: `morality-ethics` - type: `<class 'str'>`
Model answers: morality-ethics 
Gold answers: ['morality-ethics', 'description', 'social-norms', 'social-norms', 'morality-ethics', 'description', 'advice', 'advice|social-norms', 'social-norms', 'social-norms', 'advice|social-norms', 'morality-ethics', 'morality-ethics', 'morality-ethics|social-norms', 'advice|social-norms', 'description', 'morality-ethics', 'description', 'social-norms', 'social-norms', 'advice', 'advice|morality-ethics', 'advice|social-norms', 'morality-ethics', 'description', 'description|social-norms', 'advice', 'description', 'description', 'advice|social-norms', 'description', 'social-norms', 'morality-ethics', 'social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'morality-ethics', 'description|social-norms', 'morality-ethics|social-norms', 'morality-ethics', 'social-norms', '', 'morality-ethics', 'description', 'advice|morality-ethics', 'advice|morality-ethics', 'morality-ethics', 'morality-ethics']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['authority-subversion|loyalty-betrayal', '', 'authority-subversion|fairness-cheating', 'authority-subversion', 'care-harm', 'authority-subversion|fairness-cheating|loyalty-betrayal', 'fairness-cheating', 'authority-subversion|care-harm', 'authority-subversion', 'authority-subversion|care-harm', 'care-harm', 'care-harm', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion|care-harm', '', 'fairness-cheating|loyalty-betrayal', 'authority-subversion|fairness-cheating', 'fairness-cheating', '', 'loyalty-betrayal', 'care-harm', 'authority-subversion|fairness-cheating', 'fairness-cheating|loyalty-betrayal', 'fairness-cheating', 'authority-subversion|care-harm', 'authority-subversion', 'authority-subversion|loyalty-betrayal', 'care-harm', 'authority-subversion|loyalty-betrayal', 'care-harm', 'authority-subversion', 'authority-subversion|fairness-cheating|loyalty-betrayal', '', 'authority-subversion|care-harm', '', 'authority-subversion|loyalty-betrayal', 'authority-subversion|loyalty-betrayal', 'authority-subversion', 'care-harm', 'authority-subversion|fairness-cheating', 'authority-subversion|fairness-cheating', 'authority-subversion', 'care-harm', 'authority-subversion', 'loyalty-betrayal', 'authority-subversion|care-harm', 'care-harm', 'authority-subversion|care-harm', 'authority-subversion']` - type: `<class 'list'>`
----> baseline_answer: `care-harm` - type: `<class 'str'>`
Model answers: care-harm 
Gold answers: ['authority-subversion|loyalty-betrayal', '', 'authority-subversion|fairness-cheating', 'authority-subversion', 'care-harm', 'authority-subversion|fairness-cheating|loyalty-betrayal', 'fairness-cheating', 'authority-subversion|care-harm', 'authority-subversion', 'authority-subversion|care-harm', 'care-harm', 'care-harm', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion|care-harm', '', 'fairness-cheating|loyalty-betrayal', 'authority-subversion|fairness-cheating', 'fairness-cheating', '', 'loyalty-betrayal', 'care-harm', 'authority-subversion|fairness-cheating', 'fairness-cheating|loyalty-betrayal', 'fairness-cheating', 'authority-subversion|care-harm', 'authority-subversion', 'authority-subversion|loyalty-betrayal', 'care-harm', 'authority-subversion|loyalty-betrayal', 'care-harm', 'authority-subversion', 'authority-subversion|fairness-cheating|loyalty-betrayal', '', 'authority-subversion|care-harm', '', 'authority-subversion|loyalty-betrayal', 'authority-subversion|loyalty-betrayal', 'authority-subversion', 'care-harm', 'authority-subversion|fairness-cheating', 'authority-subversion|fairness-cheating', 'authority-subversion', 'care-harm', 'authority-subversion', 'loyalty-betrayal', 'authority-subversion|care-harm', 'care-harm', 'authority-subversion|care-harm', 'authority-subversion']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-1', 'char-1', 'char-1', 'char-1', 'char-2', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `['a parent enrolling a child in classes without permission.', 'enrolling your child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'enrolling a child in classes without their permission as a parent', 'Enrolling children in classes without permission.', 'enrolling your child in classes without permission.', 'enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'a parent enrolling a child in classes without their permission.', 'enrolling your child in classes without permission', 'a parent enrolling a child in classes without permission.', 'enrolling your child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'parents enrolling their children in classes without their permission', 'enrolling your child in classes without permission.', 'being a parent and enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'parent enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'enrolling your child in classes without permission', 'a parent  enrolling a child in classes without permission.', 'enrolling your child in classes without permission', 'a parent enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'enrolling your child in classes without permission.', 'a parent enrolling a child in classes without permission', 'parent enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'parents  enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'a parent  enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'enrolling your child in classes without permission.', 'a parent enrolling a child in classes without permission', 'enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'parent enrolling a child in classes without permission.', 'enrolling a child in classes without permission.']`
----> answers: `['enrolling your child in classes without permission.', 'Enrolling children in classes without permission.', 'being a parent and enrolling a child in classes without permission.', 'a parent enrolling a child in classes without their permission.', 'parent enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'a parent  enrolling a child in classes without permission.', 'enrolling your child in classes without permission', 'enrolling a child in classes without their permission as a parent', 'parents enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission', 'parents enrolling their children in classes without their permission', 'enrolling a child in classes without permission.', 'parents  enrolling a child in classes without permission.']` - type: `<class 'list'>`
----> baseline_answer: `enrolling a child in classes without permission` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `["It's hurtful", 'hurtful', "it's hurtful", "it's hurtful", "It's hurtful", "it's hurtful", "It's hurtful.", "it's hurtful", 'hurtful', "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", 'hurtful', "It's hurtful", 'hurtful', "it's hurtful", 'hurtful', "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "it's hurtful", "it's hurtful", 'hurtful', "It's hurtful", "it's hurtful", "It's hurtful", "It's hurtful", "it's hurtful", "It's hurtful", "It's hurtful", "it's hurtful", 'hurtful', "It's hurtful", "It's wrong", "It's hurtful", "It's hurtful", "It's hurtful", "it's hurtful", "It's hurtful", "it's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "it's hurtful"]`
----> answers: `['hurtful', "It's hurtful", "it's hurtful", "It's hurtful.", "It's wrong"]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency']` - type: `<class 'list'>`
----> baseline_answer: `agency` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[-1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -2.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, '', -2.0, 0.0, -1.0, 0.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, '', -1.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0, -1.0, '', -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[2.0, 3.0, 1.0, 2.0, 3.0, 2.0, 1.0, 2.0, 4.0, 2.0, 2.0, 1.0, 0.0, 3.0, 2.0, 2.0, 2.0, 2.0, 1.0, 1.0, '', 1.0, 3.0, 4.0, 2.0, 3.0, 2.0, 2.0, 3.0, 3.0, 3.0, 2.0, '', 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, '', 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, 2.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated']` - type: `<class 'list'>`
----> baseline_answer: `legal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[-1.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0, -1.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, '', 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, '', 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, '', -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, -2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['probable', 'hypothetical', 'explicit', 'explicit', 'probable', 'explicit', 'hypothetical', 'hypothetical', 'probable', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'explicit', 'hypothetical', 'hypothetical', '', 'hypothetical', 'explicit', 'probable', 'explicit', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', '', 'explicit', 'hypothetical', 'explicit', 'hypothetical', 'probable', 'explicit', 'hypothetical', 'probable', '', 'hypothetical', 'explicit', 'hypothetical', 'probable', 'probable', 'hypothetical', 'hypothetical', 'hypothetical']` - type: `<class 'list'>`
----> baseline_answer: `explicit` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `n-characters` since it is not visible.
 --> Per-instance overall score: 0.6153846153846154
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'text': [1.0, 0.6666666666666666, 1.0, 0.15384615384615383, 1.0, 0.0, 1.0, 1.0, 1.0, 0.3333333333333333, 1.0, 0.0]}
instance_id: 32976 <-> row_number: 5
 --> inputs: ['rot-agree', 'rot-categorization', 'rot-moral-foundations', 'char-involved-general', 'rot-rewrite', 'rot-judgment', 'agency-fwd', 'action-fwd-good', 'fwd-agree', 'fwd-legal', 'fwd-pressure', 'char-involved-fwd', 'fwd-hypothetical', 'n-characters']
 --> Looking up gold labels from row index 5 of `input.csv` (unique inputs). 
 --> input labels: {'rot-agree': [4, 4, 4, 4, 4, 3, 2, 4, 3, 3, 3, 2, 4, 4, 4, 3, 3, 4, 3, 3, 4, 3, 4, 3, 3, 3, 4, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 2, 4, 3, 3, 3, 4, 3, 4, 3, 3, 4, 4, 3], 'rot-categorization': ['social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics|social-norms', 'social-norms', 'social-norms', 'social-norms', 'morality-ethics|advice', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics|social-norms', 'social-norms', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics', 'morality-ethics', 'social-norms|advice', 'morality-ethics', 'morality-ethics', 'social-norms|description', 'morality-ethics|social-norms', 'social-norms|advice', 'social-norms', 'morality-ethics|social-norms', 'social-norms|description', 'social-norms', 'social-norms', 'morality-ethics|social-norms', 'social-norms|advice', 'morality-ethics', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'social-norms|advice', 'social-norms', 'morality-ethics', 'social-norms', 'morality-ethics', 'social-norms', 'morality-ethics', 'morality-ethics'], 'rot-moral-foundations': ['sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'authority-subversion|sanctity-degradation', 'care-harm|sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'sanctity-degradation', 'authority-subversion|sanctity-degradation', 'care-harm|authority-subversion', 'sanctity-degradation', 'sanctity-degradation', 'care-harm|loyalty-betrayal|sanctity-degradation', 'sanctity-degradation', 'fairness-cheating', 'care-harm|authority-subversion', 'loyalty-betrayal|sanctity-degradation', 'sanctity-degradation', 'authority-subversion|sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'care-harm|authority-subversion', 'care-harm|sanctity-degradation', 'loyalty-betrayal|sanctity-degradation', 'care-harm', 'care-harm|authority-subversion|sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'loyalty-betrayal|authority-subversion', 'sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'care-harm|sanctity-degradation', '', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation'], 'char-involved-general': ['char-0', 'char-none', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-none', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none'], 'rot-rewrite': ['a parent  helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping your teenage boy shower.', 'a parent helping a teenage boy shower.', 'parent helping a teenage boy shower.', 'parents helping a teenage boy shower.', 'helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'Parents helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping a teenage boy shower.', 'helping your teenage son shower.', 'a parent helping a teenage boy shower.', 'helping your teenage son take a shower', 'a parent helping a teenage boy shower.', 'helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping your teenage boy shower.', 'parents helping teenage boys shower', 'helping your teenage boy shower.', 'being a parent and helping a teenage boy shower.', 'for a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'parents helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent to helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'parents helping a teenage boy shower.', 'A parent helping a teenage boy shower.', 'parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping your teenage boy shower.', "helping a teenage boy shower when you're a parent.", 'helping a teenage boy shower as a parent', "helping one's teenage boy shower.", 'helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping your teenage boy shower', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.'], 'rot-judgment': ["It's inappropriate", "It's inappropriate", 'inappropriate', "It's inappropriate", 'inappropriate', "It's inappropriate", "it's inappropriate", "It's inappropriate", "It's inappropriate.", "it's inappropriate", 'inappropriate', "It's inappropriate", "It's inappropriate for", "It's inappropriate", 'inappropriate', "It's inappropriate", 'inappropriate', "It's inappropriate", "it's inappropriate", 'inappropriate', "It's inappropriate", "It's inappropriate", "It's inappropriate", "it's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "it's inappropriate", 'inappropriate', "It's inappropriate", "It's inappropriate", "it's inappropriate", "It's inappropriate", "It's inappropriate", "it's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate for a parent to", "It's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "it's inappropriate", "it's inappropriate", 'inappropriate', "It's inappropriate"], 'agency-fwd': ['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency'], 'action-fwd-good': [-1.0, -1.0, -2.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -2.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, '', -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0], 'fwd-agree': [4.0, 4.0, 4.0, 4.0, 4.0, 3.0, 2.0, 4.0, 3.0, 3.0, 4.0, 2.0, 4.0, 4.0, 4.0, 3.0, 3.0, 4.0, 3.0, 3.0, 4.0, 3.0, 4.0, 3.0, 3.0, 3.0, 4.0, 3.0, 3.0, 3.0, 3.0, 2.0, 2.0, '', 3.0, 3.0, 2.0, 2.0, 4.0, 2.0, 3.0, 3.0, 3.0, 3.0, 4.0, 3.0, 3.0, 4.0, 4.0, 3.0], 'fwd-legal': ['legal', 'tolerated', 'legal', 'tolerated', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'tolerated', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'illegal', 'tolerated', 'tolerated', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'tolerated', 'tolerated', 'legal', 'legal'], 'fwd-pressure': [-2.0, -2.0, -2.0, -2.0, -2.0, -2.0, 0.0, -1.0, -2.0, -2.0, -1.0, -1.0, -1.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -1.0, -2.0, -1.0, -2.0, -1.0, -2.0, 0.0, 0.0, '', -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -2.0, -1.0, -2.0, -1.0, -1.0, -2.0, -1.0, -2.0], 'char-involved-fwd': ['char-0', 'char-none', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-none', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-0', '', 'char-0', 'char-0', 'char-none', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none'], 'fwd-hypothetical': ['probable', '', 'explicit', 'explicit', 'probable', 'explicit', 'explicit', '', '', 'explicit', 'probable', 'hypothetical', 'explicit', 'probable', 'explicit', 'explicit', 'explicit', 'hypothetical', 'explicit', 'explicit', 'explicit', 'hypothetical', 'explicit', 'explicit', 'explicit', 'explicit', 'probable', 'explicit', 'explicit', 'explicit', 'explicit', '', 'probable', '', 'explicit', 'hypothetical', '', 'probable', 'probable', 'explicit', 'hypothetical', 'explicit', 'explicit', 'probable', 'hypothetical', 'probable', 'explicit', 'explicit', 'hypothetical', ''], 'n-characters': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}
 - - - - - -  starting a new element: `Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-agree
Executing one action: self.actions.modify_radio('rot-agree', '3')
We are going to select this radio button: <input type="radio" name="rot-agree" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-categorization
Executing one action: self.actions.modify_checkbox('rot-categorization', 'social-norms')
Looking for checkboxes with `name`: `rot-categorization` the values: `['social-norms']`
About to check this checkbox: <input type="checkbox" name="rot-categorization" value="social-norms">
 - - - - - -  starting a new element: `Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-moral-foundations
Executing one action: self.actions.modify_checkbox('rot-moral-foundations', 'sanctity-degradation')
Looking for checkboxes with `name`: `rot-moral-foundations` the values: `['sanctity-degradation']`
About to check this checkbox: <input type="checkbox" name="rot-moral-foundations" value="sanctity-degradation">
 - - - - - -  starting a new element: `Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-general
Executing one action: self.actions.modify_radio('char-involved-general', 'char-0')
We are going to select this radio button: <input type="radio" name="char-involved-general" value="char-0" required="">
 - - - - - -  starting a new element: `Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-rewrite
Executing one action: self.actions.modify_text('rot-rewrite', 'helping a teenage boy shower')
Add text `helping a teenage boy shower` to this text input: <input type="text" class="text" name="rot-rewrite" value="It's inappropriate for a parent to help a teenage boy shower." id="rot-rewrite">
 - - - - - -  starting a new element: `Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-judgment
Executing one action: self.actions.modify_text('rot-judgment', 'inappropriate')
Add text `inappropriate` to this text input: <input type="text" class="text" name="rot-judgment" id="rot-judgment">
 - - - - - -  starting a new element: `Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: agency-fwd
Executing one action: self.actions.modify_radio('agency-fwd', 'experience')
We are going to select this radio button: <input type="radio" name="agency-fwd" value="experience" required="">
 - - - - - -  starting a new element: `Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `action-fwd-good` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `fwd-agree` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `fwd-legal` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `fwd-pressure` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `char-involved-fwd` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `fwd-hypothetical` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `n-characters` since it is not visible.
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['social-norms']
 visible_values : ['social-norms']
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['sanctity-degradation']
 visible_values : ['sanctity-degradation']
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-0']
 visible_values : ['char-0']
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['helping a teenage boy shower']
 visible_values : ['helping a teenage boy shower']
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['inappropriate']
 visible_values : ['inappropriate']
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['experience']
 visible_values : ['experience']
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : []
 visible_values : []
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : []
 visible_values : []
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : []
 visible_values : []
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : []
 visible_values : []
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : []
 visible_values : []
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : []
 visible_values : []
input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[4, 4, 4, 4, 4, 3, 2, 4, 3, 3, 3, 2, 4, 4, 4, 3, 3, 4, 3, 3, 4, 3, 4, 3, 3, 3, 4, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 2, 4, 3, 3, 3, 4, 3, 4, 3, 3, 4, 4, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics|social-norms', 'social-norms', 'social-norms', 'social-norms', 'advice|morality-ethics', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics|social-norms', 'social-norms', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics', 'morality-ethics', 'advice|social-norms', 'morality-ethics', 'morality-ethics', 'description|social-norms', 'morality-ethics|social-norms', 'advice|social-norms', 'social-norms', 'morality-ethics|social-norms', 'description|social-norms', 'social-norms', 'social-norms', 'morality-ethics|social-norms', 'advice|social-norms', 'morality-ethics', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'advice|social-norms', 'social-norms', 'morality-ethics', 'social-norms', 'morality-ethics', 'social-norms', 'morality-ethics', 'morality-ethics']` - type: `<class 'list'>`
----> baseline_answer: `social-norms` - type: `<class 'str'>`
Model answers: social-norms 
Gold answers: ['social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics|social-norms', 'social-norms', 'social-norms', 'social-norms', 'advice|morality-ethics', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics|social-norms', 'social-norms', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics', 'morality-ethics', 'advice|social-norms', 'morality-ethics', 'morality-ethics', 'description|social-norms', 'morality-ethics|social-norms', 'advice|social-norms', 'social-norms', 'morality-ethics|social-norms', 'description|social-norms', 'social-norms', 'social-norms', 'morality-ethics|social-norms', 'advice|social-norms', 'morality-ethics', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'advice|social-norms', 'social-norms', 'morality-ethics', 'social-norms', 'morality-ethics', 'social-norms', 'morality-ethics', 'morality-ethics']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'authority-subversion|sanctity-degradation', 'care-harm|sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'sanctity-degradation', 'authority-subversion|sanctity-degradation', 'authority-subversion|care-harm', 'sanctity-degradation', 'sanctity-degradation', 'care-harm|loyalty-betrayal|sanctity-degradation', 'sanctity-degradation', 'fairness-cheating', 'authority-subversion|care-harm', 'loyalty-betrayal|sanctity-degradation', 'sanctity-degradation', 'authority-subversion|sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'authority-subversion|care-harm', 'care-harm|sanctity-degradation', 'loyalty-betrayal|sanctity-degradation', 'care-harm', 'authority-subversion|care-harm|sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'authority-subversion|loyalty-betrayal', 'sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'care-harm|sanctity-degradation', '', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation']` - type: `<class 'list'>`
----> baseline_answer: `sanctity-degradation` - type: `<class 'str'>`
Model answers: sanctity-degradation 
Gold answers: ['sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'authority-subversion|sanctity-degradation', 'care-harm|sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'sanctity-degradation', 'authority-subversion|sanctity-degradation', 'authority-subversion|care-harm', 'sanctity-degradation', 'sanctity-degradation', 'care-harm|loyalty-betrayal|sanctity-degradation', 'sanctity-degradation', 'fairness-cheating', 'authority-subversion|care-harm', 'loyalty-betrayal|sanctity-degradation', 'sanctity-degradation', 'authority-subversion|sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'authority-subversion|care-harm', 'care-harm|sanctity-degradation', 'loyalty-betrayal|sanctity-degradation', 'care-harm', 'authority-subversion|care-harm|sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'authority-subversion|loyalty-betrayal', 'sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'care-harm|sanctity-degradation', '', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-0', 'char-none', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-none', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none']` - type: `<class 'list'>`
----> baseline_answer: `char-0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `['a parent  helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping your teenage boy shower.', 'a parent helping a teenage boy shower.', 'parent helping a teenage boy shower.', 'parents helping a teenage boy shower.', 'helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'Parents helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping a teenage boy shower.', 'helping your teenage son shower.', 'a parent helping a teenage boy shower.', 'helping your teenage son take a shower', 'a parent helping a teenage boy shower.', 'helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping your teenage boy shower.', 'parents helping teenage boys shower', 'helping your teenage boy shower.', 'being a parent and helping a teenage boy shower.', 'for a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'parents helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent to helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'parents helping a teenage boy shower.', 'A parent helping a teenage boy shower.', 'parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping your teenage boy shower.', "helping a teenage boy shower when you're a parent.", 'helping a teenage boy shower as a parent', "helping one's teenage boy shower.", 'helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping your teenage boy shower', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.']`
----> answers: `['Parents helping a teenage boy shower.', 'helping your teenage boy shower', 'helping a teenage boy shower as a parent', 'helping your teenage son shower.', 'helping a teenage boy shower.', 'a parent to helping a teenage boy shower.', "helping a teenage boy shower when you're a parent.", 'parents helping teenage boys shower', 'parents helping a teenage boy shower.', "helping one's teenage boy shower.", 'helping your teenage boy shower.', 'a parent  helping a teenage boy shower.', 'helping your teenage son take a shower', 'being a parent and helping a teenage boy shower.', 'for a parent helping a teenage boy shower.', 'A parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'parent helping a teenage boy shower.']` - type: `<class 'list'>`
----> baseline_answer: `helping a teenage boy shower` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `["It's inappropriate", "It's inappropriate", 'inappropriate', "It's inappropriate", 'inappropriate', "It's inappropriate", "it's inappropriate", "It's inappropriate", "It's inappropriate.", "it's inappropriate", 'inappropriate', "It's inappropriate", "It's inappropriate for", "It's inappropriate", 'inappropriate', "It's inappropriate", 'inappropriate', "It's inappropriate", "it's inappropriate", 'inappropriate', "It's inappropriate", "It's inappropriate", "It's inappropriate", "it's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "it's inappropriate", 'inappropriate', "It's inappropriate", "It's inappropriate", "it's inappropriate", "It's inappropriate", "It's inappropriate", "it's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate for a parent to", "It's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "it's inappropriate", "it's inappropriate", 'inappropriate', "It's inappropriate"]`
----> answers: `["It's inappropriate for a parent to", "It's inappropriate for", "It's inappropriate.", "it's inappropriate", 'inappropriate', "It's inappropriate"]` - type: `<class 'list'>`
----> baseline_answer: `inappropriate` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency']` - type: `<class 'list'>`
----> baseline_answer: `experience` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `action-fwd-good` since it is not visible.
 ------- evaluating input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `fwd-agree` since it is not visible.
 ------- evaluating input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `fwd-legal` since it is not visible.
 ------- evaluating input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `fwd-pressure` since it is not visible.
 ------- evaluating input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `char-involved-fwd` since it is not visible.
 ------- evaluating input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `fwd-hypothetical` since it is not visible.
 ------- evaluating input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `n-characters` since it is not visible.
 --> Per-instance overall score: 0.8571428571428571
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'text': [1.0, 0.6666666666666666, 1.0, 0.15384615384615383, 1.0, 0.0, 1.0, 1.0, 1.0, 0.3333333333333333, 1.0, 0.0, 1.0, 1.0]}
instance_id: 32972 <-> row_number: 1
 --> inputs: ['rot-agree', 'rot-categorization', 'rot-moral-foundations', 'char-involved-general', 'rot-rewrite', 'rot-judgment', 'agency-fwd', 'action-fwd-good', 'fwd-agree', 'fwd-legal', 'fwd-pressure', 'char-involved-fwd', 'fwd-hypothetical', 'n-characters']
 --> Looking up gold labels from row index 1 of `input.csv` (unique inputs). 
 --> input labels: {'rot-agree': [3, 3, 2, 3, 2, 3, 3, 3, 3, 2, 3, 4, 3, 2, 2, 3, 3, 4, 2, 3, 3, 3, 2, 3, 2, 4, 2, 3, 1, 3, 3, 3, 2, 3, 3, 3, 2, 2, 1, 4, 4, 3, 3, 3, 3, 4, 2, 3, 3, 2], 'rot-categorization': ['advice', 'morality-ethics|description', 'description', 'advice', 'advice', 'advice', 'advice|description', 'social-norms|advice', 'social-norms', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice|description', 'advice', 'morality-ethics', 'social-norms', 'advice', 'social-norms|advice', 'description', 'social-norms', 'social-norms', 'advice', 'morality-ethics|social-norms', 'social-norms|advice', 'morality-ethics|advice', 'advice', 'advice', 'advice', 'social-norms|advice', 'advice', 'advice', 'social-norms|advice', 'advice', 'social-norms', 'advice', 'description', 'advice', 'social-norms|description', 'advice', 'advice', 'description', 'description', 'advice', 'morality-ethics|advice', 'advice', 'social-norms'], 'rot-moral-foundations': ['', 'loyalty-betrayal', '', '', 'care-harm', '', 'care-harm', 'care-harm|fairness-cheating', 'care-harm|authority-subversion', 'care-harm', 'care-harm', 'care-harm', 'loyalty-betrayal|authority-subversion', 'care-harm', '', 'loyalty-betrayal', 'care-harm', 'fairness-cheating', 'care-harm|fairness-cheating', 'loyalty-betrayal', '', 'care-harm|authority-subversion', 'fairness-cheating', 'care-harm|authority-subversion', 'fairness-cheating', 'care-harm|loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm|authority-subversion', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm', '', '', 'care-harm', 'care-harm', 'care-harm', 'care-harm|loyalty-betrayal', '', 'care-harm', '', 'care-harm', 'care-harm', '', 'care-harm', '', '', 'care-harm', 'care-harm', 'fairness-cheating'], 'char-involved-general': ['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-none', 'char-1', 'char-1', 'char-1', 'char-1', 'char-3', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-1', 'char-none', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-3', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'rot-rewrite': ['having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'Improving yourself by having people.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'using people to improve yourself', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.'], 'rot-judgment': ["It's good", "It's good", 'good', "it's good", "It's good", "It's good", "it's good", "It's good.", 'good', "It's good", "It's good", "It's good", "it's good", "It's good", 'good', "it's good", 'good', "It's good", "It's good", "It's good", "It's good", "It's good", "it's good", "it's good", "It's good", "It's good", "It's good", "It's good", "It's good", "it's good", 'good', "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", "It's good", "It's good", "it's good", "it's good", 'good', "It's good", "It's good", "It's good"], 'agency-fwd': ['agency', 'experience', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'experience', 'experience', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency'], 'action-fwd-good': [1.0, '', 0.0, 0.0, 0.0, '', 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, '', 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, '', 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, '', 1.0, 1.0, '', '', 1.0, '', 0.0, 1.0, 1.0, 1.0], 'fwd-agree': [3.0, '', 2.0, 3.0, 2.0, '', 3.0, 3.0, 3.0, 2.0, 3.0, 4.0, 3.0, 3.0, 3.0, 3.0, 3.0, 4.0, '', '', 3.0, 3.0, 2.0, 3.0, 2.0, 4.0, 2.0, 3.0, 1.0, 3.0, 3.0, 3.0, '', 3.0, 3.0, 3.0, 3.0, 2.0, 1.0, '', 4.0, 3.0, '', '', 3.0, '', 2.0, 3.0, 3.0, 2.0], 'fwd-legal': ['legal', '', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', '', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', '', '', 'legal', '', 'legal', 'legal', 'legal', 'legal'], 'fwd-pressure': [0.0, '', 0.0, 1.0, 0.0, '', 1.0, 1.0, 0.0, '', 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, '', '', 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, '', 0.0, 1.0, 1.0, 1.0, 0.0, -1.0, '', 0.0, 0.0, '', '', 0.0, '', 0.0, 1.0, 1.0, 0.0], 'char-involved-fwd': ['char-1', '', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-none', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-0', 'char-1', 'char-1', 'char-1', '', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-1', 'char-0', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', '', 'char-1', 'char-1', '', '', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1'], 'fwd-hypothetical': ['probable', '', 'probable', 'probable', 'explicit', '', 'probable', 'probable', '', '', 'hypothetical', 'hypothetical', 'explicit', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', '', '', 'hypothetical', 'explicit', 'hypothetical', 'explicit', 'hypothetical', 'explicit', '', 'probable', 'explicit', 'hypothetical', 'hypothetical', 'probable', '', 'probable', 'explicit', 'probable', 'hypothetical', 'hypothetical', '', '', 'hypothetical', 'probable', '', '', 'probable', '', 'hypothetical', 'explicit', 'hypothetical', 'hypothetical'], 'n-characters': [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]}
 - - - - - -  starting a new element: `Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-agree
Executing one action: self.actions.modify_radio('rot-agree', '3')
We are going to select this radio button: <input type="radio" name="rot-agree" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-categorization
Executing one action: self.actions.modify_checkbox('rot-categorization', 'advice')
Looking for checkboxes with `name`: `rot-categorization` the values: `['advice']`
About to check this checkbox: <input type="checkbox" name="rot-categorization" value="advice">
 - - - - - -  starting a new element: `Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-moral-foundations
Executing one action: self.actions.modify_checkbox('rot-moral-foundations', 'care-harm')
Looking for checkboxes with `name`: `rot-moral-foundations` the values: `['care-harm']`
About to check this checkbox: <input type="checkbox" name="rot-moral-foundations" value="care-harm">
 - - - - - -  starting a new element: `Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-general
Executing one action: self.actions.modify_checkbox('char-involved-general', true)


If you wish to uncheck this checkbox, you would use the following command with `input_value` set to `false`:

plaintext
self.actions.modify_checkbox('char-involved-general', false)


Note that 'true' denotes a checked state and 'false' denotes an unchecked state for the checkbox input. Please provide the desired state you wish to set for the checkbox.
Failed to execute an action self.actions.modify_checkbox('char-involved-general', true)


If you wish to uncheck this checkbox, you would use the following command with `input_value` set to `false`:

plaintext
self.actions.modify_checkbox('char-involved-general', false)


Note that 'true' denotes a checked state and 'false' denotes an unchecked state for the checkbox input. Please provide the desired state you wish to set for the checkbox., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-rewrite
Executing one action: self.actions.modify_text('rot-rewrite', 'having people you can use to improve yourself')
Add text `having people you can use to improve yourself` to this text input: <input type="text" class="text" name="rot-rewrite" value="It's good to have people you can use to improve yourself." id="rot-rewrite">
 - - - - - -  starting a new element: `Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-judgment
Executing one action: self.actions.modify_text('rot-judgment', 'good')
Add text `good` to this text input: <input type="text" class="text" name="rot-judgment" id="rot-judgment">
 - - - - - -  starting a new element: `Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: agency-fwd
Executing one action: self.actions.modify_radio('agency-fwd', 'agency')
We are going to select this radio button: <input type="radio" name="agency-fwd" value="agency" required="">
 - - - - - -  starting a new element: `Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: action-fwd-good
Executing one action: self.actions.modify_radio('action-fwd-good', '2')
We are going to select this radio button: <input type="radio" name="action-fwd-good" value="2" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-agree
Executing one action: self.actions.modify_radio('fwd-agree', '2')
We are going to select this radio button: <input type="radio" name="fwd-agree" value="2" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-legal
Executing one action: self.actions.modify_radio('fwd-legal', 'legal')
We are going to select this radio button: <input type="radio" name="fwd-legal" value="legal" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-pressure
Executing one action: self.actions.modify_radio('fwd-pressure', '2')
We are going to select this radio button: <input type="radio" name="fwd-pressure" value="2" required="required">
 - - - - - -  starting a new element: `Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-fwd
Executing one action: self.actions.modify_radio('char-involved-fwd', 'char-3')
We are going to select this radio button: <input type="radio" name="char-involved-fwd" value="char-3" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-hypothetical
Executing one action: self.actions.modify_radio('fwd-hypothetical', 'hypothetical')
We are going to select this radio button: <input type="radio" name="fwd-hypothetical" value="hypothetical" required="required">
 - - - - - -  starting a new element: `Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `n-characters` since it is not visible.
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['advice']
 visible_values : ['advice']
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['care-harm']
 visible_values : ['care-harm']
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : []
 visible_values : []
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['having people you can use to improve yourself']
 visible_values : ['having people you can use to improve yourself']
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['good']
 visible_values : ['good']
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['agency']
 visible_values : ['agency']
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['legal']
 visible_values : ['legal']
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-3']
 visible_values : ['char-3']
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['hypothetical']
 visible_values : ['hypothetical']
input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['4']
 visible_values : ['4']
 ------- evaluating input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[3, 3, 2, 3, 2, 3, 3, 3, 3, 2, 3, 4, 3, 2, 2, 3, 3, 4, 2, 3, 3, 3, 2, 3, 2, 4, 2, 3, 1, 3, 3, 3, 2, 3, 3, 3, 2, 2, 1, 4, 4, 3, 3, 3, 3, 4, 2, 3, 3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['advice', 'description|morality-ethics', 'description', 'advice', 'advice', 'advice', 'advice|description', 'advice|social-norms', 'social-norms', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice|description', 'advice', 'morality-ethics', 'social-norms', 'advice', 'advice|social-norms', 'description', 'social-norms', 'social-norms', 'advice', 'morality-ethics|social-norms', 'advice|social-norms', 'advice|morality-ethics', 'advice', 'advice', 'advice', 'advice|social-norms', 'advice', 'advice', 'advice|social-norms', 'advice', 'social-norms', 'advice', 'description', 'advice', 'description|social-norms', 'advice', 'advice', 'description', 'description', 'advice', 'advice|morality-ethics', 'advice', 'social-norms']` - type: `<class 'list'>`
----> baseline_answer: `advice` - type: `<class 'str'>`
Model answers: advice 
Gold answers: ['advice', 'description|morality-ethics', 'description', 'advice', 'advice', 'advice', 'advice|description', 'advice|social-norms', 'social-norms', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice|description', 'advice', 'morality-ethics', 'social-norms', 'advice', 'advice|social-norms', 'description', 'social-norms', 'social-norms', 'advice', 'morality-ethics|social-norms', 'advice|social-norms', 'advice|morality-ethics', 'advice', 'advice', 'advice', 'advice|social-norms', 'advice', 'advice', 'advice|social-norms', 'advice', 'social-norms', 'advice', 'description', 'advice', 'description|social-norms', 'advice', 'advice', 'description', 'description', 'advice', 'advice|morality-ethics', 'advice', 'social-norms']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['', 'loyalty-betrayal', '', '', 'care-harm', '', 'care-harm', 'care-harm|fairness-cheating', 'authority-subversion|care-harm', 'care-harm', 'care-harm', 'care-harm', 'authority-subversion|loyalty-betrayal', 'care-harm', '', 'loyalty-betrayal', 'care-harm', 'fairness-cheating', 'care-harm|fairness-cheating', 'loyalty-betrayal', '', 'authority-subversion|care-harm', 'fairness-cheating', 'authority-subversion|care-harm', 'fairness-cheating', 'care-harm|loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'authority-subversion|care-harm', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm', '', '', 'care-harm', 'care-harm', 'care-harm', 'care-harm|loyalty-betrayal', '', 'care-harm', '', 'care-harm', 'care-harm', '', 'care-harm', '', '', 'care-harm', 'care-harm', 'fairness-cheating']` - type: `<class 'list'>`
----> baseline_answer: `care-harm` - type: `<class 'str'>`
Model answers: care-harm 
Gold answers: ['', 'loyalty-betrayal', '', '', 'care-harm', '', 'care-harm', 'care-harm|fairness-cheating', 'authority-subversion|care-harm', 'care-harm', 'care-harm', 'care-harm', 'authority-subversion|loyalty-betrayal', 'care-harm', '', 'loyalty-betrayal', 'care-harm', 'fairness-cheating', 'care-harm|fairness-cheating', 'loyalty-betrayal', '', 'authority-subversion|care-harm', 'fairness-cheating', 'authority-subversion|care-harm', 'fairness-cheating', 'care-harm|loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'authority-subversion|care-harm', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm', '', '', 'care-harm', 'care-harm', 'care-harm', 'care-harm|loyalty-betrayal', '', 'care-harm', '', 'care-harm', 'care-harm', '', 'care-harm', '', '', 'care-harm', 'care-harm', 'fairness-cheating']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-none', 'char-1', 'char-1', 'char-1', 'char-1', 'char-3', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-1', 'char-none', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-3', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `['having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'Improving yourself by having people.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'using people to improve yourself', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.']`
----> answers: `['using people to improve yourself', 'having people you can use to improve yourself', 'Improving yourself by having people.', 'having people you can use to improve yourself.']` - type: `<class 'list'>`
----> baseline_answer: `having people you can use to improve yourself` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `["It's good", "It's good", 'good', "it's good", "It's good", "It's good", "it's good", "It's good.", 'good', "It's good", "It's good", "It's good", "it's good", "It's good", 'good', "it's good", 'good', "It's good", "It's good", "It's good", "It's good", "It's good", "it's good", "it's good", "It's good", "It's good", "It's good", "It's good", "It's good", "it's good", 'good', "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", "It's good", "It's good", "it's good", "it's good", 'good', "It's good", "It's good", "It's good"]`
----> answers: `['good', "It's good", "it's good", "It's good."]` - type: `<class 'list'>`
----> baseline_answer: `good` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['agency', 'experience', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'experience', 'experience', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency']` - type: `<class 'list'>`
----> baseline_answer: `agency` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[1.0, '', 0.0, 0.0, 0.0, '', 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, '', 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, '', 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, '', 1.0, 1.0, '', '', 1.0, '', 0.0, 1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[3.0, '', 2.0, 3.0, 2.0, '', 3.0, 3.0, 3.0, 2.0, 3.0, 4.0, 3.0, 3.0, 3.0, 3.0, 3.0, 4.0, '', '', 3.0, 3.0, 2.0, 3.0, 2.0, 4.0, 2.0, 3.0, 1.0, 3.0, 3.0, 3.0, '', 3.0, 3.0, 3.0, 3.0, 2.0, 1.0, '', 4.0, 3.0, '', '', 3.0, '', 2.0, 3.0, 3.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['legal', '', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', '', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', '', '', 'legal', '', 'legal', 'legal', 'legal', 'legal']` - type: `<class 'list'>`
----> baseline_answer: `legal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[0.0, '', 0.0, 1.0, 0.0, '', 1.0, 1.0, 0.0, '', 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, '', '', 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, '', 0.0, 1.0, 1.0, 1.0, 0.0, -1.0, '', 0.0, 0.0, '', '', 0.0, '', 0.0, 1.0, 1.0, 0.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', '', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-none', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-0', 'char-1', 'char-1', 'char-1', '', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-1', 'char-0', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', '', 'char-1', 'char-1', '', '', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['probable', '', 'probable', 'probable', 'explicit', '', 'probable', 'probable', '', '', 'hypothetical', 'hypothetical', 'explicit', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', '', '', 'hypothetical', 'explicit', 'hypothetical', 'explicit', 'hypothetical', 'explicit', '', 'probable', 'explicit', 'hypothetical', 'hypothetical', 'probable', '', 'probable', 'explicit', 'probable', 'hypothetical', 'hypothetical', '', '', 'hypothetical', 'probable', '', '', 'probable', '', 'hypothetical', 'explicit', 'hypothetical', 'hypothetical']` - type: `<class 'list'>`
----> baseline_answer: `hypothetical` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `n-characters` since it is not visible.
 --> Per-instance overall score: 0.6153846153846154
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'text': [1.0, 0.6666666666666666, 1.0, 0.15384615384615383, 1.0, 0.0, 1.0, 1.0, 1.0, 0.3333333333333333, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0]}
instance_id: 32979 <-> row_number: 8
 --> inputs: ['rot-agree', 'rot-categorization', 'rot-moral-foundations', 'char-involved-general', 'rot-rewrite', 'rot-judgment', 'agency-fwd', 'action-fwd-good', 'fwd-agree', 'fwd-legal', 'fwd-pressure', 'char-involved-fwd', 'fwd-hypothetical', 'n-characters']
 --> Looking up gold labels from row index 8 of `input.csv` (unique inputs). 
 --> input labels: {'rot-agree': [2, 0, 1, 1, 0, 1, 0, 2, 1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 3, 2, 1, 2, 1, 2, 3, 2, 1, 1, 2, 2, 1, 2, 3, 2, 1, 2, 1, 1, 2, 2, 3, 2, 2, 2, 2, 0, 3, 3, 1, 2], 'rot-categorization': ['morality-ethics|social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms|advice', 'social-norms', 'description', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms|advice', 'social-norms|description', 'social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'social-norms', 'social-norms|advice', 'social-norms|advice', 'social-norms', 'social-norms', 'description', 'social-norms', 'social-norms|description', 'social-norms|description', 'social-norms', 'description', 'social-norms', 'social-norms', 'description', 'social-norms', 'social-norms|advice', 'social-norms', 'social-norms', 'social-norms|advice', 'description', 'morality-ethics|advice', 'social-norms', 'social-norms'], 'rot-moral-foundations': ['care-harm|sanctity-degradation', '', '', '', 'sanctity-degradation', '', 'fairness-cheating|loyalty-betrayal', 'authority-subversion', 'fairness-cheating', 'care-harm', '', '', 'authority-subversion', 'sanctity-degradation', 'authority-subversion', '', '', 'fairness-cheating', '', '', 'fairness-cheating', 'authority-subversion', '', '', 'care-harm', 'care-harm|authority-subversion|sanctity-degradation', '', 'authority-subversion', 'care-harm', '', '', '', 'loyalty-betrayal', '', 'sanctity-degradation', 'fairness-cheating|loyalty-betrayal', 'authority-subversion', '', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm', '', '', '', '', '', 'care-harm', '', ''], 'char-involved-general': ['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'rot-rewrite': ['carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'Carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol'], 'rot-judgment': ["It's okay", 'okay', "It's okay", "it's okay", "It's okay", "It's okay", "it's okay", 'okay', "It's okay", "It's okay", "It's okay", "it's okay", "It's okay", "it's okay", "It's okay", 'okay', 'okay', "It's okay", "It's okay", "It's okay", "It's okay", "it's okay", 'okay', "It's okay", "It's okay", "It's okay", "it's okay", 'ok', "It's okay", "it's okay", "It's okay", "It's okay", "It's okay", "it's okay", "It's okay", "it's okay", "It's okay", 'okay', "It's okay", "it's okay", "It's okay", 'Its okay', "It's okay", "It's okay", "it's okay", "It's okay", "it's okay", "It's okay", "it's ok", "It's okay"], 'agency-fwd': ['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency'], 'action-fwd-good': [0.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0], 'fwd-agree': [2.0, 4.0, 1.0, 1.0, 0.0, 1.0, 4.0, 2.0, 1.0, 2.0, 2.0, 1.0, 1.0, 0.0, 2.0, 2.0, 2.0, 1.0, 3.0, 2.0, 1.0, 2.0, 1.0, 2.0, 3.0, 2.0, 1.0, 1.0, 2.0, 2.0, 1.0, 2.0, 4.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 2.0, 3.0, 2.0, 2.0, 2.0, 2.0, 0.0, 3.0, 3.0, 1.0, 2.0], 'fwd-legal': ['legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated'], 'fwd-pressure': [-1.0, -1.0, -1.0, 0.0, 0.0, -1.0, -2.0, -1.0, -1.0, 0.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -2.0, -1.0, 0.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0], 'char-involved-fwd': ['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'fwd-hypothetical': ['probable', 'explicit', 'explicit', 'probable', 'explicit', 'hypothetical', 'hypothetical', 'explicit', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'probable', 'explicit', 'hypothetical', 'probable', 'hypothetical', 'probable', 'explicit', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'explicit', 'explicit', 'explicit', 'probable', 'hypothetical', 'probable', 'explicit', 'explicit', 'hypothetical', 'hypothetical', 'explicit', 'explicit', 'hypothetical', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'hypothetical'], 'n-characters': [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]}
 - - - - - -  starting a new element: `Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-agree
Executing one action: self.actions.modify_radio('rot-agree', '2')
We are going to select this radio button: <input type="radio" name="rot-agree" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-categorization
Executing one action: self.actions.modify_checkbox('rot-categorization', 'social-norms')
Looking for checkboxes with `name`: `rot-categorization` the values: `['social-norms']`
About to check this checkbox: <input type="checkbox" name="rot-categorization" value="social-norms">
 - - - - - -  starting a new element: `Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-moral-foundations
Executing one action: self.actions.modify_checkbox('rot-moral-foundations', 'nan')
 ** Warning **: Found input value is 'nan' and filtered it out
 ** Warning **: Since the list of values `[]` is empty, and so, we're terminating the function
 - - - - - -  starting a new element: `Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-general
Executing one action: self.actions.modify_radio('char-involved-general', 'char-1')
We are going to select this radio button: <input type="radio" name="char-involved-general" value="char-1" required="">
 - - - - - -  starting a new element: `Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-rewrite
Executing one action: self.actions.modify_text('rot-rewrite', 'carrying your pet in public as a status symbol')
Add text `carrying your pet in public as a status symbol` to this text input: <input type="text" class="text" name="rot-rewrite" value="It's okay to carry your pet in public as a status symbol" id="rot-rewrite">
 - - - - - -  starting a new element: `Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-judgment
Executing one action: self.actions.modify_radio('rot-judgment', 'okay')
The input value (`okay`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('rot-judgment', 'okay'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: agency-fwd
Executing one action: self.actions.modify_radio('agency-fwd', 'agency')
We are going to select this radio button: <input type="radio" name="agency-fwd" value="agency" required="">
 - - - - - -  starting a new element: `Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: action-fwd-good
Executing one action: self.actions.modify_radio('action-fwd-good', '1')
We are going to select this radio button: <input type="radio" name="action-fwd-good" value="1" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-agree
Executing one action: self.actions.modify_radio('fwd-agree', '3')
We are going to select this radio button: <input type="radio" name="fwd-agree" value="3" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-legal
Executing one action: self.actions.modify_radio('fwd-legal', 'legal')
We are going to select this radio button: <input type="radio" name="fwd-legal" value="legal" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-pressure
Executing one action: self.actions.modify_radio('fwd-pressure', '1')
We are going to select this radio button: <input type="radio" name="fwd-pressure" value="1" required="required">
 - - - - - -  starting a new element: `Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-fwd
Executing one action: self.actions.modify_radio('char-involved-fwd', 'char-1')
We are going to select this radio button: <input type="radio" name="char-involved-fwd" value="char-1" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-hypothetical
Executing one action: self.actions.modify_radio('fwd-hypothetical', 'hypothetical')
We are going to select this radio button: <input type="radio" name="fwd-hypothetical" value="hypothetical" required="required">
 - - - - - -  starting a new element: `Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `n-characters` since it is not visible.
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['social-norms']
 visible_values : ['social-norms']
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : []
 visible_values : []
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-1']
 visible_values : ['char-1']
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['carrying your pet in public as a status symbol']
 visible_values : ['carrying your pet in public as a status symbol']
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : [None]
 visible_values : [None]
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['agency']
 visible_values : ['agency']
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['legal']
 visible_values : ['legal']
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-1']
 visible_values : ['char-1']
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['hypothetical']
 visible_values : ['hypothetical']
input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[2, 0, 1, 1, 0, 1, 0, 2, 1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 3, 2, 1, 2, 1, 2, 3, 2, 1, 1, 2, 2, 1, 2, 3, 2, 1, 2, 1, 1, 2, 2, 3, 2, 2, 2, 2, 0, 3, 3, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['morality-ethics|social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'advice|social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'advice|social-norms', 'description|social-norms', 'social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'social-norms', 'advice|social-norms', 'advice|social-norms', 'social-norms', 'social-norms', 'description', 'social-norms', 'description|social-norms', 'description|social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'description', 'social-norms', 'advice|social-norms', 'social-norms', 'social-norms', 'advice|social-norms', 'description', 'advice|morality-ethics', 'social-norms', 'social-norms']` - type: `<class 'list'>`
----> baseline_answer: `social-norms` - type: `<class 'str'>`
Model answers: social-norms 
Gold answers: ['morality-ethics|social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'advice|social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'advice|social-norms', 'description|social-norms', 'social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'social-norms', 'advice|social-norms', 'advice|social-norms', 'social-norms', 'social-norms', 'description', 'social-norms', 'description|social-norms', 'description|social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'description', 'social-norms', 'advice|social-norms', 'social-norms', 'social-norms', 'advice|social-norms', 'description', 'advice|morality-ethics', 'social-norms', 'social-norms']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['care-harm|sanctity-degradation', '', '', '', 'sanctity-degradation', '', 'fairness-cheating|loyalty-betrayal', 'authority-subversion', 'fairness-cheating', 'care-harm', '', '', 'authority-subversion', 'sanctity-degradation', 'authority-subversion', '', '', 'fairness-cheating', '', '', 'fairness-cheating', 'authority-subversion', '', '', 'care-harm', 'authority-subversion|care-harm|sanctity-degradation', '', 'authority-subversion', 'care-harm', '', '', '', 'loyalty-betrayal', '', 'sanctity-degradation', 'fairness-cheating|loyalty-betrayal', 'authority-subversion', '', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm', '', '', '', '', '', 'care-harm', '', '']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['care-harm|sanctity-degradation', '', '', '', 'sanctity-degradation', '', 'fairness-cheating|loyalty-betrayal', 'authority-subversion', 'fairness-cheating', 'care-harm', '', '', 'authority-subversion', 'sanctity-degradation', 'authority-subversion', '', '', 'fairness-cheating', '', '', 'fairness-cheating', 'authority-subversion', '', '', 'care-harm', 'authority-subversion|care-harm|sanctity-degradation', '', 'authority-subversion', 'care-harm', '', '', '', 'loyalty-betrayal', '', 'sanctity-degradation', 'fairness-cheating|loyalty-betrayal', 'authority-subversion', '', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm', '', '', '', '', '', 'care-harm', '', '']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `['carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'Carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol']`
----> answers: `['carrying your pet in public', 'carrying your pet in public as a status symbol', 'Carrying your pet in public as a status symbol']` - type: `<class 'list'>`
----> baseline_answer: `carrying your pet in public as a status symbol` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `["It's okay", 'okay', "It's okay", "it's okay", "It's okay", "It's okay", "it's okay", 'okay', "It's okay", "It's okay", "It's okay", "it's okay", "It's okay", "it's okay", "It's okay", 'okay', 'okay', "It's okay", "It's okay", "It's okay", "It's okay", "it's okay", 'okay', "It's okay", "It's okay", "It's okay", "it's okay", 'ok', "It's okay", "it's okay", "It's okay", "It's okay", "It's okay", "it's okay", "It's okay", "it's okay", "It's okay", 'okay', "It's okay", "it's okay", "It's okay", 'Its okay', "It's okay", "It's okay", "it's okay", "It's okay", "it's okay", "It's okay", "it's ok", "It's okay"]`
----> answers: `['Its okay', "it's ok", "it's okay", "It's okay", 'okay', 'ok']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency']` - type: `<class 'list'>`
----> baseline_answer: `agency` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[0.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[2.0, 4.0, 1.0, 1.0, 0.0, 1.0, 4.0, 2.0, 1.0, 2.0, 2.0, 1.0, 1.0, 0.0, 2.0, 2.0, 2.0, 1.0, 3.0, 2.0, 1.0, 2.0, 1.0, 2.0, 3.0, 2.0, 1.0, 1.0, 2.0, 2.0, 1.0, 2.0, 4.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 2.0, 3.0, 2.0, 2.0, 2.0, 2.0, 0.0, 3.0, 3.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated']` - type: `<class 'list'>`
----> baseline_answer: `legal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[-1.0, -1.0, -1.0, 0.0, 0.0, -1.0, -2.0, -1.0, -1.0, 0.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -2.0, -1.0, 0.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['probable', 'explicit', 'explicit', 'probable', 'explicit', 'hypothetical', 'hypothetical', 'explicit', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'probable', 'explicit', 'hypothetical', 'probable', 'hypothetical', 'probable', 'explicit', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'explicit', 'explicit', 'explicit', 'probable', 'hypothetical', 'probable', 'explicit', 'explicit', 'hypothetical', 'hypothetical', 'explicit', 'explicit', 'hypothetical', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'hypothetical']` - type: `<class 'list'>`
----> baseline_answer: `hypothetical` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `n-characters` since it is not visible.
 --> Per-instance overall score: 0.6923076923076923
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'text': [1.0, 0.6666666666666666, 1.0, 0.15384615384615383, 1.0, 0.0, 1.0, 1.0, 1.0, 0.3333333333333333, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0]}
instance_id: 32971 <-> row_number: 0
 --> inputs: ['rot-agree', 'rot-categorization', 'rot-moral-foundations', 'char-involved-general', 'rot-rewrite', 'rot-judgment', 'agency-fwd', 'action-fwd-good', 'fwd-agree', 'fwd-legal', 'fwd-pressure', 'char-involved-fwd', 'fwd-hypothetical', 'n-characters']
 --> Looking up gold labels from row index 0 of `input.csv` (unique inputs). 
 --> input labels: {'rot-agree': [4, 4, 4, 3, 4, 4, 4, 4, 3, 3, 3, 4, 2, 2, 3, 2, 4, 3, 4, 3, 4, 3, 3, 4, 4, 3, 3, 4, 4, 3, 3, 3, 4, 3, 3, 3, 3, 4, 3, 2, 3, 3, 3, 4, 4, 4, 3, 3, 4, 3], 'rot-categorization': ['social-norms|advice', 'description', 'social-norms', 'advice', 'morality-ethics', 'advice', 'social-norms|description', 'morality-ethics', 'morality-ethics', 'morality-ethics|social-norms', 'description', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms|description', 'social-norms|advice', 'advice', 'morality-ethics|description', 'advice', 'social-norms', 'morality-ethics|social-norms', 'social-norms|advice', 'advice', 'social-norms', 'morality-ethics|social-norms', 'social-norms|description', 'morality-ethics|social-norms', 'social-norms|advice', 'morality-ethics|advice', 'social-norms', 'social-norms|description', 'description', 'morality-ethics|social-norms', 'social-norms|description', 'description', 'advice|description', 'morality-ethics|advice', 'morality-ethics|social-norms', 'advice', 'advice', 'morality-ethics|social-norms', 'description', 'social-norms|advice', 'social-norms|description', 'description', 'description', 'social-norms|description', 'social-norms', 'advice', 'advice', 'social-norms'], 'rot-moral-foundations': ['fairness-cheating', '', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion|sanctity-degradation', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'fairness-cheating', 'authority-subversion', 'fairness-cheating|authority-subversion', 'authority-subversion', 'care-harm|fairness-cheating|sanctity-degradation', '', 'fairness-cheating|authority-subversion', 'authority-subversion', 'fairness-cheating', 'authority-subversion', 'fairness-cheating|authority-subversion', 'fairness-cheating|authority-subversion', 'authority-subversion', 'fairness-cheating|authority-subversion', 'fairness-cheating|authority-subversion', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating|authority-subversion|sanctity-degradation', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'fairness-cheating|authority-subversion', 'authority-subversion', 'fairness-cheating|authority-subversion', 'fairness-cheating|authority-subversion', 'authority-subversion', 'fairness-cheating|authority-subversion', 'fairness-cheating', 'sanctity-degradation', 'authority-subversion', 'authority-subversion', 'fairness-cheating|authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'care-harm|fairness-cheating', 'care-harm|authority-subversion', 'authority-subversion', 'authority-subversion'], 'char-involved-general': ['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-2', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'rot-rewrite': ['expecting to go to jail when you break the law', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail when you break the law.', 'going to jail when you break the law.', 'going to jail if you break the law', 'going to jail if you break the law.', 'going to jail when you break the law.', 'going to jail if you break the law.', 'Expecting to go to jail when you break the law.', 'breaking the law', 'going to jail when you break the law.', 'going to jail if you break the law.', 'going to jail when you break the law.', 'breaking the law', 'going to jail if you break the law.', 'going to jail when you break the law.', 'Expecting to go to jail if you break the law.', 'if you are breaking the law.', 'going to jail when breaking the law.', 'going to jail if you break the law', 'breaking the law.', 'going to jail if you break the law', 'going to jail when breaking the law.', 'going to jail when you break the law.', 'going to jail when you break the law.', 'going to jail when you break the law', 'Going to jail when you break the law', 'going to jail when you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail when you break the law', 'going to jail if you break the law', 'going to jail if breaking the law.', 'going to jail when you break the law.', 'going to jail if you break the law', 'going to jail if you break the law.', 'Going to jail if you break the law', 'going to jail when you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law', 'going to jail when you break the law.', 'going to jail if you break the law.', 'Expecting to go to jail if you break the law.', 'going to jail if you break the law.', 'Expecting to go to jail if you break the law.'], 'rot-judgment': ['you should', 'expect', 'expect', 'expected', "it's expected", 'Expected', 'expect to', 'expected', "it's expected", 'Expect to', 'should', 'expect to go to jail', 'expected', 'expect', "It's expected", 'Expect to go to jail', 'It is expected', 'expect', 'should', 'Expect to go to jail', "it's expected", 'expect', 'Expect to go to jail', 'Expect', 'Expect', 'expect to', "it's expected", 'Expected', 'expect', "it's expected", 'Expect to', "it's expected", 'expect', 'expected', "it's expected", 'Expect to', "it's expected", "It's expected", 'Its expected', 'is expected', 'expected', 'Expect to', 'Expected', 'expecting', 'expected', 'expected', "It's expected", 'You should', 'Expect', 'should'], 'agency-fwd': ['agency', 'agency', 'agency', 'experience', 'agency', 'experience', 'experience', 'agency', 'experience', 'agency', 'experience', 'agency', 'agency', 'experience', 'experience', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'experience', 'agency', 'experience', 'agency', 'agency', 'experience', 'experience', 'agency', 'experience', 'experience', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency'], 'action-fwd-good': [0.0, 0.0, 0.0, 0.0, 0.0, '', '', 0.0, 0.0, 0.0, '', -2.0, 0.0, '', '', -1.0, 0.0, '', 0.0, 0.0, 0.0, 0.0, -2.0, '', 0.0, 0.0, 0.0, -2.0, '', 0.0, 0.0, '', '', 0.0, '', '', 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, '', 0.0, '', 0.0, 0.0, 0.0, 0.0, 0.0], 'fwd-agree': [4.0, 4.0, 4.0, '', 4.0, '', '', 4.0, 3.0, 3.0, '', 4.0, 2.0, '', '', 3.0, 4.0, '', 4.0, 4.0, 4.0, 3.0, 3.0, '', 4.0, 3.0, 3.0, 4.0, '', 3.0, 3.0, '', '', 3.0, '', '', 4.0, 4.0, 3.0, 2.0, 3.0, 3.0, '', 4.0, '', 4.0, 3.0, 3.0, 3.0, 3.0], 'fwd-legal': ['legal', 'legal', 'legal', '', 'legal', '', '', 'legal', '', 'legal', '', 'illegal', 'illegal', '', '', 'illegal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'illegal', '', 'legal', 'legal', 'legal', 'illegal', '', 'legal', 'legal', '', '', 'legal', '', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal'], 'fwd-pressure': [2.0, 2.0, 2.0, '', 2.0, '', '', 2.0, '', 0.0, '', -2.0, -2.0, '', '', -2.0, 2.0, '', 0.0, 1.0, 0.0, 2.0, -2.0, '', 0.0, 1.0, '', -2.0, '', 1.0, -2.0, '', '', 1.0, '', '', '', 0.0, 1.0, 1.0, 1.0, 2.0, '', 1.0, '', 0.0, 0.0, 1.0, 1.0, 1.0], 'char-involved-fwd': ['char-1', 'char-1', 'char-1', '', 'char-1', '', '', 'char-1', '', 'char-1', '', 'char-1', 'char-1', '', '', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', '', 'char-1', '', 'char-1', 'char-1', '', '', 'char-1', '', '', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'fwd-hypothetical': ['hypothetical', 'explicit', 'explicit', '', 'explicit', '', '', 'explicit', '', 'probable', '', 'probable', 'explicit', '', '', 'explicit', 'explicit', '', 'hypothetical', 'explicit', 'hypothetical', 'explicit', 'explicit', '', 'probable', 'hypothetical', '', 'probable', '', 'probable', 'probable', '', '', 'explicit', '', '', '', 'probable', 'probable', 'explicit', 'explicit', 'explicit', '', 'hypothetical', '', 'explicit', 'explicit', 'hypothetical', 'explicit', 'hypothetical'], 'n-characters': [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]}
 - - - - - -  starting a new element: `Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-agree
Executing one action: self.actions.modify_radio('rot-agree', '4')
We are going to select this radio button: <input type="radio" name="rot-agree" value="4" required="">
 - - - - - -  starting a new element: `Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-categorization
Executing one action: self.actions.modify_checkbox('rot-categorization', ['morality-ethics', 'description'])
Looking for checkboxes with `name`: `rot-categorization` the values: `["['morality-ethics', 'description']"]`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
 - - - - - -  starting a new element: `Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-moral-foundations
Executing one action: self.actions.modify_checkbox('rot-moral-foundations', 'authority-subversion')
Looking for checkboxes with `name`: `rot-moral-foundations` the values: `['authority-subversion']`
About to check this checkbox: <input type="checkbox" name="rot-moral-foundations" value="authority-subversion">
 - - - - - -  starting a new element: `Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-general
Executing one action: self.actions.modify_radio('char-involved-general', 'char-2')
We are going to select this radio button: <input type="radio" name="char-involved-general" value="char-2" required="">
 - - - - - -  starting a new element: `Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-rewrite
Executing one action: self.actions.modify_text('rot-rewrite', 'going to jail if you break the law')
Add text `going to jail if you break the law` to this text input: <input type="text" class="text" name="rot-rewrite" value="Expect to go to jail if you break the law." id="rot-rewrite">
 - - - - - -  starting a new element: `Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-judgment
Executing one action: self.actions.modify_text('rot-judgment', 'is expected')
Add text `is expected` to this text input: <input type="text" class="text" name="rot-judgment" id="rot-judgment">
 - - - - - -  starting a new element: `Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: agency-fwd
Executing one action: self.actions.modify_radio('agency-fwd', 'agency')
We are going to select this radio button: <input type="radio" name="agency-fwd" value="agency" required="">
 - - - - - -  starting a new element: `Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: action-fwd-good
Executing one action: self.actions.modify_radio('action-fwd-good', '2')
We are going to select this radio button: <input type="radio" name="action-fwd-good" value="2" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-agree
Executing one action: self.actions.modify_radio('fwd-agree', '4')
We are going to select this radio button: <input type="radio" name="fwd-agree" value="4" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-legal
Executing one action: self.actions.modify_radio('fwd-legal', 'legal')
We are going to select this radio button: <input type="radio" name="fwd-legal" value="legal" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-pressure
Executing one action: self.actions.modify_radio('fwd-pressure', '2')
We are going to select this radio button: <input type="radio" name="fwd-pressure" value="2" required="required">
 - - - - - -  starting a new element: `Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-fwd
Executing one action: self.actions.modify_radio('char-involved-fwd', 'char-1')
We are going to select this radio button: <input type="radio" name="char-involved-fwd" value="char-1" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-hypothetical
Executing one action: self.actions.modify_radio('fwd-hypothetical', 'explicit')
We are going to select this radio button: <input type="radio" name="fwd-hypothetical" value="explicit" required="required">
 - - - - - -  starting a new element: `Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `n-characters` since it is not visible.
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : []
 visible_values : []
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['authority-subversion']
 visible_values : ['authority-subversion']
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-2']
 visible_values : ['char-2']
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['going to jail if you break the law']
 visible_values : ['going to jail if you break the law']
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['is expected']
 visible_values : ['is expected']
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['agency']
 visible_values : ['agency']
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['legal']
 visible_values : ['legal']
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-1']
 visible_values : ['char-1']
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['explicit']
 visible_values : ['explicit']
input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[4, 4, 4, 3, 4, 4, 4, 4, 3, 3, 3, 4, 2, 2, 3, 2, 4, 3, 4, 3, 4, 3, 3, 4, 4, 3, 3, 4, 4, 3, 3, 3, 4, 3, 3, 3, 3, 4, 3, 2, 3, 3, 3, 4, 4, 4, 3, 3, 4, 3]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['advice|social-norms', 'description', 'social-norms', 'advice', 'morality-ethics', 'advice', 'description|social-norms', 'morality-ethics', 'morality-ethics', 'morality-ethics|social-norms', 'description', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'description|social-norms', 'advice|social-norms', 'advice', 'description|morality-ethics', 'advice', 'social-norms', 'morality-ethics|social-norms', 'advice|social-norms', 'advice', 'social-norms', 'morality-ethics|social-norms', 'description|social-norms', 'morality-ethics|social-norms', 'advice|social-norms', 'advice|morality-ethics', 'social-norms', 'description|social-norms', 'description', 'morality-ethics|social-norms', 'description|social-norms', 'description', 'advice|description', 'advice|morality-ethics', 'morality-ethics|social-norms', 'advice', 'advice', 'morality-ethics|social-norms', 'description', 'advice|social-norms', 'description|social-norms', 'description', 'description', 'description|social-norms', 'social-norms', 'advice', 'advice', 'social-norms']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['advice|social-norms', 'description', 'social-norms', 'advice', 'morality-ethics', 'advice', 'description|social-norms', 'morality-ethics', 'morality-ethics', 'morality-ethics|social-norms', 'description', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'description|social-norms', 'advice|social-norms', 'advice', 'description|morality-ethics', 'advice', 'social-norms', 'morality-ethics|social-norms', 'advice|social-norms', 'advice', 'social-norms', 'morality-ethics|social-norms', 'description|social-norms', 'morality-ethics|social-norms', 'advice|social-norms', 'advice|morality-ethics', 'social-norms', 'description|social-norms', 'description', 'morality-ethics|social-norms', 'description|social-norms', 'description', 'advice|description', 'advice|morality-ethics', 'morality-ethics|social-norms', 'advice', 'advice', 'morality-ethics|social-norms', 'description', 'advice|social-norms', 'description|social-norms', 'description', 'description', 'description|social-norms', 'social-norms', 'advice', 'advice', 'social-norms']
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['fairness-cheating', '', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion|sanctity-degradation', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'fairness-cheating', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion', 'care-harm|fairness-cheating|sanctity-degradation', '', 'authority-subversion|fairness-cheating', 'authority-subversion', 'fairness-cheating', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion|fairness-cheating', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion|fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'authority-subversion|fairness-cheating|sanctity-degradation', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion|fairness-cheating', 'authority-subversion', 'authority-subversion|fairness-cheating', 'fairness-cheating', 'sanctity-degradation', 'authority-subversion', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'care-harm|fairness-cheating', 'authority-subversion|care-harm', 'authority-subversion', 'authority-subversion']` - type: `<class 'list'>`
----> baseline_answer: `authority-subversion` - type: `<class 'str'>`
Model answers: authority-subversion 
Gold answers: ['fairness-cheating', '', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion|sanctity-degradation', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'fairness-cheating', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion', 'care-harm|fairness-cheating|sanctity-degradation', '', 'authority-subversion|fairness-cheating', 'authority-subversion', 'fairness-cheating', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion|fairness-cheating', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion|fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'authority-subversion|fairness-cheating|sanctity-degradation', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion|fairness-cheating', 'authority-subversion', 'authority-subversion|fairness-cheating', 'fairness-cheating', 'sanctity-degradation', 'authority-subversion', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'care-harm|fairness-cheating', 'authority-subversion|care-harm', 'authority-subversion', 'authority-subversion']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-2', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `['expecting to go to jail when you break the law', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail when you break the law.', 'going to jail when you break the law.', 'going to jail if you break the law', 'going to jail if you break the law.', 'going to jail when you break the law.', 'going to jail if you break the law.', 'Expecting to go to jail when you break the law.', 'breaking the law', 'going to jail when you break the law.', 'going to jail if you break the law.', 'going to jail when you break the law.', 'breaking the law', 'going to jail if you break the law.', 'going to jail when you break the law.', 'Expecting to go to jail if you break the law.', 'if you are breaking the law.', 'going to jail when breaking the law.', 'going to jail if you break the law', 'breaking the law.', 'going to jail if you break the law', 'going to jail when breaking the law.', 'going to jail when you break the law.', 'going to jail when you break the law.', 'going to jail when you break the law', 'Going to jail when you break the law', 'going to jail when you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail when you break the law', 'going to jail if you break the law', 'going to jail if breaking the law.', 'going to jail when you break the law.', 'going to jail if you break the law', 'going to jail if you break the law.', 'Going to jail if you break the law', 'going to jail when you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law', 'going to jail when you break the law.', 'going to jail if you break the law.', 'Expecting to go to jail if you break the law.', 'going to jail if you break the law.', 'Expecting to go to jail if you break the law.']`
----> answers: `['going to jail if you break the law.', 'Expecting to go to jail when you break the law.', 'going to jail if you break the law', 'breaking the law', 'going to jail when you break the law.', 'expecting to go to jail when you break the law', 'Expecting to go to jail if you break the law.', 'Going to jail when you break the law', 'breaking the law.', 'if you are breaking the law.', 'going to jail when you break the law', 'Going to jail if you break the law', 'going to jail when breaking the law.', 'going to jail if breaking the law.']` - type: `<class 'list'>`
----> baseline_answer: `going to jail if you break the law` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `['you should', 'expect', 'expect', 'expected', "it's expected", 'Expected', 'expect to', 'expected', "it's expected", 'Expect to', 'should', 'expect to go to jail', 'expected', 'expect', "It's expected", 'Expect to go to jail', 'It is expected', 'expect', 'should', 'Expect to go to jail', "it's expected", 'expect', 'Expect to go to jail', 'Expect', 'Expect', 'expect to', "it's expected", 'Expected', 'expect', "it's expected", 'Expect to', "it's expected", 'expect', 'expected', "it's expected", 'Expect to', "it's expected", "It's expected", 'Its expected', 'is expected', 'expected', 'Expect to', 'Expected', 'expecting', 'expected', 'expected', "It's expected", 'You should', 'Expect', 'should']`
----> answers: `['expect to', 'Its expected', 'Expect', 'should', 'expected', 'Expected', 'You should', "it's expected", 'expect', 'expecting', 'you should', 'is expected', 'Expect to', "It's expected", 'Expect to go to jail', 'It is expected', 'expect to go to jail']` - type: `<class 'list'>`
----> baseline_answer: `is expected` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['agency', 'agency', 'agency', 'experience', 'agency', 'experience', 'experience', 'agency', 'experience', 'agency', 'experience', 'agency', 'agency', 'experience', 'experience', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'experience', 'agency', 'experience', 'agency', 'agency', 'experience', 'experience', 'agency', 'experience', 'experience', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency']` - type: `<class 'list'>`
----> baseline_answer: `agency` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[0.0, 0.0, 0.0, 0.0, 0.0, '', '', 0.0, 0.0, 0.0, '', -2.0, 0.0, '', '', -1.0, 0.0, '', 0.0, 0.0, 0.0, 0.0, -2.0, '', 0.0, 0.0, 0.0, -2.0, '', 0.0, 0.0, '', '', 0.0, '', '', 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, '', 0.0, '', 0.0, 0.0, 0.0, 0.0, 0.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[4.0, 4.0, 4.0, '', 4.0, '', '', 4.0, 3.0, 3.0, '', 4.0, 2.0, '', '', 3.0, 4.0, '', 4.0, 4.0, 4.0, 3.0, 3.0, '', 4.0, 3.0, 3.0, 4.0, '', 3.0, 3.0, '', '', 3.0, '', '', 4.0, 4.0, 3.0, 2.0, 3.0, 3.0, '', 4.0, '', 4.0, 3.0, 3.0, 3.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['legal', 'legal', 'legal', '', 'legal', '', '', 'legal', '', 'legal', '', 'illegal', 'illegal', '', '', 'illegal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'illegal', '', 'legal', 'legal', 'legal', 'illegal', '', 'legal', 'legal', '', '', 'legal', '', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal']` - type: `<class 'list'>`
----> baseline_answer: `legal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[2.0, 2.0, 2.0, '', 2.0, '', '', 2.0, '', 0.0, '', -2.0, -2.0, '', '', -2.0, 2.0, '', 0.0, 1.0, 0.0, 2.0, -2.0, '', 0.0, 1.0, '', -2.0, '', 1.0, -2.0, '', '', 1.0, '', '', '', 0.0, 1.0, 1.0, 1.0, 2.0, '', 1.0, '', 0.0, 0.0, 1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', '', 'char-1', '', '', 'char-1', '', 'char-1', '', 'char-1', 'char-1', '', '', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', '', 'char-1', '', 'char-1', 'char-1', '', '', 'char-1', '', '', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['hypothetical', 'explicit', 'explicit', '', 'explicit', '', '', 'explicit', '', 'probable', '', 'probable', 'explicit', '', '', 'explicit', 'explicit', '', 'hypothetical', 'explicit', 'hypothetical', 'explicit', 'explicit', '', 'probable', 'hypothetical', '', 'probable', '', 'probable', 'probable', '', '', 'explicit', '', '', '', 'probable', 'probable', 'explicit', 'explicit', 'explicit', '', 'hypothetical', '', 'explicit', 'explicit', 'hypothetical', 'explicit', 'hypothetical']` - type: `<class 'list'>`
----> baseline_answer: `explicit` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `n-characters` since it is not visible.
 --> Per-instance overall score: 0.46153846153846156
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0], 'text': [1.0, 0.6666666666666666, 1.0, 0.15384615384615383, 1.0, 0.0, 1.0, 1.0, 1.0, 0.3333333333333333, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0]}
 = = = = = = = = = = = = starting new task: `Associate countries and languages with Ethnologue` = = = = = = = = = = = = 
First instance id: 29921
instance_id: 29945 <-> row_number: 24
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 24 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=nor', 'http://www.ethnologue.com/show_language.asp?code=nor', 'http://www.ethnologue.com/show_language.asp?code=nor'], 'primary_country': ['norway', 'norway', 'norway'], 'region': ['Not available', 'Denmark, Finland, Norway and Sweden', 'Denmark, Finland, Norway and Sweden'], 'countries': ['norway', 'finland|norway|denmark|sweden', 'finland|norway|denmark|sweden']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
Executing one action: self.actions.modify_text('url', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
Executing one action: self.actions.modify_select('primary_country', 'norway')
We are going to select this select `primary_country` with value `norway`
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
Executing one action: self.actions.modify_text('region', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
Executing one action: self.actions.modify_checkbox('countries', 'norway')
Looking for checkboxes with `name`: `countries` the values: `['norway']`
About to check this checkbox: <input type="checkbox" name="countries" value="norway">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['norway']
 visible_values : ['norway']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['norway']
 visible_values : ['norway']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=nor', 'http://www.ethnologue.com/show_language.asp?code=nor', 'http://www.ethnologue.com/show_language.asp?code=nor']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=nor']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['norway', 'norway', 'norway']` - type: `<class 'list'>`
----> baseline_answer: `norway` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Not available', 'Denmark, Finland, Norway and Sweden', 'Denmark, Finland, Norway and Sweden']`
----> answers: `['Not available', 'Denmark, Finland, Norway and Sweden']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['norway', 'denmark|finland|norway|sweden', 'denmark|finland|norway|sweden']` - type: `<class 'list'>`
----> baseline_answer: `norway` - type: `<class 'str'>`
Model answers: norway 
Gold answers: ['norway', 'denmark|finland|norway|sweden', 'denmark|finland|norway|sweden']
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'text': [0.0], 'select': [1.0], 'textarea': [0.0], 'checkbox': [1.0]}
instance_id: 29962 <-> row_number: 41
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 41 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=pes', 'http://www.ethnologue.com/show_language.asp?code=fas', 'http://www.ethnologue.com/show_language.asp?code=psc'], 'primary_country': ['other', 'iran', 'iran'], 'region': ['Widespread. Most concentrated in central, south central, and northeast. Also in Australia, Austria, Azerbaijan, Bahrain, Canada, Denmark, France, Germany, Greece, India, Iraq, Israel, Netherlands, Oman, Qatar, Saudi Arabia, Spain, Sweden, Syria, Tajikistan, Turkey (Asia), Turkmenistan, United Arab Emirates, United Kingdom, United States, Uzbekistan.', 'A macrolanguage of Iran', nan], 'countries': ['france|oman|turkey|canada|israel|uae|germany|uk|greece|unitedstates|australia|spain|uzbekistan|bahrain|denmark|sweden|netherlands|other|india|saudiarabia', 'iran', 'iran']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
Executing one action: self.actions.modify_text('url', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
Executing one action: self.actions.modify_select('primary_country', 'iran')

We are going to select this select `primary_country` with value `iran`
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
Executing one action: self.actions.modify_text('region', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
Executing one action: Based on the information provided and the screenshot showing the form, you are asking for a command to modify checkboxes corresponding to the input name "countries". However, no specific countries to select or deselect are provided. Without this information, I am unable to generate a specific command for you.

To generate a command, I would need to know which checkbox(es) associated with the "countries" input name should be modified (either checked or unchecked). If you provide that information, I can provide the appropriate command(s).
Failed to execute an action Based on the information provided and the screenshot showing the form, you are asking for a command to modify checkboxes corresponding to the input name "countries". However, no specific countries to select or deselect are provided. Without this information, I am unable to generate a specific command for you.

To generate a command, I would need to know which checkbox(es) associated with the "countries" input name should be modified (either checked or unchecked). If you provide that information, I can provide the appropriate command(s)., error: invalid syntax (<string>, line 1)
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['iran']
 visible_values : ['iran']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=pes', 'http://www.ethnologue.com/show_language.asp?code=fas', 'http://www.ethnologue.com/show_language.asp?code=psc']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=psc', 'http://www.ethnologue.com/show_language.asp?code=pes', 'http://www.ethnologue.com/show_language.asp?code=fas']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['other', 'iran', 'iran']` - type: `<class 'list'>`
----> baseline_answer: `iran` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Widespread. Most concentrated in central, south central, and northeast. Also in Australia, Austria, Azerbaijan, Bahrain, Canada, Denmark, France, Germany, Greece, India, Iraq, Israel, Netherlands, Oman, Qatar, Saudi Arabia, Spain, Sweden, Syria, Tajikistan, Turkey (Asia), Turkmenistan, United Arab Emirates, United Kingdom, United States, Uzbekistan.', 'A macrolanguage of Iran', '']`
----> answers: `['', 'A macrolanguage of Iran', 'Widespread. Most concentrated in central, south central, and northeast. Also in Australia, Austria, Azerbaijan, Bahrain, Canada, Denmark, France, Germany, Greece, India, Iraq, Israel, Netherlands, Oman, Qatar, Saudi Arabia, Spain, Sweden, Syria, Tajikistan, Turkey (Asia), Turkmenistan, United Arab Emirates, United Kingdom, United States, Uzbekistan.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['australia|bahrain|canada|denmark|france|germany|greece|india|israel|netherlands|oman|other|saudiarabia|spain|sweden|turkey|uae|uk|unitedstates|uzbekistan', 'iran', 'iran']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['australia|bahrain|canada|denmark|france|germany|greece|india|israel|netherlands|oman|other|saudiarabia|spain|sweden|turkey|uae|uk|unitedstates|uzbekistan', 'iran', 'iran']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0], 'select': [1.0, 1.0], 'textarea': [0.0, 0.0], 'checkbox': [1.0, 0.0]}
instance_id: 29950 <-> row_number: 29
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 29 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=ind', 'http://www.ethnologue.com/show_language.asp?code=ind', 'http://www.ethnologue.com/show_language.asp?code=ind'], 'primary_country': ['indonesia', 'indonesia', 'indonesia'], 'region': ['Widespread in Indonesia. Also in Netherlands, Philippines, Saudi Arabia, Singapore, United States.', 'Widespread in Indonesia. Also in Netherlands, Philippines, Saudi Arabia, Singapore, United States.', 'Widespread in Indonesia. Also in Netherlands, Philippines, Saudi Arabia, Singapore, United States.'], 'countries': ['singapore|philippines|unitedstates|netherlands|saudiarabia', 'singapore|philippines|unitedstates|netherlands|saudiarabia|indonesia', 'singapore|philippines|unitedstates|netherlands|saudiarabia']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
Executing one action: self.actions.modify_text('url', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
Executing one action: self.actions.modify_select('primary_country', 'indonesia')
We are going to select this select `primary_country` with value `indonesia`
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
Executing one action: self.actions.modify_text('region', 'input_value')
Add text `input_value` to this text input: <textarea name="region" rows="6" cols="120"> </textarea>
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
Executing one action: self.actions.modify_checkbox('countries', 'indonesia')
Looking for checkboxes with `name`: `countries` the values: `['indonesia']`
About to check this checkbox: <input type="checkbox" name="countries" value="indonesia">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['indonesia']
 visible_values : ['indonesia']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : ['input_value']
 visible_values : ['input_value']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['indonesia']
 visible_values : ['indonesia']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=ind', 'http://www.ethnologue.com/show_language.asp?code=ind', 'http://www.ethnologue.com/show_language.asp?code=ind']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=ind']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['indonesia', 'indonesia', 'indonesia']` - type: `<class 'list'>`
----> baseline_answer: `indonesia` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Widespread in Indonesia. Also in Netherlands, Philippines, Saudi Arabia, Singapore, United States.', 'Widespread in Indonesia. Also in Netherlands, Philippines, Saudi Arabia, Singapore, United States.', 'Widespread in Indonesia. Also in Netherlands, Philippines, Saudi Arabia, Singapore, United States.']`
----> answers: `['Widespread in Indonesia. Also in Netherlands, Philippines, Saudi Arabia, Singapore, United States.']` - type: `<class 'list'>`
----> baseline_answer: `input_value` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['netherlands|philippines|saudiarabia|singapore|unitedstates', 'indonesia|netherlands|philippines|saudiarabia|singapore|unitedstates', 'netherlands|philippines|saudiarabia|singapore|unitedstates']` - type: `<class 'list'>`
----> baseline_answer: `indonesia` - type: `<class 'str'>`
Model answers: indonesia 
Gold answers: ['netherlands|philippines|saudiarabia|singapore|unitedstates', 'indonesia|netherlands|philippines|saudiarabia|singapore|unitedstates', 'netherlands|philippines|saudiarabia|singapore|unitedstates']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 0.0], 'select': [1.0, 1.0, 1.0], 'textarea': [0.0, 0.0, 0.0], 'checkbox': [1.0, 0.0, 0.0]}
instance_id: 29924 <-> row_number: 3
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 3 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=cmn', 'http://www.ethnologue.com/show_language.asp?code=cmn'], 'primary_country': ['china', 'china'], 'region': ['Widespread north of Changjiang River, a belt south of the Changjiang from Qiujiang (Jiangxi) to Zhenjiang (Jiangsu), Hubei, except southeast corner, Sichuan, Yunnan, Guizhou, northwest part of Guangxi, and northwest corner of Hunan. Also in Brunei, Cambodia, Canada, Indonesia (Java and Bali), Laos, Libya, Malaysia (Peninsular), Mauritius, Mongolia, Mozambique, Philippines, Russian Federation (Asia), Singapore, Taiwan, Thailand, United Kingdom, United States, Viet Nam, Zambia.', 'Widespread north of Changjiang River, a belt south of the Changjiang from Qiujiang (Jiangxi) to Zhenjiang (Jiangsu), Hubei, except southeast corner, Sichuan, Yunnan, Guizhou, northwest part of Guangxi, and northwest corner of Hunan. Also in Brunei, Cambodia, Canada, Indonesia (Java and Bali), Laos, Libya, Malaysia (Peninsular), Mauritius, Mongolia, Mozambique, Philippines, Russian Federation (Asia), Singapore, Taiwan, Thailand, United Kingdom, United States, Viet Nam, Zambia.'], 'countries': ['singapore|canada|uk|malaysia|philippines|unitedstates|mauritius|vietnam|zambia|russianfederation|taiwan|brunei|indonesia|thailand', 'singapore|canada|uk|malaysia|philippines|unitedstates|mauritius|vietnam|zambia|russianfederation|taiwan|other|brunei|indonesia|thailand']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
Executing one action: self.actions.modify_text('url', 'https://www.ethnologue.com/language/chinese')


You would replace `'https://www.ethnologue.com/language/chinese'` with the actual URL you have found for the Chinese language on the Ethnologue website.
Failed to execute an action self.actions.modify_text('url', 'https://www.ethnologue.com/language/chinese')


You would replace `'https://www.ethnologue.com/language/chinese'` with the actual URL you have found for the Chinese language on the Ethnologue website., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
Executing one action: self.actions.modify_select('primary_country', 'china')
We are going to select this select `primary_country` with value `china`
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
Executing one action: self.actions.modify_select('primary_country', 'china')
We are going to select this select `primary_country` with value `china`
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
Executing one action: self.actions.modify_select('primary_country', 'china')
We are going to select this select `primary_country` with value `china`
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['china']
 visible_values : ['china']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=cmn', 'http://www.ethnologue.com/show_language.asp?code=cmn']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=cmn']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['china', 'china']` - type: `<class 'list'>`
----> baseline_answer: `china` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Widespread north of Changjiang River, a belt south of the Changjiang from Qiujiang (Jiangxi) to Zhenjiang (Jiangsu), Hubei, except southeast corner, Sichuan, Yunnan, Guizhou, northwest part of Guangxi, and northwest corner of Hunan. Also in Brunei, Cambodia, Canada, Indonesia (Java and Bali), Laos, Libya, Malaysia (Peninsular), Mauritius, Mongolia, Mozambique, Philippines, Russian Federation (Asia), Singapore, Taiwan, Thailand, United Kingdom, United States, Viet Nam, Zambia.', 'Widespread north of Changjiang River, a belt south of the Changjiang from Qiujiang (Jiangxi) to Zhenjiang (Jiangsu), Hubei, except southeast corner, Sichuan, Yunnan, Guizhou, northwest part of Guangxi, and northwest corner of Hunan. Also in Brunei, Cambodia, Canada, Indonesia (Java and Bali), Laos, Libya, Malaysia (Peninsular), Mauritius, Mongolia, Mozambique, Philippines, Russian Federation (Asia), Singapore, Taiwan, Thailand, United Kingdom, United States, Viet Nam, Zambia.']`
----> answers: `['Widespread north of Changjiang River, a belt south of the Changjiang from Qiujiang (Jiangxi) to Zhenjiang (Jiangsu), Hubei, except southeast corner, Sichuan, Yunnan, Guizhou, northwest part of Guangxi, and northwest corner of Hunan. Also in Brunei, Cambodia, Canada, Indonesia (Java and Bali), Laos, Libya, Malaysia (Peninsular), Mauritius, Mongolia, Mozambique, Philippines, Russian Federation (Asia), Singapore, Taiwan, Thailand, United Kingdom, United States, Viet Nam, Zambia.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['brunei|canada|indonesia|malaysia|mauritius|philippines|russianfederation|singapore|taiwan|thailand|uk|unitedstates|vietnam|zambia', 'brunei|canada|indonesia|malaysia|mauritius|other|philippines|russianfederation|singapore|taiwan|thailand|uk|unitedstates|vietnam|zambia']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['brunei|canada|indonesia|malaysia|mauritius|philippines|russianfederation|singapore|taiwan|thailand|uk|unitedstates|vietnam|zambia', 'brunei|canada|indonesia|malaysia|mauritius|other|philippines|russianfederation|singapore|taiwan|thailand|uk|unitedstates|vietnam|zambia']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 0.0, 0.0], 'select': [1.0, 1.0, 1.0, 1.0], 'textarea': [0.0, 0.0, 0.0, 0.0], 'checkbox': [1.0, 0.0, 0.0, 0.0]}
instance_id: 29959 <-> row_number: 38
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 38 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=kaz', 'http://www.ethnologue.com/show_language.asp?code=kaz', 'http://www.ethnologue.com/show_language.asp?code=kaz'], 'primary_country': ['kazakhstan', 'kazakhstan', 'kazakhstan'], 'region': ['Kazakhstan, northern Soviet Middle Asia into western Siberia. Also in Afghanistan, China, Germany, Iran, Kyrgyzstan, Mongolia, Russian Federation (Asia), Tajikistan, Turkey (Asia), Turkmenistan, Ukraine, United States, Uzbekistan.', 'Kazakhstan, northern Soviet Middle Asia into western Siberia. Also in Afghanistan, China, Germany, Iran, Kyrgyzstan, Mongolia, Russian Federation (Asia), Tajikistan, Turkey (Asia), Turkmenistan, Ukraine, United States, Uzbekistan.', 'Kazakhstan, northern Soviet Middle Asia into western Siberia. Also in Afghanistan, China, Germany, Iran, Kyrgyzstan, Mongolia, Russian Federation (Asia), Tajikistan, Turkey (Asia), Turkmenistan, Ukraine, United States, Uzbekistan'], 'countries': ['iran|turkey|germany|china|ukraine|unitedstates|kazakhstan|uzbekistan|russianfederation|other', 'iran|turkey|germany|china|ukraine|unitedstates|uzbekistan|russianfederation', 'iran|turkey|germany|ukraine|unitedstates|uzbekistan|russianfederation']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
Executing one action: self.actions.modify_text('url', 'YOUR_SPECIFIC_URL_HERE')


Please replace 'YOUR_SPECIFIC_URL_HERE' with the actual URL you want to input into the form.
Failed to execute an action self.actions.modify_text('url', 'YOUR_SPECIFIC_URL_HERE')


Please replace 'YOUR_SPECIFIC_URL_HERE' with the actual URL you want to input into the form., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
Executing one action: self.actions.modify_select('primary_country', 'kazakhstan')
We are going to select this select `primary_country` with value `kazakhstan`
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
Executing one action: self.actions.modify_text('region', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
Executing one action: self.actions.modify_checkbox('countries', 'kazakhstan')
Looking for checkboxes with `name`: `countries` the values: `['kazakhstan']`
About to check this checkbox: <input type="checkbox" name="countries" value="kazakhstan">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['kazakhstan']
 visible_values : ['kazakhstan']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['kazakhstan']
 visible_values : ['kazakhstan']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=kaz', 'http://www.ethnologue.com/show_language.asp?code=kaz', 'http://www.ethnologue.com/show_language.asp?code=kaz']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=kaz']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['kazakhstan', 'kazakhstan', 'kazakhstan']` - type: `<class 'list'>`
----> baseline_answer: `kazakhstan` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Kazakhstan, northern Soviet Middle Asia into western Siberia. Also in Afghanistan, China, Germany, Iran, Kyrgyzstan, Mongolia, Russian Federation (Asia), Tajikistan, Turkey (Asia), Turkmenistan, Ukraine, United States, Uzbekistan.', 'Kazakhstan, northern Soviet Middle Asia into western Siberia. Also in Afghanistan, China, Germany, Iran, Kyrgyzstan, Mongolia, Russian Federation (Asia), Tajikistan, Turkey (Asia), Turkmenistan, Ukraine, United States, Uzbekistan.', 'Kazakhstan, northern Soviet Middle Asia into western Siberia. Also in Afghanistan, China, Germany, Iran, Kyrgyzstan, Mongolia, Russian Federation (Asia), Tajikistan, Turkey (Asia), Turkmenistan, Ukraine, United States, Uzbekistan']`
----> answers: `['Kazakhstan, northern Soviet Middle Asia into western Siberia. Also in Afghanistan, China, Germany, Iran, Kyrgyzstan, Mongolia, Russian Federation (Asia), Tajikistan, Turkey (Asia), Turkmenistan, Ukraine, United States, Uzbekistan', 'Kazakhstan, northern Soviet Middle Asia into western Siberia. Also in Afghanistan, China, Germany, Iran, Kyrgyzstan, Mongolia, Russian Federation (Asia), Tajikistan, Turkey (Asia), Turkmenistan, Ukraine, United States, Uzbekistan.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['china|germany|iran|kazakhstan|other|russianfederation|turkey|ukraine|unitedstates|uzbekistan', 'china|germany|iran|russianfederation|turkey|ukraine|unitedstates|uzbekistan', 'germany|iran|russianfederation|turkey|ukraine|unitedstates|uzbekistan']` - type: `<class 'list'>`
----> baseline_answer: `kazakhstan` - type: `<class 'str'>`
Model answers: kazakhstan 
Gold answers: ['china|germany|iran|kazakhstan|other|russianfederation|turkey|ukraine|unitedstates|uzbekistan', 'china|germany|iran|russianfederation|turkey|ukraine|unitedstates|uzbekistan', 'germany|iran|russianfederation|turkey|ukraine|unitedstates|uzbekistan']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 0.0, 0.0, 0.0], 'select': [1.0, 1.0, 1.0, 1.0, 1.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29953 <-> row_number: 32
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 32 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=ceb', 'http://www.ethnologue.com/show_language.asp?code=ceb', 'http://www.ethnologue.com/show_language.asp?code=ceb'], 'primary_country': ['philippines', 'philippines', 'philippines'], 'region': ['Negros, Cebu, Bohol, Visayas and parts of Mindanao. Also in United States.', 'The religious affiliations of the speakers of the language are given where known. These are generally listed in descending order of number of adherents', 'Negros, Cebu, Bohol, Visayas and parts of Mindanao. Also in United States.'], 'countries': ['unitedstates|other', 'philippines', 'unitedstates']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
Executing one action: self.actions.modify_text('url', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
Executing one action: self.actions.modify_select('primary_country', 'philippines')
We are going to select this select `primary_country` with value `philippines`
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
Executing one action: self.actions.modify_text('region', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
Executing one action: self.actions.modify_checkbox('countries', 'nan')
 ** Warning **: Found input value is 'nan' and filtered it out
 ** Warning **: Since the list of values `[]` is empty, and so, we're terminating the function
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['philippines']
 visible_values : ['philippines']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=ceb', 'http://www.ethnologue.com/show_language.asp?code=ceb', 'http://www.ethnologue.com/show_language.asp?code=ceb']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=ceb']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['philippines', 'philippines', 'philippines']` - type: `<class 'list'>`
----> baseline_answer: `philippines` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Negros, Cebu, Bohol, Visayas and parts of Mindanao. Also in United States.', 'The religious affiliations of the speakers of the language are given where known. These are generally listed in descending order of number of adherents', 'Negros, Cebu, Bohol, Visayas and parts of Mindanao. Also in United States.']`
----> answers: `['Negros, Cebu, Bohol, Visayas and parts of Mindanao. Also in United States.', 'The religious affiliations of the speakers of the language are given where known. These are generally listed in descending order of number of adherents']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['other|unitedstates', 'philippines', 'unitedstates']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['other|unitedstates', 'philippines', 'unitedstates']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'select': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [1.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29957 <-> row_number: 36
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 36 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=hrv', 'http://www.ethnologue.com/show_language.asp?code=hrv', 'http://www.ethnologue.com/show_language.asp?code=hrv'], 'primary_country': ['croatia', 'croatia', 'croatia'], 'region': ['Also in Austria, Bosnia and Herzegovina, Canada, Chile, Czech Republic, Germany, Hungary, Italy, Montenegro, Serbia, Slovakia, Slovenia, United States.', 'Also in Austria, Bosnia and Herzegovina, Canada, Chile, Czech Republic, Germany, Hungary, Italy, Montenegro, Serbia, Slovakia, Slovenia, United States.', 'Also in Austria, Bosnia and Herzegovina, Canada, Chile, Czech Republic, Germany, Hungary, Italy, Montenegro, Serbia, Slovakia, Slovenia, United States.'], 'countries': ['serbia|canada|slovakia|chile|germany|italy|unitedstates|bosniaandherzegovina|hungary|bosnia|other', 'serbia|canada|slovakia|chile|germany|italy|slovenia|unitedstates|austria|czechrepublic|bosniaandherzegovina|hungary|bosnia|other', 'serbia|canada|slovakia|chile|germany|italy|slovenia|unitedstates|austria|czechrepublic|other']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
Executing one action: self.actions.modify_text('url', 'https://www.example.com/language_page')


You should replace 'https://www.example.com/language_page' with the actual URL that you want to set for the input field with the name "url".
Failed to execute an action self.actions.modify_text('url', 'https://www.example.com/language_page')


You should replace 'https://www.example.com/language_page' with the actual URL that you want to set for the input field with the name "url"., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
Executing one action: self.actions.modify_select('primary_country', 'croatia')
We are going to select this select `primary_country` with value `croatia`
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
Executing one action: self.actions.modify_text('region', 'The information about the region should go here')
Add text `The information about the region should go here` to this text input: <textarea name="region" rows="6" cols="120"> </textarea>
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
Executing one action: self.actions.modify_checkbox('countries', 'croatia')
Looking for checkboxes with `name`: `countries` the values: `['croatia']`
About to check this checkbox: <input type="checkbox" name="countries" value="croatia">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['croatia']
 visible_values : ['croatia']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : ['The information about the region should go here']
 visible_values : ['The information about the region should go here']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['croatia']
 visible_values : ['croatia']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=hrv', 'http://www.ethnologue.com/show_language.asp?code=hrv', 'http://www.ethnologue.com/show_language.asp?code=hrv']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=hrv']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['croatia', 'croatia', 'croatia']` - type: `<class 'list'>`
----> baseline_answer: `croatia` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Also in Austria, Bosnia and Herzegovina, Canada, Chile, Czech Republic, Germany, Hungary, Italy, Montenegro, Serbia, Slovakia, Slovenia, United States.', 'Also in Austria, Bosnia and Herzegovina, Canada, Chile, Czech Republic, Germany, Hungary, Italy, Montenegro, Serbia, Slovakia, Slovenia, United States.', 'Also in Austria, Bosnia and Herzegovina, Canada, Chile, Czech Republic, Germany, Hungary, Italy, Montenegro, Serbia, Slovakia, Slovenia, United States.']`
----> answers: `['Also in Austria, Bosnia and Herzegovina, Canada, Chile, Czech Republic, Germany, Hungary, Italy, Montenegro, Serbia, Slovakia, Slovenia, United States.']` - type: `<class 'list'>`
----> baseline_answer: `The information about the region should go here` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['bosnia|bosniaandherzegovina|canada|chile|germany|hungary|italy|other|serbia|slovakia|unitedstates', 'austria|bosnia|bosniaandherzegovina|canada|chile|czechrepublic|germany|hungary|italy|other|serbia|slovakia|slovenia|unitedstates', 'austria|canada|chile|czechrepublic|germany|italy|other|serbia|slovakia|slovenia|unitedstates']` - type: `<class 'list'>`
----> baseline_answer: `croatia` - type: `<class 'str'>`
Model answers: croatia 
Gold answers: ['bosnia|bosniaandherzegovina|canada|chile|germany|hungary|italy|other|serbia|slovakia|unitedstates', 'austria|bosnia|bosniaandherzegovina|canada|chile|czechrepublic|germany|hungary|italy|other|serbia|slovakia|slovenia|unitedstates', 'austria|canada|chile|czechrepublic|germany|italy|other|serbia|slovakia|slovenia|unitedstates']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'select': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29964 <-> row_number: 43
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 43 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=tam', 'http://www.ethnologue.com/show_language.asp?code=tam', 'http://www.ethnologue.com/show_language.asp?code=tam'], 'primary_country': ['india', 'india', 'india'], 'region': ['Tamil Nadu and neighboring states. Also in Bahrain, Canada, Fiji, Germany, Malaysia (Peninsular), Mauritius, Netherlands, Qatar, Réunion, Singapore, South Africa, Sri Lanka, Thailand, United Arab Emirates, United Kingdom, United States.', 'Tamil Nadu and neighboring states. Also in Bahrain, Canada, Fiji, Germany, Malaysia (Peninsular), Mauritius, Netherlands, Qatar, Réunion, Singapore, South Africa, Sri Lanka, Thailand, United Arab Emirates, United Kingdom, United States.', 'Tamil Nadu and neighboring states. Also in Bahrain, Canada, Fiji, Germany, Malaysia (Peninsular), Mauritius, Netherlands, Qatar, Réunion, Singapore, South Africa, Sri Lanka, Thailand, United Arab Emirates, United Kingdom, United States.'], 'countries': ['singapore|canada|germany|uk|malaysia|southafrica|unitedstates|mauritius|srilanka|bahrain|qatar|netherlands|other|thailand', 'singapore|canada|uae|germany|uk|malaysia|unitedstates|srilanka|bahrain|netherlands|other|thailand', 'singapore|canada|germany|uk|malaysia|southafrica|unitedstates|mauritius|srilanka|bahrain|qatar|netherlands|other|thailand']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
Executing one action: self.actions.modify_text('url', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
Executing one action: self.actions.modify_select('primary_country', 'india')
We are going to select this select `primary_country` with value `india`
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
Executing one action: self.actions.modify_text('region', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
Executing one action: self.actions.modify_checkbox('countries', 'india')
Looking for checkboxes with `name`: `countries` the values: `['india']`
About to check this checkbox: <input type="checkbox" name="countries" value="india">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['india']
 visible_values : ['india']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['india']
 visible_values : ['india']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=tam', 'http://www.ethnologue.com/show_language.asp?code=tam', 'http://www.ethnologue.com/show_language.asp?code=tam']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=tam']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['india', 'india', 'india']` - type: `<class 'list'>`
----> baseline_answer: `india` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Tamil Nadu and neighboring states. Also in Bahrain, Canada, Fiji, Germany, Malaysia (Peninsular), Mauritius, Netherlands, Qatar, Réunion, Singapore, South Africa, Sri Lanka, Thailand, United Arab Emirates, United Kingdom, United States.', 'Tamil Nadu and neighboring states. Also in Bahrain, Canada, Fiji, Germany, Malaysia (Peninsular), Mauritius, Netherlands, Qatar, Réunion, Singapore, South Africa, Sri Lanka, Thailand, United Arab Emirates, United Kingdom, United States.', 'Tamil Nadu and neighboring states. Also in Bahrain, Canada, Fiji, Germany, Malaysia (Peninsular), Mauritius, Netherlands, Qatar, Réunion, Singapore, South Africa, Sri Lanka, Thailand, United Arab Emirates, United Kingdom, United States.']`
----> answers: `['Tamil Nadu and neighboring states. Also in Bahrain, Canada, Fiji, Germany, Malaysia (Peninsular), Mauritius, Netherlands, Qatar, Réunion, Singapore, South Africa, Sri Lanka, Thailand, United Arab Emirates, United Kingdom, United States.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['bahrain|canada|germany|malaysia|mauritius|netherlands|other|qatar|singapore|southafrica|srilanka|thailand|uk|unitedstates', 'bahrain|canada|germany|malaysia|netherlands|other|singapore|srilanka|thailand|uae|uk|unitedstates', 'bahrain|canada|germany|malaysia|mauritius|netherlands|other|qatar|singapore|southafrica|srilanka|thailand|uk|unitedstates']` - type: `<class 'list'>`
----> baseline_answer: `india` - type: `<class 'str'>`
Model answers: india 
Gold answers: ['bahrain|canada|germany|malaysia|mauritius|netherlands|other|qatar|singapore|southafrica|srilanka|thailand|uk|unitedstates', 'bahrain|canada|germany|malaysia|netherlands|other|singapore|srilanka|thailand|uae|uk|unitedstates', 'bahrain|canada|germany|malaysia|mauritius|netherlands|other|qatar|singapore|southafrica|srilanka|thailand|uk|unitedstates']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'select': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29940 <-> row_number: 19
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 19 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=pag', 'http://www.ethnologue.com/show_language.asp?code=pag', 'http://www.ethnologue.com/show_language.asp?code=pag'], 'primary_country': ['philippines', 'philippines', 'philippines'], 'region': ['Pangasinan Province, Luzon. Also in United States.', 'Pangasinan Province, Luzon. Also in United States.', 'Pangasinan Province, Luzon. Also in United States.'], 'countries': ['philippines|unitedstates', 'unitedstates', 'unitedstates|other']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
Executing one action: self.actions.modify_text('url', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
Executing one action: self.actions.modify_select('primary_country', 'philippines')
We are going to select this select `primary_country` with value `philippines`
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
Executing one action: self.actions.modify_text('region', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
Executing one action: self.actions.modify_checkbox('countries', 'philippines')
Looking for checkboxes with `name`: `countries` the values: `['philippines']`
About to check this checkbox: <input type="checkbox" name="countries" value="philippines">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['philippines']
 visible_values : ['philippines']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['philippines']
 visible_values : ['philippines']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=pag', 'http://www.ethnologue.com/show_language.asp?code=pag', 'http://www.ethnologue.com/show_language.asp?code=pag']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=pag']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['philippines', 'philippines', 'philippines']` - type: `<class 'list'>`
----> baseline_answer: `philippines` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Pangasinan Province, Luzon. Also in United States.', 'Pangasinan Province, Luzon. Also in United States.', 'Pangasinan Province, Luzon. Also in United States.']`
----> answers: `['Pangasinan Province, Luzon. Also in United States.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['philippines|unitedstates', 'unitedstates', 'other|unitedstates']` - type: `<class 'list'>`
----> baseline_answer: `philippines` - type: `<class 'str'>`
Model answers: philippines 
Gold answers: ['philippines|unitedstates', 'unitedstates', 'other|unitedstates']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'select': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29928 <-> row_number: 7
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 7 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=nor', 'http://www.ethnologue.com/show_language.asp?code=nor'], 'primary_country': ['norway', 'norway'], 'region': ['not available', 'Denmark, Finland, Norway and Sweden'], 'countries': ['norway', 'finland|norway|denmark|sweden']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
Executing one action: self.actions.modify_text('url', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
Executing one action: self.actions.modify_select('primary_country', 'norway')
We are going to select this select `primary_country` with value `norway`
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
Executing one action: self.actions.modify_text('region', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
Executing one action: self.actions.modify_select('primary_country', 'norway')
We are going to select this select `primary_country` with value `norway`
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['norway']
 visible_values : ['norway']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=nor', 'http://www.ethnologue.com/show_language.asp?code=nor']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=nor']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['norway', 'norway']` - type: `<class 'list'>`
----> baseline_answer: `norway` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['not available', 'Denmark, Finland, Norway and Sweden']`
----> answers: `['Denmark, Finland, Norway and Sweden', 'not available']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['norway', 'denmark|finland|norway|sweden']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['norway', 'denmark|finland|norway|sweden']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'select': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29944 <-> row_number: 23
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 23 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=eus', 'http://www.ethnologue.com/show_language.asp?code=eus', 'http://www.ethnologue.com/show_language.asp?code=eus'], 'primary_country': ['spain', 'spain', 'spain'], 'region': ['France-Spain border, 3 Basque provinces: Alava (Araba), Bizkaia (Biskay), and Gipuzkoa of Autonomous Basque Community (CAV); north central Spain, Autonomous Region of Navarra (Nafarroa), north area. Also in Australia, Costa Rica, France, Mexico, Philippines, United States.', 'France-Spain border, 3 Basque provinces: Alava (Araba), Bizkaia (Biskay), and Gipuzkoa of Autonomous Basque Community (CAV); north central Spain, Autonomous Region of Navarra (Nafarroa), north area. Also in Australia, Costa Rica, France, Mexico, Philippines, United States.', 'France-Spain border, 3 Basque provinces: Alava (Araba), Bizkaia (Biskay), and Gipuzkoa of Autonomous Basque Community (CAV); north central Spain, Autonomous Region of Navarra (Nafarroa), north area. Also in Australia, Costa Rica, France, Mexico, Philippines, United States.'], 'countries': ['france|philippines|unitedstates|australia|costarica|spain|mexico', 'france|philippines|unitedstates|australia|costarica|mexico|other', 'france|aruba|philippines|unitedstates|australia|costarica|spain|mexico|other']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
Executing one action: self.actions.modify_text('url', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
Executing one action: self.actions.modify_select('primary_country', 'nan')
Failed to execute an action self.actions.modify_select('primary_country', 'nan'), error: Input value `nan` is not among the available option values `['albania', 'algeria', 'anguilla', 'argentina', 'armenia', 'aruba', 'australia', 'austria', 'bahrain', 'bangladesh', 'belarus', 'belgium', 'bosnia', 'brazil', 'brunei', 'bulgaria', 'cameroon', 'canada', 'chile', 'china', 'colombia', 'costarica', 'croatia', 'cyprus', 'czechrepublic', 'denmark', 'dominicanrepublic', 'egypt', 'estonia', 'ethiopia', 'finland', 'france', 'georgia', 'germany', 'greece', 'guam', 'guatemala', 'guineabissau', 'guyana', 'bosniaandherzegovina', 'hongkong', 'hungary', 'iceland', 'india', 'indonesia', 'iran', 'ireland', 'israel', 'italy', 'jamaica', 'japan', 'jordan', 'kazakhstan', 'kenya', 'korea', 'kuwait', 'latvia', 'lebanon', 'liberia', 'lithuania', 'luxembourg', 'macedonia', 'macedoniatheformeryugoslavrepublicof', 'madagascar', 'malaysia', 'maldives', 'malta', 'mauritius', 'mexico', 'moldova', 'morocco', 'nepal', 'netherlands', 'newzealand', 'nigeria', 'norway', 'oman', 'other', 'pakistan', 'panama', 'peru', 'philippines', 'poland', 'portugal', 'puertorico', 'qatar', 'romania', 'russia', 'russianfederation', 'saudiarabia', 'scotland', 'serbia', 'singapore', 'slovakia', 'slovenia', 'somalia', 'southafrica', 'spain', 'srilanka', 'stlucia', 'stvincent', 'sweden', 'switzerland', 'taiwan', 'tanzania', 'thailand', 'tunisia', 'turkey', 'uae', 'uk', 'ukraine', 'unitedstates', 'uruguay', 'uzbekistan', 'venezuela', 'vietnam', 'yemen', 'zambia']`
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
Executing one action: self.actions.modify_text('region', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
Executing one action: self.actions.modify_checkbox('countries', 'nan')
 ** Warning **: Found input value is 'nan' and filtered it out
 ** Warning **: Since the list of values `[]` is empty, and so, we're terminating the function
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=eus', 'http://www.ethnologue.com/show_language.asp?code=eus', 'http://www.ethnologue.com/show_language.asp?code=eus']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=eus']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['spain', 'spain', 'spain']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['France-Spain border, 3 Basque provinces: Alava (Araba), Bizkaia (Biskay), and Gipuzkoa of Autonomous Basque Community (CAV); north central Spain, Autonomous Region of Navarra (Nafarroa), north area. Also in Australia, Costa Rica, France, Mexico, Philippines, United States.', 'France-Spain border, 3 Basque provinces: Alava (Araba), Bizkaia (Biskay), and Gipuzkoa of Autonomous Basque Community (CAV); north central Spain, Autonomous Region of Navarra (Nafarroa), north area. Also in Australia, Costa Rica, France, Mexico, Philippines, United States.', 'France-Spain border, 3 Basque provinces: Alava (Araba), Bizkaia (Biskay), and Gipuzkoa of Autonomous Basque Community (CAV); north central Spain, Autonomous Region of Navarra (Nafarroa), north area. Also in Australia, Costa Rica, France, Mexico, Philippines, United States.']`
----> answers: `['France-Spain border, 3 Basque provinces: Alava (Araba), Bizkaia (Biskay), and Gipuzkoa of Autonomous Basque Community (CAV); north central Spain, Autonomous Region of Navarra (Nafarroa), north area. Also in Australia, Costa Rica, France, Mexico, Philippines, United States.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['australia|costarica|france|mexico|philippines|spain|unitedstates', 'australia|costarica|france|mexico|other|philippines|unitedstates', 'aruba|australia|costarica|france|mexico|other|philippines|spain|unitedstates']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['australia|costarica|france|mexico|philippines|spain|unitedstates', 'australia|costarica|france|mexico|other|philippines|unitedstates', 'aruba|australia|costarica|france|mexico|other|philippines|spain|unitedstates']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'select': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29932 <-> row_number: 11
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 11 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=zsm', 'http://www.ethnologue.com/show_language.asp?code=zlm', 'http://www.ethnologue.com/show_language.asp?code=zlm'], 'primary_country': ['malaysia', 'malaysia', 'malaysia'], 'region': ['Widespread Peninsular Malaysia, Sabah, and Sarawak. Also in Brunei, Singapore.', 'Region  \tWidespread in Peninsular Malaysia, parts of Sarawak. Also in Canada, Indonesia (Sumatra), Myanmar, Singapore, United Arab Emirates, United States.', 'Widespread in Peninsular Malaysia, parts of Sarawak. Also in Canada, Indonesia (Sumatra), Myanmar, Singapore, United Arab Emirates, United States.'], 'countries': ['singapore|other|brunei', 'singapore|canada|uae|malaysia|unitedstates|other|indonesia', 'singapore|canada|uae|malaysia|unitedstates|other|indonesia']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
Executing one action: self.actions.modify_text('url', '')
Since the input value is ``, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
Executing one action: self.actions.modify_select('primary_country', 'malaysia')

We are going to select this select `primary_country` with value `malaysia`
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
Executing one action: self.actions.modify_text('region', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
Executing one action: self.actions.modify_select('primary_country', 'malaysia')
We are going to select this select `primary_country` with value `malaysia`
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['malaysia']
 visible_values : ['malaysia']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=zsm', 'http://www.ethnologue.com/show_language.asp?code=zlm', 'http://www.ethnologue.com/show_language.asp?code=zlm']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=zlm', 'http://www.ethnologue.com/show_language.asp?code=zsm']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['malaysia', 'malaysia', 'malaysia']` - type: `<class 'list'>`
----> baseline_answer: `malaysia` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Widespread Peninsular Malaysia, Sabah, and Sarawak. Also in Brunei, Singapore.', 'Region  \tWidespread in Peninsular Malaysia, parts of Sarawak. Also in Canada, Indonesia (Sumatra), Myanmar, Singapore, United Arab Emirates, United States.', 'Widespread in Peninsular Malaysia, parts of Sarawak. Also in Canada, Indonesia (Sumatra), Myanmar, Singapore, United Arab Emirates, United States.']`
----> answers: `['Region  \tWidespread in Peninsular Malaysia, parts of Sarawak. Also in Canada, Indonesia (Sumatra), Myanmar, Singapore, United Arab Emirates, United States.', 'Widespread Peninsular Malaysia, Sabah, and Sarawak. Also in Brunei, Singapore.', 'Widespread in Peninsular Malaysia, parts of Sarawak. Also in Canada, Indonesia (Sumatra), Myanmar, Singapore, United Arab Emirates, United States.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['brunei|other|singapore', 'canada|indonesia|malaysia|other|singapore|uae|unitedstates', 'canada|indonesia|malaysia|other|singapore|uae|unitedstates']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['brunei|other|singapore', 'canada|indonesia|malaysia|other|singapore|uae|unitedstates', 'canada|indonesia|malaysia|other|singapore|uae|unitedstates']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'select': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29943 <-> row_number: 22
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 22 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=ido', 'http://www.ethnologue.com/show_work.asp?id=928474512845', 'http://www.ethnologue.com/show_language.asp?code=ido'], 'primary_country': ['other', 'mexico', 'other'], 'region': ['The language referenced by this code is an ancient, classical, or constructed language with no living mother-tongue speakers, or was identified as extinct before 1950 (when Ethnologue began). Language identifier code documentation for Ido [ido] is maintained by The Linguist List.', 'no region available', 'The language referenced by this code is an ancient, classical, or constructed language with no living mother-tongue speakers, or was identified as extinct before 1950 (when Ethnologue began). Language identifier code documentation for Ido [ido] is maintained by The Linguist List.'], 'countries': ['other', 'mexico', 'other']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
Executing one action: self.actions.modify_text('url', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
Executing one action: self.actions.modify_select('primary_country', 'india')


Please provide the specific country value that you would like to set for the "primary_country" field in order to generate the appropriate command.
Failed to execute an action self.actions.modify_select('primary_country', 'india')


Please provide the specific country value that you would like to set for the "primary_country" field in order to generate the appropriate command., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
Executing one action: self.actions.modify_text('region', 'input_value')
Add text `input_value` to this text input: <textarea name="region" rows="6" cols="120"> </textarea>
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
Executing one action: self.actions.modify_checkbox` method.
Failed to execute an action self.actions.modify_checkbox` method., error: invalid syntax (<string>, line 1)
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : ['input_value']
 visible_values : ['input_value']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=ido', 'http://www.ethnologue.com/show_work.asp?id=928474512845', 'http://www.ethnologue.com/show_language.asp?code=ido']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=ido', 'http://www.ethnologue.com/show_work.asp?id=928474512845']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['other', 'mexico', 'other']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['The language referenced by this code is an ancient, classical, or constructed language with no living mother-tongue speakers, or was identified as extinct before 1950 (when Ethnologue began). Language identifier code documentation for Ido [ido] is maintained by The Linguist List.', 'no region available', 'The language referenced by this code is an ancient, classical, or constructed language with no living mother-tongue speakers, or was identified as extinct before 1950 (when Ethnologue began). Language identifier code documentation for Ido [ido] is maintained by The Linguist List.']`
----> answers: `['no region available', 'The language referenced by this code is an ancient, classical, or constructed language with no living mother-tongue speakers, or was identified as extinct before 1950 (when Ethnologue began). Language identifier code documentation for Ido [ido] is maintained by The Linguist List.']` - type: `<class 'list'>`
----> baseline_answer: `input_value` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['other', 'mexico', 'other']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['other', 'mexico', 'other']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'select': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29938 <-> row_number: 17
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 17 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=ben', 'http://www.ethnologue.com/show_language.asp?code=ben', 'http://www.ethnologue.com/show_language.asp?code=ben'], 'primary_country': ['bangladesh', 'bangladesh', 'bangladesh'], 'region': ['West. Also in Canada, India, Malawi, Nepal, Saudi Arabia, Singapore, United Arab Emirates, United Kingdom, United States.', 'West. Also in Canada, India, Malawi, Nepal, Saudi Arabia, Singapore, United Arab Emirates, United Kingdom, United States.', 'West. Also in Canada, India, Malawi, Nepal, Saudi Arabia, Singapore, United Arab Emirates, United Kingdom, United States.'], 'countries': ['singapore|canada|uk|unitedstates|nepal|other|india|saudiarabia', 'singapore|canada|uae|uk|unitedstates|nepal|other|india|saudiarabia', 'singapore|canada|uae|uk|unitedstates|nepal|india|saudiarabia']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
Executing one action: self.actions.modify_text('url', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
Executing one action: self.actions.modify_select('primary_country', 'bangladesh')
We are going to select this select `primary_country` with value `bangladesh`
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
Executing one action: self.actions.modify_text('region', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
Executing one action: self.actions.modify_select('primary_country', 'bangladesh')
We are going to select this select `primary_country` with value `bangladesh`
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['bangladesh']
 visible_values : ['bangladesh']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=ben', 'http://www.ethnologue.com/show_language.asp?code=ben', 'http://www.ethnologue.com/show_language.asp?code=ben']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=ben']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['bangladesh', 'bangladesh', 'bangladesh']` - type: `<class 'list'>`
----> baseline_answer: `bangladesh` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['West. Also in Canada, India, Malawi, Nepal, Saudi Arabia, Singapore, United Arab Emirates, United Kingdom, United States.', 'West. Also in Canada, India, Malawi, Nepal, Saudi Arabia, Singapore, United Arab Emirates, United Kingdom, United States.', 'West. Also in Canada, India, Malawi, Nepal, Saudi Arabia, Singapore, United Arab Emirates, United Kingdom, United States.']`
----> answers: `['West. Also in Canada, India, Malawi, Nepal, Saudi Arabia, Singapore, United Arab Emirates, United Kingdom, United States.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['canada|india|nepal|other|saudiarabia|singapore|uk|unitedstates', 'canada|india|nepal|other|saudiarabia|singapore|uae|uk|unitedstates', 'canada|india|nepal|saudiarabia|singapore|uae|uk|unitedstates']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['canada|india|nepal|other|saudiarabia|singapore|uk|unitedstates', 'canada|india|nepal|other|saudiarabia|singapore|uae|uk|unitedstates', 'canada|india|nepal|saudiarabia|singapore|uae|uk|unitedstates']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'select': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29952 <-> row_number: 31
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 31 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=amh', 'http://www.ethnologue.com/show_language.asp?code=amh', 'http://www.ethnologue.com/show_language.asp?code=amh'], 'primary_country': ['ethiopia', 'ethiopia', 'ethiopia'], 'region': ['North central, Amhara region; Addis Ababa. Also in Djibouti, Egypt, Israel, Sweden, United States.', 'North central, Amhara region; Addis Ababa. Also in Djibouti, Egypt, Israel, Sweden, United States', 'North central, Amhara region; Addis Ababa. Also in Djibouti, Egypt, Israel, Sweden, United States.'], 'countries': ['israel|unitedstates|sweden|egypt|other', 'israel|unitedstates|sweden|egypt|other', 'israel|unitedstates|sweden|egypt|other']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
Executing one action: self.actions.modify_text('url', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
Executing one action: self.actions.modify_select('primary_country', 'ethiopia')
 

Please provide the value you wish to set for the "primary_country" field.
Failed to execute an action self.actions.modify_select('primary_country', 'ethiopia')
 

Please provide the value you wish to set for the "primary_country" field., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
Executing one action: self.actions.modify_text('region', 'INSERT_REGION_TEXT_HERE')
Add text `INSERT_REGION_TEXT_HERE` to this text input: <textarea name="region" rows="6" cols="120"> </textarea>
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
Executing one action: self.actions.modify_select('primary_country', 'ethiopia')
We are going to select this select `primary_country` with value `ethiopia`
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['ethiopia']
 visible_values : ['ethiopia']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : ['INSERT_REGION_TEXT_HERE']
 visible_values : ['INSERT_REGION_TEXT_HERE']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=amh', 'http://www.ethnologue.com/show_language.asp?code=amh', 'http://www.ethnologue.com/show_language.asp?code=amh']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=amh']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['ethiopia', 'ethiopia', 'ethiopia']` - type: `<class 'list'>`
----> baseline_answer: `ethiopia` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['North central, Amhara region; Addis Ababa. Also in Djibouti, Egypt, Israel, Sweden, United States.', 'North central, Amhara region; Addis Ababa. Also in Djibouti, Egypt, Israel, Sweden, United States', 'North central, Amhara region; Addis Ababa. Also in Djibouti, Egypt, Israel, Sweden, United States.']`
----> answers: `['North central, Amhara region; Addis Ababa. Also in Djibouti, Egypt, Israel, Sweden, United States.', 'North central, Amhara region; Addis Ababa. Also in Djibouti, Egypt, Israel, Sweden, United States']` - type: `<class 'list'>`
----> baseline_answer: `INSERT_REGION_TEXT_HERE` - type: `<class 'str'>`
 --> scores:  0.11111111111111112
----> per-field score: 0.11111111111111112
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['egypt|israel|other|sweden|unitedstates', 'egypt|israel|other|sweden|unitedstates', 'egypt|israel|other|sweden|unitedstates']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['egypt|israel|other|sweden|unitedstates', 'egypt|israel|other|sweden|unitedstates', 'egypt|israel|other|sweden|unitedstates']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.2777777777777778
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'select': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.11111111111111112], 'checkbox': [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29939 <-> row_number: 18
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 18 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=lav', 'http://www.ethnologue.com/show_language.asp?code=lav', 'http://www.ethnologue.com/show_language.asp?code=lav'], 'primary_country': ['latvia', 'latvia', 'latvia'], 'region': ['Also in Australia, Belarus, Brazil, Canada, Estonia, Germany, Lithuania, New Zealand, Russian Federation (Europe), Sweden, Ukraine, United Kingdom, United States, Venezuela.', 'Also in Australia, Belarus, Brazil, Canada, Estonia, Germany, Lithuania, New Zealand, Russian Federation (Europe), Sweden, Ukraine, United Kingdom, United States, Venezuela.', 'Australia, Belarus, Brazil, Canada, Estonia, Germany, Lithuania, New Zealand, Russian Federation (Europe), Sweden, Ukraine, United Kingdom, United States, Venezuela.'], 'countries': ['canada|germany|uk|ukraine|unitedstates|australia|venezuela|belarus|sweden|russianfederation|brazil|estonia|newzealand|lithuania', 'canada|germany|uk|ukraine|unitedstates|australia|venezuela|belarus|sweden|latvia|russianfederation|brazil|estonia|newzealand|lithuania', 'canada|germany|uk|ukraine|unitedstates|australia|venezuela|belarus|sweden|russianfederation|brazil|estonia|newzealand|lithuania']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
Executing one action: self.actions.modify_text('url', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
Executing one action: self.actions.modify_select('primary_country', 'latvia')
We are going to select this select `primary_country` with value `latvia`
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
Executing one action: self.actions.modify_text('region', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
Executing one action: self.actions.modify_checkbox('countries', 'latvia')
Looking for checkboxes with `name`: `countries` the values: `['latvia']`
About to check this checkbox: <input type="checkbox" name="countries" value="latvia">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['latvia']
 visible_values : ['latvia']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['latvia']
 visible_values : ['latvia']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=lav', 'http://www.ethnologue.com/show_language.asp?code=lav', 'http://www.ethnologue.com/show_language.asp?code=lav']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=lav']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['latvia', 'latvia', 'latvia']` - type: `<class 'list'>`
----> baseline_answer: `latvia` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Also in Australia, Belarus, Brazil, Canada, Estonia, Germany, Lithuania, New Zealand, Russian Federation (Europe), Sweden, Ukraine, United Kingdom, United States, Venezuela.', 'Also in Australia, Belarus, Brazil, Canada, Estonia, Germany, Lithuania, New Zealand, Russian Federation (Europe), Sweden, Ukraine, United Kingdom, United States, Venezuela.', 'Australia, Belarus, Brazil, Canada, Estonia, Germany, Lithuania, New Zealand, Russian Federation (Europe), Sweden, Ukraine, United Kingdom, United States, Venezuela.']`
----> answers: `['Also in Australia, Belarus, Brazil, Canada, Estonia, Germany, Lithuania, New Zealand, Russian Federation (Europe), Sweden, Ukraine, United Kingdom, United States, Venezuela.', 'Australia, Belarus, Brazil, Canada, Estonia, Germany, Lithuania, New Zealand, Russian Federation (Europe), Sweden, Ukraine, United Kingdom, United States, Venezuela.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['australia|belarus|brazil|canada|estonia|germany|lithuania|newzealand|russianfederation|sweden|uk|ukraine|unitedstates|venezuela', 'australia|belarus|brazil|canada|estonia|germany|latvia|lithuania|newzealand|russianfederation|sweden|uk|ukraine|unitedstates|venezuela', 'australia|belarus|brazil|canada|estonia|germany|lithuania|newzealand|russianfederation|sweden|uk|ukraine|unitedstates|venezuela']` - type: `<class 'list'>`
----> baseline_answer: `latvia` - type: `<class 'str'>`
Model answers: latvia 
Gold answers: ['australia|belarus|brazil|canada|estonia|germany|lithuania|newzealand|russianfederation|sweden|uk|ukraine|unitedstates|venezuela', 'australia|belarus|brazil|canada|estonia|germany|latvia|lithuania|newzealand|russianfederation|sweden|uk|ukraine|unitedstates|venezuela', 'australia|belarus|brazil|canada|estonia|germany|lithuania|newzealand|russianfederation|sweden|uk|ukraine|unitedstates|venezuela']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'select': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.11111111111111112, 0.0], 'checkbox': [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29925 <-> row_number: 4
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 4 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=fry', 'http://www.ethnologue.com/show_language.asp?code=fry', 'http://www.ethnologue.com/show_language.asp?code=fry'], 'primary_country': ['netherlands', 'netherlands', 'other'], 'region': ['North, Friesland.', 'North, Friesland', 'North, Friesland.'], 'countries': ['other', 'other', 'other']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
Executing one action: self.actions.modify_text('url', 'https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp')
Add text `https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp` to this text input: <input type="text" size="80" name="url">
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
Executing one action: self.actions.modify_select('primary_country', 'netherlands')
We are going to select this select `primary_country` with value `netherlands`
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
Executing one action: self.actions.modify_text('region', 'Please provide the URL of the Ethnologue page for the language West Frisian.')
Add text `Please provide the URL of the Ethnologue page for the language West Frisian.` to this text input: <textarea name="region" rows="6" cols="120"> </textarea>
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
Executing one action: self.actions.modify_select('primary_country', 'netherlands')
We are going to select this select `primary_country` with value `netherlands`
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : ['https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp']
 visible_values : ['https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp']
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['netherlands']
 visible_values : ['netherlands']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : ['Please provide the URL of the Ethnologue page for the language West Frisian.']
 visible_values : ['Please provide the URL of the Ethnologue page for the language West Frisian.']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=fry', 'http://www.ethnologue.com/show_language.asp?code=fry', 'http://www.ethnologue.com/show_language.asp?code=fry']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=fry']` - type: `<class 'list'>`
----> baseline_answer: `https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp` - type: `<class 'str'>`
 --> scores:  0.5454545454545455
----> per-field score: 0.5454545454545455
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['netherlands', 'netherlands', 'other']` - type: `<class 'list'>`
----> baseline_answer: `netherlands` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['North, Friesland.', 'North, Friesland', 'North, Friesland.']`
----> answers: `['North, Friesland.', 'North, Friesland']` - type: `<class 'list'>`
----> baseline_answer: `Please provide the URL of the Ethnologue page for the language West Frisian.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['other', 'other', 'other']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['other', 'other', 'other']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.38636363636363635
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5454545454545455], 'select': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.11111111111111112, 0.0, 0.0], 'checkbox': [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29926 <-> row_number: 5
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 5 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=lmo', 'http://www.ethnologue.com/show_language.asp?code=lmo', 'http://www.ethnologue.com/show_language.asp?code=lmo'], 'primary_country': ['italy', 'italy', 'italy'], 'region': ['North, Milan, Lombardy, 3 valleys of Graubünden (Val Mesolcina, Val Bregaglia, Val Poschiavo). Western Lombard varieties also in Sicily. Also in Switzerland, United States.', 'North, Milan, Lombardy, 3 valleys of Graubünden (Val Mesolcina, Val Bregaglia, Val Poschiavo). Western Lombard varieties also in Sicily. Also in Switzerland, United States.', 'North, Milan, Lombardy, 3 valleys of Graubünden (Val Mesolcina, Val Bregaglia, Val Poschiavo). Western Lombard varieties also in Sicily. Also in Switzerland, United States.'], 'countries': ['unitedstates|switzerland', 'unitedstates|switzerland', 'unitedstates|switzerland|other']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
Executing one action: self.actions.modify_text('url', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
Executing one action: self.actions.modify_select('primary_country', 'albania')
We are going to select this select `primary_country` with value `albania`
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
Executing one action: self.actions.modify_text('region', 'Northern Italy')


Please provide the region information that needs to be entered, and I can assist you further.
Failed to execute an action self.actions.modify_text('region', 'Northern Italy')


Please provide the region information that needs to be entered, and I can assist you further., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
Executing one action: self.actions.modify_checkbox('countries', 'nan')
 ** Warning **: Found input value is 'nan' and filtered it out
 ** Warning **: Since the list of values `[]` is empty, and so, we're terminating the function
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=lmo', 'http://www.ethnologue.com/show_language.asp?code=lmo', 'http://www.ethnologue.com/show_language.asp?code=lmo']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=lmo']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['italy', 'italy', 'italy']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['North, Milan, Lombardy, 3 valleys of Graubünden (Val Mesolcina, Val Bregaglia, Val Poschiavo). Western Lombard varieties also in Sicily. Also in Switzerland, United States.', 'North, Milan, Lombardy, 3 valleys of Graubünden (Val Mesolcina, Val Bregaglia, Val Poschiavo). Western Lombard varieties also in Sicily. Also in Switzerland, United States.', 'North, Milan, Lombardy, 3 valleys of Graubünden (Val Mesolcina, Val Bregaglia, Val Poschiavo). Western Lombard varieties also in Sicily. Also in Switzerland, United States.']`
----> answers: `['North, Milan, Lombardy, 3 valleys of Graubünden (Val Mesolcina, Val Bregaglia, Val Poschiavo). Western Lombard varieties also in Sicily. Also in Switzerland, United States.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['switzerland|unitedstates', 'switzerland|unitedstates', 'other|switzerland|unitedstates']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['switzerland|unitedstates', 'switzerland|unitedstates', 'other|switzerland|unitedstates']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5454545454545455, 0.0], 'select': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.11111111111111112, 0.0, 0.0, 0.0], 'checkbox': [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29921 <-> row_number: 0
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 0 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=tuk', 'http://www.ethnologue.com/show_language.asp?code=tuk', 'http://www.ethnologue.com/show_language.asp?code=tuk'], 'primary_country': ['other', 'other', 'other'], 'region': ['Also in Afghanistan, Germany, Iran, Iraq, Kazakhstan, Kyrgyzstan, Pakistan, Russian Federation (Asia), Syria, Tajikistan, Turkey (Asia), United States, Uzbekistan.', 'Also in Afghanistan, Germany, Iran, Iraq, Kazakhstan, Kyrgyzstan, Pakistan, Russian Federation (Asia), Syria, Tajikistan, Turkey (Asia), United States, Uzbekistan.', 'Also in Afghanistan, Germany, Iran, Iraq, Kazakhstan, Kyrgyzstan, Pakistan, Russian Federation (Asia), Syria, Tajikistan, Turkey (Asia), United States, Uzbekistan.'], 'countries': ['iran|turkey|pakistan|germany|unitedstates|kazakhstan|uzbekistan|russianfederation|other', 'iran|turkey|pakistan|germany|unitedstates|kazakhstan|uzbekistan|russia|other', 'iran|turkey|pakistan|germany|unitedstates|kazakhstan|uzbekistan|russianfederation|other']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
Executing one action: self.actions.modify_text('url', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
Executing one action: self.actions.modify_select('primary_country', 'turkmenistan')
Failed to execute an action self.actions.modify_select('primary_country', 'turkmenistan'), error: Input value `turkmenistan` is not among the available option values `['albania', 'algeria', 'anguilla', 'argentina', 'armenia', 'aruba', 'australia', 'austria', 'bahrain', 'bangladesh', 'belarus', 'belgium', 'bosnia', 'brazil', 'brunei', 'bulgaria', 'cameroon', 'canada', 'chile', 'china', 'colombia', 'costarica', 'croatia', 'cyprus', 'czechrepublic', 'denmark', 'dominicanrepublic', 'egypt', 'estonia', 'ethiopia', 'finland', 'france', 'georgia', 'germany', 'greece', 'guam', 'guatemala', 'guineabissau', 'guyana', 'bosniaandherzegovina', 'hongkong', 'hungary', 'iceland', 'india', 'indonesia', 'iran', 'ireland', 'israel', 'italy', 'jamaica', 'japan', 'jordan', 'kazakhstan', 'kenya', 'korea', 'kuwait', 'latvia', 'lebanon', 'liberia', 'lithuania', 'luxembourg', 'macedonia', 'macedoniatheformeryugoslavrepublicof', 'madagascar', 'malaysia', 'maldives', 'malta', 'mauritius', 'mexico', 'moldova', 'morocco', 'nepal', 'netherlands', 'newzealand', 'nigeria', 'norway', 'oman', 'other', 'pakistan', 'panama', 'peru', 'philippines', 'poland', 'portugal', 'puertorico', 'qatar', 'romania', 'russia', 'russianfederation', 'saudiarabia', 'scotland', 'serbia', 'singapore', 'slovakia', 'slovenia', 'somalia', 'southafrica', 'spain', 'srilanka', 'stlucia', 'stvincent', 'sweden', 'switzerland', 'taiwan', 'tanzania', 'thailand', 'tunisia', 'turkey', 'uae', 'uk', 'ukraine', 'unitedstates', 'uruguay', 'uzbekistan', 'venezuela', 'vietnam', 'yemen', 'zambia']`
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
Executing one action: To modify the "Region" text area input in the given HTML code, the appropriate command would use the `modify_text` method, prefaced by `self.actions` as per your instructions. 

However, without additional information about what to specifically modify the input to, I cannot provide you with the exact command with the new value. If you provide the new value for the "Region" text area, I can generate the full command for you.
Failed to execute an action To modify the "Region" text area input in the given HTML code, the appropriate command would use the `modify_text` method, prefaced by `self.actions` as per your instructions. 

However, without additional information about what to specifically modify the input to, I cannot provide you with the exact command with the new value. If you provide the new value for the "Region" text area, I can generate the full command for you., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
Executing one action: self.actions.modify_select('primary_country', 'turkmenistan')
Failed to execute an action self.actions.modify_select('primary_country', 'turkmenistan'), error: Input value `turkmenistan` is not among the available option values `['albania', 'algeria', 'anguilla', 'argentina', 'armenia', 'aruba', 'australia', 'austria', 'bahrain', 'bangladesh', 'belarus', 'belgium', 'bosnia', 'brazil', 'brunei', 'bulgaria', 'cameroon', 'canada', 'chile', 'china', 'colombia', 'costarica', 'croatia', 'cyprus', 'czechrepublic', 'denmark', 'dominicanrepublic', 'egypt', 'estonia', 'ethiopia', 'finland', 'france', 'georgia', 'germany', 'greece', 'guam', 'guatemala', 'guineabissau', 'guyana', 'bosniaandherzegovina', 'hongkong', 'hungary', 'iceland', 'india', 'indonesia', 'iran', 'ireland', 'israel', 'italy', 'jamaica', 'japan', 'jordan', 'kazakhstan', 'kenya', 'korea', 'kuwait', 'latvia', 'lebanon', 'liberia', 'lithuania', 'luxembourg', 'macedonia', 'macedoniatheformeryugoslavrepublicof', 'madagascar', 'malaysia', 'maldives', 'malta', 'mauritius', 'mexico', 'moldova', 'morocco', 'nepal', 'netherlands', 'newzealand', 'nigeria', 'norway', 'oman', 'other', 'pakistan', 'panama', 'peru', 'philippines', 'poland', 'portugal', 'puertorico', 'qatar', 'romania', 'russia', 'russianfederation', 'saudiarabia', 'scotland', 'serbia', 'singapore', 'slovakia', 'slovenia', 'somalia', 'southafrica', 'spain', 'srilanka', 'stlucia', 'stvincent', 'sweden', 'switzerland', 'taiwan', 'tanzania', 'thailand', 'tunisia', 'turkey', 'uae', 'uk', 'ukraine', 'unitedstates', 'uruguay', 'uzbekistan', 'venezuela', 'vietnam', 'yemen', 'zambia']`
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=tuk', 'http://www.ethnologue.com/show_language.asp?code=tuk', 'http://www.ethnologue.com/show_language.asp?code=tuk']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=tuk']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['other', 'other', 'other']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Also in Afghanistan, Germany, Iran, Iraq, Kazakhstan, Kyrgyzstan, Pakistan, Russian Federation (Asia), Syria, Tajikistan, Turkey (Asia), United States, Uzbekistan.', 'Also in Afghanistan, Germany, Iran, Iraq, Kazakhstan, Kyrgyzstan, Pakistan, Russian Federation (Asia), Syria, Tajikistan, Turkey (Asia), United States, Uzbekistan.', 'Also in Afghanistan, Germany, Iran, Iraq, Kazakhstan, Kyrgyzstan, Pakistan, Russian Federation (Asia), Syria, Tajikistan, Turkey (Asia), United States, Uzbekistan.']`
----> answers: `['Also in Afghanistan, Germany, Iran, Iraq, Kazakhstan, Kyrgyzstan, Pakistan, Russian Federation (Asia), Syria, Tajikistan, Turkey (Asia), United States, Uzbekistan.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['germany|iran|kazakhstan|other|pakistan|russianfederation|turkey|unitedstates|uzbekistan', 'germany|iran|kazakhstan|other|pakistan|russia|turkey|unitedstates|uzbekistan', 'germany|iran|kazakhstan|other|pakistan|russianfederation|turkey|unitedstates|uzbekistan']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['germany|iran|kazakhstan|other|pakistan|russianfederation|turkey|unitedstates|uzbekistan', 'germany|iran|kazakhstan|other|pakistan|russia|turkey|unitedstates|uzbekistan', 'germany|iran|kazakhstan|other|pakistan|russianfederation|turkey|unitedstates|uzbekistan']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5454545454545455, 0.0, 0.0], 'select': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.11111111111111112, 0.0, 0.0, 0.0, 0.0], 'checkbox': [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29930 <-> row_number: 9
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 9 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=ori', 'http://www.ethnologue.com/show_language.asp?code=ori', 'http://www.ethnologue.com/show_language.asp?code=ori'], 'primary_country': ['india', 'india', 'india'], 'region': ['Orissa; Jharkhand, Singhbhum, Ranchi districts; Chhattisgarh, Raigarh, Raipur, Bastar districts; West Bengal, Medinipur (Midnapore) District; Assam; Andhra Pradesh, Vishakhapatnam District. Also in Bangladesh.', 'Orissa; Jharkhand, Singhbhum, Ranchi districts; Chhattisgarh, Raigarh, Raipur, Bastar districts; West Bengal, Medinipur (Midnapore) District; Assam; Andhra Pradesh, Vishakhapatnam District. Also in Bangladesh.', 'Orissa; Jharkhand, Singhbhum, Ranchi districts; Chhattisgarh, Raigarh, Raipur, Bastar districts; West Bengal, Medinipur (Midnapore) District; Assam; Andhra Pradesh, Vishakhapatnam District. Also in Bangladesh.'], 'countries': ['bangladesh', 'bangladesh', 'bangladesh|other']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
Executing one action: self.actions.modify_text('url', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
Executing one action: To modify the `primary_country` select input, you would use the `modify_select` method. However, I don't have the information as to which option should be selected. If you provide me with the specific value that should be selected, I can then give you the correct command to use.
Failed to execute an action To modify the `primary_country` select input, you would use the `modify_select` method. However, I don't have the information as to which option should be selected. If you provide me with the specific value that should be selected, I can then give you the correct command to use., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
Executing one action: self.actions.modify_text('region', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
Executing one action: self.actions.modify_checkbox('countries', 'nan')
 ** Warning **: Found input value is 'nan' and filtered it out
 ** Warning **: Since the list of values `[]` is empty, and so, we're terminating the function
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['albania']
 visible_values : ['albania']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=ori', 'http://www.ethnologue.com/show_language.asp?code=ori', 'http://www.ethnologue.com/show_language.asp?code=ori']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=ori']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['india', 'india', 'india']` - type: `<class 'list'>`
----> baseline_answer: `albania` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Orissa; Jharkhand, Singhbhum, Ranchi districts; Chhattisgarh, Raigarh, Raipur, Bastar districts; West Bengal, Medinipur (Midnapore) District; Assam; Andhra Pradesh, Vishakhapatnam District. Also in Bangladesh.', 'Orissa; Jharkhand, Singhbhum, Ranchi districts; Chhattisgarh, Raigarh, Raipur, Bastar districts; West Bengal, Medinipur (Midnapore) District; Assam; Andhra Pradesh, Vishakhapatnam District. Also in Bangladesh.', 'Orissa; Jharkhand, Singhbhum, Ranchi districts; Chhattisgarh, Raigarh, Raipur, Bastar districts; West Bengal, Medinipur (Midnapore) District; Assam; Andhra Pradesh, Vishakhapatnam District. Also in Bangladesh.']`
----> answers: `['Orissa; Jharkhand, Singhbhum, Ranchi districts; Chhattisgarh, Raigarh, Raipur, Bastar districts; West Bengal, Medinipur (Midnapore) District; Assam; Andhra Pradesh, Vishakhapatnam District. Also in Bangladesh.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['bangladesh', 'bangladesh', 'bangladesh|other']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['bangladesh', 'bangladesh', 'bangladesh|other']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5454545454545455, 0.0, 0.0, 0.0], 'select': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.11111111111111112, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
 = = = = = = = = = = = = starting new task: `Radiology Report Sentence Classification` = = = = = = = = = = = = 
First instance id: 32981
instance_id: 33220 <-> row_number: 239
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 239 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0]}
instance_id: 32989 <-> row_number: 8
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 8 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['abnormal', 'abnormal', 'abnormal', 'abnormal'], 'confidence1': ['SomewhatConfident', 'SomewhatConfident', 'VeryConfident', 'SomewhatConfident'], 'classification2': ['normal', 'normal', 'normal', 'normal'], 'classification3': ['normal', 'normal', 'normal', 'normal'], 'confidence2': ['VeryConfident', 'VeryConfident', 'VeryConfident', 'VeryConfident'], 'confidence3': ['VeryConfident', 'VeryConfident', 'VeryConfident', 'VeryConfident']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
Executing one action: self.actions.modify_radio('classification1', 'abnormal')
We are going to select this radio button: <input name="classification1" type="radio" value="abnormal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['abnormal']
 visible_values : ['abnormal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['abnormal', 'abnormal', 'abnormal', 'abnormal']` - type: `<class 'list'>`
----> baseline_answer: `abnormal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['SomewhatConfident', 'SomewhatConfident', 'VeryConfident', 'SomewhatConfident']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0]}
instance_id: 33258 <-> row_number: 277
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 277 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
Executing one action: self.actions.modify_radio('classification1', 'abnormal')
We are going to select this radio button: <input name="classification1" type="radio" value="abnormal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['abnormal']
 visible_values : ['abnormal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `abnormal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 33120 <-> row_number: 139
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 139 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
Executing one action: self.actions.modify_radio('classification1', 'abnormal')
We are going to select this radio button: <input name="classification1" type="radio" value="abnormal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['abnormal']
 visible_values : ['abnormal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `abnormal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33260 <-> row_number: 279
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 279 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
Executing one action: self.actions.modify_radio('classification1', 'abnormal')
We are going to select this radio button: <input name="classification1" type="radio" value="abnormal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
Executing one action: self.actions.modify_radio('confidence1', 'NotConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="NotConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['abnormal']
 visible_values : ['abnormal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['NotConfident']
 visible_values : ['NotConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `abnormal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `NotConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33118 <-> row_number: 137
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 137 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
Executing one action: self.actions.modify_radio('classification1', 'abnormal')
We are going to select this radio button: <input name="classification1" type="radio" value="abnormal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['abnormal']
 visible_values : ['abnormal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `abnormal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33293 <-> row_number: 312
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 312 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
Executing one action: self.actions.modify_radio('classification1', 'abnormal')
We are going to select this radio button: <input name="classification1" type="radio" value="abnormal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['abnormal']
 visible_values : ['abnormal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `abnormal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33119 <-> row_number: 138
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 138 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
Executing one action: self.actions.modify_radio('classification1', 'abnormal')
We are going to select this radio button: <input name="classification1" type="radio" value="abnormal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
Executing one action: self.actions.modify_radio('confidence1', 'NotConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="NotConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['abnormal']
 visible_values : ['abnormal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['NotConfident']
 visible_values : ['NotConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `abnormal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `NotConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33285 <-> row_number: 304
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 304 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
Executing one action: self.actions.modify_radio('classification1', 'abnormal')
We are going to select this radio button: <input name="classification1" type="radio" value="abnormal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
Executing one action: self.actions.modify_radio('confidence1', 'NotConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="NotConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['abnormal']
 visible_values : ['abnormal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['NotConfident']
 visible_values : ['NotConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `abnormal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `NotConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33186 <-> row_number: 205
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 205 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
Executing one action: self.actions.modify_radio('classification1', 'abnormal')
We are going to select this radio button: <input name="classification1" type="radio" value="abnormal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
Executing one action: self.actions.modify_radio('confidence1', 'NotConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="NotConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['abnormal']
 visible_values : ['abnormal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['NotConfident']
 visible_values : ['NotConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `abnormal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `NotConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33059 <-> row_number: 78
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 78 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['normal', 'normal', 'normal', 'normal'], 'confidence1': ['VeryConfident', 'SomewhatConfident', 'SomewhatConfident', 'VeryConfident'], 'classification2': ['abnormal', 'abnormal', 'abnormal', 'abnormal'], 'classification3': ['normal', 'normal', 'normal', 'normal'], 'confidence2': ['VeryConfident', 'VeryConfident', 'VeryConfident', 'VeryConfident'], 'confidence3': ['VeryConfident', 'VeryConfident', 'VeryConfident', 'VeryConfident']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
Executing one action: self.actions.modify_radio('classification1', 'abnormal')
We are going to select this radio button: <input name="classification1" type="radio" value="abnormal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['abnormal']
 visible_values : ['abnormal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['normal', 'normal', 'normal', 'normal']` - type: `<class 'list'>`
----> baseline_answer: `abnormal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['VeryConfident', 'SomewhatConfident', 'SomewhatConfident', 'VeryConfident']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]}
instance_id: 33373 <-> row_number: 392
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 392 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
Executing one action: self.actions.modify_radio('classification1', 'abnormal')
We are going to select this radio button: <input name="classification1" type="radio" value="abnormal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
Executing one action: self.actions.modify_radio('confidence1', 'NotConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="NotConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['abnormal']
 visible_values : ['abnormal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['NotConfident']
 visible_values : ['NotConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `abnormal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `NotConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 33152 <-> row_number: 171
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 171 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
Executing one action: self.actions.modify_radio('classification1', 'abnormal')
We are going to select this radio button: <input name="classification1" type="radio" value="abnormal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['abnormal']
 visible_values : ['abnormal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `abnormal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33354 <-> row_number: 373
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 373 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
Executing one action: self.actions.modify_radio('classification1', 'abnormal')
We are going to select this radio button: <input name="classification1" type="radio" value="abnormal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
Executing one action: self.actions.modify_radio('confidence1', 'NotConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="NotConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['abnormal']
 visible_values : ['abnormal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['NotConfident']
 visible_values : ['NotConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `abnormal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `NotConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33156 <-> row_number: 175
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 175 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33303 <-> row_number: 322
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 322 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', '', ''], 'confidence1': ['', '', '', '', ''], 'classification2': ['', '', '', '', ''], 'classification3': ['', '', '', '', ''], 'confidence2': ['', '', '', '', ''], 'confidence3': ['', '', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
Executing one action: self.actions.modify_radio('classification1', 'abnormal')
We are going to select this radio button: <input name="classification1" type="radio" value="abnormal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['abnormal']
 visible_values : ['abnormal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `abnormal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33217 <-> row_number: 236
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 236 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33299 <-> row_number: 318
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 318 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
Executing one action: self.actions.modify_radio('classification1', 'abnormal')
We are going to select this radio button: <input name="classification1" type="radio" value="abnormal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['abnormal']
 visible_values : ['abnormal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `abnormal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33038 <-> row_number: 57
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 57 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['normal', 'normal', 'normal', 'normal'], 'confidence1': ['VeryConfident', 'VeryConfident', 'VeryConfident', 'VeryConfident'], 'classification2': ['normal', 'normal', 'normal', 'normal'], 'classification3': ['abnormal', 'normal', 'abnormal', 'abnormal'], 'confidence2': ['VeryConfident', 'VeryConfident', 'VeryConfident', 'VeryConfident'], 'confidence3': ['VeryConfident', 'SomewhatConfident', 'VeryConfident', 'VeryConfident']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['normal', 'normal', 'normal', 'normal']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['VeryConfident', 'VeryConfident', 'VeryConfident', 'VeryConfident']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 1.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0]}
instance_id: 33279 <-> row_number: 298
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 298 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0]}
 = = = = = = = = = = = = starting new task: `Reddit In-group Analysis Comment annotation 3` = = = = = = = = = = = = 
First instance id: 33913
instance_id: 33977 <-> row_number: 64
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 64 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Likely'], 'option1': ['Highly likely', 'Highly likely', 'Likely'], 'option2': ['Highly likely', 'Highly likely', 'Likely'], 'option3': ['Highly likely', 'Highly likely', 'Highly likely'], 'option4': ['Highly likely', 'Highly likely', 'Likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
Executing one action: self.actions.modify_radio('option0', 'Likely')
We are going to select this radio button: <input type="radio" name="option0" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
Executing one action: self.actions.modify_radio('option1', 'Likely')
We are going to select this radio button: <input type="radio" name="option1" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
Executing one action: self.actions.modify_radio('option2', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option2" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
Executing one action: self.actions.modify_radio('option3', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option3" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
Executing one action: self.actions.modify_radio('option4', 'Likely')
We are going to select this radio button: <input type="radio" name="option4" value="Likely">
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.4
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 1.0, 0.0]}
instance_id: 33963 <-> row_number: 50
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 50 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Hard to tell'], 'option1': ['Highly likely', 'Highly likely', 'Likely'], 'option2': ['Highly likely', 'Highly likely', 'Likely'], 'option3': ['Highly likely', 'Highly likely', 'Likely'], 'option4': ['Highly likely', 'Highly likely', 'Likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
Executing one action: self.actions.modify_radio('option0', 'Likely')
We are going to select this radio button: <input type="radio" name="option0" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
Executing one action: self.actions.modify_radio('option1', 'Likely')
We are going to select this radio button: <input type="radio" name="option1" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
Executing one action: self.actions.modify_radio('option2', 'Likely')
We are going to select this radio button: <input type="radio" name="option2" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
Executing one action: self.actions.modify_radio('option3', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option3" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
Executing one action: self.actions.modify_radio('option4', 'Hard to tell')
We are going to select this radio button: <input type="radio" name="option4" value="Hard to tell">
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Hard to tell']
 visible_values : ['Hard to tell']
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Hard to tell']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Hard to tell` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.2
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]}
instance_id: 34003 <-> row_number: 90
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 90 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Highly likely'], 'option1': ['Highly likely', 'Highly likely', 'Highly likely'], 'option2': ['Highly likely', 'Highly likely', 'Highly likely'], 'option3': ['Hard to tell', 'Highly likely', 'Highly likely'], 'option4': ['Highly likely', 'Highly likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
Executing one action: self.actions.modify_radio('option0', 'Likely')
We are going to select this radio button: <input type="radio" name="option0" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
Executing one action: self.actions.modify_radio('option1', 'Unlikely')
We are going to select this radio button: <input type="radio" name="option1" value="Unlikely">
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
Executing one action: Based on the provided HTML structure and the image of the webpage, the input named "option2" is associated with a set of radio buttons describing the likelihood that the author of a comment is a man.

To modify this input with a specific value, I would need to know the value that should be assigned. Possible values based on the HTML and the screenshot are "Highly likely," "Likely," "Hard to tell," and "Unlikely." Please provide the specific value that should be selected for "option2."
Failed to execute an action Based on the provided HTML structure and the image of the webpage, the input named "option2" is associated with a set of radio buttons describing the likelihood that the author of a comment is a man.

To modify this input with a specific value, I would need to know the value that should be assigned. Possible values based on the HTML and the screenshot are "Highly likely," "Likely," "Hard to tell," and "Unlikely." Please provide the specific value that should be selected for "option2.", error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
Executing one action: self.actions.modify_radio('option3', 'Unlikely')
We are going to select this radio button: <input type="radio" name="option3" value="Unlikely">
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
Executing one action: self.actions.modify_radio('option4', 'Likely')
We are going to select this radio button: <input type="radio" name="option4" value="Likely">
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Unlikely']
 visible_values : ['Unlikely']
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Unlikely']
 visible_values : ['Unlikely']
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Unlikely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Hard to tell', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Unlikely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33927 <-> row_number: 14
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 14 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Likely'], 'option1': ['Hard to tell', 'Highly likely', 'Likely'], 'option2': ['Highly likely', 'Highly likely', 'Highly likely'], 'option3': ['Highly likely', 'Highly likely', 'Likely'], 'option4': ['Highly likely', 'Highly likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
Executing one action: self.actions.modify_radio('option0', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option0" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
Executing one action: self.actions.modify_radio('option1', 'Likely')
We are going to select this radio button: <input type="radio" name="option1" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
Executing one action: self.actions.modify_radio('option2', 'Likely')
We are going to select this radio button: <input type="radio" name="option2" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
Executing one action: self.actions.modify_radio('option3', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option3" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
Executing one action: self.actions.modify_radio('option4', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option4" value="Highly likely">
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Hard to tell', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.6
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0]}
instance_id: 33962 <-> row_number: 49
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 49 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Unlikely', 'Highly likely', 'Highly likely'], 'option1': ['Highly likely', 'Highly likely', 'Likely'], 'option2': ['Highly likely', 'Highly likely', 'Hard to tell'], 'option3': ['Highly likely', 'Highly likely', 'Highly likely'], 'option4': ['Highly likely', 'Highly likely', 'Likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
Executing one action: self.actions.modify_radio('option0', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option0" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
Executing one action: self.actions.modify_radio('option1', 'Likely')
We are going to select this radio button: <input type="radio" name="option1" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
Executing one action: self.actions.modify_radio('option2', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option2" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
Executing one action: self.actions.modify_radio('option3', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option3" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
Executing one action: self.actions.modify_radio('option4', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option4" value="Highly likely">
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Unlikely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Hard to tell']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.8
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0]}
instance_id: 33973 <-> row_number: 60
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 60 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Highly likely'], 'option1': ['Highly likely', 'Hard to tell', 'Highly likely'], 'option2': ['Highly likely', 'Highly likely', 'Likely'], 'option3': ['Highly likely', 'Highly likely', 'Likely'], 'option4': ['Highly likely', 'Highly likely', 'Likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
Executing one action: self.actions.modify_radio('option0', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option0" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
Executing one action: self.actions.modify_radio('option1', 'Likely')
We are going to select this radio button: <input type="radio" name="option1" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
Executing one action: self.actions.modify_radio('option2', 'Likely')
We are going to select this radio button: <input type="radio" name="option2" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
Executing one action: self.actions.modify_radio('option3', 'Likely')
We are going to select this radio button: <input type="radio" name="option3" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
Executing one action: self.actions.modify_radio('option4', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option4" value="Highly likely">
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Hard to tell', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.4
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0]}
instance_id: 34019 <-> row_number: 106
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 106 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Likely', 'Highly likely'], 'option1': ['Highly likely', 'Likely', 'Highly likely'], 'option2': ['Likely', 'Hard to tell', 'Highly likely'], 'option3': ['Likely', 'Highly likely', 'Highly likely'], 'option4': ['Highly likely', 'Likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
Executing one action: self.actions.modify_radio('option0', 'Likely')
We are going to select this radio button: <input type="radio" name="option0" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
Executing one action: self.actions.modify_radio('option1', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option1" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
Executing one action: self.actions.modify_radio('option2', 'Hard to tell')
We are going to select this radio button: <input type="radio" name="option2" value="Hard to tell">
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
Executing one action: self.actions.modify_radio('option3', 'Hard to tell')
We are going to select this radio button: <input type="radio" name="option3" value="Hard to tell">
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
Executing one action: self.actions.modify_radio('option4', 'Likely')
We are going to select this radio button: <input type="radio" name="option4" value="Likely">
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Hard to tell']
 visible_values : ['Hard to tell']
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Hard to tell']
 visible_values : ['Hard to tell']
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Likely', 'Hard to tell', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Hard to tell` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Hard to tell` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.2
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 33924 <-> row_number: 11
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 11 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Hard to tell'], 'option1': ['Highly likely', 'Highly likely', 'Highly likely'], 'option2': ['Highly likely', 'Highly likely', 'Highly likely'], 'option3': ['Hard to tell', 'Highly likely', 'Likely'], 'option4': ['Highly likely', 'Hard to tell', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
Executing one action: self.actions.modify_radio('option0', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option0" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
Executing one action: self.actions.modify_radio('option1', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option1" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
Executing one action: self.actions.modify_radio('option2', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option2" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
Executing one action: self.actions.modify_radio('option3', 'Likely')
We are going to select this radio button: <input type="radio" name="option3" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
Executing one action: self.actions.modify_radio('option4', 'Hard to tell')
We are going to select this radio button: <input type="radio" name="option4" value="Hard to tell">
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Hard to tell']
 visible_values : ['Hard to tell']
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Hard to tell']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Hard to tell', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Hard to tell', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Hard to tell` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.6
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0]}
instance_id: 34040 <-> row_number: 127
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 127 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Highly likely'], 'option1': ['Highly likely', 'Highly likely', 'Highly likely'], 'option2': ['Highly likely', 'Highly likely', 'Highly likely'], 'option3': ['Highly likely', 'Highly likely', 'Highly likely'], 'option4': ['Highly likely', 'Highly likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
Executing one action: self.actions.modify_radio('option0', 'Hard to tell')
We are going to select this radio button: <input type="radio" name="option0" value="Hard to tell">
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
Executing one action: self.actions.modify_radio('option1', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option1" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
Executing one action: self.actions.modify_radio('option2', 'Likely')
We are going to select this radio button: <input type="radio" name="option2" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
Executing one action: self.actions.modify_radio('option3', 'Likely')
We are going to select this radio button: <input type="radio" name="option3" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
Executing one action: self.actions.modify_radio('option4', 'Hard to tell')
We are going to select this radio button: <input type="radio" name="option4" value="Hard to tell">
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Hard to tell']
 visible_values : ['Hard to tell']
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Hard to tell']
 visible_values : ['Hard to tell']
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Hard to tell` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Hard to tell` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.2
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 33930 <-> row_number: 17
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 17 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Highly likely'], 'option1': ['Highly likely', 'Highly likely', 'Highly likely'], 'option2': ['Highly likely', 'Unlikely', 'Hard to tell'], 'option3': ['Highly likely', 'Highly likely', 'Highly likely'], 'option4': ['Highly likely', 'Highly likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
Executing one action: self.actions.modify_radio('option0', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option0" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
Executing one action: self.actions.modify_radio('option1', 'Likely')
We are going to select this radio button: <input type="radio" name="option1" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
Executing one action: self.actions.modify_radio('option2', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option2" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
Executing one action: self.actions.modify_radio('option3', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option3" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
Executing one action: self.actions.modify_radio('option4', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option4" value="Highly likely">
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Unlikely', 'Hard to tell']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.8
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0]}
instance_id: 33970 <-> row_number: 57
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 57 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Likely'], 'option1': ['Likely', 'Highly likely', 'Likely'], 'option2': ['Highly likely', 'Highly likely', 'Highly likely'], 'option3': ['Highly likely', 'Likely', 'Highly likely'], 'option4': ['Highly likely', 'Highly likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
Executing one action: self.actions.modify_radio('option0', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option0" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
Executing one action: self.actions.modify_radio('option1', 'Likely')
We are going to select this radio button: <input type="radio" name="option1" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
Executing one action: self.actions.modify_radio('option2', 'Likely')


Please provide the value you want to select for "option2" so that I can generate the appropriate command.
Failed to execute an action self.actions.modify_radio('option2', 'Likely')


Please provide the value you want to select for "option2" so that I can generate the appropriate command., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
Executing one action: self.actions.modify_radio('option3', 'Likely')
We are going to select this radio button: <input type="radio" name="option3" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
Executing one action: self.actions.modify_radio('option4', 'Likely')
We are going to select this radio button: <input type="radio" name="option4" value="Likely">
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : []
 visible_values : []
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.4
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 33993 <-> row_number: 80
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 80 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Likely', 'Likely', 'Likely'], 'option1': ['Highly likely', 'Likely', 'Highly likely'], 'option2': ['Highly likely', 'Likely', 'Highly likely'], 'option3': ['Highly likely', 'Likely', 'Highly likely'], 'option4': ['Highly likely', 'Likely', 'Likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
Executing one action: self.actions.modify_radio('option0', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option0" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
Executing one action: self.actions.modify_radio('option1', 'Likely')
We are going to select this radio button: <input type="radio" name="option1" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
Executing one action: self.actions.modify_radio('option2', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option2" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
Executing one action: self.actions.modify_radio('option3', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option3" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
Executing one action: self.actions.modify_radio('option4', 'Likely')
We are going to select this radio button: <input type="radio" name="option4" value="Likely">
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Likely', 'Likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.6
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0]}
instance_id: 33979 <-> row_number: 66
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 66 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Likely', 'Likely'], 'option1': ['Highly likely', 'Highly likely', 'Highly likely'], 'option2': ['Highly likely', 'Unlikely', 'Hard to tell'], 'option3': ['Highly likely', 'Likely', 'Likely'], 'option4': ['Highly likely', 'Likely', 'Unlikely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
Executing one action: self.actions.modify_radio('option0', 'Hard to tell')
We are going to select this radio button: <input type="radio" name="option0" value="Hard to tell">
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
Executing one action: self.actions.modify_radio('option1', 'Likely')
We are going to select this radio button: <input type="radio" name="option1" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
Executing one action: self.actions.modify_radio('option2', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option2" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
Executing one action: self.actions.modify_radio('option3', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option3" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
Executing one action: self.actions.modify_radio('option4', 'Likely')
We are going to select this radio button: <input type="radio" name="option4" value="Likely">
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Hard to tell']
 visible_values : ['Hard to tell']
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Hard to tell` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Unlikely', 'Hard to tell']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Unlikely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.2
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 33928 <-> row_number: 15
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 15 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Highly likely'], 'option1': ['Highly likely', 'Highly likely', 'Likely'], 'option2': ['Highly likely', 'Highly likely', 'Highly likely'], 'option3': ['Highly likely', 'Highly likely', 'Highly likely'], 'option4': ['Hard to tell', 'Highly likely', 'Likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
Executing one action: self.actions.modify_radio('option0', 'Likely')
We are going to select this radio button: <input type="radio" name="option0" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
Executing one action: self.actions.modify_radio('option1', 'Likely')
We are going to select this radio button: <input type="radio" name="option1" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
Executing one action: self.actions.modify_radio('option2', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option2" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
Executing one action: self.actions.modify_radio('option3', 'Likely')
We are going to select this radio button: <input type="radio" name="option3" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
Executing one action: self.actions.modify_radio('option4', 'Likely')
We are going to select this radio button: <input type="radio" name="option4" value="Likely">
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Hard to tell', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.2
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 33931 <-> row_number: 18
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 18 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Likely', 'Highly likely'], 'option1': ['Highly likely', 'Highly likely', 'Highly likely'], 'option2': ['Highly likely', 'Highly likely', 'Highly likely'], 'option3': ['Highly likely', 'Hard to tell', 'Highly likely'], 'option4': ['Highly likely', 'Likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
Executing one action: self.actions.modify_radio('option0', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option0" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
Executing one action: self.actions.modify_radio('option1', 'Likely')
We are going to select this radio button: <input type="radio" name="option1" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
Executing one action: self.actions.modify_radio('option2', 'Likely')
We are going to select this radio button: <input type="radio" name="option2" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
Executing one action: self.actions.modify_radio('option3', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option3" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
Executing one action: self.actions.modify_radio('option4', 'Likely')
We are going to select this radio button: <input type="radio" name="option4" value="Likely">
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Hard to tell', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.4
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0]}
instance_id: 34018 <-> row_number: 105
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 105 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Hard to tell', 'Likely'], 'option1': ['Highly likely', 'Likely', 'Likely'], 'option2': ['Highly likely', 'Unlikely', 'Likely'], 'option3': ['Highly likely', 'Likely', 'Highly likely'], 'option4': ['Highly likely', 'Hard to tell', 'Likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
Executing one action: self.actions.modify_radio('option0', 'Hard to tell')
We are going to select this radio button: <input type="radio" name="option0" value="Hard to tell">
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
Executing one action: self.actions.modify_radio('option1', 'Hard to tell')
We are going to select this radio button: <input type="radio" name="option1" value="Hard to tell">
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
Executing one action: self.actions.modify_radio('option2', 'Likely')
We are going to select this radio button: <input type="radio" name="option2" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
Executing one action: self.actions.modify_radio('option3', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option3" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
Executing one action: self.actions.modify_radio('option4', 'Likely')
We are going to select this radio button: <input type="radio" name="option4" value="Likely">
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Hard to tell']
 visible_values : ['Hard to tell']
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Hard to tell']
 visible_values : ['Hard to tell']
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Hard to tell', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Hard to tell` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Hard to tell` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Unlikely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Hard to tell', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.2
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]}
instance_id: 34077 <-> row_number: 164
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 164 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Hard to tell', 'Highly likely', 'Likely'], 'option1': ['Highly likely', 'Highly likely', 'Likely'], 'option2': ['Highly likely', 'Likely', 'Highly likely'], 'option3': ['Highly likely', 'Highly likely', 'Likely'], 'option4': ['Highly likely', 'Highly likely', 'Likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
Executing one action: self.actions.modify_radio('option0', 'Likely')
We are going to select this radio button: <input type="radio" name="option0" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
Executing one action: self.actions.modify_radio('option1', 'Likely')
We are going to select this radio button: <input type="radio" name="option1" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
Executing one action: self.actions.modify_radio('option2', 'Hard to tell')
We are going to select this radio button: <input type="radio" name="option2" value="Hard to tell">
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
Executing one action: self.actions.modify_radio('option3', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option3" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
Executing one action: self.actions.modify_radio('option4', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option4" value="Highly likely">
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Hard to tell']
 visible_values : ['Hard to tell']
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Hard to tell', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Hard to tell` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.4
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0]}
instance_id: 33983 <-> row_number: 70
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 70 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Highly likely'], 'option1': ['Highly likely', 'Highly likely', 'Highly likely'], 'option2': ['Highly likely', 'Likely', 'Likely'], 'option3': ['Highly likely', 'Highly likely', 'Highly likely'], 'option4': ['Highly likely', 'Highly likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
Executing one action: self.actions.modify_radio('option0', 'Likely')
We are going to select this radio button: <input type="radio" name="option0" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
Executing one action: self.actions.modify_radio('option1', 'Likely')
We are going to select this radio button: <input type="radio" name="option1" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
Executing one action: self.actions.modify_radio('option2', 'Likely')
We are going to select this radio button: <input type="radio" name="option2" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
Executing one action: self.actions.modify_radio('option3', 'Likely')
We are going to select this radio button: <input type="radio" name="option3" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
Executing one action: self.actions.modify_radio('option4', 'Likely')
We are going to select this radio button: <input type="radio" name="option4" value="Likely">
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.2
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 33941 <-> row_number: 28
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 28 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Hard to tell', 'Likely'], 'option1': ['Highly likely', 'Highly likely', 'Likely'], 'option2': ['Highly likely', 'Highly likely', 'Likely'], 'option3': ['Highly likely', 'Highly likely', 'Likely'], 'option4': ['Highly likely', 'Highly likely', 'Likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
Executing one action: self.actions.modify_radio('option0', 'Hard to tell')
We are going to select this radio button: <input type="radio" name="option0" value="Hard to tell">
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
Executing one action: self.actions.modify_radio('option1', 'Likely')
We are going to select this radio button: <input type="radio" name="option1" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
Executing one action: self.actions.modify_radio('option2', 'Likely')
We are going to select this radio button: <input type="radio" name="option2" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
Executing one action: self.actions.modify_radio('option3', 'Likely')
We are going to select this radio button: <input type="radio" name="option3" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
Executing one action: self.actions.modify_radio('option4', 'Likely')
We are going to select this radio button: <input type="radio" name="option4" value="Likely">
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Hard to tell']
 visible_values : ['Hard to tell']
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Hard to tell', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Hard to tell` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 34025 <-> row_number: 112
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 112 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Likely'], 'option1': ['Highly likely', 'Highly likely', 'Likely'], 'option2': ['Highly likely', 'Highly likely', 'Highly likely'], 'option3': ['Highly likely', 'Highly likely', 'Highly likely'], 'option4': ['Highly likely', 'Likely', 'Likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
Executing one action: self.actions.modify_radio('option0', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option0" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
Executing one action: self.actions.modify_radio('option1', 'Likely')
We are going to select this radio button: <input type="radio" name="option1" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
Executing one action: self.actions.modify_radio('option2', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option2" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
Executing one action: self.actions.modify_radio('option3', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option3" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
Executing one action: self.actions.modify_radio('option4', 'Unlikely')
We are going to select this radio button: <input type="radio" name="option4" value="Unlikely">
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Unlikely']
 visible_values : ['Unlikely']
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Unlikely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.6
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0]}
 = = = = = = = = = = = = starting new task: `Scalar Adjectives Identification` = = = = = = = = = = = = 
First instance id: 9463
instance_id: 9555 <-> row_number: 92
 --> inputs: ['pos_qual_ctrl_3', 'neg_qual_ctrl', 'adj_1', 'adj_2', 'adj_3', 'adj_4', 'pos_qual_ctrl_4', 'pos_qual_ctrl_5', 'adj_5', 'adj_6', 'pos_qual_ctrl_1', 'pos_qual_ctrl_2', 'adj_7', 'adj_8', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 92 of `input.csv` (unique inputs). 
 --> input labels: {'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'neg_qual_ctrl': ['Yes', 'No', 'No'], 'adj_1': ['No', 'No', 'No'], 'adj_2': ['No', 'Yes', 'No'], 'adj_3': ['No', 'No', 'No'], 'adj_4': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_5': ['No', 'No', 'No'], 'adj_6': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_2': ['Yes', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'adj_9': ['No', 'No', 'No'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
Executing one action: self.actions.modify_radio('adj_1', 'No')
We are going to select this radio button: <input type="radio" name="adj_1" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
Executing one action: self.actions.modify_radio('adj_2', 'No')
We are going to select this radio button: <input type="radio" name="adj_2" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
Executing one action: self.actions.modify_radio('adj_3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
Executing one action: self.actions.modify_radio('adj_4', 'No')
We are going to select this radio button: <input type="radio" name="adj_4" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
Executing one action: self.actions.modify_radio('adj_5', 'No')
We are going to select this radio button: <input type="radio" name="adj_5" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
Executing one action: self.actions.modify_radio('adj_6', 'No')
We are going to select this radio button: <input type="radio" name="adj_6" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
Executing one action: self.actions.modify_radio('adj_7', 'No')
We are going to select this radio button: <input type="radio" name="adj_7" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
Executing one action: self.actions.modify_radio('adj_8', 'No')

We are going to select this radio button: <input type="radio" name="adj_8" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
Executing one action: self.actions.modify_radio('adj_9', 'No')
We are going to select this radio button: <input type="radio" name="adj_9" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
Executing one action: self.actions.modify_radio('adj_10', 'No')
We are going to select this radio button: <input type="radio" name="adj_10" value="No">
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'Yes', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.875
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0]}
instance_id: 9468 <-> row_number: 5
 --> inputs: ['pos_qual_ctrl_4', 'adj_1', 'pos_qual_ctrl_1', 'pos_qual_ctrl_5', 'adj_2', 'adj_3', 'pos_qual_ctrl_2', 'neg_qual_ctrl', 'adj_4', 'adj_5', 'pos_qual_ctrl_3', 'adj_6', 'adj_7', 'adj_8', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 5 of `input.csv` (unique inputs). 
 --> input labels: {'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_1': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_5': ['Yes', 'No', 'No'], 'adj_2': ['No', 'Yes', 'No'], 'adj_3': ['No', 'Yes', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'neg_qual_ctrl': ['Yes', 'Yes', 'No'], 'adj_4': ['No', 'No', 'No'], 'adj_5': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'adj_9': ['No', 'No', 'No'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
Executing one action: self.actions.modify_radio('adj_1', 'No')

If you have a different specific modification in mind, please provide additional instructions.
Failed to execute an action self.actions.modify_radio('adj_1', 'No')

If you have a different specific modification in mind, please provide additional instructions., error: invalid syntax (<string>, line 3)
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
Executing one action: self.actions.modify_radio('adj_2', 'No')

We are going to select this radio button: <input type="radio" name="adj_2" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
Executing one action: self.actions.modify_radio('adj_3', 'Yes')


If "Yes" is not the correct option, you can replace 'Yes' with 'No' or 'Naa' according to the value you actually intend to set for that radio input.
Failed to execute an action self.actions.modify_radio('adj_3', 'Yes')


If "Yes" is not the correct option, you can replace 'Yes' with 'No' or 'Naa' according to the value you actually intend to set for that radio input., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
Executing one action: self.actions.modify_radio('adj_4', 'Yes')

If you wanted to set the value to "No," the command would be:
self.actions.modify_radio('adj_4', 'No')

If you wanted to set the value to "Not an adjective," the command would be:
self.actions.modify_radio('adj_4', 'Naa')

Please provide the specific value you would like to set for "adj_4" in order to generate an accurate command.
Failed to execute an action self.actions.modify_radio('adj_4', 'Yes')

If you wanted to set the value to "No," the command would be:
self.actions.modify_radio('adj_4', 'No')

If you wanted to set the value to "Not an adjective," the command would be:
self.actions.modify_radio('adj_4', 'Naa')

Please provide the specific value you would like to set for "adj_4" in order to generate an accurate command., error: invalid syntax (<string>, line 3)
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
Executing one action: self.actions.modify_radio('adj_5', 'No')
We are going to select this radio button: <input type="radio" name="adj_5" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
Executing one action: self.actions.modify_radio('adj_6', 'No')
We are going to select this radio button: <input type="radio" name="adj_6" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
Executing one action: self.actions.modify_radio('adj_7', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
Executing one action: self.actions.modify_radio('adj_8', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
Executing one action: self.actions.modify_radio('adj_9', 'Naa')


This assumes that the value 'Naa' is representative of the selection "Not an adjective" for the given adjective associated with "adj_9." If the desired choice is to mark the adjective as describing the attribute "nobility," or as not describing it but still being an adjective, the input value would need to be 'Yes' or 'No', respectively. The exact input value must match the value of the radio button in the HTML form.
Failed to execute an action self.actions.modify_radio('adj_9', 'Naa')


This assumes that the value 'Naa' is representative of the selection "Not an adjective" for the given adjective associated with "adj_9." If the desired choice is to mark the adjective as describing the attribute "nobility," or as not describing it but still being an adjective, the input value would need to be 'Yes' or 'No', respectively. The exact input value must match the value of the radio button in the HTML form., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
Executing one action: self.actions.modify_radio('adj_10', 'value_to_set')
The input value (`value_to_set`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_10', 'value_to_set'), error: 'NoneType' object has no attribute 'get_attribute'
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'Yes', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'Yes', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.4375
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 9534 <-> row_number: 71
 --> inputs: ['pos_qual_ctrl_1', 'pos_qual_ctrl_2', 'pos_qual_ctrl_5', 'adj_1', 'pos_qual_ctrl_4', 'adj_2', 'adj_3', 'adj_4', 'pos_qual_ctrl_3', 'adj_5', 'adj_6', 'adj_7', 'adj_8', 'adj_9', 'neg_qual_ctrl', 'adj_10']
 --> Looking up gold labels from row index 71 of `input.csv` (unique inputs). 
 --> input labels: {'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_1': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'No'], 'adj_4': ['Yes', 'No', 'Yes'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_5': ['No', 'No', 'No'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'adj_9': ['No', 'No', 'No'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')


Please provide the specific value to be selected so that I can generate an accurate command for you.
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')


Please provide the specific value to be selected so that I can generate an accurate command for you., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
Executing one action: To provide you with assistance, I need to know the value you would like to set for the input with the name "adj_1." The input appears to be a set of radio buttons with the options "Yes," "No," and "Not an adjective." Please specify the corresponding value you intend to select for the "adj_1" input.
Failed to execute an action To provide you with assistance, I need to know the value you would like to set for the input with the name "adj_1." The input appears to be a set of radio buttons with the options "Yes," "No," and "Not an adjective." Please specify the corresponding value you intend to select for the "adj_1" input., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
Executing one action: self.actions.modify_radio('adj_2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
Executing one action: self.actions.modify_radio('adj_3', 'Yes')
 

Please provide the intended value for "adj_3" based on the context of the task.
Failed to execute an action self.actions.modify_radio('adj_3', 'Yes')
 

Please provide the intended value for "adj_3" based on the context of the task., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
Executing one action: self.actions.modify_radio('adj_4', 'No')
We are going to select this radio button: <input type="radio" name="adj_4" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
Executing one action: self.actions.modify_radio('adj_5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
Executing one action: To assist with the task based on the provided HTML and image, I will need additional context or information about what the expected modification for the input with the name "adj_6" is. The image shows a list of adjectives with corresponding radio buttons for selection, but without further details, it is not clear which radio button should be selected for "adj_6". Please provide the modification that should be applied to "adj_6".
Failed to execute an action To assist with the task based on the provided HTML and image, I will need additional context or information about what the expected modification for the input with the name "adj_6" is. The image shows a list of adjectives with corresponding radio buttons for selection, but without further details, it is not clear which radio button should be selected for "adj_6". Please provide the modification that should be applied to "adj_6"., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
Executing one action: Based on the provided information and the screenshot, it appears that the HTML code includes a dynamically-generated set of radio buttons for each adjective along with names such as 'adj_1', 'adj_2', and so on, to determine if the given word is an adjective and whether it describes a certain attribute. The specified input name is "adj_7", which corresponds to the radio buttons for an adjective in the list.

However, from the screenshot and the HTML code provided, I am unable to determine what the correct value should be for the input 'adj_7'. The command requires both the input name and the desired value, which would typically be "Yes", "No", or "Naa" in this context, based on the user's judgement about whether the given word is an adjective that describes the specified attribute, if it's an adjective that does not describe the specified attribute, or if it's not an adjective at all.

Since I do not have the context to make a judgment about the specific adjective corresponding to 'adj_7', I cannot produce a valid command. If you can provide the word associated with 'adj_7' and how it relates to the attribute in question, I could generate the appropriate command.
Failed to execute an action Based on the provided information and the screenshot, it appears that the HTML code includes a dynamically-generated set of radio buttons for each adjective along with names such as 'adj_1', 'adj_2', and so on, to determine if the given word is an adjective and whether it describes a certain attribute. The specified input name is "adj_7", which corresponds to the radio buttons for an adjective in the list.

However, from the screenshot and the HTML code provided, I am unable to determine what the correct value should be for the input 'adj_7'. The command requires both the input name and the desired value, which would typically be "Yes", "No", or "Naa" in this context, based on the user's judgement about whether the given word is an adjective that describes the specified attribute, if it's an adjective that does not describe the specified attribute, or if it's not an adjective at all.

Since I do not have the context to make a judgment about the specific adjective corresponding to 'adj_7', I cannot produce a valid command. If you can provide the word associated with 'adj_7' and how it relates to the attribute in question, I could generate the appropriate command., error: unterminated string literal (detected at line 3) (<string>, line 3)
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
Executing one action: self.actions.modify_radio('adj_8', 'No')
We are going to select this radio button: <input type="radio" name="adj_8" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
Executing one action: self.actions.modify_radio('adj_9', 'No')


This command assumes that "conceivable" is not an appropriate adjective to describe the attribute of "kindness," based on its typical definition and usage. If the task requirements provided a different context or definition that aligned "conceivable" with "kindness," then the selected value could change accordingly.
Failed to execute an action self.actions.modify_radio('adj_9', 'No')


This command assumes that "conceivable" is not an appropriate adjective to describe the attribute of "kindness," based on its typical definition and usage. If the task requirements provided a different context or definition that aligned "conceivable" with "kindness," then the selected value could change accordingly., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
Executing one action: self.actions.modify_radio('adj_10', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_10" value="Yes" required="">
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'No', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.375
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0]}
instance_id: 9472 <-> row_number: 9
 --> inputs: ['adj_1', 'pos_qual_ctrl_4', 'adj_2', 'pos_qual_ctrl_2', 'adj_3', 'adj_4', 'pos_qual_ctrl_5', 'adj_5', 'neg_qual_ctrl', 'adj_6', 'pos_qual_ctrl_1', 'pos_qual_ctrl_3', 'adj_7', 'adj_8', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 9 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_2': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'adj_3': ['No', 'No', 'No'], 'adj_4': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_5': ['No', 'No', 'No'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'adj_6': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'adj_9': ['No', 'No', 'No'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
Executing one action: self.actions.modify_radio('adj_1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
Executing one action: self.actions.modify_radio('adj_2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
Executing one action: It seems that you want to generate a command for a radio button input with the name "adj_3." However, to generate an appropriate command to modify it, I need to know the value that should be set for this radio button input. Once you provide me with the desired value ("Yes", "No", or "Not an adjective"), I can generate the correct command for you.
Failed to execute an action It seems that you want to generate a command for a radio button input with the name "adj_3." However, to generate an appropriate command to modify it, I need to know the value that should be set for this radio button input. Once you provide me with the desired value ("Yes", "No", or "Not an adjective"), I can generate the correct command for you., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
Executing one action: self.actions.modify_radio('adj_4', 'Yes')


For "No":


self.actions.modify_radio('adj_4', 'No')


And for "Not an adjective":


self.actions.modify_radio('adj_4', 'Naa')


Please specify which option you'd like to select.
Failed to execute an action self.actions.modify_radio('adj_4', 'Yes')


For "No":


self.actions.modify_radio('adj_4', 'No')


And for "Not an adjective":


self.actions.modify_radio('adj_4', 'Naa')


Please specify which option you'd like to select., error: unterminated string literal (detected at line 16) (<string>, line 16)
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')


To select "No":
plaintext
self.actions.modify_radio('pos_qual_ctrl_5', 'No')


To select "Not an adjective":
plaintext
self.actions.modify_radio('pos_qual_ctrl_5', 'Naa')


Please provide the specific value you wish to set for the "pos_qual_ctrl_5" input if you need the exact command.
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')


To select "No":
plaintext
self.actions.modify_radio('pos_qual_ctrl_5', 'No')


To select "Not an adjective":
plaintext
self.actions.modify_radio('pos_qual_ctrl_5', 'Naa')


Please provide the specific value you wish to set for the "pos_qual_ctrl_5" input if you need the exact command., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
Executing one action: self.actions.modify_radio('adj_5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
Executing one action: To provide a command, I need to know the desired value to modify the `adj_6` radio button group to. The possible options are "Yes", "No", or "Not an adjective" (which seems to be represented as "Naa" in the HTML). Please provide the value you wish to set for the `adj_6` input.
Failed to execute an action To provide a command, I need to know the desired value to modify the `adj_6` radio button group to. The possible options are "Yes", "No", or "Not an adjective" (which seems to be represented as "Naa" in the HTML). Please provide the value you wish to set for the `adj_6` input., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
Executing one action: self.actions.modify_radio('adj_7', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
Executing one action: self.actions.modify_radio('adj_8', 'No')
We are going to select this radio button: <input type="radio" name="adj_8" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
Executing one action: self.actions.modify_radio('adj_9', 'No')


This command will check the "No" option for the radio input associated with "adj_9," which corresponds to the term "monochrome."
Failed to execute an action self.actions.modify_radio('adj_9', 'No')


This command will check the "No" option for the radio input associated with "adj_9," which corresponds to the term "monochrome.", error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
Executing one action: self.actions.modify_radio('adj_10', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.375
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 9596 <-> row_number: 133
 --> inputs: ['adj_1', 'adj_2', 'pos_qual_ctrl_4', 'pos_qual_ctrl_1', 'adj_3', 'pos_qual_ctrl_2', 'adj_4', 'adj_5', 'adj_6', 'adj_7', 'adj_8', 'adj_9', 'pos_qual_ctrl_3', 'neg_qual_ctrl', 'pos_qual_ctrl_5', 'adj_10']
 --> Looking up gold labels from row index 133 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'adj_2': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'adj_3': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'adj_4': ['No', 'No', 'No'], 'adj_5': ['No', 'Yes', 'Yes'], 'adj_6': ['No', 'Naa', 'No'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['Yes', 'No', 'No'], 'adj_9': ['No', 'Yes', 'No'], 'pos_qual_ctrl_3': ['No', 'Yes', 'Yes'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
Executing one action: To provide a command for modifying the input named "adj_1", I would need to know the desired value to set for this input. The image shows a series of radio buttons for different adjectives related to the attribute "niceness", but it's not clear which specific value (Yes, No, Not an adjective) is to be selected for "adj_1". Please provide the value to set for "adj_1", so I can generate the appropriate command.
Failed to execute an action To provide a command for modifying the input named "adj_1", I would need to know the desired value to set for this input. The image shows a series of radio buttons for different adjectives related to the attribute "niceness", but it's not clear which specific value (Yes, No, Not an adjective) is to be selected for "adj_1". Please provide the value to set for "adj_1", so I can generate the appropriate command., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
Executing one action: self.actions.modify_radio('adj_2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')


If the value should be "No", the command would be:
plaintext
self.actions.modify_radio('pos_qual_ctrl_1', 'No')


And if it should be set to "Not an adjective", the command would be:
plaintext
self.actions.modify_radio('pos_qual_ctrl_1', 'Naa')
 

Please specify the value so that the correct command can be provided.
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')


If the value should be "No", the command would be:
plaintext
self.actions.modify_radio('pos_qual_ctrl_1', 'No')


And if it should be set to "Not an adjective", the command would be:
plaintext
self.actions.modify_radio('pos_qual_ctrl_1', 'Naa')
 

Please specify the value so that the correct command can be provided., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
Executing one action: Based on the information provided, it seems that you are looking to generate a command to modify a radio input type associated with the name `adj_3`. However, from the HTML snippet and the screenshot, there's no clear value that should be selected for the radio button with the name `adj_3`. The values associated with each radio button are "Yes," "No," and "Naa," which likely stands for “Not an adjective." It's necessary to know which value should be set for the `adj_3` input to generate the appropriate command.

Without the specific value to be set, I cannot generate a precise command. If you provide the desired value (e.g., "Yes," "No," or "Naa") for the `adj_3` radio button, I can then generate the appropriate command.
Failed to execute an action Based on the information provided, it seems that you are looking to generate a command to modify a radio input type associated with the name `adj_3`. However, from the HTML snippet and the screenshot, there's no clear value that should be selected for the radio button with the name `adj_3`. The values associated with each radio button are "Yes," "No," and "Naa," which likely stands for “Not an adjective." It's necessary to know which value should be set for the `adj_3` input to generate the appropriate command.

Without the specific value to be set, I cannot generate a precise command. If you provide the desired value (e.g., "Yes," "No," or "Naa") for the `adj_3` radio button, I can then generate the appropriate command., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
Executing one action: self.actions.modify_radio('adj_4', 'No')
We are going to select this radio button: <input type="radio" name="adj_4" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
Executing one action: Based on the provided HTML code and the screenshot, it is not clear what the specific value is that needs to be selected for the input with the name "adj_5". The command needs to specify what value to select for the "adj_5" input. If you could provide the value you want to set for "adj_5", I can generate the appropriate command.
Failed to execute an action Based on the provided HTML code and the screenshot, it is not clear what the specific value is that needs to be selected for the input with the name "adj_5". The command needs to specify what value to select for the "adj_5" input. If you could provide the value you want to set for "adj_5", I can generate the appropriate command., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
Executing one action: self.actions.modify_radio('adj_6', 'No')
We are going to select this radio button: <input type="radio" name="adj_6" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
Executing one action: self.actions.modify_radio('adj_7', 'No')
We are going to select this radio button: <input type="radio" name="adj_7" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
Executing one action: self.actions.modify_radio('adj_8', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_8" value="Naa">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
Executing one action: self.actions.modify_radio('adj_9', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_9" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', input_value)
 

Please provide me with the correct value to modify the radio input for "pos_qual_ctrl_3."
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_3', input_value)
 

Please provide me with the correct value to modify the radio input for "pos_qual_ctrl_3.", error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
Executing one action: self.actions.modify_radio('adj_10', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_10" value="Yes" required="">
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'Naa', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'Yes', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.4375
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0]}
instance_id: 9506 <-> row_number: 43
 --> inputs: ['adj_1', 'adj_2', 'pos_qual_ctrl_1', 'adj_3', 'adj_4', 'pos_qual_ctrl_4', 'pos_qual_ctrl_5', 'adj_5', 'adj_6', 'adj_7', 'adj_8', 'neg_qual_ctrl', 'adj_9', 'pos_qual_ctrl_3', 'pos_qual_ctrl_2', 'adj_10']
 --> Looking up gold labels from row index 43 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'adj_2': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'adj_3': ['No', 'No', 'No'], 'adj_4': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_5': ['No', 'No', 'No'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'adj_9': ['No', 'Naa', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
Executing one action: To modify the input with the name 'adj_1', I need to know what value you would like to set for it. The value should correspond to the options available for that input which are "Yes", "No", or "Not an adjective". Please provide the value to use for the 'adj_1' input.
Failed to execute an action To modify the input with the name 'adj_1', I need to know what value you would like to set for it. The value should correspond to the options available for that input which are "Yes", "No", or "Not an adjective". Please provide the value to use for the 'adj_1' input., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
Executing one action: self.actions.modify_radio('adj_2', 'No')

We are going to select this radio button: <input type="radio" name="adj_2" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes') // Assuming "Yes" is the correct answer


Replace 'Yes' with 'No' or 'Naa' as appropriate for
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_1', 'Yes') // Assuming "Yes" is the correct answer


Replace 'Yes' with 'No' or 'Naa' as appropriate for, error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
Executing one action: self.actions.modify_radio('adj_3', 'No')
We are going to select this radio button: <input type="radio" name="adj_3" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
Executing one action: self.actions.modify_radio('adj_4', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', '<appropriate_value_here>')


Replace `<appropriate_value_here>` with "Yes," "No," or "Naa" based on the required value for this input.
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_4', '<appropriate_value_here>')


Replace `<appropriate_value_here>` with "Yes," "No," or "Naa" based on the required value for this input., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
Executing one action: self.actions.modify_radio('adj_5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
Executing one action: self.actions.modify_radio('adj_6', 'No')


Please ensure the input_value reflects the appropriate choice based on the context of the task.
Failed to execute an action self.actions.modify_radio('adj_6', 'No')


Please ensure the input_value reflects the appropriate choice based on the context of the task., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
Executing one action: self.actions.modify_radio('adj_7', 'Yes')`

- If "adj_7" should be marked as "No" (The word is an adjective BUT does not describe the attribute):
  `self.actions.modify_radio('adj_7', 'No')`

- If "adj_7" should be marked as "Not an adjective" (The word is not an adjective):
  `self.actions.modify_radio('adj_7', 'Naa')`

Please provide the specific value you need to set so that an appropriate command can be generated.
Failed to execute an action self.actions.modify_radio('adj_7', 'Yes')`

- If "adj_7" should be marked as "No" (The word is an adjective BUT does not describe the attribute):
  `self.actions.modify_radio('adj_7', 'No')`

- If "adj_7" should be marked as "Not an adjective" (The word is not an adjective):
  `self.actions.modify_radio('adj_7', 'Naa')`

Please provide the specific value you need to set so that an appropriate command can be generated., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
Executing one action: Based on the information provided in the HTML code and the screenshot of the webpage, it appears that the user is expected to choose whether each word in a given list of adjectives (in blue) can describe the attribute "niceness" (in red). One of the words in the list is paired with the input name "adj_8", but the desired value to which the input should be modified is not specified.

In order to provide a command, I would need to know what value you want to set for the radio button input with the name "adj_8". Options typically include "Yes" if the adjective describes "niceness", "No" if it's an adjective that does not describe "niceness", or "Naa" if it is not an adjective.

If you could please provide the desired option for the input named "adj_8", I could then form the correct command to modify the selection.
Failed to execute an action Based on the information provided in the HTML code and the screenshot of the webpage, it appears that the user is expected to choose whether each word in a given list of adjectives (in blue) can describe the attribute "niceness" (in red). One of the words in the list is paired with the input name "adj_8", but the desired value to which the input should be modified is not specified.

In order to provide a command, I would need to know what value you want to set for the radio button input with the name "adj_8". Options typically include "Yes" if the adjective describes "niceness", "No" if it's an adjective that does not describe "niceness", or "Naa" if it is not an adjective.

If you could please provide the desired option for the input named "adj_8", I could then form the correct command to modify the selection., error: unterminated string literal (detected at line 3) (<string>, line 3)
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
Executing one action: self.actions.modify_radio('adj_9', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_9" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
Executing one action: self.actions.modify_radio('adj_10', 'No')
We are going to select this radio button: <input type="radio" name="adj_10" value="No">
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'Naa', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.4375
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0]}
instance_id: 9600 <-> row_number: 137
 --> inputs: ['neg_qual_ctrl', 'adj_1', 'adj_2', 'pos_qual_ctrl_1', 'adj_3', 'adj_4', 'adj_5', 'adj_6', 'pos_qual_ctrl_2', 'adj_7', 'pos_qual_ctrl_4', 'pos_qual_ctrl_5', 'adj_8', 'pos_qual_ctrl_3', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 137 of `input.csv` (unique inputs). 
 --> input labels: {'neg_qual_ctrl': ['No', 'No', 'No'], 'adj_1': ['No', 'No', 'No'], 'adj_2': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'adj_3': ['No', 'No', 'No'], 'adj_4': ['No', 'Yes', 'No'], 'adj_5': ['No', 'No', 'No'], 'adj_6': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['No', 'Yes', 'Yes'], 'adj_7': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_5': ['No', 'Yes', 'Yes'], 'adj_8': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_9': ['No', 'No', 'No'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
Executing one action: Based on the information provided, it appears that "friendly" is the first adjective in the provided list that corresponds to the input name "adj_1". However, I do not see any pre-selected value for "friendly", and hence cannot generate a command based on the selection that should be made.

If you can provide the appropriate value for "adj_1" that you wish to select, such as "Yes", "No", or "Not an adjective" in connection to the attribute "utility", I can generate the correct command for you.
Failed to execute an action Based on the information provided, it appears that "friendly" is the first adjective in the provided list that corresponds to the input name "adj_1". However, I do not see any pre-selected value for "friendly", and hence cannot generate a command based on the selection that should be made.

If you can provide the appropriate value for "adj_1" that you wish to select, such as "Yes", "No", or "Not an adjective" in connection to the attribute "utility", I can generate the correct command for you., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
Executing one action: Based on the HTML provided and the screenshot of the webpage, it looks like the input 'adj_2' refers to a radio button group where the user is supposed to select whether a given adjective describes a certain attribute ('utility' in this case), does not describe it, or is not an adjective.

To generate a command to modify this input, I would need additional information: the value you wish to set for the 'adj_2' input. The valid values in this circumstance are "Yes," "No," or "Naa" for not an adjective. If you provide me with the desired value, I can generate the appropriate command.

In the absence of explicit instruction on which value to select, one cannot produce a command. If this were a real task, the user would read the definition and examples provided for the attribute 'utility' and decide which value to choose for 'adj_2' based on this context. 

If you provide me with the desired value, please use the format Yes/No/Naa so I can generate the correct command.
Failed to execute an action Based on the HTML provided and the screenshot of the webpage, it looks like the input 'adj_2' refers to a radio button group where the user is supposed to select whether a given adjective describes a certain attribute ('utility' in this case), does not describe it, or is not an adjective.

To generate a command to modify this input, I would need additional information: the value you wish to set for the 'adj_2' input. The valid values in this circumstance are "Yes," "No," or "Naa" for not an adjective. If you provide me with the desired value, I can generate the appropriate command.

In the absence of explicit instruction on which value to select, one cannot produce a command. If this were a real task, the user would read the definition and examples provided for the attribute 'utility' and decide which value to choose for 'adj_2' based on this context. 

If you provide me with the desired value, please use the format Yes/No/Naa so I can generate the correct command., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
Executing one action: Based on the HTML and the screenshot provided, it appears that the input named "pos_qual_ctrl_1" refers to radio buttons where the user must select one of the options "Yes", "No", or "Not an adjective". The form requires respondents to mark whether certain adjectives can describe the given attribute "utility", which is defined as "the quality of being of practical use." Without specific instructions on which option to select for the input "pos_qual_ctrl_1", I cannot generate a meaningful command. Please provide the desired value for the input "pos_qual_ctrl_1" ("Yes", "No", or "Not an adjective") so that I can generate the appropriate command.
Failed to execute an action Based on the HTML and the screenshot provided, it appears that the input named "pos_qual_ctrl_1" refers to radio buttons where the user must select one of the options "Yes", "No", or "Not an adjective". The form requires respondents to mark whether certain adjectives can describe the given attribute "utility", which is defined as "the quality of being of practical use." Without specific instructions on which option to select for the input "pos_qual_ctrl_1", I cannot generate a meaningful command. Please provide the desired value for the input "pos_qual_ctrl_1" ("Yes", "No", or "Not an adjective") so that I can generate the appropriate command., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
Executing one action: self.actions.modify_radio('adj_3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
Executing one action: self.actions.modify_radio('adj_4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
Executing one action: self.actions.modify_radio`.

Assuming you wish to set a particular value to this input, we would need to know the value you want to set. If, for example, you wanted to set it to "Yes", the command would look something like:

python
self.actions.modify_radio('adj_5', 'Yes')


Replace 'Yes' with 'No' or 'Naa' as needed based on the value you're aiming to set for this input radio button.
Failed to execute an action self.actions.modify_radio`.

Assuming you wish to set a particular value to this input, we would need to know the value you want to set. If, for example, you wanted to set it to "Yes", the command would look something like:

python
self.actions.modify_radio('adj_5', 'Yes')


Replace 'Yes' with 'No' or 'Naa' as needed based on the value you're aiming to set for this input radio button., error: unterminated string literal (detected at line 9) (<string>, line 9)
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
Executing one action: self.actions.modify_radio('adj_6', 'No')
We are going to select this radio button: <input type="radio" name="adj_6" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
Executing one action: Based on the HTML provided and the visual representation of the form in the screenshot, it appears "pos_qual_ctrl_2" is the name of a radio button input group. However, the correct value to select for this input is not specified in the task instructions. In order to generate a command, I need the intended value for this input, which should be one of the following options: "Yes" (The word is an adjective AND describes utility), "No" (The word is an adjective BUT does not describe utility), or "Not an adjective" (The word is not an adjective).

Please provide the value you want to select for "pos_qual_ctrl_2", and I will generate the appropriate command.
Failed to execute an action Based on the HTML provided and the visual representation of the form in the screenshot, it appears "pos_qual_ctrl_2" is the name of a radio button input group. However, the correct value to select for this input is not specified in the task instructions. In order to generate a command, I need the intended value for this input, which should be one of the following options: "Yes" (The word is an adjective AND describes utility), "No" (The word is an adjective BUT does not describe utility), or "Not an adjective" (The word is not an adjective).

Please provide the value you want to select for "pos_qual_ctrl_2", and I will generate the appropriate command., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
Executing one action: self.actions.modify_radio('adj_7', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_7" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', '[input_value]')


Please replace `[input_value]` with "Yes", "No", or "Naa" based on the desired selection for "pos_qual_ctrl_4".
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_4', '[input_value]')


Please replace `[input_value]` with "Yes", "No", or "Naa" based on the desired selection for "pos_qual_ctrl_4"., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
Executing one action: Based on the provided HTML code and the screenshot, it appears that the input name "pos_qual_ctrl_5" relates to a series of radio buttons where a participant is supposed to evaluate whether a given word is an adjective that describes the attribute "utility", is an adjective but does not describe "utility", or is not an adjective at all.

Unfortunately, the screenshot does not show which word corresponds to the input name "pos_qual_ctrl_5". Without this information, I cannot provide a specific command to select an option. If you could specify which word "pos_qual_ctrl_5" corresponds to and whether it should be marked as "Yes", "No", or "Not an adjective", I could then provide the accurate command using the appropriate method.
Failed to execute an action Based on the provided HTML code and the screenshot, it appears that the input name "pos_qual_ctrl_5" relates to a series of radio buttons where a participant is supposed to evaluate whether a given word is an adjective that describes the attribute "utility", is an adjective but does not describe "utility", or is not an adjective at all.

Unfortunately, the screenshot does not show which word corresponds to the input name "pos_qual_ctrl_5". Without this information, I cannot provide a specific command to select an option. If you could specify which word "pos_qual_ctrl_5" corresponds to and whether it should be marked as "Yes", "No", or "Not an adjective", I could then provide the accurate command using the appropriate method., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
Executing one action: self.actions.modify_radio('adj_8', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_8" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
Executing one action: self.actions.modify_radio('adj_9', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
Executing one action: self.actions.modify_radio('adj_10', 'input_value')


You would replace 'input_value' with "Yes" if the word is an adjective and describes "utility", with "No" if the word is an adjective but does not describe "utility", or with "Naa" if the word is not an adjective.
Failed to execute an action self.actions.modify_radio('adj_10', 'input_value')


You would replace 'input_value' with "Yes" if the word is an adjective and describes "utility", with "No" if the word is an adjective but does not describe "utility", or with "Naa" if the word is not an adjective., error: invalid syntax (<string>, line 4)
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'Yes', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.1875
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 9559 <-> row_number: 96
 --> inputs: ['adj_1', 'pos_qual_ctrl_3', 'pos_qual_ctrl_1', 'neg_qual_ctrl', 'pos_qual_ctrl_2', 'adj_2', 'adj_3', 'pos_qual_ctrl_4', 'pos_qual_ctrl_5', 'adj_4', 'adj_5', 'adj_6', 'adj_7', 'adj_8', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 96 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['No', 'Yes', 'No'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_4': ['No', 'No', 'No'], 'adj_5': ['No', 'No', 'No'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'adj_9': ['No', 'No', 'No'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
Executing one action: self.actions.modify_radio('adj_1', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
Executing one action: Based on the given HTML code and screenshot, it appears that there are radio buttons corresponding to different words, where the user is supposed to select whether the word is an adjective that describes a given attribute ("Yes"), is an adjective but does not describe the attribute ("No"), or is not an adjective at all ("Not an adjective"). However, the input value that should be modified for "adj_2" is not provided.

Please provide the correct value ("Yes", "No", or "Naa") for the radio button input named "adj_2" that you would like to modify, and I will generate the appropriate command.
Failed to execute an action Based on the given HTML code and screenshot, it appears that there are radio buttons corresponding to different words, where the user is supposed to select whether the word is an adjective that describes a given attribute ("Yes"), is an adjective but does not describe the attribute ("No"), or is not an adjective at all ("Not an adjective"). However, the input value that should be modified for "adj_2" is not provided.

Please provide the correct value ("Yes", "No", or "Naa") for the radio button input named "adj_2" that you would like to modify, and I will generate the appropriate command., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
Executing one action: self.actions.modify_radio('adj_3', 'No')
We are going to select this radio button: <input type="radio" name="adj_3" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
Executing one action: self.actions.modify_radio('adj_4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
Executing one action: Based on the provided screenshot and HTML content, it is clear that the task involves selecting radio buttons to categorise adjectives based on whether they describe a particular attribute—in this case, 'naturalness'—and whether they are adjectives at all.

To generate the command, I would need to know the value you wish to set for the input with the name 'adj_5'. There are three options for each adjective: "Yes", "No", and "Not an adjective". Please provide the intended value for 'adj_5' so that I can generate the appropriate command.
Failed to execute an action Based on the provided screenshot and HTML content, it is clear that the task involves selecting radio buttons to categorise adjectives based on whether they describe a particular attribute—in this case, 'naturalness'—and whether they are adjectives at all.

To generate the command, I would need to know the value you wish to set for the input with the name 'adj_5'. There are three options for each adjective: "Yes", "No", and "Not an adjective". Please provide the intended value for 'adj_5' so that I can generate the appropriate command., error: invalid character '—' (U+2014) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
Executing one action: To provide the appropriate command, I would need to know what value to modify for the input named "adj_6". The screenshot provides context for the webpage, showing a list of adjectives with radio button options to categorize them in relation to the attribute "naturalness".

However, from the available information, I do not have a specified value to set for the input "adj_6". If you could tell me which option to choose from (Yes, No, Not an adjective), I could then provide you with the correct command to modify that input.
Failed to execute an action To provide the appropriate command, I would need to know what value to modify for the input named "adj_6". The screenshot provides context for the webpage, showing a list of adjectives with radio button options to categorize them in relation to the attribute "naturalness".

However, from the available information, I do not have a specified value to set for the input "adj_6". If you could tell me which option to choose from (Yes, No, Not an adjective), I could then provide you with the correct command to modify that input., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
Executing one action: self.actions.modify_radio('adj_7', 'No')
We are going to select this radio button: <input type="radio" name="adj_7" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
Executing one action: self.actions.modify_radio('adj_8', 'Yes')


2. If "potent" is an adjective BUT does not describe "naturalness":
python
self.actions.modify_radio('adj_8', 'No')


3. If "potent" is not an adjective:
python
self.actions.modify_radio('adj_8', 'Naa')


In a real-world setting, you would decide based on the context given in the task which of these commands
Failed to execute an action self.actions.modify_radio('adj_8', 'Yes')


2. If "potent" is an adjective BUT does not describe "naturalness":
python
self.actions.modify_radio('adj_8', 'No')


3. If "potent" is not an adjective:
python
self.actions.modify_radio('adj_8', 'Naa')


In a real-world setting, you would decide based on the context given in the task which of these commands, error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
Executing one action: self.actions.modify_radio('adj_9', 'No')
We are going to select this radio button: <input type="radio" name="adj_9" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
Executing one action: self.actions.modify_radio('adj_10', 'Yes')


If the intended selection is different, please specify the desired value for the radio button ('Yes', 'No', or 'Naa'), and I can generate the corresponding command.
Failed to execute an action self.actions.modify_radio('adj_10', 'Yes')


If the intended selection is different, please specify the desired value for the radio button ('Yes', 'No', or 'Naa'), and I can generate the corresponding command., error: invalid syntax (<string>, line 4)
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'Yes', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0]}
instance_id: 9536 <-> row_number: 73
 --> inputs: ['adj_1', 'adj_2', 'neg_qual_ctrl', 'adj_3', 'adj_4', 'pos_qual_ctrl_1', 'pos_qual_ctrl_2', 'adj_5', 'pos_qual_ctrl_5', 'adj_6', 'adj_7', 'adj_8', 'pos_qual_ctrl_3', 'adj_9', 'pos_qual_ctrl_4', 'adj_10']
 --> Looking up gold labels from row index 73 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['Yes', 'No', 'No'], 'adj_2': ['No', 'No', 'No'], 'neg_qual_ctrl': ['Yes', 'Yes', 'Yes'], 'adj_3': ['No', 'No', 'No'], 'adj_4': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'No'], 'adj_5': ['Yes', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_9': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
Executing one action: self.actions.modify_radio('adj_1', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
Executing one action: self.actions.modify_radio('adj_2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
Executing one action: self.actions.modify_radio('adj_3', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
Executing one action: self.actions.modify_radio('adj_4', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_4" value="Naa">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
Executing one action: self.actions.modify_radio('adj_5', 'No')
We are going to select this radio button: <input type="radio" name="adj_5" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')


If you had provided the exact word associated with "pos_qual_ctrl_5" and the decision for "Yes," "No," or "
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')


If you had provided the exact word associated with "pos_qual_ctrl_5" and the decision for "Yes," "No," or ", error: unterminated string literal (detected at line 4) (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
Executing one action: self.actions.modify_radio('adj_6', 'No')
We are going to select this radio button: <input type="radio" name="adj_6" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
Executing one action: self.actions.modify_radio('adj_7', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_7" value="Naa">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
Executing one action: self.actions.modify_radio('adj_8', 'No')
We are going to select this radio button: <input type="radio" name="adj_8" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
Executing one action: Based on the screenshot provided and the HTML code given, I am not able to determine the exact value to modify for the input name "adj_9." If you could provide more context on how the input "adj_9" should be modified (for example, which radio button option should be selected: "Yes," "No," or "Not an adjective"), then I could generate the appropriate command to modify the HTML page.
Failed to execute an action Based on the screenshot provided and the HTML code given, I am not able to determine the exact value to modify for the input name "adj_9." If you could provide more context on how the input "adj_9" should be modified (for example, which radio button option should be selected: "Yes," "No," or "Not an adjective"), then I could generate the appropriate command to modify the HTML page., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
Executing one action: self.actions.modify_radio('adj_10', 'No')
We are going to select this radio button: <input type="radio" name="adj_10" value="No">
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0]}
instance_id: 9465 <-> row_number: 2
 --> inputs: ['adj_1', 'adj_2', 'adj_3', 'pos_qual_ctrl_5', 'adj_4', 'adj_5', 'pos_qual_ctrl_4', 'pos_qual_ctrl_2', 'pos_qual_ctrl_1', 'adj_6', 'neg_qual_ctrl', 'pos_qual_ctrl_3', 'adj_7', 'adj_8', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 2 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_4': ['No', 'No', 'No'], 'adj_5': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'adj_6': ['No', 'No', 'No'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'adj_9': ['No', 'No', 'No'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
Executing one action: self.actions.modify_radio('adj_1', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_1" value="Naa">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
Executing one action: self.actions.modify_radio('adj_2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
Executing one action: self.actions.modify_radio('adj_3', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_3" value="Naa">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
Executing one action: self.actions.modify_radio('adj_4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
Executing one action: self.actions.modify_radio('adj_5', 'No')
We are going to select this radio button: <input type="radio" name="adj_5" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
Executing one action: self.actions.modify_radio('adj_6', 'No')
We are going to select this radio button: <input type="radio" name="adj_6" value="No">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
Executing one action: self.actions.modify_radio('adj_7', 'No')
We are going to select this radio button: <input type="radio" name="adj_7" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
Executing one action: self.actions.modify_radio('adj_8', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
Executing one action: self.actions.modify_radio('adj_9', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_9" value="Naa">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
Executing one action: self.actions.modify_radio('adj_10', 'No')
We are going to select this radio button: <input type="radio" name="adj_10" value="No">
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.625
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0]}
instance_id: 9626 <-> row_number: 163
 --> inputs: ['pos_qual_ctrl_3', 'adj_1', 'neg_qual_ctrl', 'adj_2', 'adj_3', 'pos_qual_ctrl_1', 'adj_4', 'adj_5', 'adj_6', 'adj_7', 'adj_8', 'pos_qual_ctrl_4', 'pos_qual_ctrl_5', 'pos_qual_ctrl_2', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 163 of `input.csv` (unique inputs). 
 --> input labels: {'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_1': ['No', 'No', 'Naa'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'adj_4': ['No', 'No', 'Yes'], 'adj_5': ['No', 'No', 'No'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'No', 'Yes'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'adj_9': ['No', 'No', 'No'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
Executing one action: self.actions.modify_radio('adj_1', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
Executing one action: self.actions.modify_radio('adj_2', 'No')
We are going to select this radio button: <input type="radio" name="adj_2" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
Executing one action: Based on the provided HTML code and the screenshot of the webpage, it appears that the input name "adj_3" corresponds to a radio group with options "Yes", "No", or "Not an adjective", which are designed to allow the user to select whether the given word is an adjective that describes the specified attribute or not.

In order to generate a command to modify this specific radio button selection, you will need to provide me with the value you'd like to select ("Yes", "No", or "Naa" for "Not an adjective"). Once I have this information, I can generate the proper command from the provided list of valid commands. 

Please provide the value you would like to be selected for the radio button group with the input name "adj_3".
Failed to execute an action Based on the provided HTML code and the screenshot of the webpage, it appears that the input name "adj_3" corresponds to a radio group with options "Yes", "No", or "Not an adjective", which are designed to allow the user to select whether the given word is an adjective that describes the specified attribute or not.

In order to generate a command to modify this specific radio button selection, you will need to provide me with the value you'd like to select ("Yes", "No", or "Naa" for "Not an adjective"). Once I have this information, I can generate the proper command from the provided list of valid commands. 

Please provide the value you would like to be selected for the radio button group with the input name "adj_3"., error: unterminated string literal (detected at line 3) (<string>, line 3)
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
Executing one action: self.actions.modify_radio('adj_4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
Executing one action: self.actions.modify_radio('adj_5', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_5" value="Naa">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
Executing one action: self.actions.modify_radio('adj_6', 'No')
We are going to select this radio button: <input type="radio" name="adj_6" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
Executing one action: self.actions.modify_radio('adj_7', 'No')
We are going to select this radio button: <input type="radio" name="adj_7" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
Executing one action: self.actions.modify_radio('adj_8', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'No')

We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
Executing one action: self.actions.modify_radio('adj_9', 'No')
We are going to select this radio button: <input type="radio" name="adj_9" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
Executing one action: self.actions.modify_radio('adj_10', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_10" value="Yes" required="">
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'Naa']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'No', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.5625
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0]}
instance_id: 9493 <-> row_number: 30
 --> inputs: ['adj_1', 'adj_2', 'pos_qual_ctrl_1', 'pos_qual_ctrl_3', 'neg_qual_ctrl', 'adj_3', 'adj_4', 'adj_5', 'pos_qual_ctrl_2', 'pos_qual_ctrl_4', 'adj_6', 'adj_7', 'pos_qual_ctrl_5', 'adj_8', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 30 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'adj_2': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['No', 'Yes', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'No'], 'adj_4': ['No', 'No', 'No'], 'adj_5': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'No'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_8': ['No', 'No', 'No'], 'adj_9': ['No', 'No', 'No'], 'adj_10': ['No', 'No', 'Yes']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
Executing one action: self.actions.modify_radio('adj_1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
Executing one action: Based on the information provided, to provide a command to modify the input with name "adj_2", I would need to know the value you want to set for this input. The input named "adj_2" is a radio button group with three options: "Yes", "No", and "Not an adjective". Please provide the value you want to assign to this input so that I can generate the appropriate command.
Failed to execute an action Based on the information provided, to provide a command to modify the input with name "adj_2", I would need to know the value you want to set for this input. The input named "adj_2" is a radio button group with three options: "Yes", "No", and "Not an adjective". Please provide the value you want to assign to this input so that I can generate the appropriate command., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
Executing one action: self.actions.modify_radio('adj_3', 'No')
We are going to select this radio button: <input type="radio" name="adj_3" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
Executing one action: self.actions.modify_radio('adj_4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
Executing one action: self.actions.modify_radio('adj_5', 'No')
We are going to select this radio button: <input type="radio" name="adj_5" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
Executing one action: self.actions.modify_radio('input_name', 'input_value')


For example, if the desired value for "pos_qual_ctrl_2" is "Yes", the command would be:

plaintext
self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')


Please provide the value you wish to set for "pos_qual_ctrl_2" in order to generate the correct command.
Failed to execute an action self.actions.modify_radio('input_name', 'input_value')


For example, if the desired value for "pos_qual_ctrl_2" is "Yes", the command would be:

plaintext
self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')


Please provide the value you wish to set for "pos_qual_ctrl_2" in order to generate the correct command., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
Executing one action: self.actions.modify_radio('adj_6', 'No')
We are going to select this radio button: <input type="radio" name="adj_6" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
Executing one action: self.actions.modify_radio('adj_7', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
Executing one action: Based on the screenshot provided, it appears that the input name "adj_8" is for a radio button group where a user is supposed to select whether a certain word is an adjective that describes "modernity", is an adjective but does not describe "modernity", or is not an adjective at all.

However, without knowing which option you would like to select for "adj_8," I cannot provide a specific command. Please provide the value you intend to set for "adj_8" (either "Yes", "No", or "Naa"), and I can generate the appropriate command for you.
Failed to execute an action Based on the screenshot provided, it appears that the input name "adj_8" is for a radio button group where a user is supposed to select whether a certain word is an adjective that describes "modernity", is an adjective but does not describe "modernity", or is not an adjective at all.

However, without knowing which option you would like to select for "adj_8," I cannot provide a specific command. Please provide the value you intend to set for "adj_8" (either "Yes", "No", or "Naa"), and I can generate the appropriate command for you., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
Executing one action: self.actions.modify_radio('adj_9', 'No')
We are going to select this radio button: <input type="radio" name="adj_9" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
Executing one action: self.actions.modify_radio('adj_10', 'No')
We are going to select this radio button: <input type="radio" name="adj_10" value="No">
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'Yes', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.5625
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0]}
instance_id: 9537 <-> row_number: 74
 --> inputs: ['adj_1', 'pos_qual_ctrl_4', 'neg_qual_ctrl', 'adj_2', 'adj_3', 'adj_4', 'adj_5', 'pos_qual_ctrl_2', 'adj_6', 'pos_qual_ctrl_3', 'adj_7', 'pos_qual_ctrl_5', 'adj_8', 'adj_9', 'pos_qual_ctrl_1', 'adj_10']
 --> Looking up gold labels from row index 74 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'neg_qual_ctrl': ['Yes', 'Yes', 'Yes'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'No'], 'adj_4': ['No', 'No', 'No'], 'adj_5': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'No'], 'adj_6': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_7': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_8': ['No', 'No', 'No'], 'adj_9': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
Executing one action: self.actions.modify_radio('adj_1', 'Yes')


If you provide the specific value for 'adj_1', I can generate the correct command to modify it.
Failed to execute an action self.actions.modify_radio('adj_1', 'Yes')


If you provide the specific value for 'adj_1', I can generate the correct command to modify it., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
Executing one action: self.actions.modify_radio('adj_2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
Executing one action: self.actions.modify_radio('adj_3', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
Executing one action: self.actions.modify_radio('adj_4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
Executing one action: self.actions.modify_radio('adj_5', 'No')
We are going to select this radio button: <input type="radio" name="adj_5" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
Executing one action: self.actions.modify_radio('adj_6', 'No')
We are going to select this radio button: <input type="radio" name="adj_6" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')


If the value is instead "No" or "Not an adjective", replace 'Yes' with the appropriate choice. If you provide the specific value you want to set for "pos_qual_ctrl_3", I can generate the specific command you need.
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')


If the value is instead "No" or "Not an adjective", replace 'Yes' with the appropriate choice. If you provide the specific value you want to set for "pos_qual_ctrl_3", I can generate the specific command you need., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
Executing one action: Based on the information provided in the HTML and the image, to modify the input with the name "adj_7," I will need additional context on what modification is to be made. The input "adj_7" is related to a radio button selection for a word in a list related to the attribute "hue." The options for each word are "Yes," "No," and "Not an adjective." Without the specific choice to be made for "adj_7," I cannot generate a command.

Please provide the desired value ("Yes," "No," or "Not an adjective") that should be selected for the input with the name "adj_7."
Failed to execute an action Based on the information provided in the HTML and the image, to modify the input with the name "adj_7," I will need additional context on what modification is to be made. The input "adj_7" is related to a radio button selection for a word in a list related to the attribute "hue." The options for each word are "Yes," "No," and "Not an adjective." Without the specific choice to be made for "adj_7," I cannot generate a command.

Please provide the desired value ("Yes," "No," or "Not an adjective") that should be selected for the input with the name "adj_7.", error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')


If the intention was to select "No" or "Not an adjective" instead, you would adjust the 'input_value' parameter accordingly. However, without additional context or a specific choice to select, it's not possible to provide a definite command.
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')


If the intention was to select "No" or "Not an adjective" instead, you would adjust the 'input_value' parameter accordingly. However, without additional context or a specific choice to select, it's not possible to provide a definite command., error: unterminated string literal (detected at line 4) (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
Executing one action: self.actions.modify_radio('adj_8', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
Executing one action: self.actions.modify_radio('adj_9', 'input_value')


Please provide the specific value that "adj_9" should be set to so I can output the precise command.
Failed to execute an action self.actions.modify_radio('adj_9', 'input_value')


Please provide the specific value that "adj_9" should be set to so I can output the precise command., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
Executing one action: self.actions.modify_radio('input_name', 'input_value')


Replace 'input_name' with the actual name of the radio button input (in this case, 'adj_10') and 'input_value' with the chosen value among "Yes," "No," or "Not an adjective" (represented as 'Yes', 'No', 'Naa' in HTML).

For example, if one were to select "No" for 'adj_10', the command would be:

plaintext
self.actions.modify_radio('adj_10', 'No')


Unfortunately, the specific value to be set for 'adj_10' has not
Failed to execute an action self.actions.modify_radio('input_name', 'input_value')


Replace 'input_name' with the actual name of the radio button input (in this case, 'adj_10') and 'input_value' with the chosen value among "Yes," "No," or "Not an adjective" (represented as 'Yes', 'No', 'Naa' in HTML).

For example, if one were to select "No" for 'adj_10', the command would be:

plaintext
self.actions.modify_radio('adj_10', 'No')


Unfortunately, the specific value to be set for 'adj_10' has not, error: invalid syntax (<string>, line 4)
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.3125
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]}
instance_id: 9544 <-> row_number: 81
 --> inputs: ['adj_1', 'adj_2', 'adj_3', 'pos_qual_ctrl_2', 'adj_4', 'neg_qual_ctrl', 'adj_5', 'adj_6', 'adj_7', 'pos_qual_ctrl_5', 'pos_qual_ctrl_1', 'pos_qual_ctrl_4', 'adj_8', 'pos_qual_ctrl_3', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 81 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'adj_4': ['No', 'No', 'No'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'adj_5': ['No', 'No', 'No'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'Naa'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_8': ['No', 'No', 'Naa'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_9': ['No', 'No', 'No'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
Executing one action: self.actions.modify_radio('adj_1', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
Executing one action: self.actions.modify_radio('adj_2', 'No')
We are going to select this radio button: <input type="radio" name="adj_2" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
Executing one action: self.actions.modify_radio('adj_3', 'No')
We are going to select this radio button: <input type="radio" name="adj_3" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
Executing one action: self.actions.modify_radio('adj_4', 'No')
We are going to select this radio button: <input type="radio" name="adj_4" value="No">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
Executing one action: self.actions.modify_radio('adj_5', 'No')
We are going to select this radio button: <input type="radio" name="adj_5" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
Executing one action: self.actions.modify_radio('adj_6', 'No')
We are going to select this radio button: <input type="radio" name="adj_6" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
Executing one action: self.actions.modify_radio('adj_7', 'No')
We are going to select this radio button: <input type="radio" name="adj_7" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
Executing one action: self.actions.modify_radio('adj_8', 'Yes')


Assuming you would like to select "No," the command would then be:

plaintext
self.actions.modify_radio('adj_8', 'No')


And if it were to select "Not an adjective," you would use:

plaintext
self.actions.modify_radio('adj_8', 'Naa')


Please specify the value you wish to set for "adj_8."
Failed to execute an action self.actions.modify_radio('adj_8', 'Yes')


Assuming you would like to select "No," the command would then be:

plaintext
self.actions.modify_radio('adj_8', 'No')


And if it were to select "Not an adjective," you would use:

plaintext
self.actions.modify_radio('adj_8', 'Naa')


Please specify the value you wish to set for "adj_8.", error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
Executing one action: self.actions.modify_radio('adj_9', 'input_value')


Please provide the value for 'input_value' based on the adjective that corresponds to 'adj_9' so I can generate the accurate command for you.
Failed to execute an action self.actions.modify_radio('adj_9', 'input_value')


Please provide the value for 'input_value' based on the adjective that corresponds to 'adj_9' so I can generate the accurate command for you., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
Executing one action: self.actions.modify_radio('adj_10', 'No')
We are going to select this radio button: <input type="radio" name="adj_10" value="No">
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'Naa']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'Naa']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.8125
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0]}
instance_id: 9477 <-> row_number: 14
 --> inputs: ['pos_qual_ctrl_1', 'pos_qual_ctrl_2', 'adj_1', 'pos_qual_ctrl_3', 'adj_2', 'pos_qual_ctrl_5', 'adj_3', 'adj_4', 'adj_5', 'pos_qual_ctrl_4', 'adj_6', 'adj_7', 'neg_qual_ctrl', 'adj_8', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 14 of `input.csv` (unique inputs). 
 --> input labels: {'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'No'], 'adj_1': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_2': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_3': ['No', 'No', 'No'], 'adj_4': ['No', 'No', 'No'], 'adj_5': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'adj_9': ['No', 'No', 'No'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
Executing one action: self.actions.modify_radio('adj_1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
Executing one action: self.actions.modify_radio('adj_2', 'No')
We are going to select this radio button: <input type="radio" name="adj_2" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
Executing one action: self.actions.modify_radio('adj_3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
Executing one action: self.actions.modify_radio('adj_4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
Executing one action: self.actions.modify_radio('adj_5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')


Note that if the correct value is "No" or "Not an adjective", you'd replace 'Yes' in the command with the correct option.
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')


Note that if the correct value is "No" or "Not an adjective", you'd replace 'Yes' in the command with the correct option., error: unterminated string literal (detected at line 4) (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
Executing one action: self.actions.modify_radio('adj_6', 'No')
We are going to select this radio button: <input type="radio" name="adj_6" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
Executing one action: self.actions.modify_radio('adj_7', 'No')
We are going to select this radio button: <input type="radio" name="adj_7" value="No">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
Executing one action: self.actions.modify_radio('adj_8', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_8" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
Executing one action: self.actions.modify_radio('adj_9', 'No')
We are going to select this radio button: <input type="radio" name="adj_9" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
Executing one action: self.actions.modify_radio('adj_10', 'No')
We are going to select this radio button: <input type="radio" name="adj_10" value="No">
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.625
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0]}
instance_id: 9492 <-> row_number: 29
 --> inputs: ['neg_qual_ctrl', 'pos_qual_ctrl_2', 'pos_qual_ctrl_3', 'adj_1', 'adj_2', 'adj_3', 'adj_4', 'adj_5', 'pos_qual_ctrl_1', 'adj_6', 'adj_7', 'adj_8', 'adj_9', 'pos_qual_ctrl_5', 'pos_qual_ctrl_4', 'adj_10']
 --> Looking up gold labels from row index 29 of `input.csv` (unique inputs). 
 --> input labels: {'neg_qual_ctrl': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_1': ['Yes', 'Yes', 'No'], 'adj_2': ['No', 'Naa', 'No'], 'adj_3': ['No', 'No', 'No'], 'adj_4': ['No', 'No', 'No'], 'adj_5': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'adj_9': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
Executing one action: self.actions.modify_radio('adj_1', 'Yes')

If you need it set to "No" or "Not an adjective", just replace 'Yes' with the appropriate value in the command above.
Failed to execute an action self.actions.modify_radio('adj_1', 'Yes')

If you need it set to "No" or "Not an adjective", just replace 'Yes' with the appropriate value in the command above., error: invalid syntax (<string>, line 3)
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
Executing one action: Based on the provided HTML structure and the screenshot showing the input name "adj_2" associated with the attribute "fidelity", it appears that the corresponding input type is a radio button with options "Yes", "No", and "Not an adjective". To generate a command to modify this input, I need to know which value you want to set for "adj_2". Please provide the chosen option for "adj_2" so that I can supply the correct command.
Failed to execute an action Based on the provided HTML structure and the screenshot showing the input name "adj_2" associated with the attribute "fidelity", it appears that the corresponding input type is a radio button with options "Yes", "No", and "Not an adjective". To generate a command to modify this input, I need to know which value you want to set for "adj_2". Please provide the chosen option for "adj_2" so that I can supply the correct command., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
Executing one action: self.actions.modify_radio('adj_3', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
Executing one action: self.actions.modify_radio('adj_4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
Executing one action: Based on the provided HTML code and the screenshot, it appears that "adj_5" corresponds to an adjective that needs to be classified as either describing fidelity ("Yes"), not describing fidelity ("No"), or being not an adjective ("Naa"). However, without the exact word that "adj_5" represents, I cannot provide the specific command. If you can provide the word associated with "adj_5", I can then give you the appropriate modifying command.
Failed to execute an action Based on the provided HTML code and the screenshot, it appears that "adj_5" corresponds to an adjective that needs to be classified as either describing fidelity ("Yes"), not describing fidelity ("No"), or being not an adjective ("Naa"). However, without the exact word that "adj_5" represents, I cannot provide the specific command. If you can provide the word associated with "adj_5", I can then give you the appropriate modifying command., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
Error getting action from GPT4V model Error code: 400 - {'error': {'message': "You uploaded an unsupported image. Please make sure your image is below 20 MB in size and is of one the following formats: ['png', 'jpeg', 'gif', 'webp'].", 'type': 'invalid_request_error', 'param': None, 'code': 'sanitizer_server_error'}}, trying again, current fail_count is 1
Executing one action: self.actions.modify_radio('adj_6', 'No')
We are going to select this radio button: <input type="radio" name="adj_6" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
Executing one action: Based on the provided HTML code and the screenshot of the webpage, it seems we need to generate a command to modify a radio input with the name `adj_7`. However, the provided information does not specify what value should be set for this input. Typically, for a task like this, the value would be 'Yes', 'No', or 'Not an adjective', corresponding to options in the radio input field. 

Please provide the value you wish to set for the radio button named "adj_7".
Failed to execute an action Based on the provided HTML code and the screenshot of the webpage, it seems we need to generate a command to modify a radio input with the name `adj_7`. However, the provided information does not specify what value should be set for this input. Typically, for a task like this, the value would be 'Yes', 'No', or 'Not an adjective', corresponding to options in the radio input field. 

Please provide the value you wish to set for the radio button named "adj_7"., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
Executing one action: self.actions.modify_radio('adj_8', 'No')
We are going to select this radio button: <input type="radio" name="adj_8" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
Executing one action: self.actions.modify_radio('adj_9', 'No')
We are going to select this radio button: <input type="radio" name="adj_9" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
Executing one action: self.actions.modify_radio('adj_10', 'No')
We are going to select this radio button: <input type="radio" name="adj_10" value="No">
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'Naa', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0]}
instance_id: 9576 <-> row_number: 113
 --> inputs: ['pos_qual_ctrl_5', 'adj_1', 'neg_qual_ctrl', 'adj_2', 'pos_qual_ctrl_1', 'adj_3', 'adj_4', 'adj_5', 'adj_6', 'pos_qual_ctrl_4', 'adj_7', 'adj_8', 'pos_qual_ctrl_2', 'adj_9', 'pos_qual_ctrl_3', 'adj_10']
 --> Looking up gold labels from row index 113 of `input.csv` (unique inputs). 
 --> input labels: {'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_1': ['No', 'No', 'No'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'adj_2': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'adj_3': ['No', 'Naa', 'No'], 'adj_4': ['No', 'No', 'No'], 'adj_5': ['No', 'No', 'No'], 'adj_6': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'No'], 'adj_9': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
Executing one action: self.actions.modify_radio('adj_1', 'Yes')


Please provide the desired value ("Yes", "No", or "Not an adjective") for "adj_1" so that I can generate the correct command.
Failed to execute an action self.actions.modify_radio('adj_1', 'Yes')


Please provide the desired value ("Yes", "No", or "Not an adjective") for "adj_1" so that I can generate the correct command., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
Executing one action: Based on the screenshot provided and the corresponding HTML code snippet, it appears that the input name "adj_2" refers to a radio group with three options to determine if a word is an adjective and whether it describes "modernity." To output a valid command, I will need to know which of the three options (Yes, No, Not an adjective) you would like to select for that input. Once you provide that information, I can generate the appropriate command from the list of valid commands. Could you please specify the value you want to set for the input "adj_2"?
Failed to execute an action Based on the screenshot provided and the corresponding HTML code snippet, it appears that the input name "adj_2" refers to a radio group with three options to determine if a word is an adjective and whether it describes "modernity." To output a valid command, I will need to know which of the three options (Yes, No, Not an adjective) you would like to select for that input. Once you provide that information, I can generate the appropriate command from the list of valid commands. Could you please specify the value you want to set for the input "adj_2"?, error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
Executing one action: self.actions.modify_radio('adj_3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
Executing one action: self.actions.modify_radio('adj_4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
Executing one action: Based on the provided HTML and image, there are no visible input elements associated with the input name "adj_5". I cannot generate a valid command to modify an input without the correct context or information on what type of input "adj_5" refers to (e.g., text, checkbox, radio, select, range). If "adj_5" refers to a radio button group as seen in the image for similar adjective inputs, please provide the value that "adj_5" needs to be set to, so that I can generate the appropriate command.
Failed to execute an action Based on the provided HTML and image, there are no visible input elements associated with the input name "adj_5". I cannot generate a valid command to modify an input without the correct context or information on what type of input "adj_5" refers to (e.g., text, checkbox, radio, select, range). If "adj_5" refers to a radio button group as seen in the image for similar adjective inputs, please provide the value that "adj_5" needs to be set to, so that I can generate the appropriate command., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
Executing one action: self.actions.modify_radio('adj_6', 'No')
We are going to select this radio button: <input type="radio" name="adj_6" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
Executing one action: self.actions.modify_radio('adj_7', 'No')
We are going to select this radio button: <input type="radio" name="adj_7" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
Executing one action: self.actions.modify_radio('adj_8', 'No')
We are going to select this radio button: <input type="radio" name="adj_8" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
Executing one action: Based on the given HTML code and the task description shown in the screenshot, the input name "adj_9" corresponds to an adjective that needs to be evaluated against the attribute "modernity." However, the HTML provided does not indicate the specific adjective associated with the input name "adj_9", nor does it show whether the value should be "Yes," "No," or "Not an adjective." Without additional context or the value that should be set for "adj_9," I cannot generate an accurate command. Please provide the adjective associated with "adj_9" and the correct evaluation ("Yes," "No," or "Not an adjective") for that adjective in relation to the attribute "modernity."
Failed to execute an action Based on the given HTML code and the task description shown in the screenshot, the input name "adj_9" corresponds to an adjective that needs to be evaluated against the attribute "modernity." However, the HTML provided does not indicate the specific adjective associated with the input name "adj_9", nor does it show whether the value should be "Yes," "No," or "Not an adjective." Without additional context or the value that should be set for "adj_9," I cannot generate an accurate command. Please provide the adjective associated with "adj_9" and the correct evaluation ("Yes," "No," or "Not an adjective") for that adjective in relation to the attribute "modernity.", error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
Executing one action: self.actions.modify_radio('adj_10', 'No')
We are going to select this radio button: <input type="radio" name="adj_10" value="No">
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'Naa', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.625
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0]}
instance_id: 9558 <-> row_number: 95
 --> inputs: ['adj_1', 'adj_2', 'adj_3', 'pos_qual_ctrl_3', 'adj_4', 'pos_qual_ctrl_5', 'adj_5', 'pos_qual_ctrl_2', 'pos_qual_ctrl_1', 'pos_qual_ctrl_4', 'adj_6', 'adj_7', 'neg_qual_ctrl', 'adj_8', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 95 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_4': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_5': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_1': ['No', 'No', 'Yes'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'adj_9': ['No', 'No', 'No'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
Executing one action: self.actions.modify_radio('adj_1', 'Yes')


Please provide the value you want to set for 'adj_1'.
Failed to execute an action self.actions.modify_radio('adj_1', 'Yes')


Please provide the value you want to set for 'adj_1'., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
Executing one action: self.actions.modify_radio('adj_2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
Executing one action: self.actions.modify_radio('adj_3', 'Yes')  # Replace 'Yes' with 'No' or 'Naa' as needed.

Please provide the specific value you want to set for the "adj_3" input.
Failed to execute an action self.actions.modify_radio('adj_3', 'Yes')  # Replace 'Yes' with 'No' or 'Naa' as needed.

Please provide the specific value you want to set for the "adj_3" input., error: invalid syntax (<string>, line 3)
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
Executing one action: self.actions.modify_radio('adj_4', 'No')
We are going to select this radio button: <input type="radio" name="adj_4" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
Executing one action: self.actions.modify_radio('adj_5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'VALUE_TO_BE_SET')


Replace 'VALUE_TO_BE_SET' with the appropriate value you have determined from the context you are working with ("Yes", "No", or "Not an adjective"). If there is no specific value to be set and it is left to my discretion, then you would need to provide guidance on which value to choose. Since I do not have that context, I cannot make that selection.
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_1', 'VALUE_TO_BE_SET')


Replace 'VALUE_TO_BE_SET' with the appropriate value you have determined from the context you are working with ("Yes", "No", or "Not an adjective"). If there is no specific value to be set and it is left to my discretion, then you would need to provide guidance on which value to choose. Since I do not have that context, I cannot make that selection., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
Executing one action: self.actions.modify_radio('adj_6', 'No')
We are going to select this radio button: <input type="radio" name="adj_6" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
Executing one action: self.actions.modify_radio('adj_7', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
Executing one action: self.actions.modify_radio('adj_8', 'No')
We are going to select this radio button: <input type="radio" name="adj_8" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
Executing one action: self.actions.modify_radio('adj_9', 'No')


But in case an image or additional context suggests a different value should be selected for "adj_9", the input_value in the command should be updated accordingly.
Failed to execute an action self.actions.modify_radio('adj_9', 'No')


But in case an image or additional context suggests a different value should be selected for "adj_9", the input_value in the command should be updated accordingly., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
Executing one action: Based on the provided HTML snippet and the screenshot of the web page, it looks like "adj_10" refers to a radio button group for the word "plentiful" which asks the user to select whether the word is an adjective that describes the attribute "thickness," an adjective that does not describe "thickness," or not an adjective at all. However, since there is no value specified in the request for which radio button should be selected (Yes, No, or Not an adjective), I am unable to provide the exact command.

Please provide the value (Yes, No, or Not an adjective) that should be set for the input "adj_10", and I can generate the appropriate command to modify that input.
Failed to execute an action Based on the provided HTML snippet and the screenshot of the web page, it looks like "adj_10" refers to a radio button group for the word "plentiful" which asks the user to select whether the word is an adjective that describes the attribute "thickness," an adjective that does not describe "thickness," or not an adjective at all. However, since there is no value specified in the request for which radio button should be selected (Yes, No, or Not an adjective), I am unable to provide the exact command.

Please provide the value (Yes, No, or Not an adjective) that should be set for the input "adj_10", and I can generate the appropriate command to modify that input., error: invalid syntax (<string>, line 1)
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0]}
instance_id: 9530 <-> row_number: 67
 --> inputs: ['pos_qual_ctrl_4', 'adj_1', 'adj_2', 'pos_qual_ctrl_2', 'adj_3', 'adj_4', 'pos_qual_ctrl_3', 'adj_5', 'pos_qual_ctrl_1', 'pos_qual_ctrl_5', 'adj_6', 'adj_7', 'adj_8', 'neg_qual_ctrl', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 67 of `input.csv` (unique inputs). 
 --> input labels: {'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_1': ['No', 'No', 'No'], 'adj_2': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'adj_3': ['No', 'No', 'No'], 'adj_4': ['No', 'No', 'Naa'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_5': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'adj_9': ['No', 'No', 'No'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
Executing one action: self.actions.modify_radio('adj_1', 'Yes')


However, without specific context or instruction on which value to set "adj_1" to, I cannot generate the exact command. You would need to provide the value that "adj_1" should be set to, such as "Yes", "No", or "Not an adjective".
Failed to execute an action self.actions.modify_radio('adj_1', 'Yes')


However, without specific context or instruction on which value to set "adj_1" to, I cannot generate the exact command. You would need to provide the value that "adj_1" should be set to, such as "Yes", "No", or "Not an adjective"., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
Executing one action: To provide an appropriate command, I need to know the value you want to set for the "adj_2" input. Please provide the desired value (Yes, No, or Not an adjective) for the "adj_2" input.
Failed to execute an action To provide an appropriate command, I need to know the value you want to set for the "adj_2" input. Please provide the desired value (Yes, No, or Not an adjective) for the "adj_2" input., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
Executing one action: self.actions.modify_radio('adj_3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
Executing one action: self.actions.modify_radio('adj_4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
Executing one action: self.actions.modify_radio('adj_5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
Executing one action: The screenshot and HTML provided reveal that there is a radio input group with the name "pos_qual_ctrl_1". To issue a command to modify this input, I need the specific option to which it should be set, such as "Yes", "No", or "Not an adjective". Could you please provide the value you would like to set for "pos_qual_ctrl_1"?
Failed to execute an action The screenshot and HTML provided reveal that there is a radio input group with the name "pos_qual_ctrl_1". To issue a command to modify this input, I need the specific option to which it should be set, such as "Yes", "No", or "Not an adjective". Could you please provide the value you would like to set for "pos_qual_ctrl_1"?, error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
Executing one action: self.actions.modify_radio('adj_6', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
Executing one action: self.actions.modify_radio('adj_7', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
Executing one action: self.actions.modify_radio('adj_8', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_8" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
Executing one action: self.actions.modify_radio('adj_9', 'No') 

The above command assumes that "conceivable" does not describe the attribute "cleanness", but it is important to note that this assumption is purely for demonstrative purposes and might not reflect the actual task requirements.
Failed to execute an action self.actions.modify_radio('adj_9', 'No') 

The above command assumes that "conceivable" does not describe the attribute "cleanness", but it is important to note that this assumption is purely for demonstrative purposes and might not reflect the actual task requirements., error: invalid syntax (<string>, line 3)
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
Executing one action: self.actions.modify_radio('adj_10', 'No')
We are going to select this radio button: <input type="radio" name="adj_10" value="No">
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'Naa']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.375
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0]}
instance_id: 9508 <-> row_number: 45
 --> inputs: ['adj_1', 'adj_2', 'adj_3', 'adj_4', 'adj_5', 'pos_qual_ctrl_2', 'adj_6', 'adj_7', 'pos_qual_ctrl_1', 'pos_qual_ctrl_3', 'adj_8', 'pos_qual_ctrl_5', 'pos_qual_ctrl_4', 'neg_qual_ctrl', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 45 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'No'], 'adj_4': ['No', 'No', 'No'], 'adj_5': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_8': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'neg_qual_ctrl': ['Yes', 'Yes', 'Yes'], 'adj_9': ['No', 'No', 'No'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
Executing one action: self.actions.modify_radio('adj_1', 'Yes')

If "dazzling" is an adjective that does not describe "hue," then the command would be:
plaintext
self
Failed to execute an action self.actions.modify_radio('adj_1', 'Yes')

If "dazzling" is an adjective that does not describe "hue," then the command would be:
plaintext
self, error: invalid syntax (<string>, line 3)
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
Executing one action: Based on the structure of the provided HTML, it appears that `adj_2` is the name of a radio button group related to a list item where a user should decide if a word is an adjective that describes the attribute "hue" (in this case, the attribute relates to color), if it is an adjective that does not describe "hue", or if it is not an adjective at all.

Unfortunately, since the HTML does not provide the specific word associated with the `adj_2` input, and the screenshot provided shows an overwhelming number of adjectives but not which one corresponds to `adj_2`, I cannot determine the current value of `adj_2` or provide an accurate command to modify it.

If you can specify which of the words in the screenshot corresponds to `adj_2`, I can then provide a suitable command.
Failed to execute an action Based on the structure of the provided HTML, it appears that `adj_2` is the name of a radio button group related to a list item where a user should decide if a word is an adjective that describes the attribute "hue" (in this case, the attribute relates to color), if it is an adjective that does not describe "hue", or if it is not an adjective at all.

Unfortunately, since the HTML does not provide the specific word associated with the `adj_2` input, and the screenshot provided shows an overwhelming number of adjectives but not which one corresponds to `adj_2`, I cannot determine the current value of `adj_2` or provide an accurate command to modify it.

If you can specify which of the words in the screenshot corresponds to `adj_2`, I can then provide a suitable command., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
Executing one action: self.actions.modify_radio('adj_3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
Executing one action: self.actions.modify_radio('adj_4', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
Executing one action: self.actions.modify_radio('adj_5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')


You would replace 'Yes' with 'No' or 'Naa' if either of those options should be selected instead, based on the rules or initial state you wish to set for the input.
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')


You would replace 'Yes' with 'No' or 'Naa' if either of those options should be selected instead, based on the rules or initial state you wish to set for the input., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
Executing one action: Based on the HTML provided and the screenshot of the webpage, it appears that the task is asking whether a list of words are adjectives describing the attribute "hue," which is defined as "the quality of a color as determined by its dominant wavelength." The screenshot shows a section of the webpage with the attribute, attribute description, example adjectives, and a list of words with corresponding radio button selections for "Yes," "No," and "Not an adjective."

For the word corresponding to the input name "adj_6," I need to generate a command that represents the selection among the radio button options. However, I am not provided with a specific selection to make. If you provide the appropriate selection for "adj_6," I can then create the corresponding command to modify the webpage.
Failed to execute an action Based on the HTML provided and the screenshot of the webpage, it appears that the task is asking whether a list of words are adjectives describing the attribute "hue," which is defined as "the quality of a color as determined by its dominant wavelength." The screenshot shows a section of the webpage with the attribute, attribute description, example adjectives, and a list of words with corresponding radio button selections for "Yes," "No," and "Not an adjective."

For the word corresponding to the input name "adj_6," I need to generate a command that represents the selection among the radio button options. However, I am not provided with a specific selection to make. If you provide the appropriate selection for "adj_6," I can then create the corresponding command to modify the webpage., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
Executing one action: self.actions.modify_radio('adj_7', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')


Replace 'Yes' with 'No' or 'Naa' depending on the desired selection for the task. If 'Yes' is the correct value to describe that the word in question (which is not given) is indeed an adjective that describes the attribute 'hue', then the command above is accurate. If not, adjust the input_value accordingly.
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')


Replace 'Yes' with 'No' or 'Naa' depending on the desired selection for the task. If 'Yes' is the correct value to describe that the word in question (which is not given) is indeed an adjective that describes the attribute 'hue', then the command above is accurate. If not, adjust the input_value accordingly., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
Executing one action: self.actions.modify_radio('adj_8', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'No')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
Executing one action: self.actions.modify_radio('adj_9', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_9" value="Naa">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
Executing one action: self.actions.modify_radio('adj_10', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_10" value="Yes" required="">
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.1875
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0]}
 = = = = = = = = = = = = starting new task: `Script KD eval LONG V2 - disc result eval 1` = = = = = = = = = = = = 
First instance id: 25775
instance_id: 25862 <-> row_number: 87
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 87 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [2, 2], 'on-topic': [2, 2], 'ordering': [1, 2], 'complete': [0, -1]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
Executing one action: self.actions.modify_radio('achievable', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, -1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 0.0, 0.0]}
instance_id: 25797 <-> row_number: 22
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 22 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [0, 2], 'on-topic': [1, 2], 'ordering': [0, 2], 'complete': [0, 2]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
Executing one action: self.actions.modify_radio('achievable', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 25795 <-> row_number: 20
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 20 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [2, 1], 'on-topic': [2, 2], 'ordering': [1, 1], 'complete': [1, 0]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
Executing one action: self.actions.modify_radio('achievable', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
Executing one action: self.actions.modify_radio('ordering', '0')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-2" value="0">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0]}
instance_id: 25985 <-> row_number: 210
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 210 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [1, 2], 'on-topic': [0, 2], 'ordering': [0, 2], 'complete': [-1, 2]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
Executing one action: self.actions.modify_radio('achievable', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 25984 <-> row_number: 209
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 209 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [1, 1], 'on-topic': [0, 2], 'ordering': [0, 2], 'complete': [-1, 1]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
Executing one action: self.actions.modify_radio('achievable', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 26022 <-> row_number: 247
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 247 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [1, 0], 'on-topic': [2, 2], 'ordering': [0, -1], 'complete': [1, -2]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
Executing one action: self.actions.modify_radio('achievable', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, -1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, -2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 25968 <-> row_number: 193
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 193 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [2, 2], 'on-topic': [2, 2], 'ordering': [1, 1], 'complete': [0, 1]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
Executing one action: self.actions.modify_radio('achievable', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
Executing one action: self.actions.modify_radio('ordering', '2')


Please state the specific value you'd like to set for the 'ordering' input, and I can provide the exact command you should use.
Failed to execute an action self.actions.modify_radio('ordering', '2')


Please state the specific value you'd like to set for the 'ordering' input, and I can provide the exact command you should use., error: unterminated string literal (detected at line 4) (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : []
 visible_values : []
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0]}
instance_id: 25870 <-> row_number: 95
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 95 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [2, 2], 'on-topic': [2, 1], 'ordering': [1, 2], 'complete': [1, 1]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
Executing one action: self.actions.modify_radio('achievable', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0]}
instance_id: 25855 <-> row_number: 80
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 80 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [1, 1], 'on-topic': [2, 1], 'ordering': [2, 1], 'complete': [1, 0]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
Executing one action: self.actions.modify_radio('achievable', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0]}
instance_id: 25900 <-> row_number: 125
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 125 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [2, 2], 'on-topic': [2, 1], 'ordering': [2, 2], 'complete': [2, 1]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
Executing one action: self.actions.modify_radio('achievable', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 1.0
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0]}
instance_id: 25830 <-> row_number: 55
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 55 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [1, 0], 'on-topic': [0, 2], 'ordering': [0, 1], 'complete': [-1, 0]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
Executing one action: self.actions.modify_radio('achievable', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
Executing one action: self.actions.modify_radio('complete', '2')


This command will check the radio button that indicates the plan is definitely complete and informative.
Failed to execute an action self.actions.modify_radio('complete', '2')


This command will check the radio button that indicates the plan is definitely complete and informative., error: invalid syntax (<string>, line 4)
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : []
 visible_values : []
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, 0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 25937 <-> row_number: 162
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 162 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [0, -2], 'on-topic': [0, -2], 'ordering': [0, -2], 'complete': [0, -2]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
Executing one action: self.actions.modify_radio('achievable', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, -2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, -2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, -2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, -2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 26021 <-> row_number: 246
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 246 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [1, 1], 'on-topic': [0, 2], 'ordering': [0, 1], 'complete': [0, -1]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
Executing one action: self.actions.modify_radio('achievable', 'value')


Where 'value' should be replaced with the desired value that you would like to assign to the radio button, which could be '2', '1', '0', '-1', or '-2' according to the options given in the HTML form.
Failed to execute an action self.actions.modify_radio('achievable', 'value')


Where 'value' should be replaced with the desired value that you would like to assign to the radio button, which could be '2', '1', '0', '-1', or '-2' according to the options given in the HTML form., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
Executing one action: self.actions.modify_radio('complete', '-2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-4" value="-2">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : []
 visible_values : []
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['-2']
 visible_values : ['-2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, -1]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 25818 <-> row_number: 43
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 43 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [-2, -2], 'on-topic': [-2, -2], 'ordering': [-2, -2], 'complete': [-2, -2]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
Executing one action: self.actions.modify_radio('achievable', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-2, -2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-2, -2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-2, -2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-2, -2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 1.0
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0]}
instance_id: 25910 <-> row_number: 135
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 135 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [1, 1], 'on-topic': [2, 0], 'ordering': [1, 1], 'complete': [1, 1]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
Executing one action: self.actions.modify_radio('achievable', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 25835 <-> row_number: 60
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 60 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [0, 0], 'on-topic': [1, 1], 'ordering': [1, 1], 'complete': [1, 1]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
Executing one action: self.actions.modify_radio('achievable', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 25950 <-> row_number: 175
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 175 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [1, -1], 'on-topic': [0, 2], 'ordering': [-1, 1], 'complete': [-1, -1]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
Executing one action: self.actions.modify_radio('achievable', '-2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-4" value="-2">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, -1]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, -1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 25966 <-> row_number: 191
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 191 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [-1, 0], 'on-topic': [2, 1], 'ordering': [2, 0], 'complete': [2, 1]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
Executing one action: self.actions.modify_radio('achievable', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, 0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.75
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0]}
instance_id: 25849 <-> row_number: 74
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 74 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [1, 2], 'on-topic': [2, 2], 'ordering': [2, 2], 'complete': [2, 2]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
Executing one action: self.actions.modify_radio('achievable', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.75
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0]}
instance_id: 25804 <-> row_number: 29
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 29 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [1, 1], 'on-topic': [0, 1], 'ordering': [0, 2], 'complete': [-1, 1]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
Executing one action: self.actions.modify_radio('achievable', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
 = = = = = = = = = = = = starting new task: `Sherlock IMG 2 TXT Eval 15` = = = = = = = = = = = = 
First instance id: 17695
instance_id: 17717 <-> row_number: 22
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 22 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [3, 3], 'elicited_label_answer2': [3, 3], 'elicited_label_answer3': [2, 1], 'elicited_label_answer4': [2, 2], 'elicited_label_answer5': [2, 3], 'elicited_label_answer6': [2, 1], 'elicited_label_answer7': [2, 2], 'elicited_label_answer8': [2, 2], 'elicited_label_answer9': [1, 1], 'elicited_label_answer10': [2, 2]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
Executing one action: self.actions.modify_radio('elicited_label_answer1', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer2_1" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
Executing one action: self.actions.modify_radio('elicited_label_answer2', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer2_2" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
Executing one action: self.actions.modify_radio('elicited_label_answer3', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer3_3" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
Executing one action: self.actions.modify_radio('elicited_label_answer5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
Executing one action: self.actions.modify_radio('elicited_label_answer6', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer2_6" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
Executing one action: self.actions.modify_radio('elicited_label_answer7', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
Executing one action: self.actions.modify_radio('elicited_label_answer8', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer3_8" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
Executing one action: self.actions.modify_radio('elicited_label_answer9', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer2_9" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
Executing one action: self.actions.modify_radio('elicited_label_answer10', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer2_10" value="2" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.2
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0]}
instance_id: 18019 <-> row_number: 324
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 324 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [3, 3], 'elicited_label_answer2': [3, 3], 'elicited_label_answer3': [3, 2], 'elicited_label_answer4': [2, 2], 'elicited_label_answer5': [2, 2], 'elicited_label_answer6': [1, 1], 'elicited_label_answer7': [1, 2], 'elicited_label_answer8': [2, 1], 'elicited_label_answer9': [3, 2], 'elicited_label_answer10': [3, 3]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
Executing one action: self.actions.modify_radio('elicited_label_answer2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
Executing one action: self.actions.modify_radio('elicited_label_answer4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
Executing one action: self.actions.modify_radio('elicited_label_answer6', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer2_6" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
Executing one action: self.actions.modify_radio('elicited_label_answer8', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer3_8" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
Executing one action: self.actions.modify_radio('elicited_label_answer9', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer2_9" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.3
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]}
instance_id: 18175 <-> row_number: 480
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 480 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [3, 3], 'elicited_label_answer2': [2, 1], 'elicited_label_answer3': [3, 1], 'elicited_label_answer4': [2, 1], 'elicited_label_answer5': [1, 1], 'elicited_label_answer6': [1, 2], 'elicited_label_answer7': [2, 1], 'elicited_label_answer8': [1, 1], 'elicited_label_answer9': [1, 1], 'elicited_label_answer10': [2, 1]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
Executing one action: self.actions.modify_radio('elicited_label_answer2', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer3_2" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
Executing one action: self.actions.modify_radio('elicited_label_answer3', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer2_3" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
Executing one action: self.actions.modify_radio('elicited_label_answer4', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer3_4" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
Executing one action: self.actions.modify_radio('elicited_label_answer6', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer3_6" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
Executing one action: self.actions.modify_radio('elicited_label_answer8', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer3_8" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
Executing one action: self.actions.modify_radio('elicited_label_answer9', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer3_9" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.4
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0]}
instance_id: 18017 <-> row_number: 322
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 322 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [3, 3], 'elicited_label_answer2': [3, 2], 'elicited_label_answer3': [1, 2], 'elicited_label_answer4': [2, 1], 'elicited_label_answer5': [3, 2], 'elicited_label_answer6': [2, 3], 'elicited_label_answer7': [2, 2], 'elicited_label_answer8': [3, 3], 'elicited_label_answer9': [3, 2], 'elicited_label_answer10': [3, 3]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
Executing one action: self.actions.modify_radio('elicited_label_answer1', 'bad')
The input value (`bad`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('elicited_label_answer1', 'bad'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
Executing one action: self.actions.modify_radio('elicited_label_answer2', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer1_2" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
Executing one action: self.actions.modify_radio('elicited_label_answer3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
Executing one action: self.actions.modify_radio('elicited_label_answer6', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer2_6" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
Executing one action: self.actions.modify_radio('elicited_label_answer7', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
Executing one action: self.actions.modify_radio('elicited_label_answer8', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer2_8" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0]}
instance_id: 18039 <-> row_number: 344
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 344 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [2, 1], 'elicited_label_answer2': [2, 2], 'elicited_label_answer3': [3, 2], 'elicited_label_answer4': [1, 1], 'elicited_label_answer5': [2, 1], 'elicited_label_answer6': [2, 1], 'elicited_label_answer7': [2, 2], 'elicited_label_answer8': [2, 1], 'elicited_label_answer9': [2, 2], 'elicited_label_answer10': [1, 2]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
Executing one action: self.actions.modify_radio('elicited_label_answer1', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer3_1" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
Executing one action: self.actions.modify_radio('elicited_label_answer2', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer2_2" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
Executing one action: self.actions.modify_radio('elicited_label_answer3', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer3_3" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
Executing one action: self.actions.modify_radio('elicited_label_answer4', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer2_4" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
Executing one action: self.actions.modify_radio('elicited_label_answer5', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer2_5" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
Executing one action: self.actions.modify_radio('elicited_label_answer6', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer2_6" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
Executing one action: self.actions.modify_radio('elicited_label_answer7', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')


If you want to set the value to "Okay":
plaintext
self.actions.modify_radio('elicited_label_answer9', '2')


If you want to set the value to "Bad":
plaintext
self.actions.modify_radio('elicited_label_answer9', '1')


Please specify the value you wish to set so I can provide the exact command.
Failed to execute an action self.actions.modify_radio('elicited_label_answer9', '3')


If you want to set the value to "Okay":
plaintext
self.actions.modify_radio('elicited_label_answer9', '2')


If you want to set the value to "Bad":
plaintext
self.actions.modify_radio('elicited_label_answer9', '1')


Please specify the value you wish to set so I can provide the exact command., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
Executing one action: self.actions.modify_radio('elicited_label_answer10', 'value_from_image_analysis')
The input value (`value_from_image_analysis`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('elicited_label_answer10', 'value_from_image_analysis'), error: 'NoneType' object has no attribute 'get_attribute'
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.3
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 17757 <-> row_number: 62
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 62 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [1, 1], 'elicited_label_answer2': [2, 2], 'elicited_label_answer3': [1, 1], 'elicited_label_answer4': [1, 2], 'elicited_label_answer5': [2, 2], 'elicited_label_answer6': [1, 1], 'elicited_label_answer7': [2, 2], 'elicited_label_answer8': [1, 1], 'elicited_label_answer9': [2, 2], 'elicited_label_answer10': [1, 2]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
Executing one action: self.actions.modify_radio('elicited_label_answer2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
Executing one action: self.actions.modify_radio('elicited_label_answer3', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer2_3" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
Executing one action: self.actions.modify_radio('elicited_label_answer4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
Executing one action: self.actions.modify_radio('elicited_label_answer6', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
Executing one action: self.actions.modify_radio('elicited_label_answer7', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
Executing one action: self.actions.modify_radio('elicited_label_answer8', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 17739 <-> row_number: 44
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 44 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [2, 3], 'elicited_label_answer2': [2, 3], 'elicited_label_answer3': [1, 2], 'elicited_label_answer4': [1, 1], 'elicited_label_answer5': [1, 1], 'elicited_label_answer6': [1, 2], 'elicited_label_answer7': [1, 1], 'elicited_label_answer8': [1, 1], 'elicited_label_answer9': [2, 3], 'elicited_label_answer10': [1, 1]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
Executing one action: self.actions.modify_radio('elicited_label_answer1', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer2_1" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
Executing one action: self.actions.modify_radio('elicited_label_answer2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
Executing one action: self.actions.modify_radio('elicited_label_answer3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
Executing one action: self.actions.modify_radio('elicited_label_answer4', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer3_4" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
Executing one action: self.actions.modify_radio('elicited_label_answer6', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer3_6" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
Executing one action: self.actions.modify_radio('elicited_label_answer7', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
Executing one action: self.actions.modify_radio('elicited_label_answer10', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer2_10" value="2" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.3
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 17965 <-> row_number: 270
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 270 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [2, 2], 'elicited_label_answer2': [2, 1], 'elicited_label_answer3': [2, 3], 'elicited_label_answer4': [2, 1], 'elicited_label_answer5': [2, 1], 'elicited_label_answer6': [2, 1], 'elicited_label_answer7': [2, 2], 'elicited_label_answer8': [3, 2], 'elicited_label_answer9': [3, 3], 'elicited_label_answer10': [3, 3]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
Executing one action: self.actions.modify_radio('elicited_label_answer1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
Executing one action: self.actions.modify_radio('elicited_label_answer2', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer2_2" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
Executing one action: self.actions.modify_radio('elicited_label_answer3', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer2_3" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
Executing one action: self.actions.modify_radio('elicited_label_answer4', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer2_4" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
Executing one action: self.actions.modify_radio('elicited_label_answer5', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer2_5" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
Executing one action: self.actions.modify_radio('elicited_label_answer6', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer2_6" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
Executing one action: self.actions.modify_radio('elicited_label_answer7', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.8
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0]}
instance_id: 17925 <-> row_number: 230
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 230 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [3, 3], 'elicited_label_answer2': [2, 2], 'elicited_label_answer3': [2, 1], 'elicited_label_answer4': [1, 1], 'elicited_label_answer5': [1, 3], 'elicited_label_answer6': [1, 3], 'elicited_label_answer7': [2, 2], 'elicited_label_answer8': [2, 3], 'elicited_label_answer9': [3, 3], 'elicited_label_answer10': [3, 3]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
Executing one action: self.actions.modify_radio('elicited_label_answer1', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer2_1" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
Executing one action: self.actions.modify_radio('elicited_label_answer2', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer3_2" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
Executing one action: self.actions.modify_radio('elicited_label_answer3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
Executing one action: self.actions.modify_radio('elicited_label_answer4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer1_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
Executing one action: self.actions.modify_radio('elicited_label_answer7', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer3_7" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
Executing one action: self.actions.modify_radio('elicited_label_answer8', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
Executing one action: self.actions.modify_radio('elicited_label_answer10', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer2_10" value="2" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.1
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]}
instance_id: 17727 <-> row_number: 32
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 32 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [1, 3], 'elicited_label_answer2': [2, 2], 'elicited_label_answer3': [2, 2], 'elicited_label_answer4': [1, 3], 'elicited_label_answer5': [1, 2], 'elicited_label_answer6': [2, 2], 'elicited_label_answer7': [2, 2], 'elicited_label_answer8': [2, 3], 'elicited_label_answer9': [1, 2], 'elicited_label_answer10': [2, 2]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
Executing one action: self.actions.modify_radio('elicited_label_answer1', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer2_1" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
Executing one action: self.actions.modify_radio('elicited_label_answer2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
Executing one action: self.actions.modify_radio('elicited_label_answer3', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer2_3" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
Executing one action: self.actions.modify_radio('elicited_label_answer5', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer3_5" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
Executing one action: self.actions.modify_radio('elicited_label_answer6', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer3_6" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
Executing one action: self.actions.modify_radio('elicited_label_answer7', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer3_7" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
Executing one action: self.actions.modify_radio('elicited_label_answer8', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer2_8" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
Executing one action: self.actions.modify_radio('elicited_label_answer9', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer2_9" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
Executing one action: self.actions.modify_radio('elicited_label_answer10', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.3
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 17994 <-> row_number: 299
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 299 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [1, 2], 'elicited_label_answer2': [3, 3], 'elicited_label_answer3': [2, 3], 'elicited_label_answer4': [1, 2], 'elicited_label_answer5': [1, 2], 'elicited_label_answer6': [2, 2], 'elicited_label_answer7': [1, 2], 'elicited_label_answer8': [1, 2], 'elicited_label_answer9': [2, 2], 'elicited_label_answer10': [1, 1]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
Executing one action: self.actions.modify_radio('elicited_label_answer1', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer2_1" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
Executing one action: self.actions.modify_radio('elicited_label_answer2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
Executing one action: self.actions.modify_radio('elicited_label_answer3', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer2_3" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
Executing one action: self.actions.modify_radio('elicited_label_answer4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
Executing one action: self.actions.modify_radio('elicited_label_answer6', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer3_6" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
Executing one action: self.actions.modify_radio('elicited_label_answer7', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
Executing one action: self.actions.modify_radio('elicited_label_answer10', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.1
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 17863 <-> row_number: 168
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 168 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [2, 3], 'elicited_label_answer2': [1, 1], 'elicited_label_answer3': [2, 3], 'elicited_label_answer4': [1, 1], 'elicited_label_answer5': [2, 2], 'elicited_label_answer6': [1, 1], 'elicited_label_answer7': [2, 2], 'elicited_label_answer8': [3, 2], 'elicited_label_answer9': [2, 2], 'elicited_label_answer10': [3, 2]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
Executing one action: self.actions.modify_radio('elicited_label_answer1', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer2_1" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
Executing one action: self.actions.modify_radio('elicited_label_answer2', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer2_2" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
Executing one action: self.actions.modify_radio('elicited_label_answer3', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer2_3" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
Executing one action: self.actions.modify_radio('elicited_label_answer5', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer3_5" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer1_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
Executing one action: self.actions.modify_radio('elicited_label_answer7', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer3_7" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
Executing one action: self.actions.modify_radio('elicited_label_answer8', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
Executing one action: self.actions.modify_radio('elicited_label_answer9', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
Executing one action: self.actions.modify_radio('elicited_label_answer10', 'value')
The input value (`value`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('elicited_label_answer10', 'value'), error: 'NoneType' object has no attribute 'get_attribute'
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.2
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 18173 <-> row_number: 478
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 478 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [1, 1], 'elicited_label_answer2': [1, 1], 'elicited_label_answer3': [1, 2], 'elicited_label_answer4': [1, 2], 'elicited_label_answer5': [1, 2], 'elicited_label_answer6': [1, 1], 'elicited_label_answer7': [1, 2], 'elicited_label_answer8': [1, 2], 'elicited_label_answer9': [1, 2], 'elicited_label_answer10': [2, 3]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
Executing one action: self.actions.modify_radio('elicited_label_answer1', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer2_1" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
Executing one action: self.actions.modify_radio('elicited_label_answer2', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer2_2" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
Executing one action: self.actions.modify_radio('elicited_label_answer3', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer3_3" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
Executing one action: self.actions.modify_radio('elicited_label_answer6', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer3_6" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
Executing one action: self.actions.modify_radio('elicited_label_answer7', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer3_7" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
Executing one action: self.actions.modify_radio('elicited_label_answer8', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer2_8" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
Executing one action: self.actions.modify_radio('elicited_label_answer9', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer2_9" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
Executing one action: self.actions.modify_radio('elicited_label_answer10', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer2_10" value="2" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.4
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0]}
instance_id: 17695 <-> row_number: 0
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 0 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [1, 3], 'elicited_label_answer2': [3, 3], 'elicited_label_answer3': [3, 3], 'elicited_label_answer4': [1, 2], 'elicited_label_answer5': [3, 3], 'elicited_label_answer6': [2, 1], 'elicited_label_answer7': [2, 3], 'elicited_label_answer8': [3, 2], 'elicited_label_answer9': [2, 2], 'elicited_label_answer10': [3, 3]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
Executing one action: self.actions.modify_radio('elicited_label_answer1', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer2_1" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
Executing one action: self.actions.modify_radio('elicited_label_answer2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
Executing one action: self.actions.modify_radio('elicited_label_answer3', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer2_3" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
Executing one action: self.actions.modify_radio('elicited_label_answer5', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer2_5" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
Executing one action: self.actions.modify_radio('elicited_label_answer6', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer3_6" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
Executing one action: self.actions.modify_radio('elicited_label_answer7', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
Executing one action: self.actions.modify_radio('elicited_label_answer8', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer2_8" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.1
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]}
instance_id: 17956 <-> row_number: 261
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 261 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [1, 1], 'elicited_label_answer2': [1, 2], 'elicited_label_answer3': [2, 2], 'elicited_label_answer4': [1, 1], 'elicited_label_answer5': [2, 2], 'elicited_label_answer6': [2, 1], 'elicited_label_answer7': [2, 2], 'elicited_label_answer8': [3, 3], 'elicited_label_answer9': [2, 1], 'elicited_label_answer10': [1, 1]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
Executing one action: self.actions.modify_radio('elicited_label_answer1', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer2_1" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
Executing one action: self.actions.modify_radio('elicited_label_answer2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
Executing one action: self.actions.modify_radio('elicited_label_answer4', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer2_4" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer1_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
Executing one action: self.actions.modify_radio('elicited_label_answer7', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
Executing one action: self.actions.modify_radio('elicited_label_answer8', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer3_8" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
Executing one action: self.actions.modify_radio('elicited_label_answer9', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer3_9" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 17742 <-> row_number: 47
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 47 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [3, 2], 'elicited_label_answer2': [2, 2], 'elicited_label_answer3': [2, 2], 'elicited_label_answer4': [2, 2], 'elicited_label_answer5': [3, 3], 'elicited_label_answer6': [2, 2], 'elicited_label_answer7': [2, 2], 'elicited_label_answer8': [2, 3], 'elicited_label_answer9': [2, 3], 'elicited_label_answer10': [2, 2]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
Executing one action: self.actions.modify_radio('elicited_label_answer2', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer2_2" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
Executing one action: self.actions.modify_radio('elicited_label_answer3', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer3_3" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
Executing one action: self.actions.modify_radio('elicited_label_answer4', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer2_4" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
Executing one action: self.actions.modify_radio('elicited_label_answer6', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer3_6" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
Executing one action: self.actions.modify_radio('elicited_label_answer7', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
Executing one action: self.actions.modify_radio('elicited_label_answer8', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
Executing one action: self.actions.modify_radio('elicited_label_answer10', 'okay')
The input value (`okay`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('elicited_label_answer10', 'okay'), error: 'NoneType' object has no attribute 'get_attribute'
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.4
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 17879 <-> row_number: 184
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 184 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [2, 1], 'elicited_label_answer2': [2, 2], 'elicited_label_answer3': [3, 2], 'elicited_label_answer4': [3, 3], 'elicited_label_answer5': [3, 2], 'elicited_label_answer6': [1, 2], 'elicited_label_answer7': [2, 3], 'elicited_label_answer8': [2, 2], 'elicited_label_answer9': [3, 2], 'elicited_label_answer10': [3, 3]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
Executing one action: self.actions.modify_radio('elicited_label_answer1', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer3_1" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
Executing one action: self.actions.modify_radio('elicited_label_answer2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
Executing one action: self.actions.modify_radio('elicited_label_answer3', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer2_3" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
Executing one action: self.actions.modify_radio('elicited_label_answer5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer1_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.3
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0]}
instance_id: 17900 <-> row_number: 205
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 205 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [3, 3], 'elicited_label_answer2': [2, 2], 'elicited_label_answer3': [2, 2], 'elicited_label_answer4': [3, 3], 'elicited_label_answer5': [2, 2], 'elicited_label_answer6': [3, 3], 'elicited_label_answer7': [2, 2], 'elicited_label_answer8': [2, 1], 'elicited_label_answer9': [3, 3], 'elicited_label_answer10': [2, 2]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
Executing one action: self.actions.modify_radio('elicited_label_answer1', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer2_1" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
Executing one action: self.actions.modify_radio('elicited_label_answer2', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer2_2" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
Executing one action: self.actions.modify_radio('elicited_label_answer3', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer2_3" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
Executing one action: self.actions.modify_radio('elicited_label_answer4', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer2_4" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
Executing one action: self.actions.modify_radio('elicited_label_answer6', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer2_6" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
Executing one action: self.actions.modify_radio('elicited_label_answer7', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer2_7" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')

We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.4
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0]}
instance_id: 17946 <-> row_number: 251
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 251 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [3, 2], 'elicited_label_answer2': [2, 2], 'elicited_label_answer3': [2, 2], 'elicited_label_answer4': [2, 2], 'elicited_label_answer5': [3, 2], 'elicited_label_answer6': [2, 1], 'elicited_label_answer7': [1, 1], 'elicited_label_answer8': [1, 2], 'elicited_label_answer9': [1, 2], 'elicited_label_answer10': [2, 2]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
Executing one action: self.actions.modify_radio('elicited_label_answer1', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer2_1" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
Executing one action: self.actions.modify_radio('elicited_label_answer2', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer2_2" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
Executing one action: self.actions.modify_radio('elicited_label_answer3', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer2_3" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
Executing one action: self.actions.modify_radio('elicited_label_answer4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
Executing one action: self.actions.modify_radio('elicited_label_answer5', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer2_5" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
Executing one action: self.actions.modify_radio('elicited_label_answer6', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
Executing one action: self.actions.modify_radio('elicited_label_answer7', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer3_7" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
Executing one action: self.actions.modify_radio('elicited_label_answer9', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer2_9" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.3
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 18024 <-> row_number: 329
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 329 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [2, 2], 'elicited_label_answer2': [1, 1], 'elicited_label_answer3': [1, 1], 'elicited_label_answer4': [2, 1], 'elicited_label_answer5': [1, 1], 'elicited_label_answer6': [2, 2], 'elicited_label_answer7': [1, 1], 'elicited_label_answer8': [1, 1], 'elicited_label_answer9': [2, 2], 'elicited_label_answer10': [1, 1]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
Executing one action: self.actions.modify_radio('elicited_label_answer1', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer2_1" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
Executing one action: self.actions.modify_radio('elicited_label_answer2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
Executing one action: self.actions.modify_radio('elicited_label_answer3', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer2_3" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
Executing one action: self.actions.modify_radio('elicited_label_answer4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
Executing one action: self.actions.modify_radio('elicited_label_answer5', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer3_5" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
Executing one action: self.actions.modify_radio('elicited_label_answer6', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
Executing one action: self.actions.modify_radio('elicited_label_answer7', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
Executing one action: self.actions.modify_radio('elicited_label_answer8', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
Executing one action: self.actions.modify_radio('elicited_label_answer10', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer3_10" value="1" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.3
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0]}
 = = = = = = = = = = = = starting new task: `wikiHow step-goal linking pilot cleanse-url` = = = = = = = = = = = = 
First instance id: 27732
instance_id: 27770 <-> row_number: 38
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 38 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [0, 0, 0], 'candidate_1': [3, 1, 2], 'candidate_2': [0, 0, 2], 'candidate_3': [0, 1, 0], 'candidate_4': [1, 1, 1], 'candidate_5': [2, 0, 1], 'candidate_6': [0, 0, 0], 'candidate_7': [2, 1, 2], 'candidate_8': [1, 1, 1], 'candidate_9': [2, 1, 0], 'candidate_10': [3, 0, 3]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
Executing one action: self.actions.modify_radio('candidate_0', '0')
We are going to select this radio button: <input type="radio" name="candidate_0" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
Executing one action: self.actions.modify_radio('candidate_1', '3')
We are going to select this radio button: <input type="radio" name="candidate_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
Executing one action: self.actions.modify_radio('candidate_2', '0')
We are going to select this radio button: <input type="radio" name="candidate_2" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
Executing one action: self.actions.modify_radio('candidate_3', '0')
We are going to select this radio button: <input type="radio" name="candidate_3" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
Executing one action: self.actions.modify_radio('candidate_4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
Executing one action: self.actions.modify_radio('candidate_5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
Executing one action: self.actions.modify_radio('candidate_6', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
Executing one action: self.actions.modify_radio('candidate_7', '0')
We are going to select this radio button: <input type="radio" name="candidate_7" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
Executing one action: self.actions.modify_radio('candidate_8', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
Executing one action: self.actions.modify_radio('candidate_9', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
Executing one action: self.actions.modify_radio('candidate_10', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[2, 1, 0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[3, 0, 3]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0]}
instance_id: 27739 <-> row_number: 7
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 7 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [0, 3, 2], 'candidate_1': [0, 3, 2], 'candidate_2': [1, 1, 0], 'candidate_3': [2, 1, 1], 'candidate_4': [1, 0, 0], 'candidate_5': [1, 0, 1], 'candidate_6': [1, 2, 2], 'candidate_7': [1, 0, 0], 'candidate_8': [1, 0, 0], 'candidate_9': [1, 0, 0], 'candidate_10': [1, 3, 2]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
Executing one action: self.actions.modify_radio('candidate_0', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
Executing one action: self.actions.modify_radio('candidate_1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
Executing one action: self.actions.modify_radio('candidate_2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
Executing one action: self.actions.modify_radio('candidate_3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
Executing one action: self.actions.modify_radio('candidate_4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
Executing one action: self.actions.modify_radio('candidate_5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
Executing one action: self.actions.modify_radio('candidate_6', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
Executing one action: self.actions.modify_radio('candidate_7', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
Executing one action: self.actions.modify_radio('candidate_8', '0')
We are going to select this radio button: <input type="radio" name="candidate_8" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
Executing one action: self.actions.modify_radio('candidate_9', '0')
We are going to select this radio button: <input type="radio" name="candidate_9" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
Executing one action: self.actions.modify_radio('candidate_10', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 0, 0]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 0, 0]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 3, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.6666666666666666
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 1.0, 1.0, 0.0]}
instance_id: 27762 <-> row_number: 30
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 30 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [1, 1, 0], 'candidate_1': [3, 1, 3], 'candidate_2': [0, 1, 0], 'candidate_3': [3, 0, 3], 'candidate_4': [1, 1, 2], 'candidate_5': [3, 1, 3], 'candidate_6': [3, 1, 3], 'candidate_7': [3, 1, 3], 'candidate_8': [0, 1, 1], 'candidate_9': [1, 1, 1], 'candidate_10': [3, 1, 2]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
Executing one action: self.actions.modify_radio('candidate_0', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
Executing one action: self.actions.modify_radio('candidate_1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
Executing one action: self.actions.modify_radio('candidate_2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
Executing one action: self.actions.modify_radio('candidate_3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
Executing one action: self.actions.modify_radio('candidate_4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
Executing one action: self.actions.modify_radio('candidate_5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
Executing one action: self.actions.modify_radio('candidate_6', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
Executing one action: self.actions.modify_radio('candidate_7', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
Executing one action: self.actions.modify_radio('candidate_8', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
Executing one action: self.actions.modify_radio('candidate_9', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
Executing one action: self.actions.modify_radio('candidate_10', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[3, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 27808 <-> row_number: 76
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 76 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [3, 1, 3], 'candidate_1': [0, 1, 2], 'candidate_2': [2, 1, 1], 'candidate_3': [2, 1, 2], 'candidate_4': [3, 1, 3], 'candidate_5': [3, 1, 3], 'candidate_6': [1, 1, 2], 'candidate_7': [2, 1, 3], 'candidate_8': [3, 1, 3], 'candidate_9': [2, 1, 3], 'candidate_10': [3, 0, 3]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
Executing one action: self.actions.modify_radio('candidate_0', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
Executing one action: self.actions.modify_radio('candidate_1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
Executing one action: self.actions.modify_radio('candidate_2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
Executing one action: self.actions.modify_radio('candidate_3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
Executing one action: self.actions.modify_radio('candidate_4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
Executing one action: self.actions.modify_radio('candidate_5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
Executing one action: self.actions.modify_radio('candidate_6', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
Executing one action: self.actions.modify_radio('candidate_7', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
Executing one action: self.actions.modify_radio('candidate_8', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
Executing one action: self.actions.modify_radio('candidate_9', '3')
We are going to select this radio button: <input type="radio" name="candidate_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
Executing one action: self.actions.modify_radio('candidate_10', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[3, 1, 3]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[2, 1, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[3, 0, 3]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 27743 <-> row_number: 11
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 11 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [1, 0, 3], 'candidate_1': [2, 3, 3], 'candidate_2': [2, 1, 2], 'candidate_3': [1, 0, 2], 'candidate_4': [3, 0, 2], 'candidate_5': [1, 2, 2], 'candidate_6': [2, 3, 3], 'candidate_7': [3, 1, 3], 'candidate_8': [1, 0, 2], 'candidate_9': [0, 2, 3], 'candidate_10': [2, 3, 3]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
Executing one action: self.actions.modify_radio('candidate_0', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
Executing one action: self.actions.modify_radio('candidate_1', input_value)


Please replace `input_value` with the value that corresponds to the appropriate radio option (0, 1, 2, 3, or 4).
Failed to execute an action self.actions.modify_radio('candidate_1', input_value)


Please replace `input_value` with the value that corresponds to the appropriate radio option (0, 1, 2, 3, or 4)., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
Executing one action: self.actions.modify_radio('candidate_2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
Executing one action: self.actions.modify_radio('candidate_3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
Executing one action: self.actions.modify_radio('candidate_4', '0')
We are going to select this radio button: <input type="radio" name="candidate_4" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
Executing one action: self.actions.modify_radio('candidate_5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
Executing one action: self.actions.modify_radio('candidate_6', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
Executing one action: self.actions.modify_radio('candidate_7', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
Executing one action: self.actions.modify_radio('candidate_8', '0')
We are going to select this radio button: <input type="radio" name="candidate_8" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
Executing one action: self.actions.modify_radio('candidate_9', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
Executing one action: self.actions.modify_radio('candidate_10', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 0, 2]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 2, 3]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[2, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 27798 <-> row_number: 66
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 66 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [3, 3, 3], 'candidate_1': [3, 2, 2], 'candidate_2': [2, 0, 1], 'candidate_3': [3, 1, 1], 'candidate_4': [2, 0, 1], 'candidate_5': [3, 3, 1], 'candidate_6': [3, 3, 1], 'candidate_7': [3, 3, 3], 'candidate_8': [3, 1, 3], 'candidate_9': [1, 0, 0], 'candidate_10': [3, 1, 1]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
Executing one action: self.actions.modify_radio('candidate_0', '3')
We are going to select this radio button: <input type="radio" name="candidate_0" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
Executing one action: self.actions.modify_radio('candidate_1', '3')
We are going to select this radio button: <input type="radio" name="candidate_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
Executing one action: self.actions.modify_radio('candidate_2', 'value_you_want_to_select') 

Replace 'value_you_want_to_select' with the actual value corresponding to the choice you want to make for the input named 'candidate_2'. For example, if you want to select "The article explains exactly how to do the step." you would replace 'value_you_want_to_select' with '0'.
Failed to execute an action self.actions.modify_radio('candidate_2', 'value_you_want_to_select') 

Replace 'value_you_want_to_select' with the actual value corresponding to the choice you want to make for the input named 'candidate_2'. For example, if you want to select "The article explains exactly how to do the step." you would replace 'value_you_want_to_select' with '0'., error: invalid syntax (<string>, line 3)
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
Executing one action: self.actions.modify_radio('candidate_3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
Executing one action: self.actions.modify_radio('candidate_4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
Executing one action: self.actions.modify_radio('candidate_5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
Executing one action: self.actions.modify_radio('candidate_6', '3')
We are going to select this radio button: <input type="radio" name="candidate_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
Executing one action: self.actions.modify_radio('candidate_7', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
Executing one action: self.actions.modify_radio('candidate_8', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
Executing one action: self.actions.modify_radio('candidate_9', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
Executing one action: self.actions.modify_radio('candidate_10', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[3, 1, 3]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 0, 0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[3, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 27786 <-> row_number: 54
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 54 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [1, 1, 2], 'candidate_1': [3, 0, 3], 'candidate_2': [2, 1, 2], 'candidate_3': [2, 1, 3], 'candidate_4': [3, 0, 3], 'candidate_5': [1, 1, 2], 'candidate_6': [1, 1, 3], 'candidate_7': [3, 1, 3], 'candidate_8': [1, 0, 2], 'candidate_9': [1, 1, 1], 'candidate_10': [2, 1, 3]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
Executing one action: self.actions.modify_radio('candidate_0', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
Executing one action: self.actions.modify_radio('candidate_1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
Executing one action: self.actions.modify_radio('candidate_2', '1')
We are going to select this radio button: <input type="radio" name="candidate_2" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
Executing one action: self.actions.modify_radio('candidate_3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
Executing one action: self.actions.modify_radio('candidate_4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
Executing one action: self.actions.modify_radio('candidate_5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
Executing one action: self.actions.modify_radio('candidate_6', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
Executing one action: Based on the provided HTML code and the screenshot, you appear to be asking to generate a command to modify a radio button type element with the name 'candidate_7'. However, no value is specified in your request to which this `candidate_7` should be set.

For generating a proper command, a specific value (e.g., "0" for "The article explains exactly how to do the step.", "1" for "The article is helpful, but it either doesn't have enough information or has too much unrelated information.", etc.) should be provided.

You can submit a value like "0", "1", "2", "3", or "4" corresponding to the instruction you want to be selected, and I can generate the appropriate command.
Failed to execute an action Based on the provided HTML code and the screenshot, you appear to be asking to generate a command to modify a radio button type element with the name 'candidate_7'. However, no value is specified in your request to which this `candidate_7` should be set.

For generating a proper command, a specific value (e.g., "0" for "The article explains exactly how to do the step.", "1" for "The article is helpful, but it either doesn't have enough information or has too much unrelated information.", etc.) should be provided.

You can submit a value like "0", "1", "2", "3", or "4" corresponding to the instruction you want to be selected, and I can generate the appropriate command., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
Executing one action: self.actions.modify_radio('candidate_8', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
Executing one action: self.actions.modify_radio('candidate_9', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
Executing one action: self.actions.modify_radio('candidate_10', 'value_you_want_to_select')
The input value (`value_you_want_to_select`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('candidate_10', 'value_you_want_to_select'), error: 'NoneType' object has no attribute 'get_attribute'
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 0, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[2, 1, 3]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 27755 <-> row_number: 23
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 23 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [1, 3, 3], 'candidate_1': [0, 1, 1], 'candidate_2': [1, 2, 1], 'candidate_3': [1, 1, 2], 'candidate_4': [0, 0, 3], 'candidate_5': [1, 1, 3], 'candidate_6': [2, 1, 2], 'candidate_7': [1, 1, 0], 'candidate_8': [0, 1, 0], 'candidate_9': [1, 2, 2], 'candidate_10': [0, 3, 3]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
Executing one action: self.actions.modify_radio('candidate_0', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
Executing one action: self.actions.modify_radio('candidate_1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
Executing one action: self.actions.modify_radio('candidate_2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
Executing one action: self.actions.modify_radio('candidate_3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
Executing one action: self.actions.modify_radio('candidate_4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
Executing one action: self.actions.modify_radio('candidate_5', '0')


Please provide the specific value you want to set for the input named "candidate_5" to generate the appropriate modification command.
Failed to execute an action self.actions.modify_radio('candidate_5', '0')


Please provide the specific value you want to set for the input named "candidate_5" to generate the appropriate modification command., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
Executing one action: self.actions.modify_radio('candidate_6', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
Executing one action: self.actions.modify_radio('candidate_7', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
Executing one action: self.actions.modify_radio('candidate_8', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
Executing one action: self.actions.modify_radio('candidate_9', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
Executing one action: self.actions.modify_radio('candidate_10', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 1, 0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 27788 <-> row_number: 56
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 56 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [1, 0, 0], 'candidate_1': [1, 1, 2], 'candidate_2': [2, 1, 0], 'candidate_3': [0, 0, 0], 'candidate_4': [0, 1, 0], 'candidate_5': [1, 1, 2], 'candidate_6': [1, 1, 1], 'candidate_7': [1, 0, 1], 'candidate_8': [2, 1, 1], 'candidate_9': [1, 1, 0], 'candidate_10': [0, 0, 0]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
Executing one action: self.actions.modify_radio('candidate_0', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
Executing one action: self.actions.modify_radio('candidate_1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
Executing one action: self.actions.modify_radio('candidate_2', '0')
We are going to select this radio button: <input type="radio" name="candidate_2" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
Executing one action: self.actions.modify_radio('candidate_3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
Executing one action: self.actions.modify_radio('input_name', 'input_value')`

However, since you haven't provided a specific value to select for the "candidate_4" radio input, I cannot generate a complete command. Please provide the value you need to select for the "candidate_4" radio input.
Failed to execute an action self.actions.modify_radio('input_name', 'input_value')`

However, since you haven't provided a specific value to select for the "candidate_4" radio input, I cannot generate a complete command. Please provide the value you need to select for the "candidate_4" radio input., error: unterminated string literal (detected at line 3) (<string>, line 3)
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
Executing one action: self.actions.modify_radio('candidate_5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
Executing one action: self.actions.modify_radio('candidate_6', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
Executing one action: self.actions.modify_radio('candidate_7', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
Executing one action: self.actions.modify_radio('candidate_8', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
Executing one action: self.actions.modify_radio('candidate_9', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
Executing one action: self.actions.modify_radio('candidate_10', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 1, 0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 0, 0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 27778 <-> row_number: 46
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 46 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [1, 1, 2], 'candidate_1': [3, 1, 3], 'candidate_2': [2, 0, 3], 'candidate_3': [2, 2, 3], 'candidate_4': [3, 0, 3], 'candidate_5': [1, 0, 3], 'candidate_6': [2, 1, 1], 'candidate_7': [1, 1, 2], 'candidate_8': [2, 0, 3], 'candidate_9': [2, 1, 3], 'candidate_10': [2, 0, 2]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
Executing one action: self.actions.modify_radio('candidate_0', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
Executing one action: self.actions.modify_radio('candidate_1', '3')
We are going to select this radio button: <input type="radio" name="candidate_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
Executing one action: self.actions.modify_radio('candidate_2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
Executing one action: self.actions.modify_radio('candidate_3', '0')
We are going to select this radio button: <input type="radio" name="candidate_3" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
Executing one action: self.actions.modify_radio('candidate_4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
Executing one action: self.actions.modify_radio('candidate_5', '3')
We are going to select this radio button: <input type="radio" name="candidate_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
Executing one action: self.actions.modify_radio('candidate_6', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
Executing one action: self.actions.modify_radio('candidate_7', '0')
We are going to select this radio button: <input type="radio" name="candidate_7" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
Executing one action: self.actions.modify_radio('candidate_8', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
Executing one action: self.actions.modify_radio('candidate_9', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
Executing one action: self.actions.modify_radio('candidate_10', '0')
We are going to select this radio button: <input type="radio" name="candidate_10" value="0" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[2, 0, 3]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[2, 1, 3]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[2, 0, 2]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 27802 <-> row_number: 70
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 70 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [1, 0, 0], 'candidate_1': [2, 3, 1], 'candidate_2': [0, 0, 2], 'candidate_3': [3, 3, 2], 'candidate_4': [1, 3, 3], 'candidate_5': [2, 0, 2], 'candidate_6': [2, 3, 3], 'candidate_7': [1, 1, 3], 'candidate_8': [0, 0, 2], 'candidate_9': [0, 0, 3], 'candidate_10': [0, 0, 0]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
Executing one action: self.actions.modify_radio('candidate_0', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
Executing one action: self.actions.modify_radio('candidate_1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
Executing one action: self.actions.modify_radio('candidate_2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
Executing one action: self.actions.modify_radio('candidate_3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
Executing one action: self.actions.modify_radio('candidate_4', 'value_you_want_to_choose')
The input value (`value_you_want_to_choose`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('candidate_4', 'value_you_want_to_choose'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
Executing one action: self.actions.modify_radio('candidate_5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
Executing one action: self.actions.modify_radio('candidate_6', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
Executing one action: self.actions.modify_radio('candidate_7', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
Executing one action: self.actions.modify_radio('candidate_8', '0')
We are going to select this radio button: <input type="radio" name="candidate_8" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
Executing one action: self.actions.modify_radio('candidate_9', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
Executing one action: self.actions.modify_radio('candidate_10', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 0, 2]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 0, 3]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 0, 0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.3333333333333333
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 27734 <-> row_number: 2
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 2 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [2, 1, 2], 'candidate_1': [3, 1, 3], 'candidate_2': [0, 2, 1], 'candidate_3': [3, 1, 3], 'candidate_4': [3, 0, 1], 'candidate_5': [1, 1, 1], 'candidate_6': [1, 0, 3], 'candidate_7': [1, 1, 0], 'candidate_8': [1, 0, 2], 'candidate_9': [3, 1, 2], 'candidate_10': [2, 1, 2]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
Executing one action: self.actions.modify_radio('candidate_0', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
Executing one action: self.actions.modify_radio('candidate_1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
Executing one action: self.actions.modify_radio('candidate_2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
Executing one action: self.actions.modify_radio('candidate_3', '3')
We are going to select this radio button: <input type="radio" name="candidate_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
Executing one action: self.actions.modify_radio('candidate_4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
Executing one action: self.actions.modify_radio('candidate_5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
Executing one action: self.actions.modify_radio('candidate_6', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
Executing one action: self.actions.modify_radio('candidate_7', '0')
We are going to select this radio button: <input type="radio" name="candidate_7" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
Executing one action: self.actions.modify_radio('candidate_8', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
Executing one action: self.actions.modify_radio('candidate_9', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
Executing one action: self.actions.modify_radio('candidate_10', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 0, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[3, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 27740 <-> row_number: 8
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 8 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [1, 2, 0], 'candidate_1': [0, 0, 0], 'candidate_2': [0, 0, 0], 'candidate_3': [1, 3, 1], 'candidate_4': [0, 3, 3], 'candidate_5': [1, 3, 3], 'candidate_6': [1, 3, 1], 'candidate_7': [1, 1, 0], 'candidate_8': [1, 0, 1], 'candidate_9': [1, 3, 3], 'candidate_10': [1, 3, 3]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
Executing one action: self.actions.modify_radio('candidate_0', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
Executing one action: self.actions.modify_radio('candidate_1', '0')
We are going to select this radio button: <input type="radio" name="candidate_1" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
Executing one action: self.actions.modify_radio('candidate_2', '0')
We are going to select this radio button: <input type="radio" name="candidate_2" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
Executing one action: self.actions.modify_radio('candidate_3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
Executing one action: self.actions.modify_radio('candidate_4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
Executing one action: self.actions.modify_radio('candidate_5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
Executing one action: self.actions.modify_radio('candidate_6', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
Executing one action: self.actions.modify_radio('candidate_7', '0')
We are going to select this radio button: <input type="radio" name="candidate_7" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
Executing one action: self.actions.modify_radio('candidate_8', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
Executing one action: self.actions.modify_radio('candidate_9', '3')
We are going to select this radio button: <input type="radio" name="candidate_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
Executing one action: self.actions.modify_radio('candidate_10', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 0, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.3333333333333333
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]}
instance_id: 27753 <-> row_number: 21
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 21 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [1, 1, 3], 'candidate_1': [1, 1, 2], 'candidate_2': [1, 0, 2], 'candidate_3': [0, 0, 3], 'candidate_4': [1, 0, 3], 'candidate_5': [1, 2, 3], 'candidate_6': [1, 0, 2], 'candidate_7': [1, 0, 3], 'candidate_8': [1, 0, 3], 'candidate_9': [0, 1, 2], 'candidate_10': [0, 2, 3]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
Executing one action: self.actions.modify_radio('candidate_0', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
Executing one action: self.actions.modify_radio('candidate_1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
Executing one action: self.actions.modify_radio('candidate_2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
Executing one action: self.actions.modify_radio('candidate_3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
Executing one action: self.actions.modify_radio('candidate_4', '1')


If you want to select a different option, you would replace '1' with the appropriate value that corresponds to your desired option.
Failed to execute an action self.actions.modify_radio('candidate_4', '1')


If you want to select a different option, you would replace '1' with the appropriate value that corresponds to your desired option., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
Executing one action: self.actions.modify_radio('candidate_5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
Executing one action: self.actions.modify_radio('candidate_6', '0')
We are going to select this radio button: <input type="radio" name="candidate_6" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
Executing one action: self.actions.modify_radio('candidate_7', '0')


Please provide the specific value you want to select for "candidate_7" so I can give you the correct command.
Failed to execute an action self.actions.modify_radio('candidate_7', '0')


Please provide the specific value you want to select for "candidate_7" so I can give you the correct command., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
Executing one action: self.actions.modify_radio('candidate_8', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
Executing one action: self.actions.modify_radio('candidate_9', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
Executing one action: self.actions.modify_radio('candidate_10', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 0, 3]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 2, 3]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 27769 <-> row_number: 37
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 37 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [2, 1, 3], 'candidate_1': [2, 0, 3], 'candidate_2': [3, 1, 3], 'candidate_3': [1, 1, 3], 'candidate_4': [0, 2, 3], 'candidate_5': [3, 1, 3], 'candidate_6': [2, 0, 1], 'candidate_7': [3, 1, 3], 'candidate_8': [0, 1, 2], 'candidate_9': [0, 1, 2], 'candidate_10': [2, 0, 3]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
Executing one action: self.actions.modify_radio('candidate_0', '0')

To select the option "The article is helpful, but it either doesn't have enough information or has too much unrelated information":
self.actions.modify_radio('candidate_0', '1')

To select the option "The article explains something related, but I don't think I can do the step with the instructions":
self.actions.modify_radio('candidate_0', '2')

To select the option "The article is unhelpful/unrelated":
self.actions.modify_radio('candidate_0', '3')

To select the option "I don't know which option to choose, because:" (and then provide a reason in the crowd-input field):
self.actions.modify_radio('candidate_0', '4')

These commands are constructed by combining "self.actions.modify_radio" with the input name ("candidate_0") and the value associated with each radio option. If a particular value is required, please provide the value and I can give the specific command
Failed to execute an action self.actions.modify_radio('candidate_0', '0')

To select the option "The article is helpful, but it either doesn't have enough information or has too much unrelated information":
self.actions.modify_radio('candidate_0', '1')

To select the option "The article explains something related, but I don't think I can do the step with the instructions":
self.actions.modify_radio('candidate_0', '2')

To select the option "The article is unhelpful/unrelated":
self.actions.modify_radio('candidate_0', '3')

To select the option "I don't know which option to choose, because:" (and then provide a reason in the crowd-input field):
self.actions.modify_radio('candidate_0', '4')

These commands are constructed by combining "self.actions.modify_radio" with the input name ("candidate_0") and the value associated with each radio option. If a particular value is required, please provide the value and I can give the specific command, error: invalid syntax (<string>, line 3)
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
Executing one action: self.actions.modify_radio('candidate_1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
Executing one action: self.actions.modify_radio('candidate_2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
Executing one action: self.actions.modify_radio('candidate_3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
Executing one action: self.actions.modify_radio('candidate_4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
Executing one action: self.actions.modify_radio('candidate_5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
Executing one action: self.actions.modify_radio('candidate_6', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
Executing one action: self.actions.modify_radio('candidate_7', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
Executing one action: self.actions.modify_radio('candidate_8', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
Executing one action: self.actions.modify_radio('candidate_9', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
Executing one action: self.actions.modify_radio('candidate_10', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[2, 0, 3]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 27781 <-> row_number: 49
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 49 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [2, 1, 3], 'candidate_1': [0, 1, 3], 'candidate_2': [0, 1, 3], 'candidate_3': [3, 1, 3], 'candidate_4': [1, 1, 1], 'candidate_5': [1, 1, 3], 'candidate_6': [0, 1, 1], 'candidate_7': [1, 1, 2], 'candidate_8': [2, 1, 3], 'candidate_9': [3, 1, 3], 'candidate_10': [1, 1, 2]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
Executing one action: self.actions.modify_radio('candidate_0', input_value)
Failed to execute an action self.actions.modify_radio('candidate_0', input_value), error: name 'input_value' is not defined
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
Executing one action: self.actions.modify_radio('candidate_1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
Executing one action: self.actions.modify_radio('candidate_2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
Executing one action: self.actions.modify_radio('candidate_3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
Executing one action: self.actions.modify_radio('candidate_4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
Executing one action: self.actions.modify_radio('candidate_5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
Executing one action: self.actions.modify_radio('candidate_6', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
Executing one action: self.actions.modify_radio('candidate_7', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
Executing one action: self.actions.modify_radio('candidate_8', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
Executing one action: self.actions.modify_radio('candidate_9', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
Executing one action: self.actions.modify_radio('candidate_10', '0')
We are going to select this radio button: <input type="radio" name="candidate_10" value="0" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[2, 1, 3]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[3, 1, 3]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 27777 <-> row_number: 45
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 45 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [0, 0, 1], 'candidate_1': [2, 0, 3], 'candidate_2': [3, 3, 2], 'candidate_3': [3, 3, 1], 'candidate_4': [3, 0, 0], 'candidate_5': [1, 1, 1], 'candidate_6': [2, 3, 3], 'candidate_7': [0, 3, 2], 'candidate_8': [3, 3, 0], 'candidate_9': [2, 1, 2], 'candidate_10': [0, 1, 2]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
Executing one action: self.actions.modify_radio('candidate_0', '0')
We are going to select this radio button: <input type="radio" name="candidate_0" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
Executing one action: self.actions.modify_radio('candidate_1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
Executing one action: self.actions.modify_radio('candidate_2', '0')
We are going to select this radio button: <input type="radio" name="candidate_2" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
Executing one action: self.actions.modify_radio('candidate_3', '0')
We are going to select this radio button: <input type="radio" name="candidate_3" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
Executing one action: self.actions.modify_radio('candidate_4', '0')


Replace the '0' with the appropriate value once you've made the decision on which option is correct for the given scenario.
Failed to execute an action self.actions.modify_radio('candidate_4', '0')


Replace the '0' with the appropriate value once you've made the decision on which option is correct for the given scenario., error: unterminated string literal (detected at line 4) (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
Executing one action: self.actions.modify_radio('candidate_5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
Executing one action: self.actions.modify_radio('candidate_6', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
Executing one action: self.actions.modify_radio('candidate_7', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
Executing one action: self.actions.modify_radio('candidate_8', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
Executing one action: self.actions.modify_radio('candidate_9', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
Executing one action: self.actions.modify_radio('candidate_10', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[3, 3, 0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 27797 <-> row_number: 65
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 65 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [3, 1, 2], 'candidate_1': [1, 1, 1], 'candidate_2': [3, 1, 2], 'candidate_3': [1, 1, 0], 'candidate_4': [3, 1, 3], 'candidate_5': [1, 0, 0], 'candidate_6': [1, 1, 2], 'candidate_7': [0, 0, 0], 'candidate_8': [0, 1, 0], 'candidate_9': [2, 1, 0], 'candidate_10': [3, 0, 2]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
Executing one action: self.actions.modify_radio('candidate_0', '0')
We are going to select this radio button: <input type="radio" name="candidate_0" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
Executing one action: self.actions.modify_radio('candidate_1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
Executing one action: self.actions.modify_radio('candidate_2', '0')
We are going to select this radio button: <input type="radio" name="candidate_2" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
Executing one action: self.actions.modify_radio('candidate_3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
Executing one action: self.actions.modify_radio('candidate_4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
Executing one action: self.actions.modify_radio('candidate_5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
Executing one action: self.actions.modify_radio('candidate_6', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
Executing one action: self.actions.modify_radio('candidate_7', 'value_to_select')
The input value (`value_to_select`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('candidate_7', 'value_to_select'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
Executing one action: self.actions.modify_radio('candidate_8', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
Executing one action: self.actions.modify_radio('candidate_9', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
Executing one action: self.actions.modify_radio('candidate_10', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 1, 0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[2, 1, 0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[3, 0, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 27761 <-> row_number: 29
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 29 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [0, 0, 1], 'candidate_1': [0, 1, 0], 'candidate_2': [3, 2, 2], 'candidate_3': [1, 1, 3], 'candidate_4': [3, 2, 2], 'candidate_5': [0, 2, 2], 'candidate_6': [3, 3, 3], 'candidate_7': [3, 2, 3], 'candidate_8': [2, 2, 3], 'candidate_9': [1, 1, 2], 'candidate_10': [0, 1, 1]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
Executing one action: self.actions.modify_radio('candidate_0', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
Executing one action: self.actions.modify_radio('candidate_1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
Executing one action: self.actions.modify_radio('candidate_2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
Executing one action: self.actions.modify_radio('candidate_3', '3')

We are going to select this radio button: <input type="radio" name="candidate_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
Executing one action: self.actions.modify_radio('candidate_4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
Executing one action: self.actions.modify_radio('candidate_5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
Executing one action: self.actions.modify_radio('candidate_6', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
Executing one action: self.actions.modify_radio('candidate_7', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
Executing one action: self.actions.modify_radio('candidate_8', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
Executing one action: self.actions.modify_radio('candidate_9', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
Executing one action: self.actions.modify_radio('candidate_10', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[2, 2, 3]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 27766 <-> row_number: 34
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 34 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [3, 3, 3], 'candidate_1': [0, 2, 2], 'candidate_2': [0, 0, 0], 'candidate_3': [0, 1, 1], 'candidate_4': [0, 0, 0], 'candidate_5': [2, 3, 2], 'candidate_6': [3, 3, 3], 'candidate_7': [1, 2, 1], 'candidate_8': [0, 2, 1], 'candidate_9': [3, 3, 3], 'candidate_10': [0, 3, 2]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
Executing one action: self.actions.modify_radio('candidate_0', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
Executing one action: self.actions.modify_radio('candidate_1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
Executing one action: self.actions.modify_radio('candidate_2', '0')


Please specify the value you'd like to set for the input "candidate_2" so I can generate the correct command.
Failed to execute an action self.actions.modify_radio('candidate_2', '0')


Please specify the value you'd like to set for the input "candidate_2" so I can generate the correct command., error: unterminated string literal (detected at line 4) (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
Executing one action: self.actions.modify_radio('candidate_3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
Executing one action: self.actions.modify_radio('candidate_4', 'value')
The input value (`value`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('candidate_4', 'value'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
Executing one action: self.actions.modify_radio('candidate_5', '3')
We are going to select this radio button: <input type="radio" name="candidate_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
Executing one action: self.actions.modify_radio('candidate_6', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
Executing one action: self.actions.modify_radio('candidate_7', '0')
We are going to select this radio button: <input type="radio" name="candidate_7" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
Executing one action: self.actions.modify_radio('candidate_8', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
Executing one action: self.actions.modify_radio('candidate_9', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
Executing one action: self.actions.modify_radio('candidate_10', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[3, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 3, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
 = = = = = = = = = = = = starting new task: `Arch - Rel Eval 3` = = = = = = = = = = = = 
First instance id: 33654
instance_id: 33662 <-> row_number: 8
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 8 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [1.0, 1.0, 1.0], 'complete-1': [2.0, 1.0, 2.0], 'intra-1': [1.0, 1.0, 2.0], 'diverse-1': [2.0, 1.0, 1.0], 'bestq-1': [2.0, 1.0, 2.0], 'coherent-2': [2.0, 1.0, 2.0], 'complete-2': [1.0, 1.0, 1.0], 'intra-2': [2.0, 1.0, 1.0], 'diverse-2': [1.0, 2.0, ''], 'bestq-2': [2.0, 1.0, 1.0], 'coherent-3': [2, 1, 2], 'complete-3': [1, 1, 1], 'intra-3': [2, 1, 2], 'diverse-3': [1.0, 2.0, 1.0], 'bestq-3': [1, 1, 1], 'coherent-4': [2, 1, 1], 'complete-4': [1.0, 1.0, 2.0], 'intra-4': [2.0, 1.0, 2.0], 'diverse-4': [1, 2, 1], 'bestq-4': [2, 1, 1], 'coherent-5': [2, 1, 2], 'complete-5': [1, 1, 1], 'intra-5': [1.0, 1.0, 1.0], 'diverse-5': [1, 1, 2], 'bestq-5': [1, 1, 2]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
Executing one action: self.actions.modify_radio('coherent-1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
Executing one action: self.actions.modify_radio('complete-1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
Executing one action: self.actions.modify_radio('intra-1', '1')
We are going to select this radio button: <input name="intra-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
Executing one action: self.actions.modify_radio('diverse-1', '1')
We are going to select this radio button: <input name="diverse-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
Executing one action: self.actions.modify_radio('bestq-1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
Executing one action: self.actions.modify_radio('coherent-2', '2')
We are going to select this radio button: <input name="coherent-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
Executing one action: self.actions.modify_radio('complete-2', '1')
We are going to select this radio button: <input name="complete-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
Executing one action: self.actions.modify_radio('intra-2', '2')
We are going to select this radio button: <input name="intra-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
Executing one action: self.actions.modify_radio('diverse-2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
Executing one action: self.actions.modify_radio('bestq-2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
Executing one action: self.actions.modify_radio('coherent-3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
Executing one action: self.actions.modify_radio('complete-3', '1')
We are going to select this radio button: <input name="complete-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
Executing one action: self.actions.modify_radio('intra-3', '2')
We are going to select this radio button: <input name="intra-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
Executing one action: self.actions.modify_radio('diverse-3', '2')
We are going to select this radio button: <input name="diverse-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
Executing one action: self.actions.modify_radio('bestq-3', '1')
We are going to select this radio button: <input name="bestq-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
Executing one action: self.actions.modify_radio('coherent-4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
Executing one action: self.actions.modify_radio('complete-4', '1')
We are going to select this radio button: <input name="complete-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
Executing one action: self.actions.modify_radio('intra-4', '2')
We are going to select this radio button: <input name="intra-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
Executing one action: self.actions.modify_radio('diverse-4', 'YOUR_CHOSEN_VALUE')`

Replace 'YOUR_CHOSEN_VALUE' with either '1' or '2' based on the set of relations (Relation Set A or Relation Set B) that you determine is most diverse according to the criteria provided in the instructions. It seems that the screenshot does not provide enough context to make an informed choice between Relation Set A or Relation Set B, as the decision would depend on the content of those sets. Therefore, the modification command will be incomplete without the chosen value for 'diverse-4'.
Failed to execute an action self.actions.modify_radio('diverse-4', 'YOUR_CHOSEN_VALUE')`

Replace 'YOUR_CHOSEN_VALUE' with either '1' or '2' based on the set of relations (Relation Set A or Relation Set B) that you determine is most diverse according to the criteria provided in the instructions. It seems that the screenshot does not provide enough context to make an informed choice between Relation Set A or Relation Set B, as the decision would depend on the content of those sets. Therefore, the modification command will be incomplete without the chosen value for 'diverse-4'., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
Executing one action: self.actions.modify_radio('bestq-4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
Executing one action: self.actions.modify_radio('coherent-5', '1')
We are going to select this radio button: <input name="coherent-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
Executing one action: self.actions.modify_radio('complete-5', '1')
We are going to select this radio button: <input name="complete-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
Executing one action: self.actions.modify_radio('intra-5', '1')
We are going to select this radio button: <input name="intra-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
Executing one action: self.actions.modify_radio('diverse-5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
Executing one action: self.actions.modify_radio('bestq-5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, '']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.44
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0]}
instance_id: 33671 <-> row_number: 17
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 17 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [1.0, 1.0, 1.0], 'complete-1': [1.0, 2.0, 1.0], 'intra-1': [2.0, 1.0, 1.0], 'diverse-1': [2.0, 2.0, 2.0], 'bestq-1': [1.0, 1.0, 1.0], 'coherent-2': [1.0, 1.0, ''], 'complete-2': [1.0, 1.0, 1.0], 'intra-2': [1.0, 1.0, 1.0], 'diverse-2': [2.0, 2.0, 2.0], 'bestq-2': [1.0, 1.0, 1.0], 'coherent-3': [1, 1, 1], 'complete-3': [1, 1, 1], 'intra-3': [1, 1, 1], 'diverse-3': [2.0, 1.0, 2.0], 'bestq-3': [1, 2, 1], 'coherent-4': [2, 1, 1], 'complete-4': [2.0, 1.0, 2.0], 'intra-4': [2.0, 2.0, 2.0], 'diverse-4': [1, 1, 2], 'bestq-4': [2, 1, 2], 'coherent-5': [2, 1, 1], 'complete-5': [2, 2, 2], 'intra-5': [2.0, 1.0, 1.0], 'diverse-5': [1, 1, 2], 'bestq-5': [2, 2, 1]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
Executing one action: self.actions.modify_radio('coherent-1', '1')


This command assumes that the value '1' corresponds to "Relation Set A" and that you want to select this option for the first criteria of coherence with the rest of the story. The value '2' would correspond to "Relation Set B" if you wanted to select that option instead.
Failed to execute an action self.actions.modify_radio('coherent-1', '1')


This command assumes that the value '1' corresponds to "Relation Set A" and that you want to select this option for the first criteria of coherence with the rest of the story. The value '2' would correspond to "Relation Set B" if you wanted to select that option instead., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
Executing one action: self.actions.modify_radio('complete-1', '2')
We are going to select this radio button: <input name="complete-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
Executing one action: self.actions.modify_radio('intra-1', '1')
We are going to select this radio button: <input name="intra-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
Executing one action: self.actions.modify_radio('diverse-1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
Executing one action: self.actions.modify_radio('bestq-1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
Executing one action: self.actions.modify_radio('coherent-2', '1')
We are going to select this radio button: <input name="coherent-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
Error getting action from GPT4V model Error code: 400 - {'error': {'message': "You uploaded an unsupported image. Please make sure your image is below 20 MB in size and is of one the following formats: ['png', 'jpeg', 'gif', 'webp'].", 'type': 'invalid_request_error', 'param': None, 'code': 'sanitizer_server_error'}}, trying again, current fail_count is 1
Executing one action: self.actions.modify_radio('complete-2', '1')
We are going to select this radio button: <input name="complete-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
Executing one action: self.actions.modify_radio('intra-2', '1')
We are going to select this radio button: <input name="intra-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
Executing one action: self.actions.modify_radio('diverse-2', '1')
We are going to select this radio button: <input name="diverse-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
Executing one action: self.actions.modify_radio('bestq-2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
Executing one action: self.actions.modify_radio('coherent-3', '1')
We are going to select this radio button: <input name="coherent-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
Executing one action: self.actions.modify_radio('complete-3', '1')
We are going to select this radio button: <input name="complete-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
Executing one action: self.actions.modify_radio('intra-3', '1')
We are going to select this radio button: <input name="intra-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
Executing one action: self.actions.modify_radio('diverse-3', '1')
We are going to select this radio button: <input name="diverse-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
Executing one action: self.actions.modify_radio('bestq-3', '1')
We are going to select this radio button: <input name="bestq-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
Executing one action: self.actions.modify_radio('coherent-4', '1')
We are going to select this radio button: <input name="coherent-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
Executing one action: self.actions.modify_radio('complete-4', '1')
We are going to select this radio button: <input name="complete-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
Executing one action: self.actions.modify_radio('intra-4', '1')
We are going to select this radio button: <input name="intra-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
Executing one action: self.actions.modify_radio('diverse-4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
Executing one action: self.actions.modify_radio('bestq-4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
Executing one action: self.actions.modify_radio('coherent-5', '1')
We are going to select this radio button: <input name="coherent-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
Executing one action: self.actions.modify_radio('complete-5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
Executing one action: self.actions.modify_radio('intra-5', '1')
We are going to select this radio button: <input name="intra-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
Executing one action: self.actions.modify_radio('diverse-5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
Executing one action: self.actions.modify_radio('bestq-5', '1')
We are going to select this radio button: <input name="bestq-5" type="radio" value="1">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, '']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.44
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 33680 <-> row_number: 26
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 26 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [2.0, 1.0, 2.0], 'complete-1': [2.0, 1.0, 2.0], 'intra-1': [1.0, 1.0, 2.0], 'diverse-1': [1.0, 1.0, 1.0], 'bestq-1': [2.0, 1.0, 2.0], 'coherent-2': [1.0, 2.0, 2.0], 'complete-2': [1.0, 2.0, 1.0], 'intra-2': [1.0, 2.0, 2.0], 'diverse-2': [2.0, 2.0, 1.0], 'bestq-2': [1.0, 2.0, 1.0], 'coherent-3': [2, 2, 2], 'complete-3': [2, 2, 2], 'intra-3': [1, 2, 2], 'diverse-3': [1.0, 2.0, 1.0], 'bestq-3': [2, 2, 2], 'coherent-4': [2, 2, 1], 'complete-4': [2.0, 2.0, 1.0], 'intra-4': [1.0, 2.0, 2.0], 'diverse-4': [1, 2, 1], 'bestq-4': [2, 2, 1], 'coherent-5': [2, 2, 2], 'complete-5': [2, 2, 2], 'intra-5': [2.0, 2.0, 2.0], 'diverse-5': [1, 2, 2], 'bestq-5': [2, 2, 2]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
Executing one action: self.actions.modify_radio('coherent-1', '2')
We are going to select this radio button: <input name="coherent-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
Executing one action: self.actions.modify_radio('complete-1', '2')
We are going to select this radio button: <input name="complete-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
Executing one action: self.actions.modify_radio('intra-1', '2')
We are going to select this radio button: <input name="intra-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
Executing one action: self.actions.modify_radio('diverse-1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
Executing one action: self.actions.modify_radio('bestq-1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
Executing one action: self.actions.modify_radio('coherent-2', '2')
We are going to select this radio button: <input name="coherent-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
Executing one action: self.actions.modify_radio('complete-2', '2')
We are going to select this radio button: <input name="complete-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
Executing one action: self.actions.modify_radio('intra-2', '2')
We are going to select this radio button: <input name="intra-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
Executing one action: self.actions.modify_radio('diverse-2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
Executing one action: self.actions.modify_radio('bestq-2', '1')


If you were to choose Relation Set B as the best set, the command would be:

plaintext
self.actions.modify_radio('bestq-2', '2')


Without a specific choice provided, I cannot generate the exact command. Please provide the choice you want to select for the "bestq-2" input.
Failed to execute an action self.actions.modify_radio('bestq-2', '1')


If you were to choose Relation Set B as the best set, the command would be:

plaintext
self.actions.modify_radio('bestq-2', '2')


Without a specific choice provided, I cannot generate the exact command. Please provide the choice you want to select for the "bestq-2" input., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
Executing one action: self.actions.modify_radio('coherent-3', '2')
We are going to select this radio button: <input name="coherent-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
Executing one action: self.actions.modify_radio('complete-3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
Executing one action: self.actions.modify_radio('intra-3', '2')
We are going to select this radio button: <input name="intra-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
Executing one action: self.actions.modify_radio('diverse-3', '2')
We are going to select this radio button: <input name="diverse-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
Executing one action: self.actions.modify_radio('bestq-3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
Executing one action: self.actions.modify_radio('coherent-4', '2')
We are going to select this radio button: <input name="coherent-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
Executing one action: self.actions.modify_radio('complete-4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
Executing one action: self.actions.modify_radio('intra-4', '1')
We are going to select this radio button: <input name="intra-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
Executing one action: self.actions.modify_radio('diverse-4', '2')
We are going to select this radio button: <input name="diverse-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
Executing one action: self.actions.modify_radio('bestq-4', '1')
We are going to select this radio button: <input name="bestq-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
Executing one action: self.actions.modify_radio('coherent-5', '2')
We are going to select this radio button: <input name="coherent-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
Executing one action: self.actions.modify_radio('complete-5', '1')
We are going to select this radio button: <input name="complete-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
Executing one action: self.actions.modify_radio('intra-5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
Executing one action: self.actions.modify_radio('diverse-5', '2')
We are going to select this radio button: <input name="diverse-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
Executing one action: self.actions.modify_radio('bestq-5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.36
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0]}
instance_id: 33698 <-> row_number: 44
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 44 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [2.0, 2.0, 2.0], 'complete-1': [2.0, 2.0, 2.0], 'intra-1': [2.0, 1.0, 2.0], 'diverse-1': [1.0, 1.0, 2.0], 'bestq-1': [2.0, 2.0, 2.0], 'coherent-2': [2.0, 2.0, 2.0], 'complete-2': [2.0, 2.0, 2.0], 'intra-2': [2.0, 2.0, 2.0], 'diverse-2': [2.0, 2.0, 2.0], 'bestq-2': [2.0, 2.0, 2.0], 'coherent-3': [1, 2, 1], 'complete-3': [1, 2, 1], 'intra-3': [2, 1, 1], 'diverse-3': [1.0, 1.0, 1.0], 'bestq-3': [2, 2, 1], 'coherent-4': [2, 2, 2], 'complete-4': [2.0, 1.0, 2.0], 'intra-4': [1.0, 2.0, 1.0], 'diverse-4': [1, 1, 2], 'bestq-4': [2, 2, 2], 'coherent-5': [2, 2, 2], 'complete-5': [2, 2, 2], 'intra-5': [2.0, 2.0, 2.0], 'diverse-5': [2, 2, 2], 'bestq-5': [2, 2, 2]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
Executing one action: self.actions.modify_radio('coherent-1', '2')
We are going to select this radio button: <input name="coherent-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
Executing one action: self.actions.modify_radio('complete-1', '2')
We are going to select this radio button: <input name="complete-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
Executing one action: self.actions.modify_radio('intra-1', '2')
We are going to select this radio button: <input name="intra-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
Executing one action: self.actions.modify_radio('diverse-1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
Executing one action: self.actions.modify_radio('bestq-1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
Executing one action: self.actions.modify_radio('coherent-2', '2')
We are going to select this radio button: <input name="coherent-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
Executing one action: self.actions.modify_radio('complete-2', '2')
We are going to select this radio button: <input name="complete-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
Executing one action: self.actions.modify_radio('intra-2', '2')
We are going to select this radio button: <input name="intra-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
Executing one action: self.actions.modify_radio('diverse-2', '2')
We are going to select this radio button: <input name="diverse-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
Executing one action: self.actions.modify_radio('bestq-2', '2')
We are going to select this radio button: <input name="bestq-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
Executing one action: self.actions.modify_radio('coherent-3', 'value_you_want_to_select')
The input value (`value_you_want_to_select`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('coherent-3', 'value_you_want_to_select'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
Executing one action: self.actions.modify_radio('complete-3', '2')
We are going to select this radio button: <input name="complete-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
Executing one action: self.actions.modify_radio('intra-3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
Executing one action: self.actions.modify_radio('diverse-3', '2')
We are going to select this radio button: <input name="diverse-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
Executing one action: self.actions.modify_radio('bestq-3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
Executing one action: self.actions.modify_radio('coherent-4', '2')
We are going to select this radio button: <input name="coherent-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
Executing one action: self.actions.modify_radio('complete-4', '2')
We are going to select this radio button: <input name="complete-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
Executing one action: self.actions.modify_radio('intra-4', '1')
We are going to select this radio button: <input name="intra-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
Executing one action: self.actions.modify_radio('diverse-4', '2')
We are going to select this radio button: <input name="diverse-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
Executing one action: self.actions.modify_radio('bestq-4', '2')
We are going to select this radio button: <input name="bestq-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
Executing one action: self.actions.modify_radio('coherent-5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
Executing one action: self.actions.modify_radio('complete-5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
Executing one action: self.actions.modify_radio('intra-5', '1')
We are going to select this radio button: <input name="intra-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
Executing one action: self.actions.modify_radio('diverse-5', '2')
We are going to select this radio button: <input name="diverse-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
Executing one action: self.actions.modify_radio('bestq-5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.52
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0]}
instance_id: 33700 <-> row_number: 46
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 46 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [1.0, 1.0, 2.0], 'complete-1': [1.0, 2.0, 2.0], 'intra-1': [2.0, 2.0, 1.0], 'diverse-1': [1.0, 1.0, 2.0], 'bestq-1': [2.0, 1.0, 2.0], 'coherent-2': [1.0, 1.0, 1.0], 'complete-2': [1.0, 1.0, 2.0], 'intra-2': [1.0, 1.0, 2.0], 'diverse-2': [1.0, 2.0, 2.0], 'bestq-2': [1.0, 1.0, 2.0], 'coherent-3': [1, 2, 2], 'complete-3': [1, 2, 2], 'intra-3': [2, 2, 2], 'diverse-3': [2.0, 2.0, 2.0], 'bestq-3': [1, 2, 2], 'coherent-4': [1, 1, 1], 'complete-4': [2.0, 1.0, 1.0], 'intra-4': [1.0, 1.0, 1.0], 'diverse-4': [1, 1, 1], 'bestq-4': [2, 1, 1], 'coherent-5': [1, 1, 2], 'complete-5': [2, 1, 2], 'intra-5': [1.0, 1.0, 2.0], 'diverse-5': [1, 2, 2], 'bestq-5': [1, 1, 2]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
Executing one action: self.actions.modify_radio('coherent-1', '1')
We are going to select this radio button: <input name="coherent-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
Executing one action: self.actions.modify_radio('complete-1', '1')
We are going to select this radio button: <input name="complete-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
Executing one action: self.actions.modify_radio('intra-1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
Executing one action: self.actions.modify_radio('diverse-1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
Executing one action: self.actions.modify_radio('bestq-1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
Executing one action: self.actions.modify_radio('coherent-2', '1')
We are going to select this radio button: <input name="coherent-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
Executing one action: self.actions.modify_radio('complete-2', '1')
We are going to select this radio button: <input name="complete-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
Executing one action: self.actions.modify_radio('intra-2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
Executing one action: self.actions.modify_radio('diverse-2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
Executing one action: self.actions.modify_radio('bestq-2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
Executing one action: self.actions.modify_radio('coherent-3', '2')
We are going to select this radio button: <input name="coherent-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
Executing one action: self.actions.modify_radio('complete-3', '1')
We are going to select this radio button: <input name="complete-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
Executing one action: self.actions.modify_radio('intra-3', '1')
We are going to select this radio button: <input name="intra-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
Executing one action: self.actions.modify_radio('diverse-3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
Executing one action: self.actions.modify_radio('bestq-3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
Executing one action: self.actions.modify_radio('coherent-4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
Executing one action: self.actions.modify_radio('complete-4', '1')
We are going to select this radio button: <input name="complete-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
Executing one action: self.actions.modify_radio('intra-4', '1')
We are going to select this radio button: <input name="intra-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
Executing one action: self.actions.modify_radio('diverse-4', '1')
We are going to select this radio button: <input name="diverse-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
Executing one action: self.actions.modify_radio('bestq-4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
Executing one action: self.actions.modify_radio('coherent-5', '2')
We are going to select this radio button: <input name="coherent-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
Executing one action: self.actions.modify_radio('complete-5', '1')
We are going to select this radio button: <input name="complete-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
Executing one action: self.actions.modify_radio('intra-5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
Executing one action: self.actions.modify_radio('diverse-5', '1')
We are going to select this radio button: <input name="diverse-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
Executing one action: self.actions.modify_radio('bestq-5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.28
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33681 <-> row_number: 27
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 27 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [1.0, 2.0, 2.0], 'complete-1': [1.0, 2.0, 1.0], 'intra-1': [2.0, 1.0, 2.0], 'diverse-1': [1.0, 1.0, 1.0], 'bestq-1': [1.0, 1.0, 2.0], 'coherent-2': [2.0, 2.0, 2.0], 'complete-2': [1.0, 2.0, 1.0], 'intra-2': [1.0, 1.0, 2.0], 'diverse-2': [2.0, 1.0, 1.0], 'bestq-2': [1.0, 2.0, 1.0], 'coherent-3': [2, 2, 1], 'complete-3': [2, 2, 1], 'intra-3': [1, 1, 1], 'diverse-3': [1.0, 1.0, 1.0], 'bestq-3': [2, 2, 1], 'coherent-4': [2, 1, 1], 'complete-4': [1.0, 1.0, 1.0], 'intra-4': [1.0, 2.0, 1.0], 'diverse-4': [2, 2, 1], 'bestq-4': [1, 1, 1], 'coherent-5': [2, 1, 1], 'complete-5': [2, 1, 1], 'intra-5': [1.0, 1.0, 1.0], 'diverse-5': [2, 2, 1], 'bestq-5': [1, 1, 2]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
Executing one action: self.actions.modify_radio('coherent-1', '2')
We are going to select this radio button: <input name="coherent-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
Executing one action: self.actions.modify_radio('complete-1', '2')
We are going to select this radio button: <input name="complete-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
Executing one action: self.actions.modify_radio('intra-1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
Executing one action: self.actions.modify_radio('diverse-1', '2')
We are going to select this radio button: <input name="diverse-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
Executing one action: self.actions.modify_radio('bestq-1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
Executing one action: self.actions.modify_radio('coherent-2', '1')


If you intended to select the second option, "Relation Set B", you would use the following command:

plaintext
self.actions.modify_radio('coherent-2', '2')

Failed to execute an action self.actions.modify_radio('coherent-2', '1')


If you intended to select the second option, "Relation Set B", you would use the following command:

plaintext
self.actions.modify_radio('coherent-2', '2')
, error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
Executing one action: self.actions.modify_radio('complete-2', '2')
We are going to select this radio button: <input name="complete-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
Executing one action: self.actions.modify_radio('intra-2', '2')
We are going to select this radio button: <input name="intra-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
Executing one action: self.actions.modify_radio('diverse-2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
Executing one action: self.actions.modify_radio('bestq-2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
Executing one action: self.actions.modify_radio('coherent-3', '1')
We are going to select this radio button: <input name="coherent-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
Executing one action: self.actions.modify_radio('complete-3', '1')
We are going to select this radio button: <input name="complete-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
Executing one action: self.actions.modify_radio('intra-3', '1')
We are going to select this radio button: <input name="intra-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
Executing one action: self.actions.modify_radio('diverse-3', '1')
We are going to select this radio button: <input name="diverse-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
Executing one action: self.actions.modify_radio('bestq-3', '1')
We are going to select this radio button: <input name="bestq-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
Executing one action: self.actions.modify_radio('coherent-4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
Executing one action: self.actions.modify_radio('complete-4', '1')
We are going to select this radio button: <input name="complete-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
Executing one action: self.actions.modify_radio('intra-4', '2')
We are going to select this radio button: <input name="intra-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
Executing one action: self.actions.modify_radio('diverse-4', 1)
We are going to select this radio button: <input name="diverse-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
Executing one action: self.actions.modify_radio('bestq-4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
Executing one action: self.actions.modify_radio('coherent-5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
Executing one action: self.actions.modify_radio('complete-5', '1')
We are going to select this radio button: <input name="complete-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
Executing one action: self.actions.modify_radio('intra-5', '1')
We are going to select this radio button: <input name="intra-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
Executing one action: self.actions.modify_radio('diverse-5', '2')
We are going to select this radio button: <input name="diverse-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
Executing one action: self.actions.modify_radio('bestq-5', '1')
We are going to select this radio button: <input name="bestq-5" type="radio" value="1">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.32
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0]}
instance_id: 33696 <-> row_number: 42
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 42 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [1.0, 2.0, 2.0], 'complete-1': [1.0, 2.0, 2.0], 'intra-1': [2.0, 2.0, 2.0], 'diverse-1': [2.0, 2.0, 2.0], 'bestq-1': [1.0, 2.0, 2.0], 'coherent-2': [2.0, 2.0, 2.0], 'complete-2': [2.0, 2.0, 2.0], 'intra-2': [2.0, 2.0, 2.0], 'diverse-2': [2.0, 2.0, 2.0], 'bestq-2': [2.0, 2.0, 2.0], 'coherent-3': [2, 2, 2], 'complete-3': [2, 2, 2], 'intra-3': [1, 1, 1], 'diverse-3': [1.0, 2.0, 1.0], 'bestq-3': [2, 1, 1], 'coherent-4': [1, 2, 1], 'complete-4': [1.0, 2.0, 1.0], 'intra-4': [2.0, 2.0, 1.0], 'diverse-4': [2, 2, 1], 'bestq-4': [1, 2, 1], 'coherent-5': [1, 1, 2], 'complete-5': [1, 1, 2], 'intra-5': [2.0, 1.0, 2.0], 'diverse-5': [2, 1, 2], 'bestq-5': [1, 1, 2]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
Executing one action: self.actions.modify_radio('coherent-1', '1')
We are going to select this radio button: <input name="coherent-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
Executing one action: self.actions.modify_radio('complete-1', '2')
We are going to select this radio button: <input name="complete-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
Executing one action: self.actions.modify_radio('intra-1', '1')
We are going to select this radio button: <input name="intra-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
Executing one action: self.actions.modify_radio('diverse-1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
Executing one action: self.actions.modify_radio('bestq-1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
Executing one action: self.actions.modify_radio('coherent-2', '2')
We are going to select this radio button: <input name="coherent-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
Executing one action: self.actions.modify_radio('complete-2', '2')
We are going to select this radio button: <input name="complete-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
Executing one action: self.actions.modify_radio('intra-2', '2')
We are going to select this radio button: <input name="intra-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
Executing one action: self.actions.modify_radio('diverse-2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
Executing one action: self.actions.modify_radio('bestq-2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
Executing one action: self.actions.modify_radio('coherent-3', '1')


This command would select the radio button for "Relation Set A" for question 1 regarding the coherency of relations with the story in the "One day, he could not find his bag." sentence.
Failed to execute an action self.actions.modify_radio('coherent-3', '1')


This command would select the radio button for "Relation Set A" for question 1 regarding the coherency of relations with the story in the "One day, he could not find his bag." sentence., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
Executing one action: self.actions.modify_radio('complete-3', '2')
We are going to select this radio button: <input name="complete-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
Executing one action: self.actions.modify_radio('intra-3', '2')
We are going to select this radio button: <input name="intra-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
Executing one action: self.actions.modify_radio('diverse-3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
Executing one action: self.actions.modify_radio('bestq-3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
Executing one action: self.actions.modify_radio('coherent-4', '1')
We are going to select this radio button: <input name="coherent-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
Executing one action: self.actions.modify_radio('complete-4', '2')
We are going to select this radio button: <input name="complete-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
Executing one action: self.actions.modify_radio('intra-4', '2')
We are going to select this radio button: <input name="intra-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
Executing one action: self.actions.modify_radio('diverse-4', '1')
We are going to select this radio button: <input name="diverse-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
Executing one action: self.actions.modify_radio('bestq-4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
Executing one action: self.actions.modify_radio('coherent-5', '2')
We are going to select this radio button: <input name="coherent-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
Executing one action: self.actions.modify_radio('complete-5', '2')
We are going to select this radio button: <input name="complete-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
Executing one action: self.actions.modify_radio('intra-5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
Executing one action: self.actions.modify_radio('diverse-5', '2')
We are going to select this radio button: <input name="diverse-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
Executing one action: self.actions.modify_radio('bestq-5', '1')
We are going to select this radio button: <input name="bestq-5" type="radio" value="1">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.36
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0]}
instance_id: 33689 <-> row_number: 35
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 35 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [2.0, 2.0, 2.0], 'complete-1': [2.0, 2.0, 2.0], 'intra-1': [1.0, 1.0, 2.0], 'diverse-1': [1.0, 2.0, 2.0], 'bestq-1': [2.0, 2.0, 2.0], 'coherent-2': [1.0, 1.0, 1.0], 'complete-2': [1.0, 1.0, 2.0], 'intra-2': [2.0, 1.0, 1.0], 'diverse-2': [2.0, 1.0, 2.0], 'bestq-2': [1.0, 1.0, 1.0], 'coherent-3': [2, 1, 1], 'complete-3': [2, 1, 1], 'intra-3': [2, 2, 1], 'diverse-3': [1.0, 2.0, 2.0], 'bestq-3': [2, 1, 1], 'coherent-4': [2, 1, 1], 'complete-4': [2.0, 1.0, 2.0], 'intra-4': [1.0, 2.0, 2.0], 'diverse-4': [1, 2, 1], 'bestq-4': [2, 1, 2], 'coherent-5': [1, 2, 2], 'complete-5': [1, 2, 2], 'intra-5': [2.0, 2.0, 2.0], 'diverse-5': [2, 2, 1], 'bestq-5': [1, 2, 2]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
Executing one action: self.actions.modify_radio('coherent-1', '1')
We are going to select this radio button: <input name="coherent-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
Executing one action: self.actions.modify_radio('complete-1', '2')
We are going to select this radio button: <input name="complete-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
Executing one action: self.actions.modify_radio('intra-1', '1')
We are going to select this radio button: <input name="intra-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
Executing one action: self.actions.modify_radio('diverse-1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
Executing one action: self.actions.modify_radio('bestq-1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
Executing one action: self.actions.modify_radio('coherent-2', '1')
We are going to select this radio button: <input name="coherent-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
Executing one action: self.actions.modify_radio('complete-2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
Executing one action: self.actions.modify_radio('intra-2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
Executing one action: self.actions.modify_radio('diverse-2', '1')
We are going to select this radio button: <input name="diverse-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
Executing one action: self.actions.modify_radio('bestq-2', '1')
We are going to select this radio button: <input name="bestq-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
Executing one action: self.actions.modify_radio('coherent-3', '2')
We are going to select this radio button: <input name="coherent-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
Executing one action: self.actions.modify_radio('complete-3', '2')
We are going to select this radio button: <input name="complete-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
Executing one action: self.actions.modify_radio('intra-3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
Executing one action: self.actions.modify_radio('diverse-3', '1')
We are going to select this radio button: <input name="diverse-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
Executing one action: self.actions.modify_radio('bestq-3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
Executing one action: self.actions.modify_radio('coherent-4', '1')
We are going to select this radio button: <input name="coherent-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
Executing one action: self.actions.modify_radio('complete-4', '2')
We are going to select this radio button: <input name="complete-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
Executing one action: self.actions.modify_radio('intra-4', '2')
We are going to select this radio button: <input name="intra-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
Executing one action: self.actions.modify_radio('diverse-4', '1')
We are going to select this radio button: <input name="diverse-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
Executing one action: self.actions.modify_radio('bestq-4', '1')
We are going to select this radio button: <input name="bestq-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
Executing one action: self.actions.modify_radio('coherent-5', '1')
We are going to select this radio button: <input name="coherent-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
Executing one action: self.actions.modify_radio('complete-5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
Executing one action: self.actions.modify_radio('intra-5', '1')
We are going to select this radio button: <input name="intra-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
Executing one action: self.actions.modify_radio('diverse-5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
Executing one action: self.actions.modify_radio('bestq-5', '1')
We are going to select this radio button: <input name="bestq-5" type="radio" value="1">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.32
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33686 <-> row_number: 32
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 32 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [1.0, 2.0, 2.0], 'complete-1': [1.0, 2.0, 2.0], 'intra-1': [1.0, 2.0, 1.0], 'diverse-1': [2.0, 2.0, 2.0], 'bestq-1': [1.0, 2.0, 2.0], 'coherent-2': [2.0, 2.0, 2.0], 'complete-2': [2.0, 2.0, 2.0], 'intra-2': [1.0, 2.0, 2.0], 'diverse-2': [1.0, 1.0, 1.0], 'bestq-2': [2.0, 2.0, 2.0], 'coherent-3': [1, 1, 1], 'complete-3': [1, 1, 2], 'intra-3': [1, 1, 1], 'diverse-3': [2.0, 2.0, 2.0], 'bestq-3': [1, 1, 1], 'coherent-4': [1, 1, 1], 'complete-4': [1.0, 1.0, 2.0], 'intra-4': [2.0, 1.0, 2.0], 'diverse-4': [2, 1, 2], 'bestq-4': [1, 1, 1], 'coherent-5': [1, 2, 2], 'complete-5': [2, 2, 2], 'intra-5': [2.0, 2.0, 2.0], 'diverse-5': [1, 1, 1], 'bestq-5': [2, 2, 2]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
Executing one action: self.actions.modify_radio('coherent-1', '2')
We are going to select this radio button: <input name="coherent-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
Executing one action: self.actions.modify_radio('complete-1', '2')
We are going to select this radio button: <input name="complete-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
Executing one action: self.actions.modify_radio('intra-1', '2')
We are going to select this radio button: <input name="intra-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
Executing one action: self.actions.modify_radio('diverse-1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
Executing one action: self.actions.modify_radio('bestq-1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
Executing one action: self.actions.modify_radio('coherent-2', '2')
We are going to select this radio button: <input name="coherent-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
Executing one action: self.actions.modify_radio('complete-2', '2')
We are going to select this radio button: <input name="complete-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
Executing one action: self.actions.modify_radio('intra-2', '2')
We are going to select this radio button: <input name="intra-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
Executing one action: self.actions.modify_radio('diverse-2', 'value') 

However, the specific value to set ('1' or '2') is not provided in your request. Please specify the value you'd like to set for the 'diverse-2' radio input.
Failed to execute an action self.actions.modify_radio('diverse-2', 'value') 

However, the specific value to set ('1' or '2') is not provided in your request. Please specify the value you'd like to set for the 'diverse-2' radio input., error: unterminated string literal (detected at line 3) (<string>, line 3)
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
Executing one action: self.actions.modify_radio('bestq-2', '1')


And to select Relation Set B for the input named "bestq-2", use this command:

self.actions.modify_radio('bestq-2', '2')
 

Choose the appropriate command based on which relation set you wish to select as the answer.
Failed to execute an action self.actions.modify_radio('bestq-2', '1')


And to select Relation Set B for the input named "bestq-2", use this command:

self.actions.modify_radio('bestq-2', '2')
 

Choose the appropriate command based on which relation set you wish to select as the answer., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
Executing one action: Based on the available information, it seems you are asking to generate a command to modify a radio input with the name "coherent-3". However, the screenshot provided does not show which value should be selected for this input. Please specify the value that should be selected for the "coherent-3" radio input so I can generate the appropriate command.
Failed to execute an action Based on the available information, it seems you are asking to generate a command to modify a radio input with the name "coherent-3". However, the screenshot provided does not show which value should be selected for this input. Please specify the value that should be selected for the "coherent-3" radio input so I can generate the appropriate command., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
Executing one action: self.actions.modify_radio('complete-3', '2')
We are going to select this radio button: <input name="complete-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
Executing one action: self.actions.modify_radio('intra-3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
Executing one action: self.actions.modify_radio('diverse-3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
Executing one action: self.actions.modify_radio('bestq-3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
Executing one action: self.actions.modify_radio('coherent-4', '2')
We are going to select this radio button: <input name="coherent-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
Executing one action: self.actions.modify_radio('complete-4', '1')
We are going to select this radio button: <input name="complete-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
Executing one action: self.actions.modify_radio('intra-4', '2')
We are going to select this radio button: <input name="intra-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
Executing one action: self.actions.modify_radio('diverse-4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
Executing one action: self.actions.modify_radio('bestq-4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
Executing one action: self.actions.modify_radio('coherent-5', '2')
We are going to select this radio button: <input name="coherent-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
Executing one action: self.actions.modify_radio('complete-5', '1')
We are going to select this radio button: <input name="complete-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
Executing one action: self.actions.modify_radio('intra-5', '1')
We are going to select this radio button: <input name="intra-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
Executing one action: self.actions.modify_radio('diverse-5', '2')
We are going to select this radio button: <input name="diverse-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
Executing one action: self.actions.modify_radio('bestq-5', '2')
We are going to select this radio button: <input name="bestq-5" type="radio" value="2">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.36
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0]}
instance_id: 33699 <-> row_number: 45
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 45 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [2.0, 1.0, 2.0], 'complete-1': [2.0, 1.0, 2.0], 'intra-1': [2.0, 1.0, 2.0], 'diverse-1': [2.0, 1.0, 1.0], 'bestq-1': [2.0, 1.0, 2.0], 'coherent-2': [2.0, 2.0, 2.0], 'complete-2': [2.0, 2.0, 2.0], 'intra-2': [2.0, 2.0, 2.0], 'diverse-2': [2.0, 2.0, 1.0], 'bestq-2': [2.0, 2.0, 2.0], 'coherent-3': [2, 2, 2], 'complete-3': [2, 2, 2], 'intra-3': [2, 2, 2], 'diverse-3': [2.0, 2.0, 1.0], 'bestq-3': [2, 2, 2], 'coherent-4': [2, 2, 1], 'complete-4': [2.0, 2.0, 1.0], 'intra-4': [2.0, 2.0, 1.0], 'diverse-4': [2, 1, 2], 'bestq-4': [2, 2, 1], 'coherent-5': [2, 2, 2], 'complete-5': [2, 2, 2], 'intra-5': [2.0, 2.0, 2.0], 'diverse-5': [2, 1, 1], 'bestq-5': [2, 2, 2]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
Executing one action: self.actions.modify_radio('coherent-1', '1')
We are going to select this radio button: <input name="coherent-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
Executing one action: self.actions.modify_radio('complete-1', '2')
We are going to select this radio button: <input name="complete-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
Executing one action: self.actions.modify_radio('intra-1', '2')
We are going to select this radio button: <input name="intra-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
Executing one action: self.actions.modify_radio('diverse-1', '2')
We are going to select this radio button: <input name="diverse-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
Executing one action: self.actions.modify_radio('bestq-1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
Executing one action: self.actions.modify_radio('coherent-2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
Executing one action: self.actions.modify_radio('complete-2', '2')
We are going to select this radio button: <input name="complete-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
Executing one action: self.actions.modify_radio('intra-2', '2')
We are going to select this radio button: <input name="intra-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
Executing one action: self.actions.modify_radio('diverse-2', '2')
We are going to select this radio button: <input name="diverse-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
Executing one action: self.actions.modify_radio('bestq-2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
Executing one action: self.actions.modify_radio('coherent-3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
Executing one action: self.actions.modify_radio('complete-3', '2')
We are going to select this radio button: <input name="complete-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
Executing one action: self.actions.modify_radio('intra-3', '2')
We are going to select this radio button: <input name="intra-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
Executing one action: self.actions.modify_radio('diverse-3', '2')
We are going to select this radio button: <input name="diverse-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
Executing one action: self.actions.modify_radio('bestq-3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
Executing one action: self.actions.modify_radio('coherent-4', '2')
We are going to select this radio button: <input name="coherent-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
Executing one action: self.actions.modify_radio('complete-4', '2')
We are going to select this radio button: <input name="complete-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
Executing one action: self.actions.modify_radio('intra-4', '2')
We are going to select this radio button: <input name="intra-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
Executing one action: self.actions.modify_radio('diverse-4', '2')
We are going to select this radio button: <input name="diverse-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
Executing one action: self.actions.modify_radio('bestq-4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
Executing one action: self.actions.modify_radio('coherent-5', '2')
We are going to select this radio button: <input name="coherent-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
Executing one action: self.actions.modify_radio('complete-5', '1')
We are going to select this radio button: <input name="complete-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
Executing one action: self.actions.modify_radio('intra-5', '2')
We are going to select this radio button: <input name="intra-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
Executing one action: self.actions.modify_radio('diverse-5', '2')
We are going to select this radio button: <input name="diverse-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
Executing one action: self.actions.modify_radio('bestq-5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.56
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 33684 <-> row_number: 30
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 30 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [1.0, 2.0, 2.0], 'complete-1': [1.0, 2.0, 2.0], 'intra-1': [2.0, 2.0, 2.0], 'diverse-1': [1.0, 1.0, 1.0], 'bestq-1': [2.0, 2.0, 2.0], 'coherent-2': [1.0, 1.0, 2.0], 'complete-2': [1.0, 2.0, 2.0], 'intra-2': [1.0, 2.0, 2.0], 'diverse-2': [1.0, 1.0, 1.0], 'bestq-2': [2.0, 1.0, 1.0], 'coherent-3': [2, 1, 2], 'complete-3': [1, 1, 1], 'intra-3': [1, 2, 2], 'diverse-3': [1.0, 2.0, 2.0], 'bestq-3': [2, 1, 1], 'coherent-4': [1, 2, 1], 'complete-4': [1.0, 1.0, 1.0], 'intra-4': [1.0, 2.0, 1.0], 'diverse-4': [1, 2, 1], 'bestq-4': [2, 2, 1], 'coherent-5': [1, 2, 2], 'complete-5': [1, 1, 1], 'intra-5': [1.0, 1.0, 2.0], 'diverse-5': [1, 1, 1], 'bestq-5': [1, 1, 2]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
Executing one action: self.actions.modify_radio('coherent-1', '2')
We are going to select this radio button: <input name="coherent-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
Executing one action: self.actions.modify_radio('complete-1', '2')
We are going to select this radio button: <input name="complete-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
Executing one action: self.actions.modify_radio('intra-1', '2')
We are going to select this radio button: <input name="intra-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
Executing one action: self.actions.modify_radio('diverse-1', '2')
We are going to select this radio button: <input name="diverse-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
Executing one action: self.actions.modify_radio('bestq-1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
Executing one action: self.actions.modify_radio('coherent-2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
Executing one action: self.actions.modify_radio('complete-2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
Executing one action: self.actions.modify_radio('intra-2', '2')
We are going to select this radio button: <input name="intra-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
Executing one action: self.actions.modify_radio('diverse-2', '2')
We are going to select this radio button: <input name="diverse-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
Executing one action: self.actions.modify_radio('bestq-2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
Executing one action: self.actions.modify_radio('coherent-3', '2')
We are going to select this radio button: <input name="coherent-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
Executing one action: self.actions.modify_radio('complete-3', '2')
We are going to select this radio button: <input name="complete-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
Executing one action: self.actions.modify_radio('intra-3', '2')
We are going to select this radio button: <input name="intra-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
Executing one action: self.actions.modify_radio('diverse-3', '2')
We are going to select this radio button: <input name="diverse-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
Executing one action: self.actions.modify_radio('bestq-3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
Executing one action: self.actions.modify_radio('coherent-4', '2')
We are going to select this radio button: <input name="coherent-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
Executing one action: self.actions.modify_radio('complete-4', '1')
We are going to select this radio button: <input name="complete-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
Executing one action: self.actions.modify_radio('intra-4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
Executing one action: self.actions.modify_radio('diverse-4', '2')
We are going to select this radio button: <input name="diverse-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
Executing one action: self.actions.modify_radio('bestq-4', '1')
We are going to select this radio button: <input name="bestq-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
Executing one action: self.actions.modify_radio('coherent-5', '2')
We are going to select this radio button: <input name="coherent-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
Executing one action: self.actions.modify_radio('complete-5', '2')
We are going to select this radio button: <input name="complete-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
Executing one action: self.actions.modify_radio('intra-5', '2')
We are going to select this radio button: <input name="intra-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
Executing one action: self.actions.modify_radio('diverse-5', '2')
We are going to select this radio button: <input name="diverse-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
Executing one action: self.actions.modify_radio('bestq-5', '2')
We are going to select this radio button: <input name="bestq-5" type="radio" value="2">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.36
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33703 <-> row_number: 49
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 49 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [1.0, 2.0, 2.0], 'complete-1': [1.0, 2.0, 2.0], 'intra-1': [2.0, 1.0, 2.0], 'diverse-1': [1.0, 2.0, 2.0], 'bestq-1': [1.0, 1.0, 2.0], 'coherent-2': [1.0, 1.0, 1.0], 'complete-2': [2.0, 1.0, 1.0], 'intra-2': [1.0, 1.0, 1.0], 'diverse-2': [1.0, 1.0, 2.0], 'bestq-2': [1.0, 2.0, 1.0], 'coherent-3': [1, 1, 1], 'complete-3': [2, 2, 1], 'intra-3': [1, 1, 1], 'diverse-3': [1.0, 2.0, 2.0], 'bestq-3': [2, 2, 1], 'coherent-4': [1, 2, 1], 'complete-4': [1.0, 2.0, 1.0], 'intra-4': [1.0, 1.0, 1.0], 'diverse-4': [1, 2, 1], 'bestq-4': [2, 2, 1], 'coherent-5': [1, 2, 1], 'complete-5': [1, 1, 1], 'intra-5': [2.0, 2.0, 1.0], 'diverse-5': [1, 2, 2], 'bestq-5': [1, 1, 1]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
Executing one action: self.actions.modify_radio('coherent-1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
Executing one action: self.actions.modify_radio('complete-1', '2')
We are going to select this radio button: <input name="complete-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
Executing one action: self.actions.modify_radio('intra-1', '2')
We are going to select this radio button: <input name="intra-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
Executing one action: self.actions.modify_radio('diverse-1', '2')
We are going to select this radio button: <input name="diverse-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
Executing one action: self.actions.modify_radio('bestq-1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
Executing one action: self.actions.modify_radio('coherent-2', '1')
We are going to select this radio button: <input name="coherent-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
Executing one action: self.actions.modify_radio('complete-2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
Executing one action: self.actions.modify_radio('intra-2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
Executing one action: self.actions.modify_radio('diverse-2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
Executing one action: self.actions.modify_radio('bestq-2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
Executing one action: self.actions.modify_radio('coherent-3', '1')
We are going to select this radio button: <input name="coherent-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
Executing one action: self.actions.modify_radio('complete-3', '1')
We are going to select this radio button: <input name="complete-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
Executing one action: self.actions.modify_radio('intra-3', '1')
We are going to select this radio button: <input name="intra-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
Executing one action: self.actions.modify_radio('diverse-3', '2')
We are going to select this radio button: <input name="diverse-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
Executing one action: self.actions.modify_radio('bestq-3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
Executing one action: self.actions.modify_radio('coherent-4', '2')
We are going to select this radio button: <input name="coherent-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
Executing one action: self.actions.modify_radio('complete-4', '2')
We are going to select this radio button: <input name="complete-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
Executing one action: self.actions.modify_radio('intra-4', '2')
We are going to select this radio button: <input name="intra-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
Executing one action: self.actions.modify_radio('diverse-4', '2')
We are going to select this radio button: <input name="diverse-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
Executing one action: self.actions.modify_radio('bestq-4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
Executing one action: self.actions.modify_radio('coherent-5', '1')
We are going to select this radio button: <input name="coherent-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
Executing one action: self.actions.modify_radio('complete-5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
Executing one action: self.actions.modify_radio('intra-5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
Executing one action: self.actions.modify_radio('diverse-5', '2')
We are going to select this radio button: <input name="diverse-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
Executing one action: self.actions.modify_radio('bestq-5', 'value_to_set')
The input value (`value_to_set`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('bestq-5', 'value_to_set'), error: 'NoneType' object has no attribute 'get_attribute'
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.36
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0]}
instance_id: 33676 <-> row_number: 22
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 22 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [2.0, 2.0, 1.0], 'complete-1': [2.0, 2.0, 1.0], 'intra-1': [2.0, 2.0, 1.0], 'diverse-1': [1.0, 2.0, 2.0], 'bestq-1': [2.0, 2.0, 1.0], 'coherent-2': [2.0, 2.0, 2.0], 'complete-2': [2.0, 2.0, 2.0], 'intra-2': [2.0, 2.0, 2.0], 'diverse-2': [2.0, 2.0, 2.0], 'bestq-2': [2.0, 2.0, 2.0], 'coherent-3': [1, 1, 1], 'complete-3': [1, 1, 1], 'intra-3': [1, 1, 1], 'diverse-3': [1.0, 1.0, 1.0], 'bestq-3': [1, 1, 1], 'coherent-4': [2, 2, 2], 'complete-4': [2.0, 2.0, 2.0], 'intra-4': [2.0, 2.0, 2.0], 'diverse-4': [2, 2, 1], 'bestq-4': [2, 2, 2], 'coherent-5': [1, 2, 1], 'complete-5': [1, 2, 1], 'intra-5': [1.0, 2.0, 1.0], 'diverse-5': [2, 2, 2], 'bestq-5': [2, 2, 1]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
Executing one action: self.actions.modify_radio('coherent-1', '2')
We are going to select this radio button: <input name="coherent-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
Executing one action: self.actions.modify_radio('complete-1', '2')
We are going to select this radio button: <input name="complete-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
Executing one action: self.actions.modify_radio('intra-1', '2')
We are going to select this radio button: <input name="intra-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
Executing one action: self.actions.modify_radio('diverse-1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
Executing one action: self.actions.modify_radio('bestq-1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
Executing one action: self.actions.modify_radio('coherent-2', '2')
We are going to select this radio button: <input name="coherent-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
Executing one action: self.actions.modify_radio('complete-2', '2')
We are going to select this radio button: <input name="complete-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
Executing one action: self.actions.modify_radio('intra-2', '1')
We are going to select this radio button: <input name="intra-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
Executing one action: self.actions.modify_radio('diverse-2', '2')
We are going to select this radio button: <input name="diverse-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
Executing one action: self.actions.modify_radio('bestq-2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
Executing one action: self.actions.modify_radio('coherent-3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
Executing one action: self.actions.modify_radio('complete-3', '2')
We are going to select this radio button: <input name="complete-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
Executing one action: self.actions.modify_radio('intra-3', '2')
We are going to select this radio button: <input name="intra-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
Executing one action: self.actions.modify_radio('diverse-3', '2')
We are going to select this radio button: <input name="diverse-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
Executing one action: self.actions.modify_radio('bestq-3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
Executing one action: self.actions.modify_radio('coherent-4', 'selected_value')


Where `'selected_value'` should be replaced with the actual value you want to select (`'1'` or `'2'`) depending on which relation set (A or B) is deemed most coherent with the story provided in the task. The exact selected value is not provided in the input; therefore, you need to replace `'selected_value'` with the actual value before running the command.
Failed to execute an action self.actions.modify_radio('coherent-4', 'selected_value')


Where `'selected_value'` should be replaced with the actual value you want to select (`'1'` or `'2'`) depending on which relation set (A or B) is deemed most coherent with the story provided in the task. The exact selected value is not provided in the input; therefore, you need to replace `'selected_value'` with the actual value before running the command., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
Executing one action: self.actions.modify_radio('complete-4', '2')
We are going to select this radio button: <input name="complete-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
Executing one action: self.actions.modify_radio('intra-4', '1')
We are going to select this radio button: <input name="intra-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
Executing one action: self.actions.modify_radio('diverse-4', '2')
We are going to select this radio button: <input name="diverse-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
Executing one action: self.actions.modify_radio('bestq-4', '2')
We are going to select this radio button: <input name="bestq-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
Executing one action: self.actions.modify_radio('coherent-5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
Executing one action: self.actions.modify_radio('complete-5', '1')
We are going to select this radio button: <input name="complete-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
Executing one action: self.actions.modify_radio('intra-5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
Executing one action: self.actions.modify_radio('diverse-5', '2')
We are going to select this radio button: <input name="diverse-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
Executing one action: self.actions.modify_radio('bestq-5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.44
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0]}
instance_id: 33687 <-> row_number: 33
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 33 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [2.0, 1.0, 2.0], 'complete-1': [2.0, 1.0, 2.0], 'intra-1': [2.0, 1.0, 2.0], 'diverse-1': [2.0, 2.0, 2.0], 'bestq-1': [2.0, 1.0, 2.0], 'coherent-2': [1.0, 2.0, 1.0], 'complete-2': [1.0, 1.0, 1.0], 'intra-2': [1.0, 1.0, 1.0], 'diverse-2': [1.0, 2.0, 1.0], 'bestq-2': [1.0, 1.0, 1.0], 'coherent-3': [1, 1, 1], 'complete-3': [1, 1, 1], 'intra-3': [2, 1, 1], 'diverse-3': [1.0, 1.0, 1.0], 'bestq-3': [1, 1, 1], 'coherent-4': [1, 1, 1], 'complete-4': [1.0, 1.0, 1.0], 'intra-4': [1.0, 2.0, 1.0], 'diverse-4': [1, 2, 1], 'bestq-4': [1, 1, 1], 'coherent-5': [2, 1, 1], 'complete-5': [2, 1, 1], 'intra-5': [2.0, 1.0, 1.0], 'diverse-5': [2, 2, 1], 'bestq-5': [2, 2, 1]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
Executing one action: self.actions.modify_radio('coherent-1', '2')
We are going to select this radio button: <input name="coherent-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
Executing one action: self.actions.modify_radio('complete-1', '1')
We are going to select this radio button: <input name="complete-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
Executing one action: self.actions.modify_radio('intra-1', '2')
We are going to select this radio button: <input name="intra-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
Executing one action: self.actions.modify_radio('diverse-1', '2')
We are going to select this radio button: <input name="diverse-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
Executing one action: self.actions.modify_radio('bestq-1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
Executing one action: self.actions.modify_radio('coherent-2', '2')
We are going to select this radio button: <input name="coherent-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
Executing one action: self.actions.modify_radio('complete-2', '1')
We are going to select this radio button: <input name="complete-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
Executing one action: self.actions.modify_radio('intra-2', '1')
We are going to select this radio button: <input name="intra-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
Executing one action: self.actions.modify_radio('diverse-2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
Executing one action: self.actions.modify_radio('bestq-2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
Executing one action: self.actions.modify_radio('coherent-3', '2')
We are going to select this radio button: <input name="coherent-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
Executing one action: self.actions.modify_radio('complete-3', '2')
We are going to select this radio button: <input name="complete-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
Executing one action: self.actions.modify_radio('intra-3', '2')
We are going to select this radio button: <input name="intra-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
Executing one action: self.actions.modify_radio('diverse-3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
Executing one action: self.actions.modify_radio('bestq-3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
Executing one action: self.actions.modify_radio('coherent-4', '2')
We are going to select this radio button: <input name="coherent-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
Executing one action: self.actions.modify_radio('complete-4', '2')
We are going to select this radio button: <input name="complete-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
Executing one action: self.actions.modify_radio('intra-4', '2')
We are going to select this radio button: <input name="intra-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
Executing one action: self.actions.modify_radio('diverse-4', '2')
We are going to select this radio button: <input name="diverse-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
Executing one action: self.actions.modify_radio('bestq-4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
Executing one action: self.actions.modify_radio('coherent-5', '2')
We are going to select this radio button: <input name="coherent-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
Executing one action: self.actions.modify_radio('complete-5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
Executing one action: self.actions.modify_radio('intra-5', '1')
We are going to select this radio button: <input name="intra-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
Executing one action: self.actions.modify_radio('diverse-5', '2')
We are going to select this radio button: <input name="diverse-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
Executing one action: self.actions.modify_radio('bestq-5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.28
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0]}
instance_id: 33682 <-> row_number: 28
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 28 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [2.0, 1.0, 2.0], 'complete-1': [2.0, 1.0, 2.0], 'intra-1': [2.0, 1.0, 2.0], 'diverse-1': [2.0, 2.0, 1.0], 'bestq-1': [1.0, 1.0, 2.0], 'coherent-2': [1.0, 2.0, 2.0], 'complete-2': [1.0, 2.0, 2.0], 'intra-2': [1.0, 2.0, 2.0], 'diverse-2': [2.0, 1.0, 1.0], 'bestq-2': [1.0, 2.0, 2.0], 'coherent-3': [2, 1, 1], 'complete-3': [2, 1, 1], 'intra-3': [2, 1, 1], 'diverse-3': [1.0, 2.0, 1.0], 'bestq-3': [2, 1, 1], 'coherent-4': [2, 2, 2], 'complete-4': [2.0, 1.0, 2.0], 'intra-4': [1.0, 2.0, 2.0], 'diverse-4': [1, 1, 1], 'bestq-4': [2, 2, 2], 'coherent-5': [2, 2, 2], 'complete-5': [2, 2, 2], 'intra-5': [2.0, 2.0, 2.0], 'diverse-5': [2, 1, 1], 'bestq-5': [2, 2, 2]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
Executing one action: self.actions.modify_radio('coherent-1', '2')
We are going to select this radio button: <input name="coherent-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
Executing one action: self.actions.modify_radio('complete-1', '2')
We are going to select this radio button: <input name="complete-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
Executing one action: self.actions.modify_radio('intra-1', '1')
We are going to select this radio button: <input name="intra-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
Executing one action: self.actions.modify_radio('diverse-1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
Executing one action: self.actions.modify_radio('bestq-1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
Executing one action: self.actions.modify_radio('coherent-2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
Executing one action: self.actions.modify_radio('complete-2', '2')
We are going to select this radio button: <input name="complete-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
Executing one action: self.actions.modify_radio('intra-2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
Executing one action: self.actions.modify_radio('diverse-2', '2')
We are going to select this radio button: <input name="diverse-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
Executing one action: self.actions.modify_radio('bestq-2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
Executing one action: self.actions.modify_radio('coherent-3', '2')
We are going to select this radio button: <input name="coherent-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
Executing one action: self.actions.modify_radio('complete-3', '2')
We are going to select this radio button: <input name="complete-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
Executing one action: self.actions.modify_radio('intra-3', '2')
We are going to select this radio button: <input name="intra-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
Executing one action: self.actions.modify_radio('diverse-3', '2')
We are going to select this radio button: <input name="diverse-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
Executing one action: self.actions.modify_radio('bestq-3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
Executing one action: self.actions.modify_radio('coherent-4', '2')
We are going to select this radio button: <input name="coherent-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
Executing one action: self.actions.modify_radio('complete-4', '2')
We are going to select this radio button: <input name="complete-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
Executing one action: self.actions.modify_radio('intra-4', '1')
We are going to select this radio button: <input name="intra-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
Executing one action: self.actions.modify_radio('diverse-4', '2')
We are going to select this radio button: <input name="diverse-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
Executing one action: self.actions.modify_radio('bestq-4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
Executing one action: self.actions.modify_radio('coherent-5', '1')
We are going to select this radio button: <input name="coherent-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
Executing one action: self.actions.modify_radio('complete-5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
Executing one action: self.actions.modify_radio('intra-5', '2')
We are going to select this radio button: <input name="intra-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
Executing one action: self.actions.modify_radio('diverse-5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
Executing one action: self.actions.modify_radio('bestq-5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.24
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 33691 <-> row_number: 37
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 37 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [2.0, 1.0, 1.0], 'complete-1': [2.0, 1.0, 1.0], 'intra-1': [2.0, 1.0, 1.0], 'diverse-1': [2.0, 2.0, 2.0], 'bestq-1': [2.0, 1.0, 1.0], 'coherent-2': [2.0, 2.0, 2.0], 'complete-2': [2.0, 2.0, 2.0], 'intra-2': [2.0, 2.0, 2.0], 'diverse-2': [1.0, 2.0, 2.0], 'bestq-2': [2.0, 2.0, 2.0], 'coherent-3': [1, 1, 1], 'complete-3': [1, 1, 1], 'intra-3': [1, 2, 1], 'diverse-3': [1.0, 2.0, 2.0], 'bestq-3': [1, 1, 1], 'coherent-4': [2, 1, 1], 'complete-4': [2.0, 1.0, 1.0], 'intra-4': [2.0, 1.0, 1.0], 'diverse-4': [1, 1, 2], 'bestq-4': [2, 1, 1], 'coherent-5': [1, 1, 1], 'complete-5': [1, 1, 1], 'intra-5': [1.0, 1.0, 1.0], 'diverse-5': [2, 2, 1], 'bestq-5': [1, 1, 1]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
Executing one action: Based on the HTML provided and the accompanying screenshot, it appears you need to generate a command to modify a radio input selection. The input name given is "coherent-1", and it corresponds to the question asking "Which set of relations is most coherent with the rest of the story?" with options for Relation Set A and Relation Set B.

However, without specify which relation set should be selected (Set A or Set B), it's not possible to provide the exact modification command. If you can provide the desired selection, I can generate the appropriate command.
Failed to execute an action Based on the HTML provided and the accompanying screenshot, it appears you need to generate a command to modify a radio input selection. The input name given is "coherent-1", and it corresponds to the question asking "Which set of relations is most coherent with the rest of the story?" with options for Relation Set A and Relation Set B.

However, without specify which relation set should be selected (Set A or Set B), it's not possible to provide the exact modification command. If you can provide the desired selection, I can generate the appropriate command., error: unterminated string literal (detected at line 3) (<string>, line 3)
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
Executing one action: self.actions.modify_radio('complete-1', '2')
We are going to select this radio button: <input name="complete-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
Executing one action: self.actions.modify_radio('intra-1', '1')
We are going to select this radio button: <input name="intra-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
Executing one action: self.actions.modify_radio('diverse-1', '1')
We are going to select this radio button: <input name="diverse-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
Executing one action: self.actions.modify_radio('bestq-1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
Executing one action: self.actions.modify_radio('coherent-2', '1')
We are going to select this radio button: <input name="coherent-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
Executing one action: self.actions.modify_radio('complete-2', '2')
We are going to select this radio button: <input name="complete-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
Executing one action: self.actions.modify_radio('intra-2', '2')
We are going to select this radio button: <input name="intra-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
Executing one action: self.actions.modify_radio('diverse-2', '1')
We are going to select this radio button: <input name="diverse-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
Executing one action: self.actions.modify_radio('bestq-2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
Executing one action: self.actions.modify_radio('coherent-3', '2')
We are going to select this radio button: <input name="coherent-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
Executing one action: self.actions.modify_radio('complete-3', '1')
We are going to select this radio button: <input name="complete-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
Executing one action: self.actions.modify_radio('intra-3', '2')
We are going to select this radio button: <input name="intra-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
Executing one action: self.actions.modify_radio('diverse-3', '2')
We are going to select this radio button: <input name="diverse-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
Executing one action: self.actions.modify_radio('bestq-3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
Executing one action: self.actions.modify_radio('coherent-4', '1')
We are going to select this radio button: <input name="coherent-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
Executing one action: self.actions.modify_radio('complete-4', '1')
We are going to select this radio button: <input name="complete-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
Executing one action: self.actions.modify_radio('intra-4', '2')
We are going to select this radio button: <input name="intra-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
Executing one action: self.actions.modify_radio('diverse-4', '1')
We are going to select this radio button: <input name="diverse-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
Executing one action: self.actions.modify_radio('bestq-4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
Executing one action: self.actions.modify_radio('coherent-5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
Executing one action: self.actions.modify_radio('complete-5', '1')
We are going to select this radio button: <input name="complete-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
Executing one action: self.actions.modify_radio('intra-5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
Executing one action: self.actions.modify_radio('diverse-5', '2')
We are going to select this radio button: <input name="diverse-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
Executing one action: self.actions.modify_radio('bestq-5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.4
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0]}
instance_id: 33690 <-> row_number: 36
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 36 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [1.0, 1.0, 1.0], 'complete-1': [2.0, 1.0, 1.0], 'intra-1': [2.0, 2.0, 1.0], 'diverse-1': [1.0, 2.0, 2.0], 'bestq-1': [2.0, 1.0, 1.0], 'coherent-2': [1.0, 2.0, 1.0], 'complete-2': [1.0, 1.0, 1.0], 'intra-2': [2.0, 2.0, 1.0], 'diverse-2': [2.0, 2.0, 2.0], 'bestq-2': [1.0, 2.0, 1.0], 'coherent-3': [1, 1, 2], 'complete-3': [1, 2, 2], 'intra-3': [2, 1, 2], 'diverse-3': [2.0, 1.0, 2.0], 'bestq-3': [1, 1, 2], 'coherent-4': [1, 2, 1], 'complete-4': [1.0, 1.0, 1.0], 'intra-4': [1.0, 1.0, 1.0], 'diverse-4': [2, 1, 2], 'bestq-4': [2, 2, 1], 'coherent-5': [1, 1, 2], 'complete-5': [2, 1, 2], 'intra-5': [1.0, 1.0, 1.0], 'diverse-5': [1, 2, 2], 'bestq-5': [2, 1, 2]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
Executing one action: self.actions.modify_radio('coherent-1', '2')
We are going to select this radio button: <input name="coherent-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
Executing one action: self.actions.modify_radio('complete-1', '1')
We are going to select this radio button: <input name="complete-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
Executing one action: self.actions.modify_radio('intra-1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
Executing one action: Based on the provided HTML code and the screenshot of the webpage, it appears that the input with the name "diverse-1" is a radio button type of input used to select between two relation sets in a question regarding the diversity of the relations for a given sentence in a story.

To generate the command to modify the "diverse-1" input, I need to know which value you want to select. The values for the radio buttons for "diverse-1" are "1" for Relation Set A and "2" for Relation Set B. Please provide the value you would like to select for "diverse-1."
Failed to execute an action Based on the provided HTML code and the screenshot of the webpage, it appears that the input with the name "diverse-1" is a radio button type of input used to select between two relation sets in a question regarding the diversity of the relations for a given sentence in a story.

To generate the command to modify the "diverse-1" input, I need to know which value you want to select. The values for the radio buttons for "diverse-1" are "1" for Relation Set A and "2" for Relation Set B. Please provide the value you would like to select for "diverse-1.", error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
Executing one action: self.actions.modify_radio('bestq-1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
Executing one action: self.actions.modify_radio('coherent-2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
Executing one action: self.actions.modify_radio('complete-2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
Executing one action: self.actions.modify_radio('intra-2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
Executing one action: self.actions.modify_radio('diverse-2', '1')
We are going to select this radio button: <input name="diverse-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
Executing one action: self.actions.modify_radio('bestq-2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
Executing one action: self.actions.modify_radio('coherent-3', '2')
We are going to select this radio button: <input name="coherent-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
Executing one action: self.actions.modify_radio('complete-3', '1')
We are going to select this radio button: <input name="complete-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
Executing one action: self.actions.modify_radio('intra-3', '1')
We are going to select this radio button: <input name="intra-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
Executing one action: self.actions.modify_radio('diverse-3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
Executing one action: self.actions.modify_radio('bestq-3', '2')
We are going to select this radio button: <input name="bestq-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
Executing one action: self.actions.modify_radio('coherent-4', '1')
We are going to select this radio button: <input name="coherent-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
Executing one action: self.actions.modify_radio('complete-4', '1')
We are going to select this radio button: <input name="complete-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
Executing one action: self.actions.modify_radio('intra-4', '1')
We are going to select this radio button: <input name="intra-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
Executing one action: self.actions.modify_radio('diverse-4', '2')
We are going to select this radio button: <input name="diverse-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
Executing one action: self.actions.modify_radio('bestq-4', '1')
We are going to select this radio button: <input name="bestq-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
Executing one action: self.actions.modify_radio('coherent-5', '2')
We are going to select this radio button: <input name="coherent-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
Executing one action: self.actions.modify_radio('complete-5', '1')
We are going to select this radio button: <input name="complete-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
Executing one action: self.actions.modify_radio('intra-5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
Executing one action: self.actions.modify_radio('diverse-5', '1')
We are going to select this radio button: <input name="diverse-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
Executing one action: self.actions.modify_radio('bestq-5', '1')
We are going to select this radio button: <input name="bestq-5" type="radio" value="1">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.2
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33655 <-> row_number: 1
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 1 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [2.0, 1.0, 2.0], 'complete-1': [1.0, 2.0, 2.0], 'intra-1': [2.0, 2.0, 2.0], 'diverse-1': [1.0, 1.0, 2.0], 'bestq-1': [1.0, 2.0, 2.0], 'coherent-2': [1.0, 2.0, 1.0], 'complete-2': [1.0, 2.0, 1.0], 'intra-2': [1.0, 2.0, 1.0], 'diverse-2': [1.0, 2.0, 1.0], 'bestq-2': [1.0, 2.0, 1.0], 'coherent-3': [2, 2, 2], 'complete-3': [2, 2, 2], 'intra-3': [2, 2, 2], 'diverse-3': [2.0, 2.0, 2.0], 'bestq-3': [2, 2, 2], 'coherent-4': [2, 1, 2], 'complete-4': [2.0, 1.0, 2.0], 'intra-4': [2.0, 1.0, 2.0], 'diverse-4': [1, 1, 2], 'bestq-4': [2, 1, 2], 'coherent-5': [2, 2, 2], 'complete-5': [2, 2, 2], 'intra-5': [2.0, 2.0, 2.0], 'diverse-5': [1, 2, 2], 'bestq-5': [2, 2, 2]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
Executing one action: self.actions.modify_radio('coherent-1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
Executing one action: self.actions.modify_radio('complete-1', '2')
We are going to select this radio button: <input name="complete-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
Executing one action: self.actions.modify_radio('intra-1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
Executing one action: self.actions.modify_radio('diverse-1', '2')
We are going to select this radio button: <input name="diverse-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
Executing one action: self.actions.modify_radio('bestq-1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
Executing one action: self.actions.modify_radio('coherent-2', 'value')
The input value (`value`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('coherent-2', 'value'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
Executing one action: self.actions.modify_radio('complete-2', '2')
We are going to select this radio button: <input name="complete-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
Executing one action: self.actions.modify_radio('intra-2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
Executing one action: self.actions.modify_radio('diverse-2', '1')
We are going to select this radio button: <input name="diverse-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
Executing one action: self.actions.modify_radio('bestq-2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
Executing one action: self.actions.modify_radio('coherent-3', '2')
We are going to select this radio button: <input name="coherent-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
Executing one action: self.actions.modify_radio('complete-3', '2')
We are going to select this radio button: <input name="complete-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
Executing one action: self.actions.modify_radio('intra-3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
Executing one action: self.actions.modify_radio('diverse-3', '2')
We are going to select this radio button: <input name="diverse-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
Executing one action: self.actions.modify_radio('bestq-3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
Executing one action: self.actions.modify_radio('coherent-4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
Executing one action: self.actions.modify_radio('complete-4', '2')
We are going to select this radio button: <input name="complete-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
Executing one action: self.actions.modify_radio('intra-4', '2')
We are going to select this radio button: <input name="intra-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
Executing one action: self.actions.modify_radio('diverse-4', '2')
We are going to select this radio button: <input name="diverse-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
Executing one action: self.actions.modify_radio('bestq-4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
Executing one action: self.actions.modify_radio('coherent-5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
Executing one action: self.actions.modify_radio('complete-5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
Executing one action: self.actions.modify_radio('intra-5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
Executing one action: self.actions.modify_radio('diverse-5', 'nan')


However, please note that the 'nan' value is not valid for radio button inputs typically, as they usually require one of the specified values. If 'nan' is intended to indicate 'not applicable' or 'none of the above', you may need to check the context or instructions of the task to provide the correct value, such as '1' or '2' based on the available options for the "diverse-5" question. If there is no such option and 'nan' is a placeholder for an unspecified value in this context, the above command would conceptually be the placeholder for setting this value programmatically. However, in practical use, you'd need to ensure 'nan' is an accepted value on the back end.
Failed to execute an action self.actions.modify_radio('diverse-5', 'nan')


However, please note that the 'nan' value is not valid for radio button inputs typically, as they usually require one of the specified values. If 'nan' is intended to indicate 'not applicable' or 'none of the above', you may need to check the context or instructions of the task to provide the correct value, such as '1' or '2' based on the available options for the "diverse-5" question. If there is no such option and 'nan' is a placeholder for an unspecified value in this context, the above command would conceptually be the placeholder for setting this value programmatically. However, in practical use, you'd need to ensure 'nan' is an accepted value on the back end., error: unterminated string literal (detected at line 4) (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
Executing one action: self.actions.modify_radio('bestq-5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.28
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33664 <-> row_number: 10
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 10 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [1.0, 1.0, 1.0], 'complete-1': [1.0, 1.0, 1.0], 'intra-1': [2.0, 1.0, 1.0], 'diverse-1': [2.0, 2.0, 2.0], 'bestq-1': [1.0, 1.0, 1.0], 'coherent-2': [1.0, 2.0, 1.0], 'complete-2': [1.0, 2.0, 1.0], 'intra-2': [2.0, 2.0, 1.0], 'diverse-2': [1.0, 1.0, 2.0], 'bestq-2': [1.0, 2.0, 1.0], 'coherent-3': [1, 1, 1], 'complete-3': [2, 1, 1], 'intra-3': [2, 2, 1], 'diverse-3': [1.0, 1.0, 1.0], 'bestq-3': [1, 1, 1], 'coherent-4': [1, 2, 2], 'complete-4': [1.0, 2.0, 2.0], 'intra-4': [2.0, 1.0, 1.0], 'diverse-4': [2, 2, 2], 'bestq-4': [1, 2, 2], 'coherent-5': [1, 1, 1], 'complete-5': [1, 1, 1], 'intra-5': [1.0, 2.0, 1.0], 'diverse-5': [2, 2, 2], 'bestq-5': [2, 1, 1]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
Executing one action: self.actions.modify_radio('coherent-1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
Executing one action: self.actions.modify_radio('complete-1', '2')
We are going to select this radio button: <input name="complete-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
Executing one action: self.actions.modify_radio('intra-1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
Executing one action: self.actions.modify_radio('diverse-1', '1')
We are going to select this radio button: <input name="diverse-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
Executing one action: self.actions.modify_radio('bestq-1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
Executing one action: self.actions.modify_radio('coherent-2', '1')
We are going to select this radio button: <input name="coherent-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
Executing one action: self.actions.modify_radio('complete-2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
Executing one action: self.actions.modify_radio('intra-2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
Executing one action: self.actions.modify_radio('diverse-2', '1')


If you decide that Relation Set B is the most diverse, the command would be:

python
self.actions.modify_radio('diverse-2', '2')


Please provide your preferred choice or additional context to generate the appropriate command.
Failed to execute an action self.actions.modify_radio('diverse-2', '1')


If you decide that Relation Set B is the most diverse, the command would be:

python
self.actions.modify_radio('diverse-2', '2')


Please provide your preferred choice or additional context to generate the appropriate command., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
Executing one action: self.actions.modify_radio('bestq-2', '1')
We are going to select this radio button: <input name="bestq-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
Executing one action: self.actions.modify_radio('coherent-3', '1')
We are going to select this radio button: <input name="coherent-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
Executing one action: self.actions.modify_radio('complete-3', '1')
We are going to select this radio button: <input name="complete-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
Executing one action: self.actions.modify_radio('intra-3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
Executing one action: self.actions.modify_radio('diverse-3', '1')
We are going to select this radio button: <input name="diverse-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
Executing one action: self.actions.modify_radio('bestq-3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
Executing one action: self.actions.modify_radio('coherent-4', '1')
We are going to select this radio button: <input name="coherent-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
Executing one action: self.actions.modify_radio('complete-4', '1')
We are going to select this radio button: <input name="complete-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
Executing one action: self.actions.modify_radio('intra-4', '1')
We are going to select this radio button: <input name="intra-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
Executing one action: self.actions.modify_radio('diverse-4', '1')
We are going to select this radio button: <input name="diverse-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
Executing one action: self.actions.modify_radio('bestq-4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
Executing one action: self.actions.modify_radio('coherent-5', '1')
We are going to select this radio button: <input name="coherent-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
Executing one action: self.actions.modify_radio('complete-5', '1')
We are going to select this radio button: <input name="complete-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
Executing one action: self.actions.modify_radio('intra-5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
Executing one action: self.actions.modify_radio('diverse-5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
Executing one action: self.actions.modify_radio('bestq-5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.32
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 33694 <-> row_number: 40
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 40 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [1.0, 1.0, 1.0], 'complete-1': [2.0, 1.0, 1.0], 'intra-1': [2.0, 1.0, 1.0], 'diverse-1': [2.0, 1.0, 2.0], 'bestq-1': [1.0, '', 1.0], 'coherent-2': [2.0, 1.0, 1.0], 'complete-2': [1.0, 1.0, 1.0], 'intra-2': [2.0, 1.0, 1.0], 'diverse-2': [1.0, 1.0, 2.0], 'bestq-2': [1.0, 2.0, 1.0], 'coherent-3': [2, 1, 1], 'complete-3': [2, 2, 2], 'intra-3': [1, 2, 1], 'diverse-3': [1.0, 2.0, 2.0], 'bestq-3': [1, 1, 1], 'coherent-4': [1, 2, 1], 'complete-4': [1.0, 2.0, 1.0], 'intra-4': [1.0, '', 1.0], 'diverse-4': [1, 2, 2], 'bestq-4': [2, 2, 1], 'coherent-5': [1, 1, 1], 'complete-5': [1, 1, 1], 'intra-5': [1.0, 2.0, ''], 'diverse-5': [1, 1, 2], 'bestq-5': [1, 1, 1]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
Executing one action: self.actions.modify_radio('coherent-1', '1')
We are going to select this radio button: <input name="coherent-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
Executing one action: self.actions.modify_radio('complete-1', '1')
We are going to select this radio button: <input name="complete-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
Executing one action: self.actions.modify_radio('intra-1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
Executing one action: self.actions.modify_radio('diverse-1', '1')
We are going to select this radio button: <input name="diverse-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
Executing one action: self.actions.modify_radio('bestq-1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
Executing one action: self.actions.modify_radio('coherent-2', '1')
We are going to select this radio button: <input name="coherent-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
Executing one action: self.actions.modify_radio('complete-2', '1')
We are going to select this radio button: <input name="complete-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
Executing one action: self.actions.modify_radio('intra-2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
Executing one action: self.actions.modify_radio('diverse-2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
Executing one action: self.actions.modify_radio('bestq-2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
Executing one action: self.actions.modify_radio('coherent-3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
Executing one action: self.actions.modify_radio('complete-3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
Executing one action: self.actions.modify_radio('intra-3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
Executing one action: self.actions.modify_radio('diverse-3', '1')
We are going to select this radio button: <input name="diverse-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
Executing one action: self.actions.modify_radio('bestq-3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
Executing one action: self.actions.modify_radio('coherent-4', '1')
We are going to select this radio button: <input name="coherent-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
Executing one action: self.actions.modify_radio('complete-4', '1')
We are going to select this radio button: <input name="complete-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
Executing one action: self.actions.modify_radio('intra-4', '1')
We are going to select this radio button: <input name="intra-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
Executing one action: self.actions.modify_radio('diverse-4', '2')
We are going to select this radio button: <input name="diverse-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
Executing one action: self.actions.modify_radio('bestq-4', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
Executing one action: self.actions.modify_radio('coherent-5', '1')
We are going to select this radio button: <input name="coherent-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
Executing one action: self.actions.modify_radio('complete-5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
Executing one action: self.actions.modify_radio('intra-5', '2')
We are going to select this radio button: <input name="intra-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
Executing one action: self.actions.modify_radio('diverse-5', '1')
We are going to select this radio button: <input name="diverse-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
Executing one action: self.actions.modify_radio('bestq-5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, '', 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, '', 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, '']` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.4
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0]}
 = = = = = = = = = = = = starting new task: `Compression HIT` = = = = = = = = = = = = 
First instance id: 7310
instance_id: 7934 <-> row_number: 624
 --> inputs: ['meaning_0_7', 'grammar_0_7', 'meaning_0_1', 'grammar_0_1', 'meaning_0_11', 'grammar_0_11', 'meaning_0_0', 'grammar_0_0', 'meaning_0_9', 'grammar_0_9', 'meaning_0_10', 'grammar_0_10', 'meaning_0_8', 'grammar_0_8', 'meaning_0_2', 'grammar_0_2', 'meaning_0_6', 'grammar_0_6', 'meaning_0_5', 'grammar_0_5', 'meaning_0_4', 'grammar_0_4', 'meaning_0_3', 'grammar_0_3']
 --> Looking up gold labels from row index 624 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_7': [5, 4], 'grammar_0_7': [4, 5], 'meaning_0_1': [2, 3], 'grammar_0_1': [1, 2], 'meaning_0_11': [2, 2], 'grammar_0_11': [1, 1], 'meaning_0_0': [5, 4], 'grammar_0_0': [5, 4], 'meaning_0_9': [4, 3], 'grammar_0_9': [3, 3], 'meaning_0_10': [3, 2], 'grammar_0_10': [1, 2], 'meaning_0_8': [4, 3], 'grammar_0_8': [2, 2], 'meaning_0_2': [5, 4], 'grammar_0_2': [4, 5], 'meaning_0_6': [4, 3], 'grammar_0_6': [1, 2], 'meaning_0_5': [5, 4], 'grammar_0_5': [3, 4], 'meaning_0_4': [5, 4], 'grammar_0_4': [4, 4], 'meaning_0_3': [5, 4], 'grammar_0_3': [4, 4]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
Executing one action: self.actions.modify_select('meaning_0_7', 'blank')
We are going to select this select `meaning_0_7` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
Executing one action: self.actions.modify_select('grammar_0_7', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_7', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', 'nan')
Failed to execute an action self.actions.modify_select('meaning_0_1', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: The provided HTML and screenshot do not show which specific input field should be modified for "grammar_0_1", nor do they show the acceptable values or range for such input. To generate the appropriate command, I would need more context, such as the value that should be set for "grammar_0_1" and whether it is a checkbox, radio button, select dropdown, text input, or range slider. If you can provide that information, I'll be able to create the correct command to modify the HTML page.
Failed to execute an action The provided HTML and screenshot do not show which specific input field should be modified for "grammar_0_1", nor do they show the acceptable values or range for such input. To generate the appropriate command, I would need more context, such as the value that should be set for "grammar_0_1" and whether it is a checkbox, radio button, select dropdown, text input, or range slider. If you can provide that information, I'll be able to create the correct command to modify the HTML page., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
Executing one action: self.actions.modify_select('meaning_0_11', 'input_value')`

Where 'input_value' should be replaced by the actual value you want to set for the select element, chosen from the available options such as "5", "4", "3", "2", or "1". Unfortunately, without seeing the actual select options in the code or the screenshot, I cannot provide a more specific command.

If you could provide more details or ensure that the screenshot displays the select element referred to by "meaning_0_11", I could then generate a more precise command.
Failed to execute an action self.actions.modify_select('meaning_0_11', 'input_value')`

Where 'input_value' should be replaced by the actual value you want to set for the select element, chosen from the available options such as "5", "4", "3", "2", or "1". Unfortunately, without seeing the actual select options in the code or the screenshot, I cannot provide a more specific command.

If you could provide more details or ensure that the screenshot displays the select element referred to by "meaning_0_11", I could then generate a more precise command., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
Executing one action: To provide a command, I need the specific value you would like to set for the input named "grammar_0_11". The HTML code you've provided indicates that this input will correspond to a dropdown selection for grading grammar on a scale from 1 to 5. Please specify the grade you'd like to set for this input.
Failed to execute an action To provide a command, I need the specific value you would like to set for the input named "grammar_0_11". The HTML code you've provided indicates that this input will correspond to a dropdown selection for grading grammar on a scale from 1 to 5. Please specify the grade you'd like to set for this input., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: To provide an appropriate command, I need to know the specific value that you want to set for the input named "meaning_0_0". This input appears to be a dropdown selection for assessing the meaning of a sentence compared to the original sentence, with options ranging from "5 - identical" to "1 - completely different".

Once the preferred value to set for this dropdown is provided (1, 2, 3, 4, or 5), I can generate the appropriate command.
Failed to execute an action To provide an appropriate command, I need to know the specific value that you want to set for the input named "meaning_0_0". This input appears to be a dropdown selection for assessing the meaning of a sentence compared to the original sentence, with options ranging from "5 - identical" to "1 - completely different".

Once the preferred value to set for this dropdown is provided (1, 2, 3, 4, or 5), I can generate the appropriate command., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', '3')


Please provide the value you want to set so that I can generate the correct command for you.
Failed to execute an action self.actions.modify_select('grammar_0_0', '3')


Please provide the value you want to set so that I can generate the correct command for you., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
Executing one action: Based on the provided HTML and the screenshot, it appears that "meaning_0_9" corresponds to a dropdown selection for grading the meaning of a sentence variation. However, without further context or instructions as to what value should be selected for "meaning_0_9", I am unable to generate a specific command. 

If you could provide the desired value for "meaning_0_9" from the available options in the dropdown (e.g., "5 - identical", "4 - minor differences", "3 - moderate differences", "2 - substantially different", "1 - completely different"), I could then generate the appropriate command to modify this input.
Failed to execute an action Based on the provided HTML and the screenshot, it appears that "meaning_0_9" corresponds to a dropdown selection for grading the meaning of a sentence variation. However, without further context or instructions as to what value should be selected for "meaning_0_9", I am unable to generate a specific command. 

If you could provide the desired value for "meaning_0_9" from the available options in the dropdown (e.g., "5 - identical", "4 - minor differences", "3 - moderate differences", "2 - substantially different", "1 - completely different"), I could then generate the appropriate command to modify this input., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
Executing one action: Based on the information provided and the screenshot of the webpage, it appears that the input to be modified (`grammar_0_9`) is a part of a dropdown menu for grading the grammar of a sentence variation. The screenshot shows several dropdown menus for both 'Meaning' and 'Grammar' ratings of different sentence variations. Each dropdown menu appears to be labeled with a naming pattern that includes 'grammar' or 'meaning', followed by two numbers separated by underscores. The first number seems to represent a group of sentences or a particular sentence, while the second number likely corresponds to a specific variation within that group.

However, I am unable to determine the actual value that should be set for the `grammar_0_9` input, as the correct value would depend on an assessment of the grammar quality of the ninth sentence variation in the first (and possibly only) group of sentences. If I were to have that assessment or the intended value to be assigned to `grammar_0_9`, I could generate a command to modify the dropdown selection accordingly. 

Since I don't have the specified value, I will just demonstrate how the command should be written if one were to set the grammar score to, for example, "3" (one error):

plaintext
self.actions
Failed to execute an action Based on the information provided and the screenshot of the webpage, it appears that the input to be modified (`grammar_0_9`) is a part of a dropdown menu for grading the grammar of a sentence variation. The screenshot shows several dropdown menus for both 'Meaning' and 'Grammar' ratings of different sentence variations. Each dropdown menu appears to be labeled with a naming pattern that includes 'grammar' or 'meaning', followed by two numbers separated by underscores. The first number seems to represent a group of sentences or a particular sentence, while the second number likely corresponds to a specific variation within that group.

However, I am unable to determine the actual value that should be set for the `grammar_0_9` input, as the correct value would depend on an assessment of the grammar quality of the ninth sentence variation in the first (and possibly only) group of sentences. If I were to have that assessment or the intended value to be assigned to `grammar_0_9`, I could generate a command to modify the dropdown selection accordingly. 

Since I don't have the specified value, I will just demonstrate how the command should be written if one were to set the grammar score to, for example, "3" (one error):

plaintext
self.actions, error: unterminated string literal (detected at line 5) (<string>, line 5)
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
Executing one action: self.actions.modify_select('meaning_0_10', '3')
We are going to select this select `meaning_0_10` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
Executing one action: self.actions.modify_select('grammar_0_10', '10')
Failed to execute an action self.actions.modify_select('grammar_0_10', '10'), error: Input value `10` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
Executing one action: self.actions.modify_select('meaning_0_8', '3')
We are going to select this select `meaning_0_8` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
Executing one action: self.actions.modify_select('grammar_0_8', '5')


However, without a specific value and confirmation that "grammar_0_8" is the correct input name, it's not possible to
Failed to execute an action self.actions.modify_select('grammar_0_8', '5')


However, without a specific value and confirmation that "grammar_0_8" is the correct input name, it's not possible to, error: unterminated string literal (detected at line 4) (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', 'nan')
Failed to execute an action self.actions.modify_select('meaning_0_2', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', '1')
We are going to select this select `grammar_0_2` with value `1`
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
Executing one action: self.actions.modify_select('meaning_0_6', 'nan')
Failed to execute an action self.actions.modify_select('meaning_0_6', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
Executing one action: self.actions.modify_select('grammar_0_6', 'ungrammatical')
Failed to execute an action self.actions.modify_select('grammar_0_6', 'ungrammatical'), error: Input value `ungrammatical` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', 'nan')
Failed to execute an action self.actions.modify_select('meaning_0_5', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_select('grammar_0_5', 'ungrammatical')
Failed to execute an action self.actions.modify_select('grammar_0_5', 'ungrammatical'), error: Input value `ungrammatical` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', '4')
 

Please provide the correct value to complete the modification command.
Failed to execute an action self.actions.modify_select('meaning_0_4', '4')
 

Please provide the correct value to complete the modification command., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', 'ungrammatical')
Failed to execute an action self.actions.modify_select('grammar_0_4', 'ungrammatical'), error: Input value `ungrammatical` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', '3')
We are going to select this select `meaning_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', '3')
We are going to select this select `grammar_0_3` with value `3`
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.041666666666666664
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 8107 <-> row_number: 797
 --> inputs: ['meaning_0_1', 'grammar_0_1', 'meaning_0_0', 'grammar_0_0', 'meaning_0_3', 'grammar_0_3', 'meaning_0_8', 'grammar_0_8', 'meaning_0_5', 'grammar_0_5', 'meaning_0_7', 'grammar_0_7', 'meaning_0_11', 'grammar_0_11', 'meaning_0_4', 'grammar_0_4', 'meaning_0_9', 'grammar_0_9', 'meaning_0_10', 'grammar_0_10', 'meaning_0_6', 'grammar_0_6', 'meaning_0_2', 'grammar_0_2']
 --> Looking up gold labels from row index 797 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_1': [4, 2], 'grammar_0_1': [5, 2], 'meaning_0_0': [5, 5], 'grammar_0_0': [5, 3], 'meaning_0_3': [3, 4], 'grammar_0_3': [4, 3], 'meaning_0_8': [3, 3], 'grammar_0_8': [2, 2], 'meaning_0_5': [3, 3], 'grammar_0_5': [4, 2], 'meaning_0_7': [5, 5], 'grammar_0_7': [5, 4], 'meaning_0_11': [2, 2], 'grammar_0_11': [2, 1], 'meaning_0_4': [4, 3], 'grammar_0_4': [4, 2], 'meaning_0_9': [2, 3], 'grammar_0_9': [1, 2], 'meaning_0_10': [3, 1], 'grammar_0_10': [2, 1], 'meaning_0_6': [5, 4], 'grammar_0_6': [5, 2], 'meaning_0_2': [4, 4], 'grammar_0_2': [5, 3]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', input_value)


The `input_value` would need to be replaced with the actual value you'd like to select, which would be a number between 1 and 5 based on the description in the HTML snippet. Without the actual element in the HTML, this command cannot be executed as is. Please provide the full HTML code that contains the `<select>` element named "meaning_0_1" in order for me to
Failed to execute an action self.actions.modify_select('meaning_0_1', input_value)


The `input_value` would need to be replaced with the actual value you'd like to select, which would be a number between 1 and 5 based on the description in the HTML snippet. Without the actual element in the HTML, this command cannot be executed as is. Please provide the full HTML code that contains the `<select>` element named "meaning_0_1" in order for me to, error: unterminated string literal (detected at line 4) (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', input_value)


Since the input value to select is not specified, I've represented it as `input_value`. The `input_value` should be replaced with the actual value you want to select in the dropdown. If you provide me with the specific value you want to set for "grammar_0_1", I can tailor the command accordingly.
Failed to execute an action self.actions.modify_select('grammar_0_1', input_value)


Since the input value to select is not specified, I've represented it as `input_value`. The `input_value` should be replaced with the actual value you want to select in the dropdown. If you provide me with the specific value you want to set for "grammar_0_1", I can tailor the command accordingly., error: unterminated string literal (detected at line 4) (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', '4')


Please replace '4' with the actual value you want to set for the "meaning_0_0" element. Note that a screenshot of the webpage has been provided, but it does not include details about the current or desired state for this particular input.
Failed to execute an action self.actions.modify_select('meaning_0_0', '4')


Please replace '4' with the actual value you want to set for the "meaning_0_0" element. Note that a screenshot of the webpage has been provided, but it does not include details about the current or desired state for this particular input., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', 'blank')
We are going to select this select `grammar_0_0` with value `blank`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: Based on the provided HTML code and the screenshot, it seems that there is a missing element in the HTML that corresponds to the input name "meaning_0_3". Normally, I would generate a command to modify a select input, but without a proper select element with the name "meaning_0_3" present in the given HTML code, it's not possible for me to output a valid command.

Please check the input name and ensure it matches the name attribute of a select element in the HTML code so that I can provide you with an accurate command.
Failed to execute an action Based on the provided HTML code and the screenshot, it seems that there is a missing element in the HTML that corresponds to the input name "meaning_0_3". Normally, I would generate a command to modify a select input, but without a proper select element with the name "meaning_0_3" present in the given HTML code, it's not possible for me to output a valid command.

Please check the input name and ensure it matches the name attribute of a select element in the HTML code so that I can provide you with an accurate command., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', '5')
We are going to select this select `grammar_0_3` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
Executing one action: self.actions.modify_select('meaning_0_8', 'blank')
We are going to select this select `meaning_0_8` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
Executing one action: self.actions.modify_select('grammar_0_8', '5')
We are going to select this select `grammar_0_8` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', '<input_value>')


And here is an example with an actual value:

plaintext
self.actions.modify_select('meaning_0_5', '3')  // Sets the meaning score to "3 - moderate differences"

Failed to execute an action self.actions.modify_select('meaning_0_5', '<input_value>')


And here is an example with an actual value:

plaintext
self.actions.modify_select('meaning_0_5', '3')  // Sets the meaning score to "3 - moderate differences"
, error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_range('grammar_0_5', '2')
Failed to execute an action self.actions.modify_range('grammar_0_5', '2'), error: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//input[@type='range' and @name='grammar_0_5']"}
  (Session info: chrome=119.0.6045.123); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
#0 0x5594452c55e3 <unknown>
#1 0x559444f880b7 <unknown>
#2 0x559444fd5f53 <unknown>
#3 0x559444fd6051 <unknown>
#4 0x55944501b9c4 <unknown>
#5 0x559444ffcf1d <unknown>
#6 0x559445018b3d <unknown>
#7 0x559444ffccc3 <unknown>
#8 0x559444fc80e4 <unknown>
#9 0x559444fc90ae <unknown>
#10 0x55944528bce1 <unknown>
#11 0x55944528fb7e <unknown>
#12 0x5594452794b5 <unknown>
#13 0x5594452907d6 <unknown>
#14 0x55944525cdbf <unknown>
#15 0x5594452b3748 <unknown>
#16 0x5594452b3917 <unknown>
#17 0x5594452c4773 <unknown>
#18 0x7f9de6494ac3 <unknown>

 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
Executing one action: self.actions.modify_select('meaning_0_7', 'blank')
We are going to select this select `meaning_0_7` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
Executing one action: self.actions.modify_select('grammar_0_7', '5')
We are going to select this select `grammar_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
Executing one action: self.actions.modify_select('meaning_0_11', 'your_desired_value')
Failed to execute an action self.actions.modify_select('meaning_0_11', 'your_desired_value'), error: Input value `your_desired_value` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
Executing one action: self.actions.modify_select('grammar_0_11', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_11', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', 'blank')
We are going to select this select `meaning_0_4` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', 'value')
Failed to execute an action self.actions.modify_select('grammar_0_4', 'value'), error: Input value `value` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
Executing one action: self.actions.modify_select('meaning_0_9', 'blank')
We are going to select this select `meaning_0_9` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
Executing one action: self.actions.modify_select('grammar_0_9', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_9', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
Executing one action: self.actions.modify_select('meaning_0_10', 'blank')
We are going to select this select `meaning_0_10` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
Executing one action: self.actions.modify_select('grammar_0_10', 'value')
Failed to execute an action self.actions.modify_select('grammar_0_10', 'value'), error: Input value `value` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
Executing one action: self.actions.modify_select('meaning_0_6', 'blank')
We are going to select this select `meaning_0_6` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
Executing one action: self.actions.modify_select('grammar_0_6', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_6', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', '[desired_value]')

Please replace [desired_value] with the actual value you want to select, for instance, "5" for "identical", "4" for "minor differences", "3" for "moderate differences", "2" for "substantially different", or "1" for "completely different".
Failed to execute an action self.actions.modify_select('meaning_0_2', '[desired_value]')

Please replace [desired_value] with the actual value you want to select, for instance, "5" for "identical", "4" for "minor differences", "3" for "moderate differences", "2" for "substantially different", or "1" for "completely different"., error: invalid syntax (<string>, line 3)
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', 'value')
Failed to execute an action self.actions.modify_select('grammar_0_2', 'value'), error: Input value `value` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.041666666666666664
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 8152 <-> row_number: 842
 --> inputs: ['meaning_0_0', 'grammar_0_0', 'meaning_0_1', 'grammar_0_1', 'meaning_0_11', 'grammar_0_11', 'meaning_0_4', 'grammar_0_4', 'meaning_0_3', 'grammar_0_3', 'meaning_0_2', 'grammar_0_2', 'meaning_0_10', 'grammar_0_10', 'meaning_0_9', 'grammar_0_9', 'meaning_0_6', 'grammar_0_6', 'meaning_0_8', 'grammar_0_8', 'meaning_0_7', 'grammar_0_7', 'meaning_0_5', 'grammar_0_5']
 --> Looking up gold labels from row index 842 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_0': [4, 4], 'grammar_0_0': [5, 5], 'meaning_0_1': [4, 2], 'grammar_0_1': [2, 2], 'meaning_0_11': [5, 5], 'grammar_0_11': [3, 5], 'meaning_0_4': [3, 2], 'grammar_0_4': [2, 2], 'meaning_0_3': [5, 5], 'grammar_0_3': [5, 5], 'meaning_0_2': [5, 5], 'grammar_0_2': [5, 4], 'meaning_0_10': [3, 2], 'grammar_0_10': [2, 1], 'meaning_0_9': [3, 2], 'grammar_0_9': [1, 3], 'meaning_0_6': [3, 3], 'grammar_0_6': [3, 2], 'meaning_0_8': [3, 3], 'grammar_0_8': [1, 2], 'meaning_0_7': [2, 3], 'grammar_0_7': [3, 5], 'meaning_0_5': [2, 3], 'grammar_0_5': [1, 2]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: Based on the HTML code and the screenshot provided, you're dealing with a selection input for the "meaning" assessment of a sentence. However, from the information given, it's not possible to determine the correct value that the "meaning_0_0" input should be set to without additional context or instructions on what rating it should receive.

If you have specific instructions on how to rate the meaning of the sentence variation corresponding to the "meaning_0_0" input, I can provide you with the command to update it. Otherwise, I can give a command that would set it to a hypothetical value as an example. Please provide the value to set for "meaning_0_0" or further instructions.
Failed to execute an action Based on the HTML code and the screenshot provided, you're dealing with a selection input for the "meaning" assessment of a sentence. However, from the information given, it's not possible to determine the correct value that the "meaning_0_0" input should be set to without additional context or instructions on what rating it should receive.

If you have specific instructions on how to rate the meaning of the sentence variation corresponding to the "meaning_0_0" input, I can provide you with the command to update it. Otherwise, I can give a command that would set it to a hypothetical value as an example. Please provide the value to set for "meaning_0_0" or further instructions., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', '')
Failed to execute an action self.actions.modify_select('grammar_0_0', ''), error: Input value `` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', 'nan')
Failed to execute an action self.actions.modify_select('meaning_0_1', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: Based on the provided HTML and image, it appears that there is a dropdown selection for "Grammar" that can be set to various options. However, you have not provided the specific value you want to select for "grammar_0_1". Please provide the value you'd like to set for this dropdown, and I can then generate the appropriate command.
Failed to execute an action Based on the provided HTML and image, it appears that there is a dropdown selection for "Grammar" that can be set to various options. However, you have not provided the specific value you want to select for "grammar_0_1". Please provide the value you'd like to set for this dropdown, and I can then generate the appropriate command., error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
Executing one action: self.actions.modify_select('meaning_0_11', 'blank')
We are going to select this select `meaning_0_11` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
Executing one action: self.actions.modify_select('grammar_0_11', 'input_value')


To execute this command correctly, you will need to replace 'input_value' with the appropriate grade according to the particular task instructions and the desired grading outcome.
Failed to execute an action self.actions.modify_select('grammar_0_11', 'input_value')


To execute this command correctly, you will need to replace 'input_value' with the appropriate grade according to the particular task instructions and the desired grading outcome., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: Based on the provided HTML code and the image of the webpage, it seems that the input with the name "meaning_0_4" is a dropdown selection element where a user can judge the meaning of a sentence variation. To modify this input using the given commands, I would need to know the value you wish to set for this dropdown element.

Please provide the value you would like to set for the "meaning_0_4" dropdown, such as "5" for identical meaning, "4" for minor differences, "3" for moderate differences, "2" for substantially different, or "1" for completely different. Once you give me the value, I can generate the appropriate command to modify it.
Failed to execute an action Based on the provided HTML code and the image of the webpage, it seems that the input with the name "meaning_0_4" is a dropdown selection element where a user can judge the meaning of a sentence variation. To modify this input using the given commands, I would need to know the value you wish to set for this dropdown element.

Please provide the value you would like to set for the "meaning_0_4" dropdown, such as "5" for identical meaning, "4" for minor differences, "3" for moderate differences, "2" for substantially different, or "1" for completely different. Once you give me the value, I can generate the appropriate command to modify it., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_4', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: To assist with generating the appropriate output command, it would be helpful to provide the desired input value for the `meaning_0_3` dropdown selection from within the provided HTML and image context.

If you could specify the value you want to be selected (1-5 or blank), I could then provide you with the corresponding command.
Failed to execute an action To assist with generating the appropriate output command, it would be helpful to provide the desired input value for the `meaning_0_3` dropdown selection from within the provided HTML and image context.

If you could specify the value you want to be selected (1-5 or blank), I could then provide you with the corresponding command., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_3', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', 'blank')
We are going to select this select `meaning_0_2` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', 'some_value')


However, "some_value" should be replaced by the actual value you wish to set for the select input named "grammar_0_2". If you can specify the value you want to set for this input, I can then provide the correct command. Please provide additional instructions on the expected value.
Failed to execute an action self.actions.modify_select('grammar_0_2', 'some_value')


However, "some_value" should be replaced by the actual value you wish to set for the select input named "grammar_0_2". If you can specify the value you want to set for this input, I can then provide the correct command. Please provide additional instructions on the expected value., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
Executing one action: self.actions.modify_select('meaning_0_10', 'nan')
Failed to execute an action self.actions.modify_select('meaning_0_10', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
Executing one action: self.actions.modify_select('grammar_0_10', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_10', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
Executing one action: self.actions.modify_select('meaning_0_9', 'blank')
We are going to select this select `meaning_0_9` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
Executing one action: self.actions.modify_select('grammar_0_9', '5')
We are going to select this select `grammar_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
Executing one action: self.actions.modify_select('meaning_0_6', '5')
We are going to select this select `meaning_0_6` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
Executing one action: self.actions.modify_select('grammar_0_6', '1')
We are going to select this select `grammar_0_6` with value `1`
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
Executing one action: self.actions.modify_select('meaning_0_8', 'blank')
We are going to select this select `meaning_0_8` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
Executing one action: self.actions.modify_select('grammar_0_8', '1')
We are going to select this select `grammar_0_8` with value `1`
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
Executing one action: self.actions.modify_select('meaning_0_7', '2')
We are going to select this select `meaning_0_7` with value `2`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
Executing one action: self.actions.modify_select('grammar_0_7', 'ungrammatical')
Failed to execute an action self.actions.modify_select('grammar_0_7', 'ungrammatical'), error: Input value `ungrammatical` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_range('meaning_0_5', 'substantially different')
Failed to execute an action self.actions.modify_range('meaning_0_5', 'substantially different'), error: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//input[@type='range' and @name='meaning_0_5']"}
  (Session info: chrome=119.0.6045.123); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
#0 0x5594452c55e3 <unknown>
#1 0x559444f880b7 <unknown>
#2 0x559444fd5f53 <unknown>
#3 0x559444fd6051 <unknown>
#4 0x55944501b9c4 <unknown>
#5 0x559444ffcf1d <unknown>
#6 0x559445018b3d <unknown>
#7 0x559444ffccc3 <unknown>
#8 0x559444fc80e4 <unknown>
#9 0x559444fc90ae <unknown>
#10 0x55944528bce1 <unknown>
#11 0x55944528fb7e <unknown>
#12 0x5594452794b5 <unknown>
#13 0x5594452907d6 <unknown>
#14 0x55944525cdbf <unknown>
#15 0x5594452b3748 <unknown>
#16 0x5594452b3917 <unknown>
#17 0x5594452c4773 <unknown>
#18 0x7f9de6494ac3 <unknown>

 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_select('grammar_0_5', 'blank')
We are going to select this select `grammar_0_5` with value `blank`
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.08333333333333333
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 7696 <-> row_number: 386
 --> inputs: ['meaning_0_10', 'grammar_0_10', 'meaning_0_0', 'grammar_0_0', 'meaning_0_7', 'grammar_0_7', 'meaning_0_2', 'grammar_0_2', 'meaning_0_3', 'grammar_0_3', 'meaning_0_5', 'grammar_0_5', 'meaning_0_11', 'grammar_0_11', 'meaning_0_4', 'grammar_0_4', 'meaning_0_1', 'grammar_0_1', 'meaning_0_8', 'grammar_0_8', 'meaning_0_9', 'grammar_0_9', 'meaning_0_6', 'grammar_0_6']
 --> Looking up gold labels from row index 386 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_10': [4, 4], 'grammar_0_10': [1, 2], 'meaning_0_0': [3, 4], 'grammar_0_0': [2, 4], 'meaning_0_7': [4, 4], 'grammar_0_7': [4, 5], 'meaning_0_2': [5, 5], 'grammar_0_2': [5, 5], 'meaning_0_3': [3, 4], 'grammar_0_3': [2, 3], 'meaning_0_5': [2, 2], 'grammar_0_5': [1, 1], 'meaning_0_11': [4, 4], 'grammar_0_11': [3, 1], 'meaning_0_4': [4, 3], 'grammar_0_4': [2, 2], 'meaning_0_1': [3, 2], 'grammar_0_1': [1, 1], 'meaning_0_8': [3, 2], 'grammar_0_8': [1, 1], 'meaning_0_9': [5, 3], 'grammar_0_9': [3, 1], 'meaning_0_6': [4, 4], 'grammar_0_6': [2, 4]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
Executing one action: self.actions.modify_select('meaning_0_10', 'blank')
We are going to select this select `meaning_0_10` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
Executing one action: self.actions.modify_range('grammar_0_10', '10')
Failed to execute an action self.actions.modify_range('grammar_0_10', '10'), error: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//input[@type='range' and @name='grammar_0_10']"}
  (Session info: chrome=119.0.6045.123); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
#0 0x5594452c55e3 <unknown>
#1 0x559444f880b7 <unknown>
#2 0x559444fd5f53 <unknown>
#3 0x559444fd6051 <unknown>
#4 0x55944501b9c4 <unknown>
#5 0x559444ffcf1d <unknown>
#6 0x559445018b3d <unknown>
#7 0x559444ffccc3 <unknown>
#8 0x559444fc80e4 <unknown>
#9 0x559444fc90ae <unknown>
#10 0x55944528bce1 <unknown>
#11 0x55944528fb7e <unknown>
#12 0x5594452794b5 <unknown>
#13 0x5594452907d6 <unknown>
#14 0x55944525cdbf <unknown>
#15 0x5594452b3748 <unknown>
#16 0x5594452b3917 <unknown>
#17 0x5594452c4773 <unknown>
#18 0x7f9de6494ac3 <unknown>

 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', 'desired_value_here')


Replace 'desired_value_here' with the actual value you want to select (e.g., "5" for identical, "4" for minor differences, etc.).
Failed to execute an action self.actions.modify_select('meaning_0_0', 'desired_value_here')


Replace 'desired_value_here' with the actual value you want to select (e.g., "5" for identical, "4" for minor differences, etc.)., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: Based on the provided screenshot and HTML code, I would need to use the `modify_select` command to change a select (drop-down) input. However, without additional context indicating the desired input value for "grammar_0_0," I cannot generate a valid command. Could you please provide the value you want to set for the "grammar_0_0" input?
Failed to execute an action Based on the provided screenshot and HTML code, I would need to use the `modify_select` command to change a select (drop-down) input. However, without additional context indicating the desired input value for "grammar_0_0," I cannot generate a valid command. Could you please provide the value you want to set for the "grammar_0_0" input?, error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
Executing one action: Based on the provided HTML code and the screenshot of the webpage, it seems that "meaning_0_7" is the name of a dropdown selector used to grade the meaning of sentence variations with respect to an original sentence. To generate a command to modify this dropdown selector, I would need to know the desired value to set. The valid options as per the HTML code are:

- "5" for "identical"
- "4" for "minor differences"
- "3" for "moderate differences"
- "2" for "substantially different"
- "1" for "completely different"

Please provide the desired value to modify the "meaning_0_7" dropdown to, and I can generate the appropriate command.
Failed to execute an action Based on the provided HTML code and the screenshot of the webpage, it seems that "meaning_0_7" is the name of a dropdown selector used to grade the meaning of sentence variations with respect to an original sentence. To generate a command to modify this dropdown selector, I would need to know the desired value to set. The valid options as per the HTML code are:

- "5" for "identical"
- "4" for "minor differences"
- "3" for "moderate differences"
- "2" for "substantially different"
- "1" for "completely different"

Please provide the desired value to modify the "meaning_0_7" dropdown to, and I can generate the appropriate command., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
Executing one action: self.actions.modify_select('grammar_0_7', 'value_you_want_to_select')
Failed to execute an action self.actions.modify_select('grammar_0_7', 'value_you_want_to_select'), error: Input value `value_you_want_to_select` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select`. However, since the value to which the "meaning_0_2" input should be set is not provided, I cannot output a complete command. 

If you provide the value you would like to select (for example, "3" for "moderate differences" in meaning), I can generate the correct command to modify the webpage.
Failed to execute an action self.actions.modify_select`. However, since the value to which the "meaning_0_2" input should be set is not provided, I cannot output a complete command. 

If you provide the value you would like to select (for example, "3" for "moderate differences" in meaning), I can generate the correct command to modify the webpage., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_2', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', 'desired_option_value')


Replace `desired_option_value` with the actual value you wish to set, which corresponds to the meaning rating (e.g., '5', '4', '3', '2', or '1'). Without knowing the desired option value to set, I cannot provide the exact command. If you provide the desired option value, I will generate the specific command.
Failed to execute an action self.actions.modify_select('meaning_0_3', 'desired_option_value')


Replace `desired_option_value` with the actual value you wish to set, which corresponds to the meaning rating (e.g., '5', '4', '3', '2', or '1'). Without knowing the desired option value to set, I cannot provide the exact command. If you provide the desired option value, I will generate the specific command., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', 'blank')
We are going to select this select `grammar_0_3` with value `blank`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', '4')
We are going to select this select `meaning_0_5` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: Based on the provided HTML source code and image, it looks like you are working on a form where users can judge the quality of sentences based on their meaning and grammar. You have provided an input name of "grammar_0_5" which appears to correspond to a selection for grammar quality of a sentence variant.

However, there seems to be a misunderstanding or missing information. The provided HTML code and the screenshot show dropdown menus for users to select the grammar quality of various sentences. The dropdown menus have options ranging from 5 to 1, with "5" being "perfect" and "1" being "ungrammatical." The input name "grammar_0_5" might suggest you are looking to select a "perfect" grammar option for a specific sentence variant (for example, the first variant of the original sentence).

Without a clearer indication of which exact option you wish to select or manipulate in the form, I'm unable to produce a precise command for you. For such dropdown menus handled through a form submission, the standard HTML approach would be to set the 'selected' attribute on the 'option' element within the 'select' tag, which matches the desired value when the form is displayed.

If you wish to programmatically select the "perfect" option
Failed to execute an action Based on the provided HTML source code and image, it looks like you are working on a form where users can judge the quality of sentences based on their meaning and grammar. You have provided an input name of "grammar_0_5" which appears to correspond to a selection for grammar quality of a sentence variant.

However, there seems to be a misunderstanding or missing information. The provided HTML code and the screenshot show dropdown menus for users to select the grammar quality of various sentences. The dropdown menus have options ranging from 5 to 1, with "5" being "perfect" and "1" being "ungrammatical." The input name "grammar_0_5" might suggest you are looking to select a "perfect" grammar option for a specific sentence variant (for example, the first variant of the original sentence).

Without a clearer indication of which exact option you wish to select or manipulate in the form, I'm unable to produce a precise command for you. For such dropdown menus handled through a form submission, the standard HTML approach would be to set the 'selected' attribute on the 'option' element within the 'select' tag, which matches the desired value when the form is displayed.

If you wish to programmatically select the "perfect" option, error: unterminated string literal (detected at line 5) (<string>, line 5)
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
Executing one action: self.actions.modify_select('meaning_0_11', '4')
We are going to select this select `meaning_0_11` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
Executing one action: Based on the HTML provided and the screenshot, it seems that the user needs to select a value for the grammar quality assessment for a sentence variation. The input name suggests that the system should target the grammar quality dropdown for the 12th variation (counting from 0) within the first set of sentences (since sentence sets are 0-indexed).

However, the relevant HTML section that contains the dropdown selections (select elements) for the grammar quality is not present in the supplied HTML code snippet. The screenshot also doesn't show the value that should be selected for the "grammar_0_11" input. Without that information, I can't generate a valid command to modify this input.

For an accurate command, I would need either the visible selected option within the dropdown in the screenshot or the full HTML code showing the dropdown and the option values it contains.

Since I don't have the necessary information to determine the exact value to set, if you provide me with the desired rating (a value from 1 to 5 or 'blank'), I can generate a command to update the dropdown selection for "grammar_0_11" with that value.
Failed to execute an action Based on the HTML provided and the screenshot, it seems that the user needs to select a value for the grammar quality assessment for a sentence variation. The input name suggests that the system should target the grammar quality dropdown for the 12th variation (counting from 0) within the first set of sentences (since sentence sets are 0-indexed).

However, the relevant HTML section that contains the dropdown selections (select elements) for the grammar quality is not present in the supplied HTML code snippet. The screenshot also doesn't show the value that should be selected for the "grammar_0_11" input. Without that information, I can't generate a valid command to modify this input.

For an accurate command, I would need either the visible selected option within the dropdown in the screenshot or the full HTML code showing the dropdown and the option values it contains.

Since I don't have the necessary information to determine the exact value to set, if you provide me with the desired rating (a value from 1 to 5 or 'blank'), I can generate a command to update the dropdown selection for "grammar_0_11" with that value., error: invalid decimal literal (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', '4')
We are going to select this select `meaning_0_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', '4')
We are going to select this select `grammar_0_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', 'blank')
We are going to select this select `meaning_0_1` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', 'blank')
We are going to select this select `grammar_0_1` with value `blank`
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
Executing one action: self.actions.modify_select('meaning_0_8', '3')


Please provide the desired selection so that I can generate the correct command for you.
Failed to execute an action self.actions.modify_select('meaning_0_8', '3')


Please provide the desired selection so that I can generate the correct command for you., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
Executing one action: self.actions.modify_select('grammar_0_8', '5')


If you provide a specific value you wish to set for "grammar_0_8", I can give you the exact command to use.
Failed to execute an action self.actions.modify_select('grammar_0_8', '5')


If you provide a specific value you wish to set for "grammar_0_8", I can give you the exact command to use., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
Executing one action: self.actions.modify_select('meaning_0_9', 'blank')
We are going to select this select `meaning_0_9` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
Executing one action: self.actions.modify_select('grammar_0_9', '3')
We are going to select this select `grammar_0_9` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
Executing one action: To provide a valid command to modify the HTML input named "meaning_0_6", I need to be given a specific input value. The input value could range from "1" to "5" to reflect the choices from "completely different" to "identical" for the meaning of the sentence. Please provide the desired meaning value for "meaning_0_6".
Failed to execute an action To provide a valid command to modify the HTML input named "meaning_0_6", I need to be given a specific input value. The input value could range from "1" to "5" to reflect the choices from "completely different" to "identical" for the meaning of the sentence. Please provide the desired meaning value for "meaning_0_6"., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
Executing one action: self.actions.modify_select('grammar_0_6', '3')
We are going to select this select `grammar_0_6` with value `3`
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.125
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 7743 <-> row_number: 433
 --> inputs: ['meaning_0_5', 'grammar_0_5', 'meaning_0_6', 'grammar_0_6', 'meaning_0_8', 'grammar_0_8', 'meaning_0_9', 'grammar_0_9', 'meaning_0_7', 'grammar_0_7', 'meaning_0_4', 'grammar_0_4', 'meaning_0_10', 'grammar_0_10', 'meaning_0_11', 'grammar_0_11', 'meaning_0_3', 'grammar_0_3', 'meaning_0_2', 'grammar_0_2', 'meaning_0_1', 'grammar_0_1', 'meaning_0_0', 'grammar_0_0']
 --> Looking up gold labels from row index 433 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_5': [4, 3], 'grammar_0_5': [3, 2], 'meaning_0_6': [4, 4], 'grammar_0_6': [3, 3], 'meaning_0_8': [4, 2], 'grammar_0_8': [3, 2], 'meaning_0_9': [4, 2], 'grammar_0_9': [3, 2], 'meaning_0_7': [4, 4], 'grammar_0_7': [3, 3], 'meaning_0_4': [4, 3], 'grammar_0_4': [4, 2], 'meaning_0_10': [4, 2], 'grammar_0_10': [2, 3], 'meaning_0_11': [4, 2], 'grammar_0_11': [2, 3], 'meaning_0_3': [4, 4], 'grammar_0_3': [3, 3], 'meaning_0_2': [5, 5], 'grammar_0_2': [4, 4], 'meaning_0_1': [4, 3], 'grammar_0_1': [2, 3], 'meaning_0_0': [5, 4], 'grammar_0_0': [4, 4]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', 'nan')
Failed to execute an action self.actions.modify_select('meaning_0_5', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_select('grammar_0_5', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_5', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
Executing one action: self.actions.modify_select('meaning_0_6', '3')

If there is no "meaning_0_6" named input and it's a misinterpretation, it would require the correct input name and its corresponding desired value to provide the accurate command. Please provide the specific context or value you wish to set for "meaning_0_6".
Failed to execute an action self.actions.modify_select('meaning_0_6', '3')

If there is no "meaning_0_6" named input and it's a misinterpretation, it would require the correct input name and its corresponding desired value to provide the accurate command. Please provide the specific context or value you wish to set for "meaning_0_6"., error: unterminated string literal (detected at line 3) (<string>, line 3)
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
Executing one action: self.actions.modify_select('grammar_0_6', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_6', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
Executing one action: self.actions.modify_select('meaning_0_8', 'blank')
We are going to select this select `meaning_0_8` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
Executing one action: self.actions.modify_select('grammar_0_8', 'blank')
We are going to select this select `grammar_0_8` with value `blank`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
Executing one action: self.actions.modify_select('meaning_0_9', 'blank')
We are going to select this select `meaning_0_9` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
Executing one action: self.actions.modify_select('grammar_0_9', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_9', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
Executing one action: self.actions.modify_select('meaning_0_7', 'blank')
We are going to select this select `meaning_0_7` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
Executing one action: self.actions.modify_select('grammar_0_7', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_7', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', '4')


Please provide the value you would like to set for this input, and I can generate the specific command for you.
Failed to execute an action self.actions.modify_select('meaning_0_4', '4')


Please provide the value you would like to set for this input, and I can generate the specific command for you., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', '[input_value]')


Replace `[input_value]` with the actual value you want to assign, which should be a string representing the numerical rating for grammar quality ('1', '2', '3', '4', or '5').
Failed to execute an action self.actions.modify_select('grammar_0_4', '[input_value]')


Replace `[input_value]` with the actual value you want to assign, which should be a string representing the numerical rating for grammar quality ('1', '2', '3', '4', or '5')., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
Executing one action: self.actions.modify_select('meaning_0_10', 'nan')
Failed to execute an action self.actions.modify_select('meaning_0_10', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
Executing one action: self.actions.modify_select('grammar_0_10', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_10', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
Executing one action: self.actions.modify_select('meaning_0_11', '3')


Please provide the desired value to be set for the completion of this command.
Failed to execute an action self.actions.modify_select('meaning_0_11', '3')


Please provide the desired value to be set for the completion of this command., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
Executing one action: self.actions.modify_select('grammar_0_11', 'blank')
We are going to select this select `grammar_0_11` with value `blank`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', 'blank')
We are going to select this select `meaning_0_3` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', '3')
We are going to select this select `grammar_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', input_value)


where `input_value` should be replaced with the value you want to select. However, since you did not provide the actual value to select, `input_value` remains a placeholder. If you provide the desired value, I can complete the command accordingly.
Failed to execute an action self.actions.modify_select('meaning_0_2', input_value)


where `input_value` should be replaced with the value you want to select. However, since you did not provide the actual value to select, `input_value` remains a placeholder. If you provide the desired value, I can complete the command accordingly., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', 'value_to_select')
Failed to execute an action self.actions.modify_select('grammar_0_2', 'value_to_select'), error: Input value `value_to_select` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', 'blank')
We are going to select this select `meaning_0_1` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', '3')


Please provide the value you wish to select for the `grammar_0_1` dropdown.
Failed to execute an action self.actions.modify_select('grammar_0_1', '3')


Please provide the value you wish to select for the `grammar_0_1` dropdown., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', 'blank')
We are going to select this select `meaning_0_0` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', '4')


Since the exact nature of the input and value wasn't specified, replace '4' with the actual desired value for the grammar rating.
Failed to execute an action self.actions.modify_select('grammar_0_0', '4')


Since the exact nature of the input and value wasn't specified, replace '4' with the actual desired value for the grammar rating., error: unterminated string literal (detected at line 4) (<string>, line 4)
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.041666666666666664
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 7936 <-> row_number: 626
 --> inputs: ['meaning_0_7', 'grammar_0_7', 'meaning_0_0', 'grammar_0_0', 'meaning_0_5', 'grammar_0_5', 'meaning_0_9', 'grammar_0_9', 'meaning_0_3', 'grammar_0_3', 'meaning_0_4', 'grammar_0_4', 'meaning_0_1', 'grammar_0_1', 'meaning_0_2', 'grammar_0_2', 'meaning_0_10', 'grammar_0_10', 'meaning_0_8', 'grammar_0_8', 'meaning_0_6', 'grammar_0_6', 'meaning_0_11', 'grammar_0_11']
 --> Looking up gold labels from row index 626 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_7': [2, 3], 'grammar_0_7': [1, 2], 'meaning_0_0': [3, 2], 'grammar_0_0': [4, 3], 'meaning_0_5': [4, 4], 'grammar_0_5': [4, 2], 'meaning_0_9': [4, 3], 'grammar_0_9': [4, 2], 'meaning_0_3': [3, 2], 'grammar_0_3': [2, 3], 'meaning_0_4': [4, 3], 'grammar_0_4': [2, 2], 'meaning_0_1': [4, 4], 'grammar_0_1': [3, 2], 'meaning_0_2': [5, 5], 'grammar_0_2': [4, 3], 'meaning_0_10': [4, 3], 'grammar_0_10': [4, 2], 'meaning_0_8': [4, 4], 'grammar_0_8': [4, 2], 'meaning_0_6': [5, 3], 'grammar_0_6': [4, 4], 'meaning_0_11': [5, 5], 'grammar_0_11': [4, 3]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
Executing one action: self.actions.modify_select('meaning_0_7', 'blank')
We are going to select this select `meaning_0_7` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
Executing one action: self.actions.modify_select('grammar_0_7', 'blank')
We are going to select this select `grammar_0_7` with value `blank`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', 'nan')
Failed to execute an action self.actions.modify_select('meaning_0_0', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_0', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', 'blank')
We are going to select this select `meaning_0_5` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: Based on the provided HTML code and the input name "grammar_0_5", it looks like the task was to judge the quality of the grammar of sentence variations on a scale from 1 to 5. Since the HTML snippet does not show any inputs directly bound to a "grammar_0_5" field, it would be necessary to have more information to determine which specific dropdown or input corresponds to "grammar_0_5". 

In the screenshot, I can see dropdown menus for grammar assessments next to each sentence variation. If "grammar_0_5" refers to the grammar quality of a sentence variation listed as the fifth option under compression 0, then the appropriate command would be to set that dropdown value to 5 ('perfect'). 

However, since there is no direct correlation observable from the given HTML snippet and no visible `name` attribute for the dropdowns that matches "grammar_0_5" explicitly, I cannot generate a precise command.

If you provide the exact dropdown `name` attribute for the fifth sentence variation under the first source sentence (if it corresponds to source sentence 0), I can generate the command using the 'modify_select' method from the provided ones.
Failed to execute an action Based on the provided HTML code and the input name "grammar_0_5", it looks like the task was to judge the quality of the grammar of sentence variations on a scale from 1 to 5. Since the HTML snippet does not show any inputs directly bound to a "grammar_0_5" field, it would be necessary to have more information to determine which specific dropdown or input corresponds to "grammar_0_5". 

In the screenshot, I can see dropdown menus for grammar assessments next to each sentence variation. If "grammar_0_5" refers to the grammar quality of a sentence variation listed as the fifth option under compression 0, then the appropriate command would be to set that dropdown value to 5 ('perfect'). 

However, since there is no direct correlation observable from the given HTML snippet and no visible `name` attribute for the dropdowns that matches "grammar_0_5" explicitly, I cannot generate a precise command.

If you provide the exact dropdown `name` attribute for the fifth sentence variation under the first source sentence (if it corresponds to source sentence 0), I can generate the command using the 'modify_select' method from the provided ones., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
Executing one action: self.actions.modify_select('meaning_0_9', 'blank')
We are going to select this select `meaning_0_9` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
Executing one action: self.actions.modify_select('grammar_0_9', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_9', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', 'blank')
We are going to select this select `meaning_0_3` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', 'blank')
We are going to select this select `grammar_0_3` with value `blank`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', 'blank')
We are going to select this select `meaning_0_4` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', '5')
We are going to select this select `grammar_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', 'blank')
We are going to select this select `meaning_0_1` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', 'blank')
We are going to select this select `grammar_0_1` with value `blank`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', 'blank')
We are going to select this select `meaning_0_2` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', '5')
We are going to select this select `grammar_0_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
Executing one action: self.actions.modify_select('meaning_0_10', 'blank')
We are going to select this select `meaning_0_10` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
Executing one action: self.actions.modify_select('grammar_0_10', 'blank')
We are going to select this select `grammar_0_10` with value `blank`
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
Executing one action: self.actions.modify_select('meaning_0_8', 'blank')
We are going to select this select `meaning_0_8` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
Executing one action: self.actions.modify_select('grammar_0_8', '5')
We are going to select this select `grammar_0_8` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
Executing one action: self.actions.modify_select('meaning_0_6', '4')
We are going to select this select `meaning_0_6` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
Executing one action: self.actions.modify_select('grammar_0_6', '4')
We are going to select this select `grammar_0_6` with value `4`
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
Executing one action: self.actions.modify_select('meaning_0_11', 'blank')
We are going to select this select `meaning_0_11` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
Executing one action: self.actions.modify_select('grammar_0_11', '1')
We are going to select this select `grammar_0_11` with value `1`
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 3]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.041666666666666664
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 7595 <-> row_number: 285
 --> inputs: ['meaning_0_3', 'grammar_0_3', 'meaning_0_5', 'grammar_0_5', 'meaning_0_9', 'grammar_0_9', 'meaning_0_7', 'grammar_0_7', 'meaning_0_10', 'grammar_0_10', 'meaning_0_11', 'grammar_0_11', 'meaning_0_8', 'grammar_0_8', 'meaning_0_2', 'grammar_0_2', 'meaning_0_4', 'grammar_0_4', 'meaning_0_1', 'grammar_0_1', 'meaning_0_0', 'grammar_0_0', 'meaning_0_6', 'grammar_0_6']
 --> Looking up gold labels from row index 285 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_3': [4, 4], 'grammar_0_3': [3, 2], 'meaning_0_5': [3, 4], 'grammar_0_5': [2, 3], 'meaning_0_9': [4, 5], 'grammar_0_9': [1, 2], 'meaning_0_7': [4, 3], 'grammar_0_7': [2, 2], 'meaning_0_10': [2, 3], 'grammar_0_10': [2, 5], 'meaning_0_11': [2, 5], 'grammar_0_11': [2, 5], 'meaning_0_8': [4, 5], 'grammar_0_8': [2, 3], 'meaning_0_2': [4, 4], 'grammar_0_2': [4, 4], 'meaning_0_4': [4, 4], 'grammar_0_4': [2, 3], 'meaning_0_1': [4, 4], 'grammar_0_1': [4, 2], 'meaning_0_0': [4, 4], 'grammar_0_0': [4, 3], 'meaning_0_6': [4, 4], 'grammar_0_6': [4, 5]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', '3')
 

Please provide the value you'd like to set for the command to be generated.
Failed to execute an action self.actions.modify_select('meaning_0_3', '3')
 

Please provide the value you'd like to set for the command to be generated., error: unterminated string literal (detected at line 4) (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', 'input_value')


Replace 'input_value' with the actual value you wish to set for the input named 'grammar_0_3'. If you provide the specific value to set, I can update the command accordingly.
Failed to execute an action self.actions.modify_select('grammar_0_3', 'input_value')


Replace 'input_value' with the actual value you wish to set for the input named 'grammar_0_3'. If you provide the specific value to set, I can update the command accordingly., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', 'nan')
Failed to execute an action self.actions.modify_select('meaning_0_5', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_select('grammar_0_5', '5')
We are going to select this select `grammar_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
Executing one action: self.actions.modify_select('meaning_0_9', 'nan')
Failed to execute an action self.actions.modify_select('meaning_0_9', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
Executing one action: self.actions.modify_select(input_name: str, input_value)`. However, I need a specific value that you would like to set for the `grammar_0_9` input to provide the exact command.

If for instance, you would like to rate the grammar of the sentence as "perfect" with a value of "5", the command would be:

plaintext
self.actions.modify_select('grammar_0_9', '5')


Please provide the value you would like to select for the `grammar_0_9` input so that I can give you the corresponding command.
Failed to execute an action self.actions.modify_select(input_name: str, input_value)`. However, I need a specific value that you would like to set for the `grammar_0_9` input to provide the exact command.

If for instance, you would like to rate the grammar of the sentence as "perfect" with a value of "5", the command would be:

plaintext
self.actions.modify_select('grammar_0_9', '5')


Please provide the value you would like to select for the `grammar_0_9` input so that I can give you the corresponding command., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
Executing one action: self.actions.modify_select('meaning_0_7', '5')
We are going to select this select `meaning_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
Executing one action: self.actions.modify_select('grammar_0_7', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_7', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
Executing one action: self.actions.modify_select('meaning_0_10', '4')


Please provide the score you want to set so I can generate the correct command.
Failed to execute an action self.actions.modify_select('meaning_0_10', '4')


Please provide the score you want to set so I can generate the correct command., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
Executing one action: self.actions.modify_select('grammar_0_10', '10')
Failed to execute an action self.actions.modify_select('grammar_0_10', '10'), error: Input value `10` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
Executing one action: self.actions.modify_select('meaning_0_11', 'blank')
We are going to select this select `meaning_0_11` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
Executing one action: self.actions.modify_select('grammar_0_11', 'blank')
We are going to select this select `grammar_0_11` with value `blank`
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
Executing one action: self.actions.modify_select('meaning_0_8', 'nan')
Failed to execute an action self.actions.modify_select('meaning_0_8', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
Executing one action: self.actions.modify_select('grammar_0_8', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_8', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', 'blank')
We are going to select this select `meaning_0_2` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', 'blank')
We are going to select this select `grammar_0_2` with value `blank`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', '4')
We are going to select this select `meaning_0_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', 'perfect')
Failed to execute an action self.actions.modify_select('grammar_0_4', 'perfect'), error: Input value `perfect` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', 'blank')
We are going to select this select `meaning_0_1` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', 'new_value')


Replace `'new_value'` with the appropriate value you wish to set for the dropdown, which could be `blank`, `5`, `4`, `3`, `2`, or `1` depending on the intended grammar rating.
Failed to execute an action self.actions.modify_select('grammar_0_1', 'new_value')


Replace `'new_value'` with the appropriate value you wish to set for the dropdown, which could be `blank`, `5`, `4`, `3`, `2`, or `1` depending on the intended grammar rating., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', 'identical')
Failed to execute an action self.actions.modify_select('meaning_0_0', 'identical'), error: Input value `identical` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', '5')


Please provide the value you wish to set for the "grammar_0_0" input, and ensure that this value is a valid option from the select dropdown as per the HTML form's definition.
Failed to execute an action self.actions.modify_select('grammar_0_0', '5')


Please provide the value you wish to set for the "grammar_0_0" input, and ensure that this value is a valid option from the select dropdown as per the HTML form's definition., error: unterminated string literal (detected at line 4) (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
Executing one action: self.actions.modify_select('meaning_0_6', '3')
We are going to select this select `meaning_0_6` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
Executing one action: self.actions.modify_select('grammar_0_6', 'value')
Failed to execute an action self.actions.modify_select('grammar_0_6', 'value'), error: Input value `value` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.041666666666666664
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 8014 <-> row_number: 704
 --> inputs: ['meaning_0_0', 'grammar_0_0', 'meaning_0_1', 'grammar_0_1', 'meaning_0_2', 'grammar_0_2', 'meaning_0_3', 'grammar_0_3', 'meaning_0_11', 'grammar_0_11', 'meaning_0_9', 'grammar_0_9', 'meaning_0_4', 'grammar_0_4', 'meaning_0_5', 'grammar_0_5', 'meaning_0_10', 'grammar_0_10', 'meaning_0_6', 'grammar_0_6', 'meaning_0_8', 'grammar_0_8', 'meaning_0_7', 'grammar_0_7']
 --> Looking up gold labels from row index 704 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_0': [4, 2], 'grammar_0_0': [4, 5], 'meaning_0_1': [3, 1], 'grammar_0_1': [2, 2], 'meaning_0_2': [5, 5], 'grammar_0_2': [5, 5], 'meaning_0_3': [4, 4], 'grammar_0_3': [3, 3], 'meaning_0_11': [3, 3], 'grammar_0_11': [2, 2], 'meaning_0_9': [3, 1], 'grammar_0_9': [2, 1], 'meaning_0_4': [4, 4], 'grammar_0_4': [3, 5], 'meaning_0_5': [4, 3], 'grammar_0_5': [3, 3], 'meaning_0_10': [4, 1], 'grammar_0_10': [2, 1], 'meaning_0_6': [4, 5], 'grammar_0_6': [3, 5], 'meaning_0_8': [4, 1], 'grammar_0_8': [2, 1], 'meaning_0_7': [3, 1], 'grammar_0_7': [2, 1]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', 'blank')
We are going to select this select `meaning_0_0` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_0', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', '5')


Please provide the specific value if a different one is needed, and I can adjust the command accordingly.
Failed to execute an action self.actions.modify_select('meaning_0_1', '5')


Please provide the specific value if a different one is needed, and I can adjust the command accordingly., error: expected 'else' after 'if' expression (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_1', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', '4')


But I need you to clarify the new score value for "meaning_0_2" before I can generate a specific command.
Failed to execute an action self.actions.modify_select('meaning_0_2', '4')


But I need you to clarify the new score value for "meaning_0_2" before I can generate a specific command., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_2', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', 'blank')
We are going to select this select `meaning_0_3` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_3', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
Executing one action: self.actions.modify_select()`.
Failed to execute an action self.actions.modify_select()`., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
Executing one action: Based on the provided HTML code and the screenshot of the webpage, it seems I am supposed to generate a command to modify a dropdown selection with the name "grammar_0_11". However, I do not have information about the desired value to set for this input. If you can provide me with the value that should be selected, I can proceed to give you the correct command to modify this dropdown selection.
Failed to execute an action Based on the provided HTML code and the screenshot of the webpage, it seems I am supposed to generate a command to modify a dropdown selection with the name "grammar_0_11". However, I do not have information about the desired value to set for this input. If you can provide me with the value that should be selected, I can proceed to give you the correct command to modify this dropdown selection., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
Executing one action: To generate a command to modify the `meaning_0_9` input, I would need to know the value you wish to set for it as it is a dropdown selection. Please provide the desired value (1 to 5 or 'blank') that you want to select for the `meaning_0_9` dropdown.
Failed to execute an action To generate a command to modify the `meaning_0_9` input, I would need to know the value you wish to set for it as it is a dropdown selection. Please provide the desired value (1 to 5 or 'blank') that you want to select for the `meaning_0_9` dropdown., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
Executing one action: self.actions.modify_select('grammar_0_9', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_9', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', 'input_value')
Failed to execute an action self.actions.modify_select('meaning_0_4', 'input_value'), error: Input value `input_value` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', '5')
We are going to select this select `grammar_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: Based on the provided HTML and image, there isn't a form element specifically with the name "meaning_0_5". Therefore, I am unable to generate a command to modify this input as it doesn't appear to exist in the provided context. If "meaning_0_5" refers to a selection for the meaning assessment of a sentence variation with the ID "0_5," then typically a command would be generated to interact with a selection box (dropdown menu).

However, without clear context or a selection box named "meaning_0_5" in the provided HTML, I cannot accurately provide a command. If you intended to refer to a different element or have additional information that specifies the element to be modified, please provide that so I can assist you correctly.
Failed to execute an action Based on the provided HTML and image, there isn't a form element specifically with the name "meaning_0_5". Therefore, I am unable to generate a command to modify this input as it doesn't appear to exist in the provided context. If "meaning_0_5" refers to a selection for the meaning assessment of a sentence variation with the ID "0_5," then typically a command would be generated to interact with a selection box (dropdown menu).

However, without clear context or a selection box named "meaning_0_5" in the provided HTML, I cannot accurately provide a command. If you intended to refer to a different element or have additional information that specifies the element to be modified, please provide that so I can assist you correctly., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_select('grammar_0_5', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_5', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
Executing one action: self.actions.modify_select('meaning_0_10', 'nan')
Failed to execute an action self.actions.modify_select('meaning_0_10', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
Executing one action: self.actions.modify_select('grammar_0_10', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_10', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
Executing one action: self.actions.modify_select('meaning_0_6', 'blank')
We are going to select this select `meaning_0_6` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
Executing one action: self.actions.modify_select('grammar_0_6', 'value_you_want_to_change_to')
Failed to execute an action self.actions.modify_select('grammar_0_6', 'value_you_want_to_change_to'), error: Input value `value_you_want_to_change_to` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
Executing one action: self.actions.modify_select('meaning_0_8', '3')


Please provide the specific option value you want to apply to the input name "meaning_0_8" if different from the example given above.
Failed to execute an action self.actions.modify_select('meaning_0_8', '3')


Please provide the specific option value you want to apply to the input name "meaning_0_8" if different from the example given above., error: expected 'else' after 'if' expression (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
Executing one action: Based on the information provided, it seems the intended action is to utilize a select input for grading grammar. However, the specific value to input for the `grammar_0_8` selection is not indicated in your prompt. If you provide the desired value for 'grammar_0_8' (a value from 1 to 5 or 'blank'), I can then generate the appropriate command for you. 

Please let me know the value you wish to select for the `grammar_0_8` input.
Failed to execute an action Based on the information provided, it seems the intended action is to utilize a select input for grading grammar. However, the specific value to input for the `grammar_0_8` selection is not indicated in your prompt. If you provide the desired value for 'grammar_0_8' (a value from 1 to 5 or 'blank'), I can then generate the appropriate command for you. 

Please let me know the value you wish to select for the `grammar_0_8` input., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
Executing one action: self.actions.modify_select('meaning_0_7', '3')


This command would be used to set the "meaning" dropdown for the sentence with the given input name to the value that corresponds to "moderate differences." Please confirm or provide the desired value if different from this example.
Failed to execute an action self.actions.modify_select('meaning_0_7', '3')


This command would be used to set the "meaning" dropdown for the sentence with the given input name to the value that corresponds to "moderate differences." Please confirm or provide the desired value if different from this example., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
Executing one action: self.actions.modify_select('grammar_0_7', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_7', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 7385 <-> row_number: 75
 --> inputs: ['meaning_0_3', 'grammar_0_3', 'meaning_0_6', 'grammar_0_6', 'meaning_0_8', 'grammar_0_8', 'meaning_0_2', 'grammar_0_2', 'meaning_0_11', 'grammar_0_11', 'meaning_0_10', 'grammar_0_10', 'meaning_0_5', 'grammar_0_5', 'meaning_0_1', 'grammar_0_1', 'meaning_0_7', 'grammar_0_7', 'meaning_0_0', 'grammar_0_0', 'meaning_0_9', 'grammar_0_9', 'meaning_0_4', 'grammar_0_4']
 --> Looking up gold labels from row index 75 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_3': [1, 4], 'grammar_0_3': [1, 2], 'meaning_0_6': [2, 3], 'grammar_0_6': [1, 3], 'meaning_0_8': [3, 4], 'grammar_0_8': [2, 2], 'meaning_0_2': [5, 5], 'grammar_0_2': [1, 5], 'meaning_0_11': [1, 4], 'grammar_0_11': [1, 2], 'meaning_0_10': [2, 4], 'grammar_0_10': [2, 3], 'meaning_0_5': [2, 4], 'grammar_0_5': [1, 2], 'meaning_0_1': [2, 5], 'grammar_0_1': [2, 3], 'meaning_0_7': [1, 1], 'grammar_0_7': [1, 2], 'meaning_0_0': [4, 5], 'grammar_0_0': [4, 5], 'meaning_0_9': [3, 5], 'grammar_0_9': [2, 3], 'meaning_0_4': [2, 3], 'grammar_0_4': [2, 2]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', '3')
We are going to select this select `meaning_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', '3')
We are going to select this select `grammar_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
Executing one action: self.actions.modify_select('meaning_0_6', '3')
We are going to select this select `meaning_0_6` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
Executing one action: self.actions.modify_select('grammar_0_6', '3')


The index '0' in 'grammar_0_6' likely signifies that it is the first source sentence, while '6' signifies the specific sentence variation index. Please confirm or provide the desired value to select for the 'grammar_0_6' input.
Failed to execute an action self.actions.modify_select('grammar_0_6', '3')


The index '0' in 'grammar_0_6' likely signifies that it is the first source sentence, while '6' signifies the specific sentence variation index. Please confirm or provide the desired value to select for the 'grammar_0_6' input., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
Executing one action: self.actions.modify_select('meaning_0_8', '3')
We are going to select this select `meaning_0_8` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
Executing one action: self.actions.modify_select('grammar_0_8', '3')


Please provide the desired value to set for the input "grammar_0_8".
Failed to execute an action self.actions.modify_select('grammar_0_8', '3')


Please provide the desired value to set for the input "grammar_0_8"., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', '3')
We are going to select this select `meaning_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', '2')
We are going to select this select `grammar_0_2` with value `2`
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
Executing one action: self.actions.modify_select('meaning_0_11', '3')
We are going to select this select `meaning_0_11` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
Executing one action: self.actions.modify_select('grammar_0_11', '3')
We are going to select this select `grammar_0_11` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
Executing one action: self.actions.modify_select('meaning_0_10', 'blank')
We are going to select this select `meaning_0_10` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
Executing one action: self.actions.modify_select('grammar_0_10', '1')
We are going to select this select `grammar_0_10` with value `1`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: Based on the HTML code and the screenshot provided, it appears you want to generate a command to modify a selection for a dropdown menu with the name "meaning_0_5". However, the screenshot provided shows various items graded on a scale but does not provide a specific intended value to set for the "meaning_0_5" input.

If you wish to set a specific value for the "meaning_0_5" dropdown, please specify the desired value (for instance, "5" for identical, "4" for minor differences, etc.). Once I have the desired value, I will provide you with the appropriate command.
Failed to execute an action Based on the HTML code and the screenshot provided, it appears you want to generate a command to modify a selection for a dropdown menu with the name "meaning_0_5". However, the screenshot provided shows various items graded on a scale but does not provide a specific intended value to set for the "meaning_0_5" input.

If you wish to set a specific value for the "meaning_0_5" dropdown, please specify the desired value (for instance, "5" for identical, "4" for minor differences, etc.). Once I have the desired value, I will provide you with the appropriate command., error: invalid syntax (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_select('grammar_0_5', '5')
We are going to select this select `grammar_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', '3')
We are going to select this select `meaning_0_1` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', '5')
We are going to select this select `grammar_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
Executing one action: self.actions.modify_select('meaning_0_7', 'blank')
We are going to select this select `meaning_0_7` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
Executing one action: self.actions.modify_select('grammar_0_7', 'value')
Failed to execute an action self.actions.modify_select('grammar_0_7', 'value'), error: Input value `value` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', 'blank')
We are going to select this select `meaning_0_0` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', '5')


This command would change the value of the "grammar_0_0" dropdown to indicate a grammar rating of "perfect". If there are other intentions, such as selecting "ungrammatical" (which has a value of "1"), you would simply replace the '5' with '1' in the `input_value` parameter of the `modify_select` method.
Failed to execute an action self.actions.modify_select('grammar_0_0', '5')


This command would change the value of the "grammar_0_0" dropdown to indicate a grammar rating of "perfect". If there are other intentions, such as selecting "ungrammatical" (which has a value of "1"), you would simply replace the '5' with '1' in the `input_value` parameter of the `modify_select` method., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
Executing one action: self.actions.modify_select('meaning_0_9', 'nan')
Failed to execute an action self.actions.modify_select('meaning_0_9', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
Executing one action: self.actions.modify_select('grammar_0_9', '1')
We are going to select this select `grammar_0_9` with value `1`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', '4')
We are going to select this select `meaning_0_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', '1')
We are going to select this select `grammar_0_4` with value `1`
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 5]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.041666666666666664
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 8234 <-> row_number: 924
 --> inputs: ['meaning_0_0', 'grammar_0_0', 'meaning_0_7', 'grammar_0_7', 'meaning_0_5', 'grammar_0_5', 'meaning_0_6', 'grammar_0_6', 'meaning_0_3', 'grammar_0_3', 'meaning_0_2', 'grammar_0_2', 'meaning_0_4', 'grammar_0_4', 'meaning_0_1', 'grammar_0_1', 'meaning_0_11', 'grammar_0_11', 'meaning_0_8', 'grammar_0_8', 'meaning_0_10', 'grammar_0_10', 'meaning_0_9', 'grammar_0_9']
 --> Looking up gold labels from row index 924 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_0': [5, 5], 'grammar_0_0': [5, 5], 'meaning_0_7': [1, 3], 'grammar_0_7': [4, 3], 'meaning_0_5': [4, 3], 'grammar_0_5': [2, 2], 'meaning_0_6': [4, 3], 'grammar_0_6': [4, 3], 'meaning_0_3': [2, 3], 'grammar_0_3': [1, 2], 'meaning_0_2': [4, 5], 'grammar_0_2': [4, 3], 'meaning_0_4': [4, 4], 'grammar_0_4': [1, 2], 'meaning_0_1': [2, 3], 'grammar_0_1': [2, 2], 'meaning_0_11': [5, 4], 'grammar_0_11': [2, 3], 'meaning_0_8': [2, 4], 'grammar_0_8': [2, 2], 'meaning_0_10': [5, 3], 'grammar_0_10': [2, 3], 'meaning_0_9': [2, 4], 'grammar_0_9': [2, 2]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', 'identical')
Failed to execute an action self.actions.modify_select('meaning_0_0', 'identical'), error: Input value `identical` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', 'blank')
We are going to select this select `grammar_0_0` with value `blank`
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
Executing one action: self.actions.modify_select('meaning_0_7', 'blank')
We are going to select this select `meaning_0_7` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
Executing one action: self.actions.modify_select('grammar_0_7', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_7', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', 'nan')
Failed to execute an action self.actions.modify_select('meaning_0_5', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_select('grammar_0_5', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_5', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
Executing one action: self.actions.modify_select('meaning_0_6', 'blank')
We are going to select this select `meaning_0_6` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
Executing one action: self.actions.modify_select('grammar_0_6', 'value')
Failed to execute an action self.actions.modify_select('grammar_0_6', 'value'), error: Input value `value` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', 'nan')
Failed to execute an action self.actions.modify_select('meaning_0_3', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', 'input_value')


Remember to replace `'input_value'` with the actual value you want to select from the dropdown options (1 through 5, or 'blank' if no selection is made).
Failed to execute an action self.actions.modify_select('grammar_0_3', 'input_value')


Remember to replace `'input_value'` with the actual value you want to select from the dropdown options (1 through 5, or 'blank' if no selection is made)., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', 'blank')
We are going to select this select `meaning_0_2` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_2', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', 'value')
Failed to execute an action self.actions.modify_select('meaning_0_4', 'value'), error: Input value `value` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', '5')
We are going to select this select `grammar_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', 'blank')
We are going to select this select `meaning_0_1` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', '3')
We are going to select this select `grammar_0_1` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
Executing one action: self.actions.modify_select('meaning_0_11', '3')
We are going to select this select `meaning_0_11` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
Executing one action: self.actions.modify_select('grammar_0_11', '2')
We are going to select this select `grammar_0_11` with value `2`
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
Executing one action: self.actions.modify_select('meaning_0_8', '3')
We are going to select this select `meaning_0_8` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
Executing one action: self.actions.modify_select('grammar_0_8', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_8', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
Executing one action: self.actions.modify_select('meaning_0_10', 'blank')
We are going to select this select `meaning_0_10` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
Executing one action: self.actions.modify_select('grammar_0_10', 'blank')
We are going to select this select `grammar_0_10` with value `blank`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
Executing one action: self.actions.modify_select('meaning_0_9', 'blank')
We are going to select this select `meaning_0_9` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
Executing one action: self.actions.modify_select('grammar_0_9', '5')
We are going to select this select `grammar_0_9` with value `5`
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.041666666666666664
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 8232 <-> row_number: 922
 --> inputs: ['meaning_0_10', 'grammar_0_10', 'meaning_0_9', 'grammar_0_9', 'meaning_0_11', 'grammar_0_11', 'meaning_0_1', 'grammar_0_1', 'meaning_0_3', 'grammar_0_3', 'meaning_0_0', 'grammar_0_0', 'meaning_0_6', 'grammar_0_6', 'meaning_0_4', 'grammar_0_4', 'meaning_0_5', 'grammar_0_5', 'meaning_0_8', 'grammar_0_8', 'meaning_0_7', 'grammar_0_7', 'meaning_0_2', 'grammar_0_2']
 --> Looking up gold labels from row index 922 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_10': [2, 1], 'grammar_0_10': [1, 1], 'meaning_0_9': [5, 3], 'grammar_0_9': [2, 1], 'meaning_0_11': [4, 1], 'grammar_0_11': [2, 1], 'meaning_0_1': [4, 2], 'grammar_0_1': [2, 1], 'meaning_0_3': [5, 4], 'grammar_0_3': [4, 3], 'meaning_0_0': [5, 4], 'grammar_0_0': [5, 4], 'meaning_0_6': [4, 3], 'grammar_0_6': [2, 1], 'meaning_0_4': [5, 4], 'grammar_0_4': [3, 3], 'meaning_0_5': [5, 4], 'grammar_0_5': [4, 1], 'meaning_0_8': [5, 2], 'grammar_0_8': [3, 1], 'meaning_0_7': [4, 4], 'grammar_0_7': [3, 1], 'meaning_0_2': [5, 4], 'grammar_0_2': [4, 4]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
Executing one action: self.actions.modify_select('meaning_0_10', '3')


This command will set the dropdown for "meaning_0_10" to the value of '3', assuming '3' corresponds to the option "moderate differences" as per the instructions given in the task. Please replace '3' with the appropriate value you wish to select if you have a specific rating in mind.
Failed to execute an action self.actions.modify_select('meaning_0_10', '3')


This command will set the dropdown for "meaning_0_10" to the value of '3', assuming '3' corresponds to the option "moderate differences" as per the instructions given in the task. Please replace '3' with the appropriate value you wish to select if you have a specific rating in mind., error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
Executing one action: self.actions.modify_select('grammar_0_10', 'nan')
Failed to execute an action self.actions.modify_select('grammar_0_10', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
Executing one action: self.actions.modify_select('meaning_0_9', 'nan')
Failed to execute an action self.actions.modify_select('meaning_0_9', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
Error getting action from GPT4V model Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}, trying again, current fail_count is 1
Error getting action from GPT4V model Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}, trying again, current fail_count is 2
Error getting action from GPT4V model Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}, trying again, current fail_count is 3
Error getting action from GPT4V model Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}, trying again, current fail_count is 4
Error getting action from GPT4V model Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}, trying again, current fail_count is 5
Error getting action from GPT4V model Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}, trying again, current fail_count is 6
Error getting action from GPT4V model Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}, trying again, current fail_count is 7
Error getting action from GPT4V model Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}, trying again, current fail_count is 8
Error getting action from GPT4V model Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}, trying again, current fail_count is 9
Error getting action from GPT4V model Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}, trying again, current fail_count is 10
Error getting action from GPT4V model Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}, trying again, current fail_count is 11
Error getting action from GPT4V model Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}, trying again, current fail_count is 12
Error getting action from GPT4V model Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}, trying again, current fail_count is 13
Error getting action from GPT4V model Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}, trying again, current fail_count is 14
Error getting action from GPT4V model Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}, trying again, current fail_count is 15
Error getting action from GPT4V model Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}, trying again, current fail_count is 16
Error getting action from GPT4V model Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}, trying again, current fail_count is 17
Error getting action from GPT4V model Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}, trying again, current fail_count is 18
Error getting action from GPT4V model Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}, trying again, current fail_count is 19
Error getting action from GPT4V model Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}, trying again, current fail_count is 20
Premature destructor being called potentially
