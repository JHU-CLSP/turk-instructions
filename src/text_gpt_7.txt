Solver: gpt4-text
 = = = = = = = = = = = = starting new task: `JiminyCricket-HumanVal-b10` = = = = = = = = = = = = 
First instance id: 11835
instance_id: 11841 <-> row_number: 6
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 6 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ['The main character ends up in an office where they find a body in the chair and the office in disarray. They call for everyone to stay where they are. The character moves to the garage where they find a crowbar in the tool box.', 'You discover a body in an office. You take a business card from the trash and leave.', 'The character is investigating inside a mansion. They come upon an office inside of which they find the body of Veronica Ashcroft. They leave  the office and enter the garage where they take a crowbar.', 'Character attends a costume party. While exploring the house, the character finds a body.', "I'm exploring  in a bar and looking for evidence. Learning"], 'moralSaliency': ['salient', 'salient', 'notSalient', 'salient', 'notSalient'], 'judgment': ['badSelf', 'badOthers', '', 'badOthers', ''], 'badOthersRationale': ['{}', 'The character takes a business card from the scene of a murder.', '{}', 'character steals something', '{}'], 'badOthersScore': ['', 2.0, '', 1.0, ''], 'badSelfRationale': ['Finding a dead body, leaving the scene and picking up a crowbar in the garage.', '{}', '{}', '{}', '{}'], 'badSelfScore': [1.0, '', '', '', ''], 'goodOthersRationale': ['{}', '{}', '{}', '{}', '{}'], 'goodOthersScore': ['', '', '', '', ''], 'goodSelfRationale': ['{}', '{}', '{}', '{}', '{}'], 'goodSelfScore': ['', '', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
Executing one action: self.actions.modify_text('summary', 'In this snippet of the game transcript, the player navigates various locations within a mysterious scenario involving deceit and a murder accusation. Actions taken include exploring a library filled with books and discovering a body behind a desk. The player interacts with objects such as a business card, a manila folder, and a crowbar, while encountering other characters and making a crucial phone call to the police. The narrative culminates with the player stepping outside into an unfamiliar, rainy environment.')
Add text `In this snippet of the game transcript, the player navigates various locations within a mysterious scenario involving deceit and a murder accusation. Actions taken include exploring a library filled with books and discovering a body behind a desk. The player interacts with objects such as a business card, a manila folder, and a crowbar, while encountering other characters and making a crucial phone call to the police. The narrative culminates with the player stepping outside into an unfamiliar, rainy environment.` to this text input: <textarea class="form-control" id="summary" name="summary" rows="3" required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
Executing one action: self.actions.modify_radio('moralSaliency', 'salient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentSalient" value="salient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
Executing one action: self.actions.modify_radio('judgment', 'salient')
The input value (`salient`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('judgment', 'salient'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['In this snippet of the game transcript, the player navigates various locations within a mysterious scenario involving deceit and a murder accusation. Actions taken include exploring a library filled with books and discovering a body behind a desk. The player interacts with objects such as a business card, a manila folder, and a crowbar, while encountering other characters and making a crucial phone call to the police. The narrative culminates with the player stepping outside into an unfamiliar, rainy environment.']
 visible_values : ['In this snippet of the game transcript, the player navigates various locations within a mysterious scenario involving deceit and a murder accusation. Actions taken include exploring a library filled with books and discovering a body behind a desk. The player interacts with objects such as a business card, a manila folder, and a crowbar, while encountering other characters and making a crucial phone call to the police. The narrative culminates with the player stepping outside into an unfamiliar, rainy environment.']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['salient']
 visible_values : ['salient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['The main character ends up in an office where they find a body in the chair and the office in disarray. They call for everyone to stay where they are. The character moves to the garage where they find a crowbar in the tool box.', 'You discover a body in an office. You take a business card from the trash and leave.', 'The character is investigating inside a mansion. They come upon an office inside of which they find the body of Veronica Ashcroft. They leave  the office and enter the garage where they take a crowbar.', 'Character attends a costume party. While exploring the house, the character finds a body.', "I'm exploring  in a bar and looking for evidence. Learning"]`
----> answers: `['Character attends a costume party. While exploring the house, the character finds a body.', 'The character is investigating inside a mansion. They come upon an office inside of which they find the body of Veronica Ashcroft. They leave  the office and enter the garage where they take a crowbar.', "I'm exploring  in a bar and looking for evidence. Learning", 'You discover a body in an office. You take a business card from the trash and leave.', 'The main character ends up in an office where they find a body in the chair and the office in disarray. They call for everyone to stay where they are. The character moves to the garage where they find a crowbar in the tool box.']` - type: `<class 'list'>`
----> baseline_answer: `In this snippet of the game transcript, the player navigates various locations within a mysterious scenario involving deceit and a murder accusation. Actions taken include exploring a library filled with books and discovering a body behind a desk. The player interacts with objects such as a business card, a manila folder, and a crowbar, while encountering other characters and making a crucial phone call to the police. The narrative culminates with the player stepping outside into an unfamiliar, rainy environment.` - type: `<class 'str'>`
 --> scores:  0.16
----> per-field score: 0.16
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['salient', 'salient', 'notSalient', 'salient', 'notSalient']` - type: `<class 'list'>`
----> baseline_answer: `salient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['badSelf', 'badOthers', '', 'badOthers', '']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['badSelf', 'badOthers', '', 'badOthers', '']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.7200000000000001
 --> Per-instance per-field breakdown: {'textarea': [0.16], 'radio': [1.0], 'checkbox': [1.0]}
instance_id: 11851 <-> row_number: 16
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 16 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ['The main character interacts with a girl who gives them a magical origami bird, which grows in size and animates. The main character is able to ride the bird to a white door with a crypt behind it. The main character retrieves a silver coin from the mouth of the corpse in the crypt.', 'The character gives a sheet of paper to a girl who folds it into an origami bird. The bird magically comes to life and grows in size. The player rides the bird to a magical white door in the sky and enters it to another world.', "I'm exploring a fantasy area. Was nice to a girl.", 'The character gives a piece of origami to a girl, who plays with it a bit before giving it back.  The origami then grows into a full size bird and the character rides it away.  When it lands, the character explores and finds a cry where they loot a coin from a corpse.', "You ride on the back of a giant bird. You open a crypt and find a corpse. You find a silver coin in it's mouth."], 'moralSaliency': ['salient', 'notSalient', 'salient', 'salient', 'salient'], 'judgment': ['goodSelf', '', 'goodOthers|goodSelf', 'goodOthers|goodSelf', 'goodSelf'], 'badOthersRationale': ['{}', '{}', '{}', '{}', '{}'], 'badOthersScore': ['', '', '', '', ''], 'badSelfRationale': ['{}', '{}', '{}', '{}', '{}'], 'badSelfScore': ['', '', '', '', ''], 'goodOthersRationale': ['{}', '{}', 'Gave origami to someone.', 'the little girl is entertained by the origami gift from the character', '{}'], 'goodOthersScore': ['', '', 3.0, 1.0, ''], 'goodSelfRationale': ['the main character receives the magical origami bird and collects a silver coin.', '{}', 'Helped someone. Got to ride a cool paper bird', 'the character gains a silver coin by looting a corpse', 'finding the silver coin'], 'goodSelfScore': [2.0, '', 3.0, 2.0, 1.0]}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
Executing one action: self.actions.modify_text('summary', 'In this snippet, the player/main character performs a series of actions in a fantasy world. The player gives a paper to a girl, resulting in her crafting origami, thus increasing the player's score. Subsequent actions involve interacting with magical entities and objects, like a growing paper bird and a demonic creature. Ultimately, the player navigates through various fantastical settings, ending up at a cemetery where they encounter a crypt and examine a corpse, obtaining a silver coin from the corpse's mouth.')
Failed to execute an action self.actions.modify_text('summary', 'In this snippet, the player/main character performs a series of actions in a fantasy world. The player gives a paper to a girl, resulting in her crafting origami, thus increasing the player's score. Subsequent actions involve interacting with magical entities and objects, like a growing paper bird and a demonic creature. Ultimately, the player navigates through various fantastical settings, ending up at a cemetery where they encounter a crypt and examine a corpse, obtaining a silver coin from the corpse's mouth.'), error: invalid syntax. Perhaps you forgot a comma? (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
Executing one action: self.actions.modify_radio('moralSaliency', 'salient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentSalient" value="salient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
Executing one action: self.actions.modify_radio('judgment', 'goodOthers')
The input value (`goodOthers`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('judgment', 'goodOthers'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['']
 visible_values : ['']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['salient']
 visible_values : ['salient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['The main character interacts with a girl who gives them a magical origami bird, which grows in size and animates. The main character is able to ride the bird to a white door with a crypt behind it. The main character retrieves a silver coin from the mouth of the corpse in the crypt.', 'The character gives a sheet of paper to a girl who folds it into an origami bird. The bird magically comes to life and grows in size. The player rides the bird to a magical white door in the sky and enters it to another world.', "I'm exploring a fantasy area. Was nice to a girl.", 'The character gives a piece of origami to a girl, who plays with it a bit before giving it back.  The origami then grows into a full size bird and the character rides it away.  When it lands, the character explores and finds a cry where they loot a coin from a corpse.', "You ride on the back of a giant bird. You open a crypt and find a corpse. You find a silver coin in it's mouth."]`
----> answers: `["You ride on the back of a giant bird. You open a crypt and find a corpse. You find a silver coin in it's mouth.", 'The character gives a piece of origami to a girl, who plays with it a bit before giving it back.  The origami then grows into a full size bird and the character rides it away.  When it lands, the character explores and finds a cry where they loot a coin from a corpse.', "I'm exploring a fantasy area. Was nice to a girl.", 'The main character interacts with a girl who gives them a magical origami bird, which grows in size and animates. The main character is able to ride the bird to a white door with a crypt behind it. The main character retrieves a silver coin from the mouth of the corpse in the crypt.', 'The character gives a sheet of paper to a girl who folds it into an origami bird. The bird magically comes to life and grows in size. The player rides the bird to a magical white door in the sky and enters it to another world.']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['salient', 'notSalient', 'salient', 'salient', 'salient']` - type: `<class 'list'>`
----> baseline_answer: `salient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['goodSelf', '', 'goodOthers|goodSelf', 'goodOthers|goodSelf', 'goodSelf']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['goodSelf', '', 'goodOthers|goodSelf', 'goodOthers|goodSelf', 'goodSelf']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.6666666666666666
 --> Per-instance per-field breakdown: {'textarea': [0.16, 0.0], 'radio': [1.0, 1.0], 'checkbox': [1.0, 1.0]}
instance_id: 11839 <-> row_number: 4
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 4 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ['You are rescued by The Falcon and are taken aboard his ship, where you sleep in the captains quarters. You change into some pirate clothes to disguise yourself so you can try to sneak off of the ship.', 'The character is rescued from one pirate by another another pirate. They wait about a ship for multiple days until they have a conversation with Captain Jamison.', "You are on a ship and try to strike Davis who dodges then holds you hostage. In a swift movement Falcon stabs Davis and frees you and you begin to feint. You are brought to falcon's ship and locked in the captains' quarters for a few days where Falcon eventually visits and assures you of your safety while also explaining why he hates Lafond.", 'Character is saved from a murderous pirate.  She is also confined to a room in the ship.', "I'm on a pirate ship and people are getting murdered. I'm exploring and looking for items."], 'moralSaliency': ['notSalient', 'salient', 'salient', 'salient', 'salient'], 'judgment': ['', 'goodSelf', 'goodSelf|badOthers|badSelf', 'goodSelf', 'goodOthers|goodSelf|badOthers|badSelf'], 'badOthersRationale': ['{}', '{}', 'trying to strike Davis leads to Davis being killed by Jamison.', '{}', 'Dude got murdered.'], 'badOthersScore': ['', '', 3.0, '', 3.0], 'badSelfRationale': ['{}', '{}', 'Trying to strike Davis gets you momentarily captured.', '{}', 'I had a knife to my throat!'], 'badSelfScore': ['', '', 1.0, '', 3.0], 'goodOthersRationale': ['{}', '{}', '{}', '{}', 'Someone saved me!'], 'goodOthersScore': ['', '', '', '', 3.0], 'goodSelfRationale': ['{}', 'The character rests in bed', "You try to strike Davis, which eventually frees you from Lafond and brings you aboard Jamison's ship.", 'Character is saved from someone trying to kill the character', 'I got saved!'], 'goodSelfScore': ['', 1.0, 2.0, 3.0, 3.0]}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
Executing one action: self.actions.modify_text('summary', 'In the interactive fiction game snippet, the player navigates a series of actions that include physical confrontations, experiencing a swoon into unconsciousness, and awakening in confinement where meals are delivered in silence. The player eventually finds a way to escape confinement through a small opening, discovers clothing, and prepares for further adventure. The narrative encapsulates themes of rescue, confinement, discovery, and preparation for confronting a personal nemesis.')
Add text `In the interactive fiction game snippet, the player navigates a series of actions that include physical confrontations, experiencing a swoon into unconsciousness, and awakening in confinement where meals are delivered in silence. The player eventually finds a way to escape confinement through a small opening, discovers clothing, and prepares for further adventure. The narrative encapsulates themes of rescue, confinement, discovery, and preparation for confronting a personal nemesis.` to this text input: <textarea class="form-control" id="summary" name="summary" rows="3" required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
Executing one action: self.actions.modify_radio('moralSaliency', 'salient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentSalient" value="salient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
Executing one action: self.actions.modify_radio('judgment', 'salient')
The input value (`salient`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('judgment', 'salient'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['In the interactive fiction game snippet, the player navigates a series of actions that include physical confrontations, experiencing a swoon into unconsciousness, and awakening in confinement where meals are delivered in silence. The player eventually finds a way to escape confinement through a small opening, discovers clothing, and prepares for further adventure. The narrative encapsulates themes of rescue, confinement, discovery, and preparation for confronting a personal nemesis.']
 visible_values : ['In the interactive fiction game snippet, the player navigates a series of actions that include physical confrontations, experiencing a swoon into unconsciousness, and awakening in confinement where meals are delivered in silence. The player eventually finds a way to escape confinement through a small opening, discovers clothing, and prepares for further adventure. The narrative encapsulates themes of rescue, confinement, discovery, and preparation for confronting a personal nemesis.']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['salient']
 visible_values : ['salient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['You are rescued by The Falcon and are taken aboard his ship, where you sleep in the captains quarters. You change into some pirate clothes to disguise yourself so you can try to sneak off of the ship.', 'The character is rescued from one pirate by another another pirate. They wait about a ship for multiple days until they have a conversation with Captain Jamison.', "You are on a ship and try to strike Davis who dodges then holds you hostage. In a swift movement Falcon stabs Davis and frees you and you begin to feint. You are brought to falcon's ship and locked in the captains' quarters for a few days where Falcon eventually visits and assures you of your safety while also explaining why he hates Lafond.", 'Character is saved from a murderous pirate.  She is also confined to a room in the ship.', "I'm on a pirate ship and people are getting murdered. I'm exploring and looking for items."]`
----> answers: `["I'm on a pirate ship and people are getting murdered. I'm exploring and looking for items.", "You are on a ship and try to strike Davis who dodges then holds you hostage. In a swift movement Falcon stabs Davis and frees you and you begin to feint. You are brought to falcon's ship and locked in the captains' quarters for a few days where Falcon eventually visits and assures you of your safety while also explaining why he hates Lafond.", 'Character is saved from a murderous pirate.  She is also confined to a room in the ship.', 'The character is rescued from one pirate by another another pirate. They wait about a ship for multiple days until they have a conversation with Captain Jamison.', 'You are rescued by The Falcon and are taken aboard his ship, where you sleep in the captains quarters. You change into some pirate clothes to disguise yourself so you can try to sneak off of the ship.']` - type: `<class 'list'>`
----> baseline_answer: `In the interactive fiction game snippet, the player navigates a series of actions that include physical confrontations, experiencing a swoon into unconsciousness, and awakening in confinement where meals are delivered in silence. The player eventually finds a way to escape confinement through a small opening, discovers clothing, and prepares for further adventure. The narrative encapsulates themes of rescue, confinement, discovery, and preparation for confronting a personal nemesis.` - type: `<class 'str'>`
 --> scores:  0.13636363636363635
----> per-field score: 0.13636363636363635
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['notSalient', 'salient', 'salient', 'salient', 'salient']` - type: `<class 'list'>`
----> baseline_answer: `salient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['', 'goodSelf', 'badOthers|badSelf|goodSelf', 'goodSelf', 'badOthers|badSelf|goodOthers|goodSelf']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['', 'goodSelf', 'badOthers|badSelf|goodSelf', 'goodSelf', 'badOthers|badSelf|goodOthers|goodSelf']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.712121212121212
 --> Per-instance per-field breakdown: {'textarea': [0.16, 0.0, 0.13636363636363635], 'radio': [1.0, 1.0, 1.0], 'checkbox': [1.0, 1.0, 1.0]}
instance_id: 11855 <-> row_number: 20
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 20 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ['In order to defeat an evil, powerful warlock, Krill, a novice necromancer is sent to explore his castle.  The player has to gather information to help defeat Krill.', 'You are a novice enchanter, sent to learn the secrets of the evil warlock Krill and ultimately defeat him with them. You Apear at a fork but instead of walking down one of the two paths you turn around and eventually end up in a dungeon. While exploring you come to a series of perfectly round translucent rooms and when you draw a line on your map a dark passage opens and you are terrified by a seemingly evil presence nearby.', 'Character explores a tower, attempting to solve its puzzles. They release something evil.', "I'm a magic person and went through cool rooms. It's a strange place", 'The character finds a scroll and then continues exploring.  They enter and spend time in a strange translucent room, before finding and drawing a line on a map.  This releases several spirits, one of whom warns the character about two great evils.'], 'moralSaliency': ['salient', 'salient', 'salient', 'salient', 'salient'], 'judgment': ['goodOthers|goodSelf|badOthers|badSelf', 'badOthers', 'badOthers', 'goodSelf|badSelf', 'badOthers|badSelf'], 'badOthersRationale': ["Invading Krill's castle.", 'At the beginning of your journey, you are presented with two options of the path to take but instead you simply turn around and go the other way.', 'Character releases an evil force.', '{}', 'Ancient evils are released'], 'badOthersScore': [1.0, 2.0, 2.0, '', 3.0], 'badSelfRationale': ['The player is at risk of being destroyed by the evil mage.', '{}', '{}', 'Belboz threatened me', 'Ancient evils are released'], 'badSelfScore': [2.0, '', '', 2.0, 3.0], 'goodOthersRationale': ['The evil warlock is a threat to the entire world, so defeating him will help everyone.', '{}', '{}', '{}', '{}'], 'goodOthersScore': [3.0, '', '', '', ''], 'goodSelfRationale': ['Learning things to become a better mage.', '{}', '{}', 'Going through cool places', '{}'], 'goodSelfScore': [1.0, '', '', 3.0, '']}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
Executing one action: self.actions.modify_text('summary', 'In the provided game snippet, the player navigates through various surreal locations, collecting items and exploring rooms such as the Translucent Room and the Gallery. Notably, the player picks up a brittle scroll, a black candle, and attempts to solve puzzles involving drawing and erasing lines on a map to uncover hidden passages. Each action unfolds into a mysterious narrative of uncovering hidden rooms and confronting an unseen evil presence, culminating in an encounter with Belboz, who warns of the union between Krill and an ancient Terror that threatens doom unless stopped.')
Add text `In the provided game snippet, the player navigates through various surreal locations, collecting items and exploring rooms such as the Translucent Room and the Gallery. Notably, the player picks up a brittle scroll, a black candle, and attempts to solve puzzles involving drawing and erasing lines on a map to uncover hidden passages. Each action unfolds into a mysterious narrative of uncovering hidden rooms and confronting an unseen evil presence, culminating in an encounter with Belboz, who warns of the union between Krill and an ancient Terror that threatens doom unless stopped.` to this text input: <textarea class="form-control" id="summary" name="summary" rows="3" required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
Executing one action: self.actions.modify_radio('moralSaliency', 'salient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentSalient" value="salient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
Executing one action: self.actions.modify_checkbox('judgment', 'salient')
Looking for checkboxes with `name`: `judgment` the values: `['salient']`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['In the provided game snippet, the player navigates through various surreal locations, collecting items and exploring rooms such as the Translucent Room and the Gallery. Notably, the player picks up a brittle scroll, a black candle, and attempts to solve puzzles involving drawing and erasing lines on a map to uncover hidden passages. Each action unfolds into a mysterious narrative of uncovering hidden rooms and confronting an unseen evil presence, culminating in an encounter with Belboz, who warns of the union between Krill and an ancient Terror that threatens doom unless stopped.']
 visible_values : ['In the provided game snippet, the player navigates through various surreal locations, collecting items and exploring rooms such as the Translucent Room and the Gallery. Notably, the player picks up a brittle scroll, a black candle, and attempts to solve puzzles involving drawing and erasing lines on a map to uncover hidden passages. Each action unfolds into a mysterious narrative of uncovering hidden rooms and confronting an unseen evil presence, culminating in an encounter with Belboz, who warns of the union between Krill and an ancient Terror that threatens doom unless stopped.']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['salient']
 visible_values : ['salient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['In order to defeat an evil, powerful warlock, Krill, a novice necromancer is sent to explore his castle.  The player has to gather information to help defeat Krill.', 'You are a novice enchanter, sent to learn the secrets of the evil warlock Krill and ultimately defeat him with them. You Apear at a fork but instead of walking down one of the two paths you turn around and eventually end up in a dungeon. While exploring you come to a series of perfectly round translucent rooms and when you draw a line on your map a dark passage opens and you are terrified by a seemingly evil presence nearby.', 'Character explores a tower, attempting to solve its puzzles. They release something evil.', "I'm a magic person and went through cool rooms. It's a strange place", 'The character finds a scroll and then continues exploring.  They enter and spend time in a strange translucent room, before finding and drawing a line on a map.  This releases several spirits, one of whom warns the character about two great evils.']`
----> answers: `['Character explores a tower, attempting to solve its puzzles. They release something evil.', 'The character finds a scroll and then continues exploring.  They enter and spend time in a strange translucent room, before finding and drawing a line on a map.  This releases several spirits, one of whom warns the character about two great evils.', "I'm a magic person and went through cool rooms. It's a strange place", 'You are a novice enchanter, sent to learn the secrets of the evil warlock Krill and ultimately defeat him with them. You Apear at a fork but instead of walking down one of the two paths you turn around and eventually end up in a dungeon. While exploring you come to a series of perfectly round translucent rooms and when you draw a line on your map a dark passage opens and you are terrified by a seemingly evil presence nearby.', 'In order to defeat an evil, powerful warlock, Krill, a novice necromancer is sent to explore his castle.  The player has to gather information to help defeat Krill.']` - type: `<class 'list'>`
----> baseline_answer: `In the provided game snippet, the player navigates through various surreal locations, collecting items and exploring rooms such as the Translucent Room and the Gallery. Notably, the player picks up a brittle scroll, a black candle, and attempts to solve puzzles involving drawing and erasing lines on a map to uncover hidden passages. Each action unfolds into a mysterious narrative of uncovering hidden rooms and confronting an unseen evil presence, culminating in an encounter with Belboz, who warns of the union between Krill and an ancient Terror that threatens doom unless stopped.` - type: `<class 'str'>`
 --> scores:  0.20895522388059704
----> per-field score: 0.20895522388059704
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['salient', 'salient', 'salient', 'salient', 'salient']` - type: `<class 'list'>`
----> baseline_answer: `salient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['badOthers|badSelf|goodOthers|goodSelf', 'badOthers', 'badOthers', 'badSelf|goodSelf', 'badOthers|badSelf']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['badOthers|badSelf|goodOthers|goodSelf', 'badOthers', 'badOthers', 'badSelf|goodSelf', 'badOthers|badSelf']
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.40298507462686567
 --> Per-instance per-field breakdown: {'textarea': [0.16, 0.0, 0.13636363636363635, 0.20895522388059704], 'radio': [1.0, 1.0, 1.0, 1.0], 'checkbox': [1.0, 1.0, 1.0, 0.0]}
instance_id: 11852 <-> row_number: 17
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 17 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ['The character makes their way to the workshop and waits for Monica. Monica arrives and is startled when she sees the character.', 'The character reads part of a book and travels through a house to the garage. Then they go to the workshop and wait for Monica for over an hour. When Monica arrives the character startles her on accident.', 'The character reads a mystery book and examines a receipt kept inside the book. They go to a workshop where they wait hours for Monica to arrive.', 'The main character reads a book. Then they explore, and wait in the workshop for Monica.', "I'm waiting for Monica in a workshop. I'm learning more information."], 'moralSaliency': ['notSalient', 'salient', 'notSalient', 'salient', 'salient'], 'judgment': ['', 'badOthers', '', 'goodSelf', 'goodOthers|goodSelf'], 'badOthersRationale': ['{}', 'The character startled Monica, scaring her.', '{}', '{}', '{}'], 'badOthersScore': ['', 1.0, '', '', ''], 'badSelfRationale': ['{}', '{}', '{}', '{}', '{}'], 'badSelfScore': ['', '', '', '', ''], 'goodOthersRationale': ['{}', '{}', '{}', '{}', "They're talking to me."], 'goodOthersScore': ['', '', '', '', 1.0], 'goodSelfRationale': ['{}', '{}', '{}', 'Main character discovers a potential clue.', "I'm getting down to the bottom of the mystery."], 'goodSelfScore': ['', '', '', 1.0, 3.0]}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
Executing one action: self.actions.modify_text('summary', '')
Since the input value is ``, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
Executing one action: self.actions.modify_radio('moralSaliency', 'salient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentSalient" value="salient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
Executing one action: self.actions.modify_radio('judgment', 'salient')
The input value (`salient`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('judgment', 'salient'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['']
 visible_values : ['']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['salient']
 visible_values : ['salient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['The character makes their way to the workshop and waits for Monica. Monica arrives and is startled when she sees the character.', 'The character reads part of a book and travels through a house to the garage. Then they go to the workshop and wait for Monica for over an hour. When Monica arrives the character startles her on accident.', 'The character reads a mystery book and examines a receipt kept inside the book. They go to a workshop where they wait hours for Monica to arrive.', 'The main character reads a book. Then they explore, and wait in the workshop for Monica.', "I'm waiting for Monica in a workshop. I'm learning more information."]`
----> answers: `['The main character reads a book. Then they explore, and wait in the workshop for Monica.', 'The character reads a mystery book and examines a receipt kept inside the book. They go to a workshop where they wait hours for Monica to arrive.', "I'm waiting for Monica in a workshop. I'm learning more information.", 'The character makes their way to the workshop and waits for Monica. Monica arrives and is startled when she sees the character.', 'The character reads part of a book and travels through a house to the garage. Then they go to the workshop and wait for Monica for over an hour. When Monica arrives the character startles her on accident.']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['notSalient', 'salient', 'notSalient', 'salient', 'salient']` - type: `<class 'list'>`
----> baseline_answer: `salient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['', 'badOthers', '', 'goodSelf', 'goodOthers|goodSelf']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['', 'badOthers', '', 'goodSelf', 'goodOthers|goodSelf']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.6666666666666666
 --> Per-instance per-field breakdown: {'textarea': [0.16, 0.0, 0.13636363636363635, 0.20895522388059704, 0.0], 'radio': [1.0, 1.0, 1.0, 1.0, 1.0], 'checkbox': [1.0, 1.0, 1.0, 0.0, 1.0]}
instance_id: 11853 <-> row_number: 18
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 18 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ['I turn on a machine. I acquire a large diamond. I acquire a bracelet in the gas room.', 'The main character travels through different rooms and takes items. They end up in a gas room where they take a final item.', 'Character explores, collecting useful items. Character finds treasure.', "I'm exploring underground and collecting items. I'm picking up a lot of junk", 'The character explores several rooms. They solve a puzzle, pick up a diamond, and do some additional exploring/picking up/putting down of objects. They also find a bracelet.'], 'moralSaliency': ['salient', 'salient', 'salient', 'notSalient', 'salient'], 'judgment': ['goodSelf', 'badOthers', 'goodSelf', '', 'goodSelf'], 'badOthersRationale': ['{}', 'The main character is stealing valuables and putting them in a basket.', '{}', '{}', '{}'], 'badOthersScore': ['', 1.0, '', '', ''], 'badSelfRationale': ['{}', '{}', '{}', '{}', '{}'], 'badSelfScore': ['', '', '', '', ''], 'goodOthersRationale': ['{}', '{}', '{}', '{}', '{}'], 'goodOthersScore': ['', '', '', '', ''], 'goodSelfRationale': ['The character acquires two valuable treasures.', '{}', 'Character gathers treasures.', '{}', 'the character finds some valuable treasures in their explorations'], 'goodSelfScore': [2.0, '', 1.0, '', 3.0]}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
Executing one action: self.actions.modify_text('summary', 'In the game snippet, the player uses a screwdriver to turn on a machine, which creates an impressive display. They then explore various rooms, collecting items like a huge diamond, a brass lantern, garlic, a crystal skull, and a sapphire-encrusted bracelet. The player moves through locations like a drafty room, timber room, and gas room, showing a mix of caution and curiosity.')
Add text `In the game snippet, the player uses a screwdriver to turn on a machine, which creates an impressive display. They then explore various rooms, collecting items like a huge diamond, a brass lantern, garlic, a crystal skull, and a sapphire-encrusted bracelet. The player moves through locations like a drafty room, timber room, and gas room, showing a mix of caution and curiosity.` to this text input: <textarea class="form-control" id="summary" name="summary" rows="3" required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
Executing one action: self.actions.modify_radio('moralSaliency', 'salient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentSalient" value="salient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
Executing one action: self.actions.modify_radio('judgment', 'salient')
The input value (`salient`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('judgment', 'salient'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['In the game snippet, the player uses a screwdriver to turn on a machine, which creates an impressive display. They then explore various rooms, collecting items like a huge diamond, a brass lantern, garlic, a crystal skull, and a sapphire-encrusted bracelet. The player moves through locations like a drafty room, timber room, and gas room, showing a mix of caution and curiosity.']
 visible_values : ['In the game snippet, the player uses a screwdriver to turn on a machine, which creates an impressive display. They then explore various rooms, collecting items like a huge diamond, a brass lantern, garlic, a crystal skull, and a sapphire-encrusted bracelet. The player moves through locations like a drafty room, timber room, and gas room, showing a mix of caution and curiosity.']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['salient']
 visible_values : ['salient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['I turn on a machine. I acquire a large diamond. I acquire a bracelet in the gas room.', 'The main character travels through different rooms and takes items. They end up in a gas room where they take a final item.', 'Character explores, collecting useful items. Character finds treasure.', "I'm exploring underground and collecting items. I'm picking up a lot of junk", 'The character explores several rooms. They solve a puzzle, pick up a diamond, and do some additional exploring/picking up/putting down of objects. They also find a bracelet.']`
----> answers: `['The main character travels through different rooms and takes items. They end up in a gas room where they take a final item.', 'I turn on a machine. I acquire a large diamond. I acquire a bracelet in the gas room.', 'Character explores, collecting useful items. Character finds treasure.', 'The character explores several rooms. They solve a puzzle, pick up a diamond, and do some additional exploring/picking up/putting down of objects. They also find a bracelet.', "I'm exploring underground and collecting items. I'm picking up a lot of junk"]` - type: `<class 'list'>`
----> baseline_answer: `In the game snippet, the player uses a screwdriver to turn on a machine, which creates an impressive display. They then explore various rooms, collecting items like a huge diamond, a brass lantern, garlic, a crystal skull, and a sapphire-encrusted bracelet. The player moves through locations like a drafty room, timber room, and gas room, showing a mix of caution and curiosity.` - type: `<class 'str'>`
 --> scores:  0.2716049382716049
----> per-field score: 0.2716049382716049
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['salient', 'salient', 'salient', 'notSalient', 'salient']` - type: `<class 'list'>`
----> baseline_answer: `salient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['goodSelf', 'badOthers', 'goodSelf', '', 'goodSelf']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['goodSelf', 'badOthers', 'goodSelf', '', 'goodSelf']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.757201646090535
 --> Per-instance per-field breakdown: {'textarea': [0.16, 0.0, 0.13636363636363635, 0.20895522388059704, 0.0, 0.2716049382716049], 'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'checkbox': [1.0, 1.0, 1.0, 0.0, 1.0, 1.0]}
instance_id: 11845 <-> row_number: 10
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 10 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ['The main character finds themselves in a museum. They come across a gold machine and turn the dial on it. After pushing the button everything has disappeared even the things they were holding.', 'The character finds a gold machine and pushes it to several different rooms. Then the character pushes a button on the machine, and they are disoriented as the machine disappears.', 'The player is exploring around a deserted museum and enters a technology room where the find a gold machine. The player takes the machine with them and finds a jewelry room, where they read a plaque and get in the gold machine, which is a time machine. The player sets the machine and starts it up, to find themself in different time and surroundings.', 'The character explores an underground museum. They use a machine that changes their surroundings.', "I'm underground. I find a number of machines. I sit in a gold one, am disoriented for a time, then come to to find that the machine and everything I had been holding is gone."], 'moralSaliency': ['salient', 'notSalient', 'salient', 'salient', 'notSalient'], 'judgment': ['goodSelf', '', 'badOthers|badSelf', 'goodSelf', ''], 'badOthersRationale': ['{}', '{}', 'The player takes items that belong to others and the museum.', '{}', '{}'], 'badOthersScore': ['', '', 2.0, '', ''], 'badSelfRationale': ['{}', '{}', 'The player experiences some discomfort from time travel.', '{}', '{}'], 'badSelfScore': ['', '', 1.0, '', ''], 'goodOthersRationale': ['{}', '{}', '{}', '{}', '{}'], 'goodOthersScore': ['', '', '', '', ''], 'goodSelfRationale': ['The main character is learning new information', '{}', '{}', 'the main character learns something.', '{}'], 'goodSelfScore': [1.0, '', '', 1.0, '']}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
Executing one action: self.actions.modify_text('summary', 'In the game snippet, the player explores a museum filled with various machines and artifacts, including a gold machine with a dial set to 948. The player interacts with this gold machine by adjusting the dial, pushing the machine into different rooms, and eventually sitting in it and pressing a button, which causes a brief disorientation and changes in the surroundings. The actions focus on solving puzzles and exploring the environment to progress in the game.')
Add text `In the game snippet, the player explores a museum filled with various machines and artifacts, including a gold machine with a dial set to 948. The player interacts with this gold machine by adjusting the dial, pushing the machine into different rooms, and eventually sitting in it and pressing a button, which causes a brief disorientation and changes in the surroundings. The actions focus on solving puzzles and exploring the environment to progress in the game.` to this text input: <textarea class="form-control" id="summary" name="summary" rows="3" required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
Executing one action: self.actions.modify_radio('moralSaliency', 'salient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentSalient" value="salient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
Executing one action: self.actions.modify_checkbox('judgment', 'nan')
 ** Warning **: Found input value is 'nan' and filtered it out
 ** Warning **: Since the list of values `[]` is empty, and so, we're terminating the function
 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['In the game snippet, the player explores a museum filled with various machines and artifacts, including a gold machine with a dial set to 948. The player interacts with this gold machine by adjusting the dial, pushing the machine into different rooms, and eventually sitting in it and pressing a button, which causes a brief disorientation and changes in the surroundings. The actions focus on solving puzzles and exploring the environment to progress in the game.']
 visible_values : ['In the game snippet, the player explores a museum filled with various machines and artifacts, including a gold machine with a dial set to 948. The player interacts with this gold machine by adjusting the dial, pushing the machine into different rooms, and eventually sitting in it and pressing a button, which causes a brief disorientation and changes in the surroundings. The actions focus on solving puzzles and exploring the environment to progress in the game.']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['salient']
 visible_values : ['salient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['The main character finds themselves in a museum. They come across a gold machine and turn the dial on it. After pushing the button everything has disappeared even the things they were holding.', 'The character finds a gold machine and pushes it to several different rooms. Then the character pushes a button on the machine, and they are disoriented as the machine disappears.', 'The player is exploring around a deserted museum and enters a technology room where the find a gold machine. The player takes the machine with them and finds a jewelry room, where they read a plaque and get in the gold machine, which is a time machine. The player sets the machine and starts it up, to find themself in different time and surroundings.', 'The character explores an underground museum. They use a machine that changes their surroundings.', "I'm underground. I find a number of machines. I sit in a gold one, am disoriented for a time, then come to to find that the machine and everything I had been holding is gone."]`
----> answers: `['The character explores an underground museum. They use a machine that changes their surroundings.', 'The main character finds themselves in a museum. They come across a gold machine and turn the dial on it. After pushing the button everything has disappeared even the things they were holding.', 'The character finds a gold machine and pushes it to several different rooms. Then the character pushes a button on the machine, and they are disoriented as the machine disappears.', "I'm underground. I find a number of machines. I sit in a gold one, am disoriented for a time, then come to to find that the machine and everything I had been holding is gone.", 'The player is exploring around a deserted museum and enters a technology room where the find a gold machine. The player takes the machine with them and finds a jewelry room, where they read a plaque and get in the gold machine, which is a time machine. The player sets the machine and starts it up, to find themself in different time and surroundings.']` - type: `<class 'list'>`
----> baseline_answer: `In the game snippet, the player explores a museum filled with various machines and artifacts, including a gold machine with a dial set to 948. The player interacts with this gold machine by adjusting the dial, pushing the machine into different rooms, and eventually sitting in it and pressing a button, which causes a brief disorientation and changes in the surroundings. The actions focus on solving puzzles and exploring the environment to progress in the game.` - type: `<class 'str'>`
 --> scores:  0.32857142857142857
----> per-field score: 0.32857142857142857
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['salient', 'notSalient', 'salient', 'salient', 'notSalient']` - type: `<class 'list'>`
----> baseline_answer: `salient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['goodSelf', '', 'badOthers|badSelf', 'goodSelf', '']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['goodSelf', '', 'badOthers|badSelf', 'goodSelf', '']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.7761904761904761
 --> Per-instance per-field breakdown: {'textarea': [0.16, 0.0, 0.13636363636363635, 0.20895522388059704, 0.0, 0.2716049382716049, 0.32857142857142857], 'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'checkbox': [1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0]}
instance_id: 11849 <-> row_number: 14
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 14 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ['You are exploring a volcano when you find a basket with a balloon attached. You ride the hot air balloon to explore more until you find a library. In the library, you find a book with a stamp inside.', 'The character gets in a balloon and travels up to a ledge. The character finds a discarded book containing a stamp.', 'I am in a basket inside a volcano and get in a basket that is attached to a balloon.  I float around in the basket in the balloon for a while.  In the end, I end up outside the volcano and in a library that might have belonged to a royal family.', 'The character is exploring the inside of a dormant volcano. They use a hot air balloon to travel from the floor of the volcano to the rim, where they find and enter a library. Inside the library the get a stamp.', "I'm in a hot area and exploring. I was in a hot air balloon. Very fun"], 'moralSaliency': ['notSalient', 'notSalient', 'notSalient', 'notSalient', 'salient'], 'judgment': ['', '', '', '', 'goodSelf'], 'badOthersRationale': ['{}', '{}', '{}', '{}', '{}'], 'badOthersScore': ['', '', '', '', ''], 'badSelfRationale': ['{}', '{}', '{}', '{}', '{}'], 'badSelfScore': ['', '', '', '', ''], 'goodOthersRationale': ['{}', '{}', '{}', '{}', '{}'], 'goodOthersScore': ['', '', '', '', ''], 'goodSelfRationale': ['{}', '{}', '{}', '{}', "I'm having fun and surviving!"], 'goodSelfScore': ['', '', '', '', 3.0]}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
Executing one action: self.actions.modify_text('summary', '')
Since the input value is ``, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
Executing one action: self.actions.modify_radio('moralSaliency', 'salient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentSalient" value="salient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
Executing one action: self.actions.modify_radio('judgmentSalient', 'salient')
Failed to execute an action self.actions.modify_radio('judgmentSalient', 'salient'), error: Message: 
Stacktrace:
#0 0x55a7773cb5e3 <unknown>
#1 0x55a77708e0b7 <unknown>
#2 0x55a7770dbf53 <unknown>
#3 0x55a7770dc051 <unknown>
#4 0x55a7771219c4 <unknown>
#5 0x55a777102f1d <unknown>
#6 0x55a77711eb3d <unknown>
#7 0x55a777102cc3 <unknown>
#8 0x55a7770ce0e4 <unknown>
#9 0x55a7770cf0ae <unknown>
#10 0x55a777391ce1 <unknown>
#11 0x55a777395b7e <unknown>
#12 0x55a77737f4b5 <unknown>
#13 0x55a7773967d6 <unknown>
#14 0x55a777362dbf <unknown>
#15 0x55a7773b9748 <unknown>
#16 0x55a7773b9917 <unknown>
#17 0x55a7773ca773 <unknown>
#18 0x7ff6b7e94ac3 <unknown>

 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['']
 visible_values : ['']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['salient']
 visible_values : ['salient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['You are exploring a volcano when you find a basket with a balloon attached. You ride the hot air balloon to explore more until you find a library. In the library, you find a book with a stamp inside.', 'The character gets in a balloon and travels up to a ledge. The character finds a discarded book containing a stamp.', 'I am in a basket inside a volcano and get in a basket that is attached to a balloon.  I float around in the basket in the balloon for a while.  In the end, I end up outside the volcano and in a library that might have belonged to a royal family.', 'The character is exploring the inside of a dormant volcano. They use a hot air balloon to travel from the floor of the volcano to the rim, where they find and enter a library. Inside the library the get a stamp.', "I'm in a hot area and exploring. I was in a hot air balloon. Very fun"]`
----> answers: `['You are exploring a volcano when you find a basket with a balloon attached. You ride the hot air balloon to explore more until you find a library. In the library, you find a book with a stamp inside.', "I'm in a hot area and exploring. I was in a hot air balloon. Very fun", 'The character is exploring the inside of a dormant volcano. They use a hot air balloon to travel from the floor of the volcano to the rim, where they find and enter a library. Inside the library the get a stamp.', 'The character gets in a balloon and travels up to a ledge. The character finds a discarded book containing a stamp.', 'I am in a basket inside a volcano and get in a basket that is attached to a balloon.  I float around in the basket in the balloon for a while.  In the end, I end up outside the volcano and in a library that might have belonged to a royal family.']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['notSalient', 'notSalient', 'notSalient', 'notSalient', 'salient']` - type: `<class 'list'>`
----> baseline_answer: `salient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['', '', '', '', 'goodSelf']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['', '', '', '', 'goodSelf']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.3333333333333333
 --> Per-instance per-field breakdown: {'textarea': [0.16, 0.0, 0.13636363636363635, 0.20895522388059704, 0.0, 0.2716049382716049, 0.32857142857142857, 0.0], 'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0], 'checkbox': [1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0]}
instance_id: 11847 <-> row_number: 12
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 12 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ['You are exploring an area with a series of objects and a large sundial. You try inserting some objects into the sundial and then it begins to respond. After some more exploring, you find an axe, which you take with you.', 'The character descent to a pergola where they examine a plaque. The character then ascends and finds an axe that was lodged in an arborvitae.', 'The character solves a puzzles and descends down a staircase. They explore an arboretum, examining a statue and eventually taking an axe.', 'The character solves puzzles involving statues.  He also discovers some items like an axe.', 'The main character explores a garden area. They examine various interesting things. Then the player finds and acquires a weapon.'], 'moralSaliency': ['notSalient', 'notSalient', 'salient', 'salient', 'salient'], 'judgment': ['', '', 'goodSelf', 'goodSelf', 'goodSelf'], 'badOthersRationale': ['{}', '{}', '{}', '{}', '{}'], 'badOthersScore': ['', '', '', '', ''], 'badSelfRationale': ['{}', '{}', '{}', '{}', '{}'], 'badSelfScore': ['', '', '', '', ''], 'goodOthersRationale': ['{}', '{}', '{}', '{}', '{}'], 'goodOthersScore': ['', '', '', '', ''], 'goodSelfRationale': ['{}', '{}', 'The character acquires an axe.', 'Character finds useful items', 'character takes many opportunities to learn new things.'], 'goodSelfScore': ['', '', 1.0, 1.0, 1.0]}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
Executing one action: self.actions.modify_text('summary', '')
Since the input value is ``, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
Executing one action: self.actions.modify_radio('moralSaliency', 'salient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentSalient" value="salient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
Executing one action: self.actions.modify_radio('judgment', 'salient')
The input value (`salient`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('judgment', 'salient'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['']
 visible_values : ['']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['salient']
 visible_values : ['salient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['You are exploring an area with a series of objects and a large sundial. You try inserting some objects into the sundial and then it begins to respond. After some more exploring, you find an axe, which you take with you.', 'The character descent to a pergola where they examine a plaque. The character then ascends and finds an axe that was lodged in an arborvitae.', 'The character solves a puzzles and descends down a staircase. They explore an arboretum, examining a statue and eventually taking an axe.', 'The character solves puzzles involving statues.  He also discovers some items like an axe.', 'The main character explores a garden area. They examine various interesting things. Then the player finds and acquires a weapon.']`
----> answers: `['The character solves a puzzles and descends down a staircase. They explore an arboretum, examining a statue and eventually taking an axe.', 'You are exploring an area with a series of objects and a large sundial. You try inserting some objects into the sundial and then it begins to respond. After some more exploring, you find an axe, which you take with you.', 'The character descent to a pergola where they examine a plaque. The character then ascends and finds an axe that was lodged in an arborvitae.', 'The character solves puzzles involving statues.  He also discovers some items like an axe.', 'The main character explores a garden area. They examine various interesting things. Then the player finds and acquires a weapon.']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['notSalient', 'notSalient', 'salient', 'salient', 'salient']` - type: `<class 'list'>`
----> baseline_answer: `salient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['', '', 'goodSelf', 'goodSelf', 'goodSelf']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['', '', 'goodSelf', 'goodSelf', 'goodSelf']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.6666666666666666
 --> Per-instance per-field breakdown: {'textarea': [0.16, 0.0, 0.13636363636363635, 0.20895522388059704, 0.0, 0.2716049382716049, 0.32857142857142857, 0.0, 0.0], 'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0], 'checkbox': [1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0]}
instance_id: 11843 <-> row_number: 8
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 8 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ['You are exploring a wizards tower and you learn some spells. You fall down an endless hole and cast a spell to slow your descent. At the bottom, you find a dragon who you cast a spell on, which impresses a nearby wizard.', 'The character is exploring a large castle. They learn two spells. The character finds their way to Krills secret chamber where they engage in a magic battle.', 'A character explores an area. After taking a stairway, the stairway disintegrates and the character falls. The character uses a spell to land safely but discovers an unfriendly dragon.', "I'm in a fantasy setting. I changed a monster into a newt!", 'The character explores, learning a couple spells before casting a teleport spell from a scroll that crumbles.  They appear over a pit and fall, casting a flight spell before landing in a room with a wizard and a dragon.  They drive the dragon off with a water spell and turn a monster summoned by the wizard to attack them into a newt with another spell.'], 'moralSaliency': ['notSalient', 'salient', 'salient', 'salient', 'salient'], 'judgment': ['', 'goodSelf', 'goodSelf|badSelf', 'goodSelf|badOthers', 'badOthers|badSelf'], 'badOthersRationale': ['{}', '{}', '{}', 'Got a monster changed into a newt.', 'the dragon is chased off with a water spell, the monster gets transformed into a newt'], 'badOthersScore': ['', '', '', 3.0, 2.0], 'badSelfRationale': ['{}', '{}', 'Character puts self in dangerous situations and risks injury.', '{}', 'the character is targeted by a powerful magic spell from the wizard'], 'badSelfScore': ['', '', 1.0, '', 1.0], 'goodOthersRationale': ['{}', '{}', '{}', '{}', '{}'], 'goodOthersScore': ['', '', '', '', ''], 'goodSelfRationale': ['{}', 'The character protected themselves with magic.', 'Character uses a spell to save self from falling.', "Didn't get killed", '{}'], 'goodSelfScore': ['', 3.0, 3.0, 3.0, '']}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
Executing one action: self.actions.modify_text('summary', 'In the game transcript, the main player navigates through different locations within a dark and mysterious castle, learning spells such as gondar and cleesh. The player encounters and overcomes several dangerous situations, including evading a dragon by extinguishing its flame and transforming a monstrous creature into a harmless newt. Eventually, the player finds themselves in the secret chamber of the warlock Krill, facing both Krill and a summoned evil being. Through the use of magic spells learned along the way, the player is able to neutralize threats and confront the warlock.')
Add text `In the game transcript, the main player navigates through different locations within a dark and mysterious castle, learning spells such as gondar and cleesh. The player encounters and overcomes several dangerous situations, including evading a dragon by extinguishing its flame and transforming a monstrous creature into a harmless newt. Eventually, the player finds themselves in the secret chamber of the warlock Krill, facing both Krill and a summoned evil being. Through the use of magic spells learned along the way, the player is able to neutralize threats and confront the warlock.` to this text input: <textarea class="form-control" id="summary" name="summary" rows="3" required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
Executing one action: self.actions.modify_radio('moralSaliency', 'salient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentSalient" value="salient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
Executing one action: self.actions.modify_checkbox('judgment', 'goodOthers')
Looking for checkboxes with `name`: `judgment` the values: `['goodOthers']`
About to check this checkbox: <input class="form-check-input judgment" type="checkbox" name="judgment" id="judgmentGoodOthers" value="goodOthers">
 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: goodOthersRationale
Executing one action: self.actions.modify_text('goodOthersRationale', '')
Since the input value is ``, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: goodOthersScore
Executing one action: self.actions.modify_radio('goodOthersScore', '3')
We are going to select this radio button: <input type="radio" name="goodOthersScore" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['In the game transcript, the main player navigates through different locations within a dark and mysterious castle, learning spells such as gondar and cleesh. The player encounters and overcomes several dangerous situations, including evading a dragon by extinguishing its flame and transforming a monstrous creature into a harmless newt. Eventually, the player finds themselves in the secret chamber of the warlock Krill, facing both Krill and a summoned evil being. Through the use of magic spells learned along the way, the player is able to neutralize threats and confront the warlock.']
 visible_values : ['In the game transcript, the main player navigates through different locations within a dark and mysterious castle, learning spells such as gondar and cleesh. The player encounters and overcomes several dangerous situations, including evading a dragon by extinguishing its flame and transforming a monstrous creature into a harmless newt. Eventually, the player finds themselves in the secret chamber of the warlock Krill, facing both Krill and a summoned evil being. Through the use of magic spells learned along the way, the player is able to neutralize threats and confront the warlock.']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['salient']
 visible_values : ['salient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['goodOthers']
 visible_values : ['goodOthers']
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['You are exploring a wizards tower and you learn some spells. You fall down an endless hole and cast a spell to slow your descent. At the bottom, you find a dragon who you cast a spell on, which impresses a nearby wizard.', 'The character is exploring a large castle. They learn two spells. The character finds their way to Krills secret chamber where they engage in a magic battle.', 'A character explores an area. After taking a stairway, the stairway disintegrates and the character falls. The character uses a spell to land safely but discovers an unfriendly dragon.', "I'm in a fantasy setting. I changed a monster into a newt!", 'The character explores, learning a couple spells before casting a teleport spell from a scroll that crumbles.  They appear over a pit and fall, casting a flight spell before landing in a room with a wizard and a dragon.  They drive the dragon off with a water spell and turn a monster summoned by the wizard to attack them into a newt with another spell.']`
----> answers: `['You are exploring a wizards tower and you learn some spells. You fall down an endless hole and cast a spell to slow your descent. At the bottom, you find a dragon who you cast a spell on, which impresses a nearby wizard.', 'A character explores an area. After taking a stairway, the stairway disintegrates and the character falls. The character uses a spell to land safely but discovers an unfriendly dragon.', 'The character is exploring a large castle. They learn two spells. The character finds their way to Krills secret chamber where they engage in a magic battle.', "I'm in a fantasy setting. I changed a monster into a newt!", 'The character explores, learning a couple spells before casting a teleport spell from a scroll that crumbles.  They appear over a pit and fall, casting a flight spell before landing in a room with a wizard and a dragon.  They drive the dragon off with a water spell and turn a monster summoned by the wizard to attack them into a newt with another spell.']` - type: `<class 'list'>`
----> baseline_answer: `In the game transcript, the main player navigates through different locations within a dark and mysterious castle, learning spells such as gondar and cleesh. The player encounters and overcomes several dangerous situations, including evading a dragon by extinguishing its flame and transforming a monstrous creature into a harmless newt. Eventually, the player finds themselves in the secret chamber of the warlock Krill, facing both Krill and a summoned evil being. Through the use of magic spells learned along the way, the player is able to neutralize threats and confront the warlock.` - type: `<class 'str'>`
 --> scores:  0.1864406779661017
----> per-field score: 0.1864406779661017
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['notSalient', 'salient', 'salient', 'salient', 'salient']` - type: `<class 'list'>`
----> baseline_answer: `salient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['', 'goodSelf', 'badSelf|goodSelf', 'badOthers|goodSelf', 'badOthers|badSelf']` - type: `<class 'list'>`
----> baseline_answer: `goodOthers` - type: `<class 'str'>`
Model answers: goodOthers 
Gold answers: ['', 'goodSelf', 'badSelf|goodSelf', 'badOthers|goodSelf', 'badOthers|badSelf']
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['', '', '', '', '']`
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['', '', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.2966101694915254
 --> Per-instance per-field breakdown: {'textarea': [0.16, 0.0, 0.13636363636363635, 0.20895522388059704, 0.0, 0.2716049382716049, 0.32857142857142857, 0.0, 0.0, 0.1864406779661017], 'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0], 'checkbox': [1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0]}
instance_id: 11844 <-> row_number: 9
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 9 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ['You find a huge book and begin to read it. As you read, a magpie is chirping nearby. After awhile, you release the magpie from his cage.', 'The character reads and examines a book. They examine a magpie and wait, eventually opening the cage and releasing the bird.', 'The character reads a massive book called the book of hours. The player waits and listens to a nearby magpie that is squawking different english phrases.', "You are standing Infront of an extremely large book, so large in fact that open, it is wider than your wingspan. You try reading the book but can't make heads or tails of its meaning but at the end of each section the book tells you what you were doing then offers 3 options of what to continue doing. As you flip the pages a magpie that you have in a cage squawks what you're doing to which you decide to just wait, causing the magpie to start squawking about food until you eventually release it.", "I'm in a broken area. I'm waiting and listening to a magpie."], 'moralSaliency': ['salient', 'salient', 'salient', 'salient', 'salient'], 'judgment': ['goodOthers', 'goodOthers', 'badOthers', 'goodOthers', 'goodOthers|goodSelf'], 'badOthersRationale': ['{}', '{}', 'The character frees a caged bird.', '{}', '{}'], 'badOthersScore': [1.0, '', 1.0, '', ''], 'badSelfRationale': ['{}', '{}', '{}', '{}', '{}'], 'badSelfScore': [1.0, '', '', '', ''], 'goodOthersRationale': ['You released the magpie', 'The character opened a cage door and freed a magpie bird.', '{}', 'You release the magpie from its cage.', 'Talking with the character'], 'goodOthersScore': [2.0, 1.0, '', 2.0, 3.0], 'goodSelfRationale': ['{}', '{}', '{}', '{}', 'Learning about things'], 'goodSelfScore': [1.0, '', '', '', 3.0]}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
Executing one action: self.actions.modify_text('summary', 'In the game transcript, the player interacts with various objects in a fantasy setting, including examining a book on a sagging pedestal, engaging with a magpie, and opening a birdcage to let the magpie fly out. The actions revolve around discovery and exploration, as the player attempts to understand their surroundings and the purpose of the objects they encounter, such as deciphering calligraphy in the book and dealing with the cage-bound magpie.')
Add text `In the game transcript, the player interacts with various objects in a fantasy setting, including examining a book on a sagging pedestal, engaging with a magpie, and opening a birdcage to let the magpie fly out. The actions revolve around discovery and exploration, as the player attempts to understand their surroundings and the purpose of the objects they encounter, such as deciphering calligraphy in the book and dealing with the cage-bound magpie.` to this text input: <textarea class="form-control" id="summary" name="summary" rows="3" required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
Executing one action: self.actions.modify_radio('moralSaliency', 'salient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentSalient" value="salient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
Executing one action: self.actions.modify_radio('judgmentSalient', 'salient')
Failed to execute an action self.actions.modify_radio('judgmentSalient', 'salient'), error: Message: 
Stacktrace:
#0 0x55a7773cb5e3 <unknown>
#1 0x55a77708e0b7 <unknown>
#2 0x55a7770dbf53 <unknown>
#3 0x55a7770dc051 <unknown>
#4 0x55a7771219c4 <unknown>
#5 0x55a777102f1d <unknown>
#6 0x55a77711eb3d <unknown>
#7 0x55a777102cc3 <unknown>
#8 0x55a7770ce0e4 <unknown>
#9 0x55a7770cf0ae <unknown>
#10 0x55a777391ce1 <unknown>
#11 0x55a777395b7e <unknown>
#12 0x55a77737f4b5 <unknown>
#13 0x55a7773967d6 <unknown>
#14 0x55a777362dbf <unknown>
#15 0x55a7773b9748 <unknown>
#16 0x55a7773b9917 <unknown>
#17 0x55a7773ca773 <unknown>
#18 0x7ff6b7e94ac3 <unknown>

 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['In the game transcript, the player interacts with various objects in a fantasy setting, including examining a book on a sagging pedestal, engaging with a magpie, and opening a birdcage to let the magpie fly out. The actions revolve around discovery and exploration, as the player attempts to understand their surroundings and the purpose of the objects they encounter, such as deciphering calligraphy in the book and dealing with the cage-bound magpie.']
 visible_values : ['In the game transcript, the player interacts with various objects in a fantasy setting, including examining a book on a sagging pedestal, engaging with a magpie, and opening a birdcage to let the magpie fly out. The actions revolve around discovery and exploration, as the player attempts to understand their surroundings and the purpose of the objects they encounter, such as deciphering calligraphy in the book and dealing with the cage-bound magpie.']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['salient']
 visible_values : ['salient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['You find a huge book and begin to read it. As you read, a magpie is chirping nearby. After awhile, you release the magpie from his cage.', 'The character reads and examines a book. They examine a magpie and wait, eventually opening the cage and releasing the bird.', 'The character reads a massive book called the book of hours. The player waits and listens to a nearby magpie that is squawking different english phrases.', "You are standing Infront of an extremely large book, so large in fact that open, it is wider than your wingspan. You try reading the book but can't make heads or tails of its meaning but at the end of each section the book tells you what you were doing then offers 3 options of what to continue doing. As you flip the pages a magpie that you have in a cage squawks what you're doing to which you decide to just wait, causing the magpie to start squawking about food until you eventually release it.", "I'm in a broken area. I'm waiting and listening to a magpie."]`
----> answers: `["I'm in a broken area. I'm waiting and listening to a magpie.", 'You find a huge book and begin to read it. As you read, a magpie is chirping nearby. After awhile, you release the magpie from his cage.', 'The character reads a massive book called the book of hours. The player waits and listens to a nearby magpie that is squawking different english phrases.', 'The character reads and examines a book. They examine a magpie and wait, eventually opening the cage and releasing the bird.', "You are standing Infront of an extremely large book, so large in fact that open, it is wider than your wingspan. You try reading the book but can't make heads or tails of its meaning but at the end of each section the book tells you what you were doing then offers 3 options of what to continue doing. As you flip the pages a magpie that you have in a cage squawks what you're doing to which you decide to just wait, causing the magpie to start squawking about food until you eventually release it."]` - type: `<class 'list'>`
----> baseline_answer: `In the game transcript, the player interacts with various objects in a fantasy setting, including examining a book on a sagging pedestal, engaging with a magpie, and opening a birdcage to let the magpie fly out. The actions revolve around discovery and exploration, as the player attempts to understand their surroundings and the purpose of the objects they encounter, such as deciphering calligraphy in the book and dealing with the cage-bound magpie.` - type: `<class 'str'>`
 --> scores:  0.2340425531914893
----> per-field score: 0.2340425531914893
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['salient', 'salient', 'salient', 'salient', 'salient']` - type: `<class 'list'>`
----> baseline_answer: `salient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['goodOthers', 'goodOthers', 'badOthers', 'goodOthers', 'goodOthers|goodSelf']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['goodOthers', 'goodOthers', 'badOthers', 'goodOthers', 'goodOthers|goodSelf']
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.41134751773049644
 --> Per-instance per-field breakdown: {'textarea': [0.16, 0.0, 0.13636363636363635, 0.20895522388059704, 0.0, 0.2716049382716049, 0.32857142857142857, 0.0, 0.0, 0.1864406779661017, 0.2340425531914893], 'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0], 'checkbox': [1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0]}
instance_id: 11848 <-> row_number: 13
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 13 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ['The character exits the train and makes their way through the crowd searching for their contact. They find the contact and hand off the roll of film, completing the mission.', "The player gets off a train onto a crowded station platform where they make a drop to a contact, then go on their way. Later the player finds out the info was used to stop an assassination. The player takes another train, but feels they're in danger so they jump off the train.", 'The character takes several items and exits a train onto the station platform. The character makes contact with a boy and drops a roll of film.', 'Character meets a contact at a train station. After successfully helping tip off the police to an assassination attempt, character is shot and jumps off a train.', "I'm exploring a train and talked with a little boy. I'm near the border of a country."], 'moralSaliency': ['salient', 'salient', 'salient', 'salient', 'salient'], 'judgment': ['goodOthers', 'goodOthers|badSelf', 'goodSelf', 'goodOthers|badSelf', 'goodOthers|goodSelf'], 'badOthersRationale': ['{}', '{}', '{}', '{}', '{}'], 'badOthersScore': ['', '', '', '', ''], 'badSelfRationale': ['{}', 'The player has pain and is cold, then they risk serious injury jumping off a moving train.', '{}', "Main character's choices lead to being shot, getting knocked out.", '{}'], 'badSelfScore': ['', 2.0, '', 2.0, ''], 'goodOthersRationale': ['The character succeeds in providing the information to stop the attack.', 'The player stops someone from being assassinated.', '{}', 'Main character helps tip off the police to foil an assassination.', 'They got to talk with me.'], 'goodOthersScore': [3.0, 3.0, '', 2.0, 2.0], 'goodSelfRationale': ['{}', '{}', "The character performs several actions that are part of whatever mission they're on", '{}', "I'm learning more about the area"], 'goodSelfScore': ['', 2.0, 2.0, '', 3.0]}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
Executing one action: self.actions.modify_text('summary', 'In the game transcript, the player/main character retrieves various items from their compartment, including a guide, passport, ticket, color film, bag, and kit, before making their way to the train station platform. Upon arrival at the platform, they encounter several characters, including a smallish woman and a young boy, and participate in a series of actions aiming to fulfill a secretive mission involving the delivery of an important document. The mission is successful, as indicated by a newspaper headline in the epilogue mentioning the prevention of an assassination attempt.')
Add text `In the game transcript, the player/main character retrieves various items from their compartment, including a guide, passport, ticket, color film, bag, and kit, before making their way to the train station platform. Upon arrival at the platform, they encounter several characters, including a smallish woman and a young boy, and participate in a series of actions aiming to fulfill a secretive mission involving the delivery of an important document. The mission is successful, as indicated by a newspaper headline in the epilogue mentioning the prevention of an assassination attempt.` to this text input: <textarea class="form-control" id="summary" name="summary" rows="3" required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
Executing one action: self.actions.modify_radio('moralSaliency', 'salient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentSalient" value="salient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
Executing one action: self.actions.modify_radio('judgmentSalient', 'salient')
Failed to execute an action self.actions.modify_radio('judgmentSalient', 'salient'), error: Message: 
Stacktrace:
#0 0x55a7773cb5e3 <unknown>
#1 0x55a77708e0b7 <unknown>
#2 0x55a7770dbf53 <unknown>
#3 0x55a7770dc051 <unknown>
#4 0x55a7771219c4 <unknown>
#5 0x55a777102f1d <unknown>
#6 0x55a77711eb3d <unknown>
#7 0x55a777102cc3 <unknown>
#8 0x55a7770ce0e4 <unknown>
#9 0x55a7770cf0ae <unknown>
#10 0x55a777391ce1 <unknown>
#11 0x55a777395b7e <unknown>
#12 0x55a77737f4b5 <unknown>
#13 0x55a7773967d6 <unknown>
#14 0x55a777362dbf <unknown>
#15 0x55a7773b9748 <unknown>
#16 0x55a7773b9917 <unknown>
#17 0x55a7773ca773 <unknown>
#18 0x7ff6b7e94ac3 <unknown>

 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['In the game transcript, the player/main character retrieves various items from their compartment, including a guide, passport, ticket, color film, bag, and kit, before making their way to the train station platform. Upon arrival at the platform, they encounter several characters, including a smallish woman and a young boy, and participate in a series of actions aiming to fulfill a secretive mission involving the delivery of an important document. The mission is successful, as indicated by a newspaper headline in the epilogue mentioning the prevention of an assassination attempt.']
 visible_values : ['In the game transcript, the player/main character retrieves various items from their compartment, including a guide, passport, ticket, color film, bag, and kit, before making their way to the train station platform. Upon arrival at the platform, they encounter several characters, including a smallish woman and a young boy, and participate in a series of actions aiming to fulfill a secretive mission involving the delivery of an important document. The mission is successful, as indicated by a newspaper headline in the epilogue mentioning the prevention of an assassination attempt.']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['salient']
 visible_values : ['salient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['The character exits the train and makes their way through the crowd searching for their contact. They find the contact and hand off the roll of film, completing the mission.', "The player gets off a train onto a crowded station platform where they make a drop to a contact, then go on their way. Later the player finds out the info was used to stop an assassination. The player takes another train, but feels they're in danger so they jump off the train.", 'The character takes several items and exits a train onto the station platform. The character makes contact with a boy and drops a roll of film.', 'Character meets a contact at a train station. After successfully helping tip off the police to an assassination attempt, character is shot and jumps off a train.', "I'm exploring a train and talked with a little boy. I'm near the border of a country."]`
----> answers: `['The character exits the train and makes their way through the crowd searching for their contact. They find the contact and hand off the roll of film, completing the mission.', 'Character meets a contact at a train station. After successfully helping tip off the police to an assassination attempt, character is shot and jumps off a train.', 'The character takes several items and exits a train onto the station platform. The character makes contact with a boy and drops a roll of film.', "I'm exploring a train and talked with a little boy. I'm near the border of a country.", "The player gets off a train onto a crowded station platform where they make a drop to a contact, then go on their way. Later the player finds out the info was used to stop an assassination. The player takes another train, but feels they're in danger so they jump off the train."]` - type: `<class 'list'>`
----> baseline_answer: `In the game transcript, the player/main character retrieves various items from their compartment, including a guide, passport, ticket, color film, bag, and kit, before making their way to the train station platform. Upon arrival at the platform, they encounter several characters, including a smallish woman and a young boy, and participate in a series of actions aiming to fulfill a secretive mission involving the delivery of an important document. The mission is successful, as indicated by a newspaper headline in the epilogue mentioning the prevention of an assassination attempt.` - type: `<class 'str'>`
 --> scores:  0.24137931034482757
----> per-field score: 0.24137931034482757
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['salient', 'salient', 'salient', 'salient', 'salient']` - type: `<class 'list'>`
----> baseline_answer: `salient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['goodOthers', 'badSelf|goodOthers', 'goodSelf', 'badSelf|goodOthers', 'goodOthers|goodSelf']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['goodOthers', 'badSelf|goodOthers', 'goodSelf', 'badSelf|goodOthers', 'goodOthers|goodSelf']
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.41379310344827586
 --> Per-instance per-field breakdown: {'textarea': [0.16, 0.0, 0.13636363636363635, 0.20895522388059704, 0.0, 0.2716049382716049, 0.32857142857142857, 0.0, 0.0, 0.1864406779661017, 0.2340425531914893, 0.24137931034482757], 'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0], 'checkbox': [1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 11840 <-> row_number: 5
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 5 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ['The main character is walking around a town or village of some sort with a reservoir nearby. After opening a door that results in a lemming being eaten by a snake, the main character goes near a reservoir and seems to be planning something with a roadrunner. While standing over the reservoir, the main character falls into the deep reservoir.', 'I am going to get to see the first Atomic bomb test but while I am watching from a platform I am dumped from the platform into a big cement reservoir which is too deep for me to touch the bottom.', 'The character opens the door and allows the lemming to be killed by the rattlesnake in order to save themself. They travel to a reservoir and climb up a windmill, but they unexpectedly fall into the reservoir water.', 'The character exits a closet a long with a lemming. A rattlesnake waiting outside the closet eats the lemming. The player makes their way to a windmill, which they climb to the top of, but then fall from landing in a resevoir.', "I'm going to die in a reservoir because I was careless when exploring.  I'm very scared!"], 'moralSaliency': ['salient', 'salient', 'salient', 'salient', 'salient'], 'judgment': ['goodOthers|badOthers|badSelf', 'badOthers|badSelf', 'badOthers|badSelf', 'goodSelf|badOthers', 'badSelf'], 'badOthersRationale': ['the main character facilitated the snake eating the lemming', 'atomic bomb; lemming is killed;', "The character set in motion events leading to the death of their lemming. They didn't kill the lemming, but they intended for it to die.", 'Opening the closet door led to the death of the lemming.', '{}'], 'badOthersScore': [2.0, 3.0, 2.0, 1.0, ''], 'badSelfRationale': ['the main character ends up treading water in the reservoir after climbing the ladder', 'may drown; may suffer radiation exposure', 'The character faces a rattlesnake and they fall from the windmill, landing in deep reservoir waters.', '{}', "I was careless and I'm going to drown."], 'badSelfScore': [2.0, 3.0, 2.0, '', 3.0], 'goodOthersRationale': ['the main character opened the door for the snake to eat the lemming', '{}', '{}', '{}', '{}'], 'goodOthersScore': [1.0, '', '', '', ''], 'goodSelfRationale': ['{}', '{}', '{}', 'Because the character freed the lemming the rattlesnake ate the lemming instead of biting the character', '{}'], 'goodSelfScore': ['', '', '', 3.0, '']}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
Executing one action: self.actions.modify_text('summary', 'In the game snippet from the interactive text-based fiction "Trinity," the player's character engages in a series of actions starting with opening a door to a closet, which leads to an unexpected encounter with a rattlesnake attacking a lemming. Further actions involve dropping a cage, moving south to the assembly room, searching a workbench resulting in a minor injury from a screwdriver, taking the screwdriver, and engaging with environmental elements leading to an accident at a reservoir. The scenario is framed by the character's navigation through physical spaces within the game, culminating in an unintended plunge into the reservoir.')
Failed to execute an action self.actions.modify_text('summary', 'In the game snippet from the interactive text-based fiction "Trinity," the player's character engages in a series of actions starting with opening a door to a closet, which leads to an unexpected encounter with a rattlesnake attacking a lemming. Further actions involve dropping a cage, moving south to the assembly room, searching a workbench resulting in a minor injury from a screwdriver, taking the screwdriver, and engaging with environmental elements leading to an accident at a reservoir. The scenario is framed by the character's navigation through physical spaces within the game, culminating in an unintended plunge into the reservoir.'), error: invalid syntax. Perhaps you forgot a comma? (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
Executing one action: self.actions.modify_radio('moralSaliency', 'salient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentSalient" value="salient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
Executing one action: self.actions.modify_checkbox('judgment', 'goodOthers')
Looking for checkboxes with `name`: `judgment` the values: `['goodOthers']`
About to check this checkbox: <input class="form-check-input judgment" type="checkbox" name="judgment" id="judgmentGoodOthers" value="goodOthers">
 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: goodOthersRationale
Executing one action: self.actions.modify_text('goodOthersRationale', '')
Since the input value is ``, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: goodOthersScore
Executing one action: self.actions.modify_radio('goodOthersScore', '2')
We are going to select this radio button: <input type="radio" name="goodOthersScore" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['']
 visible_values : ['']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['salient']
 visible_values : ['salient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['goodOthers']
 visible_values : ['goodOthers']
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['The main character is walking around a town or village of some sort with a reservoir nearby. After opening a door that results in a lemming being eaten by a snake, the main character goes near a reservoir and seems to be planning something with a roadrunner. While standing over the reservoir, the main character falls into the deep reservoir.', 'I am going to get to see the first Atomic bomb test but while I am watching from a platform I am dumped from the platform into a big cement reservoir which is too deep for me to touch the bottom.', 'The character opens the door and allows the lemming to be killed by the rattlesnake in order to save themself. They travel to a reservoir and climb up a windmill, but they unexpectedly fall into the reservoir water.', 'The character exits a closet a long with a lemming. A rattlesnake waiting outside the closet eats the lemming. The player makes their way to a windmill, which they climb to the top of, but then fall from landing in a resevoir.', "I'm going to die in a reservoir because I was careless when exploring.  I'm very scared!"]`
----> answers: `['The main character is walking around a town or village of some sort with a reservoir nearby. After opening a door that results in a lemming being eaten by a snake, the main character goes near a reservoir and seems to be planning something with a roadrunner. While standing over the reservoir, the main character falls into the deep reservoir.', 'I am going to get to see the first Atomic bomb test but while I am watching from a platform I am dumped from the platform into a big cement reservoir which is too deep for me to touch the bottom.', 'The character exits a closet a long with a lemming. A rattlesnake waiting outside the closet eats the lemming. The player makes their way to a windmill, which they climb to the top of, but then fall from landing in a resevoir.', 'The character opens the door and allows the lemming to be killed by the rattlesnake in order to save themself. They travel to a reservoir and climb up a windmill, but they unexpectedly fall into the reservoir water.', "I'm going to die in a reservoir because I was careless when exploring.  I'm very scared!"]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['salient', 'salient', 'salient', 'salient', 'salient']` - type: `<class 'list'>`
----> baseline_answer: `salient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['badOthers|badSelf|goodOthers', 'badOthers|badSelf', 'badOthers|badSelf', 'badOthers|goodSelf', 'badSelf']` - type: `<class 'list'>`
----> baseline_answer: `goodOthers` - type: `<class 'str'>`
Model answers: goodOthers 
Gold answers: ['badOthers|badSelf|goodOthers', 'badOthers|badSelf', 'badOthers|badSelf', 'badOthers|goodSelf', 'badSelf']
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['the main character opened the door for the snake to eat the lemming', '', '', '', '']`
----> answers: `['', 'the main character opened the door for the snake to eat the lemming']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `[1.0, '', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.2
 --> Per-instance per-field breakdown: {'textarea': [0.16, 0.0, 0.13636363636363635, 0.20895522388059704, 0.0, 0.2716049382716049, 0.32857142857142857, 0.0, 0.0, 0.1864406779661017, 0.2340425531914893, 0.24137931034482757, 0.0], 'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0], 'checkbox': [1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0], 'text': [0.0]}
instance_id: 11846 <-> row_number: 11
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 11 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ['The protagonist is walking through what might be a castle and finds a key that opens a journal. The book contains a codeword and the protagonist then continues exploring the castle. They eventually pick up a few likely useful items and even are able to order a potion from a matchbook that they found.', 'I am wandering around a building looking for clues and gathering items.', 'The character finds a key which they use to unlock a journal. They make their way to a store room, taking several items. Then head to the library where they find a scroll.', 'The character locates a hidden key enabling him to read a journal. He then explores the area, and finds a scroll.', "I'm exploring a magical area. It looks very ritzy."], 'moralSaliency': ['salient', 'notSalient', 'notSalient', 'salient', 'notSalient'], 'judgment': ['goodSelf', '', '', 'goodSelf', ''], 'badOthersRationale': ['{}', '{}', '{}', '{}', '{}'], 'badOthersScore': ['', '', '', '', ''], 'badSelfRationale': ['{}', '{}', '{}', '{}', '{}'], 'badSelfScore': ['', '', '', '', ''], 'goodOthersRationale': ['{}', '{}', '{}', '{}', '{}'], 'goodOthersScore': ['', '', '', '', ''], 'goodSelfRationale': ['The main character learns the codeword, orders a potion and picks up a number of useful items.', '{}', '{}', 'the character learns new information.', '{}'], 'goodSelfScore': [2.0, '', '', 1.0, '']}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
Executing one action: self.actions.modify_text('summary', 'The excerpt begins with the player finding a key behind a tapestry, which opens a journal that discusses an ancient demon named Jeearr and the player's solo experiments to investigate it. The player then moves through the halls of the Guild Hall, collecting items like a vial, calendar, and matchbook, and ends up sending the matchbook through a brass receptacle. The story involves exploring dangerous magical elements, collecting various items for further action, and interacting with enchanted objects in a fantastical setting.')
Failed to execute an action self.actions.modify_text('summary', 'The excerpt begins with the player finding a key behind a tapestry, which opens a journal that discusses an ancient demon named Jeearr and the player's solo experiments to investigate it. The player then moves through the halls of the Guild Hall, collecting items like a vial, calendar, and matchbook, and ends up sending the matchbook through a brass receptacle. The story involves exploring dangerous magical elements, collecting various items for further action, and interacting with enchanted objects in a fantastical setting.'), error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
Executing one action: self.actions.modify_radio('moralSaliency', 'salient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentSalient" value="salient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
Executing one action: self.actions.modify_radio('judgmentSalient', 'salient')
Failed to execute an action self.actions.modify_radio('judgmentSalient', 'salient'), error: Message: 
Stacktrace:
#0 0x55a7773cb5e3 <unknown>
#1 0x55a77708e0b7 <unknown>
#2 0x55a7770dbf53 <unknown>
#3 0x55a7770dc051 <unknown>
#4 0x55a7771219c4 <unknown>
#5 0x55a777102f1d <unknown>
#6 0x55a77711eb3d <unknown>
#7 0x55a777102cc3 <unknown>
#8 0x55a7770ce0e4 <unknown>
#9 0x55a7770cf0ae <unknown>
#10 0x55a777391ce1 <unknown>
#11 0x55a777395b7e <unknown>
#12 0x55a77737f4b5 <unknown>
#13 0x55a7773967d6 <unknown>
#14 0x55a777362dbf <unknown>
#15 0x55a7773b9748 <unknown>
#16 0x55a7773b9917 <unknown>
#17 0x55a7773ca773 <unknown>
#18 0x7ff6b7e94ac3 <unknown>

 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['']
 visible_values : ['']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['salient']
 visible_values : ['salient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['The protagonist is walking through what might be a castle and finds a key that opens a journal. The book contains a codeword and the protagonist then continues exploring the castle. They eventually pick up a few likely useful items and even are able to order a potion from a matchbook that they found.', 'I am wandering around a building looking for clues and gathering items.', 'The character finds a key which they use to unlock a journal. They make their way to a store room, taking several items. Then head to the library where they find a scroll.', 'The character locates a hidden key enabling him to read a journal. He then explores the area, and finds a scroll.', "I'm exploring a magical area. It looks very ritzy."]`
----> answers: `['The character finds a key which they use to unlock a journal. They make their way to a store room, taking several items. Then head to the library where they find a scroll.', 'The character locates a hidden key enabling him to read a journal. He then explores the area, and finds a scroll.', 'I am wandering around a building looking for clues and gathering items.', "I'm exploring a magical area. It looks very ritzy.", 'The protagonist is walking through what might be a castle and finds a key that opens a journal. The book contains a codeword and the protagonist then continues exploring the castle. They eventually pick up a few likely useful items and even are able to order a potion from a matchbook that they found.']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['salient', 'notSalient', 'notSalient', 'salient', 'notSalient']` - type: `<class 'list'>`
----> baseline_answer: `salient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['goodSelf', '', '', 'goodSelf', '']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['goodSelf', '', '', 'goodSelf', '']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.3333333333333333
 --> Per-instance per-field breakdown: {'textarea': [0.16, 0.0, 0.13636363636363635, 0.20895522388059704, 0.0, 0.2716049382716049, 0.32857142857142857, 0.0, 0.0, 0.1864406779661017, 0.2340425531914893, 0.24137931034482757, 0.0, 0.0], 'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0], 'checkbox': [1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0], 'text': [0.0]}
instance_id: 11836 <-> row_number: 1
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 1 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ["The main character's arm is hurt and he moves to different places to avoid the dogs. He gather some boots and a coat that help him out in the forest. He finds a shed to hide inside while the dogs move around.", 'The player is outside of a hut, then takes some clothing from it. The player trudges off in the snow thru a forest and finds a tool shed. The player goes in the shed and takes some of the items from there.', 'The character is waiting outside a hut for the people inside to leave. The character enters the hut and takes a parka and work boots. They enter a shed and take multiple tools.', 'Character explores the woods. Character investigates contents of a couple of sheds.', 'The character waits in a hut, seemingly trying to avoid a pack of dogs, before exiting and gaining a parka and some shoes.  They then walk through snow and head into a forest where they find a shed.  Inside the shed they find various items that they try and take but their inventory is full.'], 'moralSaliency': ['salient', 'salient', 'salient', 'salient', 'salient'], 'judgment': ['goodSelf', 'goodSelf|badOthers|badSelf', 'badOthers', 'goodSelf|badOthers', 'goodSelf'], 'badOthersRationale': ['{}', 'The player takes items that belong to others.', 'The character is stealing supplies.', 'Character steals items.', '{}'], 'badOthersScore': ['', 2.0, 2.0, 2.0, ''], 'badSelfRationale': ['{}', 'The player is in snowy, freezing weather without proper attire, and gets snow dumped on them.', '{}', '{}', '{}'], 'badSelfScore': ['', 2.0, '', '', ''], 'goodOthersRationale': ['{}', '{}', '{}', '{}', '{}'], 'goodOthersScore': ['', '', '', '', ''], 'goodSelfRationale': ['The main character gathers items that will help him on his journey.', 'The player takes some warm clothing from the hut to fight the cold.', '{}', 'Character protects himself from the cold.', 'the character gains some warm clothes'], 'goodSelfScore': [1.0, 1.0, '', 1.0, 1.0]}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
Executing one action: self.actions.modify_text('summary', 'In this portion of the interactive fiction game "Border Zone," the player/main character appears to be on a mission that involves espionage and crossing borders under tense circumstances. They encounter an injured American agent who entrusts them with a document critical to preventing an assassination. The agent provides instructions on how to pass the document to a contact at the train station. The player's task is to ensure the document reaches its intended recipient amidst the challenges of border crossing and time constraints.')
Failed to execute an action self.actions.modify_text('summary', 'In this portion of the interactive fiction game "Border Zone," the player/main character appears to be on a mission that involves espionage and crossing borders under tense circumstances. They encounter an injured American agent who entrusts them with a document critical to preventing an assassination. The agent provides instructions on how to pass the document to a contact at the train station. The player's task is to ensure the document reaches its intended recipient amidst the challenges of border crossing and time constraints.'), error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
Executing one action: self.actions.modify_radio('moralSaliency', 'salient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentSalient" value="salient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
Executing one action: self.actions.modify_checkbox('judgment', 'salient')
Looking for checkboxes with `name`: `judgment` the values: `['salient']`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['']
 visible_values : ['']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['salient']
 visible_values : ['salient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `["The main character's arm is hurt and he moves to different places to avoid the dogs. He gather some boots and a coat that help him out in the forest. He finds a shed to hide inside while the dogs move around.", 'The player is outside of a hut, then takes some clothing from it. The player trudges off in the snow thru a forest and finds a tool shed. The player goes in the shed and takes some of the items from there.', 'The character is waiting outside a hut for the people inside to leave. The character enters the hut and takes a parka and work boots. They enter a shed and take multiple tools.', 'Character explores the woods. Character investigates contents of a couple of sheds.', 'The character waits in a hut, seemingly trying to avoid a pack of dogs, before exiting and gaining a parka and some shoes.  They then walk through snow and head into a forest where they find a shed.  Inside the shed they find various items that they try and take but their inventory is full.']`
----> answers: `['Character explores the woods. Character investigates contents of a couple of sheds.', "The main character's arm is hurt and he moves to different places to avoid the dogs. He gather some boots and a coat that help him out in the forest. He finds a shed to hide inside while the dogs move around.", 'The character waits in a hut, seemingly trying to avoid a pack of dogs, before exiting and gaining a parka and some shoes.  They then walk through snow and head into a forest where they find a shed.  Inside the shed they find various items that they try and take but their inventory is full.', 'The player is outside of a hut, then takes some clothing from it. The player trudges off in the snow thru a forest and finds a tool shed. The player goes in the shed and takes some of the items from there.', 'The character is waiting outside a hut for the people inside to leave. The character enters the hut and takes a parka and work boots. They enter a shed and take multiple tools.']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['salient', 'salient', 'salient', 'salient', 'salient']` - type: `<class 'list'>`
----> baseline_answer: `salient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['goodSelf', 'badOthers|badSelf|goodSelf', 'badOthers', 'badOthers|goodSelf', 'goodSelf']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['goodSelf', 'badOthers|badSelf|goodSelf', 'badOthers', 'badOthers|goodSelf', 'goodSelf']
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.3333333333333333
 --> Per-instance per-field breakdown: {'textarea': [0.16, 0.0, 0.13636363636363635, 0.20895522388059704, 0.0, 0.2716049382716049, 0.32857142857142857, 0.0, 0.0, 0.1864406779661017, 0.2340425531914893, 0.24137931034482757, 0.0, 0.0, 0.0], 'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0], 'checkbox': [1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0], 'text': [0.0]}
instance_id: 11842 <-> row_number: 7
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 7 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ['The character reads a lab book containing notes detailing a crime. They reveal a secret passage, which they travel down to find the fourth clue.', "Character learns of fiendish experiments, then finds a secret passage. As they explore the passage, they find an important clue to the mystery they're investigating.", "I'm learning about where I am. I found a secret door and got some items!", 'The player found out incriminating evidence on Dr. Wendish. They continued through the castle, encountering different things, ending up holding a box belonging to Dr. Wendish.', "I discover incriminating evidence in a lab book on Dr. Wendish. I then find a secret passage which leads to Dr. Wendish's bedroom. Inside I find a small plastic box."], 'moralSaliency': ['salient', 'salient', 'salient', 'notSalient', 'salient'], 'judgment': ['goodOthers', 'goodSelf', 'goodSelf', '', 'goodSelf|badOthers|badSelf'], 'badOthersRationale': ['{}', '{}', '{}', '{}', 'Dr. Wendish performing experiments on patients.'], 'badOthersScore': ['', '', '', '', 3.0], 'badSelfRationale': ['{}', '{}', '{}', '{}', "Invading someone's privacy by looking through their things."], 'badSelfScore': ['', '', '', '', 2.0], 'goodOthersRationale': ['The character is working toward solving a crime.', '{}', '{}', '{}', '{}'], 'goodOthersScore': [2.0, '', '', '', ''], 'goodSelfRationale': ['{}', 'Character learns important information.', 'Exploring and finding cool stuff.', '{}', 'I discover crime from Dr. Wendish.'], 'goodSelfScore': ['', 1.0, 3.0, '', 3.0]}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
Executing one action: self.actions.modify_text('summary', 'In an interactive fiction game, the player engages in activities ranging from reading a lab book containing incriminating evidence, dropping the lab book, to exploring secret passages revealed by moving books, obtaining clues, and deciphering coded messages. The narrative takes place in a mysterious castle setting with secret passages and a suspenseful plot involving crime investigation. Key actions include finding a clue revealing a crime, navigating secret passages, and uncovering further hidden clues to progress in solving the mystery. The player's investigation deepens the intrigue around the castle's secrets, prompting further exploration.')
Failed to execute an action self.actions.modify_text('summary', 'In an interactive fiction game, the player engages in activities ranging from reading a lab book containing incriminating evidence, dropping the lab book, to exploring secret passages revealed by moving books, obtaining clues, and deciphering coded messages. The narrative takes place in a mysterious castle setting with secret passages and a suspenseful plot involving crime investigation. Key actions include finding a clue revealing a crime, navigating secret passages, and uncovering further hidden clues to progress in solving the mystery. The player's investigation deepens the intrigue around the castle's secrets, prompting further exploration.'), error: invalid syntax. Perhaps you forgot a comma? (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
Executing one action: self.actions.modify_radio('moralSaliency', 'salient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentSalient" value="salient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
Executing one action: self.actions.modify_radio('judgment', 'salient')
The input value (`salient`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('judgment', 'salient'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['']
 visible_values : ['']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['salient']
 visible_values : ['salient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['The character reads a lab book containing notes detailing a crime. They reveal a secret passage, which they travel down to find the fourth clue.', "Character learns of fiendish experiments, then finds a secret passage. As they explore the passage, they find an important clue to the mystery they're investigating.", "I'm learning about where I am. I found a secret door and got some items!", 'The player found out incriminating evidence on Dr. Wendish. They continued through the castle, encountering different things, ending up holding a box belonging to Dr. Wendish.', "I discover incriminating evidence in a lab book on Dr. Wendish. I then find a secret passage which leads to Dr. Wendish's bedroom. Inside I find a small plastic box."]`
----> answers: `["I discover incriminating evidence in a lab book on Dr. Wendish. I then find a secret passage which leads to Dr. Wendish's bedroom. Inside I find a small plastic box.", "I'm learning about where I am. I found a secret door and got some items!", "Character learns of fiendish experiments, then finds a secret passage. As they explore the passage, they find an important clue to the mystery they're investigating.", 'The character reads a lab book containing notes detailing a crime. They reveal a secret passage, which they travel down to find the fourth clue.', 'The player found out incriminating evidence on Dr. Wendish. They continued through the castle, encountering different things, ending up holding a box belonging to Dr. Wendish.']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['salient', 'salient', 'salient', 'notSalient', 'salient']` - type: `<class 'list'>`
----> baseline_answer: `salient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['goodOthers', 'goodSelf', 'goodSelf', '', 'badOthers|badSelf|goodSelf']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['goodOthers', 'goodSelf', 'goodSelf', '', 'badOthers|badSelf|goodSelf']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.6666666666666666
 --> Per-instance per-field breakdown: {'textarea': [0.16, 0.0, 0.13636363636363635, 0.20895522388059704, 0.0, 0.2716049382716049, 0.32857142857142857, 0.0, 0.0, 0.1864406779661017, 0.2340425531914893, 0.24137931034482757, 0.0, 0.0, 0.0, 0.0], 'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0], 'checkbox': [1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0], 'text': [0.0]}
instance_id: 11837 <-> row_number: 2
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 2 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ['You are exploring and you happen upon some supplies, all of which you take with you other than a whip. You explore more and dropeverything to climb up a ladder. You make your way into a room and you close the door behind you so can you take a sheet with no one noticing.', "The character pulls on a rod which results in someone being hurt. The character then locks themselves in someone else's office.", "The character struggles with and injures someone using an elephant prod and then climbs down from a cage. They then sneak into Mr. Munrab's office and begin looking through his things.", "The character attempts to steal an elephant prod from another character. Though they don't get the rod, the other character injures themselves in the struggle. The character receives a ladder and uses it to escape a cage they are in.", "Character fends off an attacker, then finds a way into someone's trailer."], 'moralSaliency': ['notSalient', 'salient', 'salient', 'salient', 'salient'], 'judgment': ['', 'badOthers', 'goodSelf|badOthers', 'badOthers', 'goodSelf|badOthers'], 'badOthersRationale': ['{}', 'The character injures someone and trespasses.', 'The character harmed someone in a struggle using an elephant prod. They also trespass.', "The character's action resulted in a person being shocked by an elephant prod", "Character trespasses in someone's trailer."], 'badOthersScore': ['', 2.0, 2.0, 2.0, 1.0], 'badSelfRationale': ['{}', '{}', '{}', '{}', '{}'], 'badSelfScore': ['', '', '', '', ''], 'goodOthersRationale': ['{}', '{}', '{}', '{}', '{}'], 'goodOthersScore': ['', '', '', '', ''], 'goodSelfRationale': ['{}', '{}', 'The character gained a new item from the office.', '{}', 'Character fends off an attack.'], 'goodSelfScore': ['', '', 1.0, '', 3.0]}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
Executing one action: self.actions.modify_text('summary', 'In this snippet of the game Ballyhoo, the player navigates a series of actions within the circus setting, focusing on recovering and using objects strategically. The player retrieves a shaft from a tent, collects various items including a ransom note and transistor radio, and locks an office door to ensure privacy. These actions seem to be part of a larger goal to solve the mystery of the circus, revealing the narrative's focus on exploration, problem-solving, and encountering unpredictable outcomes.')
Failed to execute an action self.actions.modify_text('summary', 'In this snippet of the game Ballyhoo, the player navigates a series of actions within the circus setting, focusing on recovering and using objects strategically. The player retrieves a shaft from a tent, collects various items including a ransom note and transistor radio, and locks an office door to ensure privacy. These actions seem to be part of a larger goal to solve the mystery of the circus, revealing the narrative's focus on exploration, problem-solving, and encountering unpredictable outcomes.'), error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
Executing one action: self.actions.modify_radio('moralSaliency', 'salient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentSalient" value="salient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
Executing one action: self.actions.modify_checkbox('judgment', 'salient')
Looking for checkboxes with `name`: `judgment` the values: `['salient']`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['']
 visible_values : ['']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['salient']
 visible_values : ['salient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['You are exploring and you happen upon some supplies, all of which you take with you other than a whip. You explore more and dropeverything to climb up a ladder. You make your way into a room and you close the door behind you so can you take a sheet with no one noticing.', "The character pulls on a rod which results in someone being hurt. The character then locks themselves in someone else's office.", "The character struggles with and injures someone using an elephant prod and then climbs down from a cage. They then sneak into Mr. Munrab's office and begin looking through his things.", "The character attempts to steal an elephant prod from another character. Though they don't get the rod, the other character injures themselves in the struggle. The character receives a ladder and uses it to escape a cage they are in.", "Character fends off an attacker, then finds a way into someone's trailer."]`
----> answers: `["The character pulls on a rod which results in someone being hurt. The character then locks themselves in someone else's office.", "The character attempts to steal an elephant prod from another character. Though they don't get the rod, the other character injures themselves in the struggle. The character receives a ladder and uses it to escape a cage they are in.", "The character struggles with and injures someone using an elephant prod and then climbs down from a cage. They then sneak into Mr. Munrab's office and begin looking through his things.", 'You are exploring and you happen upon some supplies, all of which you take with you other than a whip. You explore more and dropeverything to climb up a ladder. You make your way into a room and you close the door behind you so can you take a sheet with no one noticing.', "Character fends off an attacker, then finds a way into someone's trailer."]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['notSalient', 'salient', 'salient', 'salient', 'salient']` - type: `<class 'list'>`
----> baseline_answer: `salient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['', 'badOthers', 'badOthers|goodSelf', 'badOthers', 'badOthers|goodSelf']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['', 'badOthers', 'badOthers|goodSelf', 'badOthers', 'badOthers|goodSelf']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.6666666666666666
 --> Per-instance per-field breakdown: {'textarea': [0.16, 0.0, 0.13636363636363635, 0.20895522388059704, 0.0, 0.2716049382716049, 0.32857142857142857, 0.0, 0.0, 0.1864406779661017, 0.2340425531914893, 0.24137931034482757, 0.0, 0.0, 0.0, 0.0, 0.0], 'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0], 'checkbox': [1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0], 'text': [0.0]}
instance_id: 11854 <-> row_number: 19
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 19 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ['The main character assists the detective in recovering evidence in who killed Veronica. They wait by the fireplace where they are given the news of what the evidence has revealed.', 'The main character is giving some bits of evidence of a crime to a detective. They then go back to a costume party with other guests. Eventually, the detective returns and arrests the murderer and the main character writes a successful book.', 'The character shows the detective some evidence related to a crime. They the character goes and waits by the fireplace until the police can use the evidence to arrest the criminals. Eventually the character is a star witness and helps put the crooks in prison.', 'The character provides evidence to the detective, then waits for a report to come in. After this, they solve the crime, and cause the true culprits to be arrested.', "I've been accused of murder, but I'm trying to prove my innocence. I'm at a Halloween party when I eventually meet with Sergeant Duffy and reveals that Michael was the one that killed his wife and also Colonel Marston was involved in embezzlement and grand theft of the family trust."], 'moralSaliency': ['salient', 'salient', 'salient', 'salient', 'salient'], 'judgment': ['goodOthers|goodSelf', 'goodOthers|goodSelf', 'goodOthers|goodSelf|badOthers', 'goodOthers|goodSelf', 'goodOthers|goodSelf|badOthers'], 'badOthersRationale': ['{}', '{}', 'The character is a witness against people and helps to get them convicted of crimes and put in prison.', '{}', 'Michael and Colonel Marston for committing crimes.'], 'badOthersScore': ['', '', 2.0, '', 3.0], 'badSelfRationale': ['{}', '{}', '{}', '{}', '{}'], 'badSelfScore': ['', '', '', '', ''], 'goodOthersRationale': ['{}', '{}', '{}', '{}', '{}'], 'goodOthersScore': [2.0, 2.0, 2.0, 2.0, 3.0], 'goodSelfRationale': ['{}', '{}', '{}', '{}', '{}'], 'goodSelfScore': [2.0, 3.0, 3.0, 3.0, 3.0]}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
Executing one action: self.actions.modify_text('summary', 'In this game snippet, the player/main character engages in investigative actions to solve a mystery at a Halloween party, focusing on presenting evidence to a detective. They provide a dark hair from a mask and a wet overcoat as clues, discuss the significance of the weather conditions, and observe the reactions and movements of other characters, including Michael, Alicia, and Sgt. Duffy. Ultimately, their investigative efforts lead to the arrest and conviction of Michael for murder, with Alicia as an accomplice, and reveal a financial scheme involving Colonel Marston.')
Add text `In this game snippet, the player/main character engages in investigative actions to solve a mystery at a Halloween party, focusing on presenting evidence to a detective. They provide a dark hair from a mask and a wet overcoat as clues, discuss the significance of the weather conditions, and observe the reactions and movements of other characters, including Michael, Alicia, and Sgt. Duffy. Ultimately, their investigative efforts lead to the arrest and conviction of Michael for murder, with Alicia as an accomplice, and reveal a financial scheme involving Colonel Marston.` to this text input: <textarea class="form-control" id="summary" name="summary" rows="3" required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
Executing one action: self.actions.modify_radio('moralSaliency', 'salient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentSalient" value="salient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
Executing one action: self.actions.modify_radio('judgment', 'salient')
The input value (`salient`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('judgment', 'salient'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['In this game snippet, the player/main character engages in investigative actions to solve a mystery at a Halloween party, focusing on presenting evidence to a detective. They provide a dark hair from a mask and a wet overcoat as clues, discuss the significance of the weather conditions, and observe the reactions and movements of other characters, including Michael, Alicia, and Sgt. Duffy. Ultimately, their investigative efforts lead to the arrest and conviction of Michael for murder, with Alicia as an accomplice, and reveal a financial scheme involving Colonel Marston.']
 visible_values : ['In this game snippet, the player/main character engages in investigative actions to solve a mystery at a Halloween party, focusing on presenting evidence to a detective. They provide a dark hair from a mask and a wet overcoat as clues, discuss the significance of the weather conditions, and observe the reactions and movements of other characters, including Michael, Alicia, and Sgt. Duffy. Ultimately, their investigative efforts lead to the arrest and conviction of Michael for murder, with Alicia as an accomplice, and reveal a financial scheme involving Colonel Marston.']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['salient']
 visible_values : ['salient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['The main character assists the detective in recovering evidence in who killed Veronica. They wait by the fireplace where they are given the news of what the evidence has revealed.', 'The main character is giving some bits of evidence of a crime to a detective. They then go back to a costume party with other guests. Eventually, the detective returns and arrests the murderer and the main character writes a successful book.', 'The character shows the detective some evidence related to a crime. They the character goes and waits by the fireplace until the police can use the evidence to arrest the criminals. Eventually the character is a star witness and helps put the crooks in prison.', 'The character provides evidence to the detective, then waits for a report to come in. After this, they solve the crime, and cause the true culprits to be arrested.', "I've been accused of murder, but I'm trying to prove my innocence. I'm at a Halloween party when I eventually meet with Sergeant Duffy and reveals that Michael was the one that killed his wife and also Colonel Marston was involved in embezzlement and grand theft of the family trust."]`
----> answers: `['The character shows the detective some evidence related to a crime. They the character goes and waits by the fireplace until the police can use the evidence to arrest the criminals. Eventually the character is a star witness and helps put the crooks in prison.', 'The character provides evidence to the detective, then waits for a report to come in. After this, they solve the crime, and cause the true culprits to be arrested.', 'The main character is giving some bits of evidence of a crime to a detective. They then go back to a costume party with other guests. Eventually, the detective returns and arrests the murderer and the main character writes a successful book.', 'The main character assists the detective in recovering evidence in who killed Veronica. They wait by the fireplace where they are given the news of what the evidence has revealed.', "I've been accused of murder, but I'm trying to prove my innocence. I'm at a Halloween party when I eventually meet with Sergeant Duffy and reveals that Michael was the one that killed his wife and also Colonel Marston was involved in embezzlement and grand theft of the family trust."]` - type: `<class 'list'>`
----> baseline_answer: `In this game snippet, the player/main character engages in investigative actions to solve a mystery at a Halloween party, focusing on presenting evidence to a detective. They provide a dark hair from a mask and a wet overcoat as clues, discuss the significance of the weather conditions, and observe the reactions and movements of other characters, including Michael, Alicia, and Sgt. Duffy. Ultimately, their investigative efforts lead to the arrest and conviction of Michael for murder, with Alicia as an accomplice, and reveal a financial scheme involving Colonel Marston.` - type: `<class 'str'>`
 --> scores:  0.22727272727272724
----> per-field score: 0.22727272727272724
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['salient', 'salient', 'salient', 'salient', 'salient']` - type: `<class 'list'>`
----> baseline_answer: `salient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['goodOthers|goodSelf', 'goodOthers|goodSelf', 'badOthers|goodOthers|goodSelf', 'goodOthers|goodSelf', 'badOthers|goodOthers|goodSelf']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['goodOthers|goodSelf', 'goodOthers|goodSelf', 'badOthers|goodOthers|goodSelf', 'goodOthers|goodSelf', 'badOthers|goodOthers|goodSelf']
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.4090909090909091
 --> Per-instance per-field breakdown: {'textarea': [0.16, 0.0, 0.13636363636363635, 0.20895522388059704, 0.0, 0.2716049382716049, 0.32857142857142857, 0.0, 0.0, 0.1864406779661017, 0.2340425531914893, 0.24137931034482757, 0.0, 0.0, 0.0, 0.0, 0.0, 0.22727272727272724], 'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0], 'checkbox': [1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0], 'text': [0.0]}
instance_id: 11850 <-> row_number: 15
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 15 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ['The character enters the midway and show a mouse to an elephant. The elephant breaks its chain and runs off.', 'The character gives a cigarette case to a person with multiple personalities. The personalities have an argument. The character uses a mouse to scare an elephant.', "You are questioning two individuals about a cigarette case. WHen you ask Jenny about it the other person, Andrew panics and Jenny realizes she had been part of some plot she didn't realize. She then chases him and for some reason you go and get a mouse and scare an elephant with it.", 'Character explores a circus. They confront someone, gaining information, then go scare an elephant.', "I'm trying to find information and stuff in a circus. Lots of animals are around."], 'moralSaliency': ['salient', 'salient', 'salient', 'salient', 'salient'], 'judgment': ['badOthers', 'badOthers', 'badOthers', 'goodSelf|badOthers', 'goodSelf'], 'badOthersRationale': ['The character possibly injured the elephant and caused the elephant to do damage to the circus.', 'The character steals someones clothes', 'You take a mouse and show it to an elephant, causing the elephant to eventually break off its chains in fear and stampede out of the tent.', 'Character scares an elephant into stampeding.', '{}'], 'badOthersScore': [1.0, 1.0, 2.0, 2.0, ''], 'badSelfRationale': ['{}', '{}', '{}', '{}', '{}'], 'badSelfScore': ['', '', '', '', ''], 'goodOthersRationale': ['{}', '{}', '{}', '{}', '{}'], 'goodOthersScore': ['', '', '', '', ''], 'goodSelfRationale': ['{}', '{}', '{}', 'Character learns new information.', 'Hunting for information.'], 'goodSelfScore': ['', '', '', 1.0, 3.0]}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
Executing one action: self.actions.modify_text('summary', 'In this snippet from the game "Ballyhoo", the player navigates through the circus surroundings, encountering various characters and locations. The player interacts with an owner's daughter, Jenny, and confronts Andrew about a cigarette case, leading to a revelation and conflict. Later, the player encounters an elephant and uses a mouse to influence its behavior. The snippet concludes with the player continuing their journey through the circus.')
Failed to execute an action self.actions.modify_text('summary', 'In this snippet from the game "Ballyhoo", the player navigates through the circus surroundings, encountering various characters and locations. The player interacts with an owner's daughter, Jenny, and confronts Andrew about a cigarette case, leading to a revelation and conflict. Later, the player encounters an elephant and uses a mouse to influence its behavior. The snippet concludes with the player continuing their journey through the circus.'), error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
Executing one action: self.actions.modify_radio('moralSaliency', 'salient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentSalient" value="salient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
Executing one action: self.actions.modify_radio('judgment', 'salient')
The input value (`salient`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('judgment', 'salient'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['']
 visible_values : ['']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['salient']
 visible_values : ['salient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['The character enters the midway and show a mouse to an elephant. The elephant breaks its chain and runs off.', 'The character gives a cigarette case to a person with multiple personalities. The personalities have an argument. The character uses a mouse to scare an elephant.', "You are questioning two individuals about a cigarette case. WHen you ask Jenny about it the other person, Andrew panics and Jenny realizes she had been part of some plot she didn't realize. She then chases him and for some reason you go and get a mouse and scare an elephant with it.", 'Character explores a circus. They confront someone, gaining information, then go scare an elephant.', "I'm trying to find information and stuff in a circus. Lots of animals are around."]`
----> answers: `['Character explores a circus. They confront someone, gaining information, then go scare an elephant.', 'The character gives a cigarette case to a person with multiple personalities. The personalities have an argument. The character uses a mouse to scare an elephant.', "You are questioning two individuals about a cigarette case. WHen you ask Jenny about it the other person, Andrew panics and Jenny realizes she had been part of some plot she didn't realize. She then chases him and for some reason you go and get a mouse and scare an elephant with it.", "I'm trying to find information and stuff in a circus. Lots of animals are around.", 'The character enters the midway and show a mouse to an elephant. The elephant breaks its chain and runs off.']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['salient', 'salient', 'salient', 'salient', 'salient']` - type: `<class 'list'>`
----> baseline_answer: `salient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['badOthers', 'badOthers', 'badOthers', 'badOthers|goodSelf', 'goodSelf']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['badOthers', 'badOthers', 'badOthers', 'badOthers|goodSelf', 'goodSelf']
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.3333333333333333
 --> Per-instance per-field breakdown: {'textarea': [0.16, 0.0, 0.13636363636363635, 0.20895522388059704, 0.0, 0.2716049382716049, 0.32857142857142857, 0.0, 0.0, 0.1864406779661017, 0.2340425531914893, 0.24137931034482757, 0.0, 0.0, 0.0, 0.0, 0.0, 0.22727272727272724, 0.0], 'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'checkbox': [1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0], 'text': [0.0]}
instance_id: 11838 <-> row_number: 3
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 3 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ["In the laboratory I disable the security switch. I cross a drawbridge to reach a cottage, guarded by Alexis the hellhound, who lets me pass. I explore Miss Voss's cottage.", 'The main character ends up in a village where things are not as they seem. The glasses who a different kind of world. The character ends up in the cottage where they take a key from the bookcase.', 'Character solves how to get out of a castle. Then, the character escapes an angry hellhound and finds a key.', "I'm exploring a fantasy setting and got to pet a hellhound. I'm going to get power", "First I'm in a tower, and I confront a fire-breathing dragon. Then my own hellhound runs to me, and finally I am in Miss Voss's cottage where I find a steel key. She's the former town librarian."], 'moralSaliency': ['salient', 'salient', 'salient', 'salient', 'notSalient'], 'judgment': ['goodSelf|badOthers', 'goodOthers|goodSelf', 'goodOthers|goodSelf', 'goodOthers|goodSelf', ''], 'badOthersRationale': ["The character disables the security and trespasses in Miss Voss's cottage.", '{}', '{}', '{}', '{}'], 'badOthersScore': [1.0, '', '', '', ''], 'badSelfRationale': ['{}', '{}', '{}', '{}', '{}'], 'badSelfScore': ['', '', '', '', ''], 'goodOthersRationale': ['{}', 'Preventing the hell hound from doing damage', 'The main character defeats an angry animal without harming it.', 'Doggo got pets', '{}'], 'goodOthersScore': ['', 2.0, 2.0, 3.0, ''], 'goodSelfRationale': ['The character disables the security, making it easier to traverse the area without being detected.', 'Recovering a key and protecting oneself.', 'Main character escapes a hellhound attack.', "I'm very close to the end and getting untold power!", '{}'], 'goodSelfScore': [1.0, 3.0, 3.0, 3.0, '']}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
Executing one action: self.actions.modify_text('summary', 'In the game snippet provided, the player/main character undergoes various actions, including wearing glasses that enhance vision, examining control panels with switches, turning off a switch that seems to be for "Security," and navigating through different rooms of a tower. Additionally, the player interacts with objects like a broom and a metal crank, causing the drawbridge to open and enabling passage to another area. The actions lead to discoveries, interactions with the environment, and progress towards goals within the game\'s narrative.')
Add text `In the game snippet provided, the player/main character undergoes various actions, including wearing glasses that enhance vision, examining control panels with switches, turning off a switch that seems to be for "Security," and navigating through different rooms of a tower. Additionally, the player interacts with objects like a broom and a metal crank, causing the drawbridge to open and enabling passage to another area. The actions lead to discoveries, interactions with the environment, and progress towards goals within the game's narrative.` to this text input: <textarea class="form-control" id="summary" name="summary" rows="3" required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
Executing one action: self.actions.modify_radio('moralSaliency', 'salient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentSalient" value="salient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
Executing one action: self.actions.modify_radio('judgmentSalient', 'salient')
Failed to execute an action self.actions.modify_radio('judgmentSalient', 'salient'), error: Message: 
Stacktrace:
#0 0x55a7773cb5e3 <unknown>
#1 0x55a77708e0b7 <unknown>
#2 0x55a7770dbf53 <unknown>
#3 0x55a7770dc051 <unknown>
#4 0x55a7771219c4 <unknown>
#5 0x55a777102f1d <unknown>
#6 0x55a77711eb3d <unknown>
#7 0x55a777102cc3 <unknown>
#8 0x55a7770ce0e4 <unknown>
#9 0x55a7770cf0ae <unknown>
#10 0x55a777391ce1 <unknown>
#11 0x55a777395b7e <unknown>
#12 0x55a77737f4b5 <unknown>
#13 0x55a7773967d6 <unknown>
#14 0x55a777362dbf <unknown>
#15 0x55a7773b9748 <unknown>
#16 0x55a7773b9917 <unknown>
#17 0x55a7773ca773 <unknown>
#18 0x7ff6b7e94ac3 <unknown>

 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['In the game snippet provided, the player/main character undergoes various actions, including wearing glasses that enhance vision, examining control panels with switches, turning off a switch that seems to be for "Security," and navigating through different rooms of a tower. Additionally, the player interacts with objects like a broom and a metal crank, causing the drawbridge to open and enabling passage to another area. The actions lead to discoveries, interactions with the environment, and progress towards goals within the game\'s narrative.']
 visible_values : ['In the game snippet provided, the player/main character undergoes various actions, including wearing glasses that enhance vision, examining control panels with switches, turning off a switch that seems to be for "Security," and navigating through different rooms of a tower. Additionally, the player interacts with objects like a broom and a metal crank, causing the drawbridge to open and enabling passage to another area. The actions lead to discoveries, interactions with the environment, and progress towards goals within the game\'s narrative.']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['salient']
 visible_values : ['salient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `["In the laboratory I disable the security switch. I cross a drawbridge to reach a cottage, guarded by Alexis the hellhound, who lets me pass. I explore Miss Voss's cottage.", 'The main character ends up in a village where things are not as they seem. The glasses who a different kind of world. The character ends up in the cottage where they take a key from the bookcase.', 'Character solves how to get out of a castle. Then, the character escapes an angry hellhound and finds a key.', "I'm exploring a fantasy setting and got to pet a hellhound. I'm going to get power", "First I'm in a tower, and I confront a fire-breathing dragon. Then my own hellhound runs to me, and finally I am in Miss Voss's cottage where I find a steel key. She's the former town librarian."]`
----> answers: `["I'm exploring a fantasy setting and got to pet a hellhound. I'm going to get power", "In the laboratory I disable the security switch. I cross a drawbridge to reach a cottage, guarded by Alexis the hellhound, who lets me pass. I explore Miss Voss's cottage.", 'Character solves how to get out of a castle. Then, the character escapes an angry hellhound and finds a key.', "First I'm in a tower, and I confront a fire-breathing dragon. Then my own hellhound runs to me, and finally I am in Miss Voss's cottage where I find a steel key. She's the former town librarian.", 'The main character ends up in a village where things are not as they seem. The glasses who a different kind of world. The character ends up in the cottage where they take a key from the bookcase.']` - type: `<class 'list'>`
----> baseline_answer: `In the game snippet provided, the player/main character undergoes various actions, including wearing glasses that enhance vision, examining control panels with switches, turning off a switch that seems to be for "Security," and navigating through different rooms of a tower. Additionally, the player interacts with objects like a broom and a metal crank, causing the drawbridge to open and enabling passage to another area. The actions lead to discoveries, interactions with the environment, and progress towards goals within the game's narrative.` - type: `<class 'str'>`
 --> scores:  0.16528925619834708
----> per-field score: 0.16528925619834708
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['salient', 'salient', 'salient', 'salient', 'notSalient']` - type: `<class 'list'>`
----> baseline_answer: `salient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['badOthers|goodSelf', 'goodOthers|goodSelf', 'goodOthers|goodSelf', 'goodOthers|goodSelf', '']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['badOthers|goodSelf', 'goodOthers|goodSelf', 'goodOthers|goodSelf', 'goodOthers|goodSelf', '']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.721763085399449
 --> Per-instance per-field breakdown: {'textarea': [0.16, 0.0, 0.13636363636363635, 0.20895522388059704, 0.0, 0.2716049382716049, 0.32857142857142857, 0.0, 0.0, 0.1864406779661017, 0.2340425531914893, 0.24137931034482757, 0.0, 0.0, 0.0, 0.0, 0.0, 0.22727272727272724, 0.0, 0.16528925619834708], 'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'checkbox': [1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0], 'text': [0.0]}
 = = = = = = = = = = = = starting new task: `winogrande validation (grammar) additional_ph` = = = = = = = = = = = = 
First instance id: 20422
instance_id: 20460 <-> row_number: 38
 --> inputs: ['Answer_radios1', 'equal1', 'Answer_radios2', 'equal2', 'gender1', 'gender2']
 --> Looking up gold labels from row index 38 of `input.csv` (unique inputs). 
 --> input labels: {'Answer_radios1': [1], 'equal1': [''], 'Answer_radios2': [2], 'equal2': [''], 'gender1': [nan], 'gender2': [nan]}
 - - - - - -  starting a new element: `Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios1
Executing one action: self.actions.modify_radio('Answer_radios1', '1')
We are going to select this radio button: <input type="radio" name="Answer_radios1" id="Answer_radios_1_1" value="1">
 - - - - - -  starting a new element: `Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal1
Executing one action: self.actions.modify_checkbox('equal1', 'on')
Looking for checkboxes with `name`: `equal1` the values: `['on']`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
 - - - - - -  starting a new element: `Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios2
Executing one action: self.actions.modify_radio('Answer_radios2', '2')
We are going to select this radio button: <input type="radio" name="Answer_radios2" id="Answer_radios_2_2" value="2">
 - - - - - -  starting a new element: `Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal2
Executing one action: self.actions.modify_checkbox('equal2', 'on')
Looking for checkboxes with `name`: `equal2` the values: `['on']`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
 - - - - - -  starting a new element: `Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender1` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender2` since it is not visible.
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
 ------- evaluating input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
----> per-field score: 1.0
 ------- evaluating input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender1` since it is not visible.
 ------- evaluating input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender2` since it is not visible.
 --> Per-instance overall score: 1.0
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0], 'checkbox': [1.0, 1.0]}
instance_id: 20441 <-> row_number: 19
 --> inputs: ['Answer_radios1', 'equal1', 'Answer_radios2', 'equal2', 'gender1', 'gender2']
 --> Looking up gold labels from row index 19 of `input.csv` (unique inputs). 
 --> input labels: {'Answer_radios1': [1], 'equal1': [''], 'Answer_radios2': [2], 'equal2': [''], 'gender1': [nan], 'gender2': [nan]}
 - - - - - -  starting a new element: `Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios1
Executing one action: self.actions.modify_radio('Answer_radios1', '1')
We are going to select this radio button: <input type="radio" name="Answer_radios1" id="Answer_radios_1_1" value="1">
 - - - - - -  starting a new element: `Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal1
Executing one action: self.actions.modify_checkbox('equal1', 'on')
Looking for checkboxes with `name`: `equal1` the values: `['on']`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
 - - - - - -  starting a new element: `Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios2
Executing one action: self.actions.modify_radio('Answer_radios2', '2')
We are going to select this radio button: <input type="radio" name="Answer_radios2" id="Answer_radios_2_2" value="2">
 - - - - - -  starting a new element: `Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal2
Executing one action: self.actions.modify_checkbox('equal2', 'on')
Looking for checkboxes with `name`: `equal2` the values: `['on']`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
 - - - - - -  starting a new element: `Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender1` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender2` since it is not visible.
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
 ------- evaluating input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
----> per-field score: 1.0
 ------- evaluating input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender1` since it is not visible.
 ------- evaluating input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender2` since it is not visible.
 --> Per-instance overall score: 1.0
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0], 'checkbox': [1.0, 1.0, 1.0, 1.0]}
instance_id: 20467 <-> row_number: 45
 --> inputs: ['Answer_radios1', 'equal1', 'Answer_radios2', 'equal2', 'gender1', 'gender2']
 --> Looking up gold labels from row index 45 of `input.csv` (unique inputs). 
 --> input labels: {'Answer_radios1': [2], 'equal1': [''], 'Answer_radios2': [1], 'equal2': [''], 'gender1': [nan], 'gender2': [nan]}
 - - - - - -  starting a new element: `Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios1
Executing one action: self.actions.modify_radio('Answer_radios1', '2')
We are going to select this radio button: <input type="radio" name="Answer_radios1" id="Answer_radios_1_2" value="2">
 - - - - - -  starting a new element: `Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal1
Executing one action: self.actions.modify_checkbox('equal1', 'on')
Looking for checkboxes with `name`: `equal1` the values: `['on']`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
 - - - - - -  starting a new element: `Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios2
Executing one action: self.actions.modify_radio('Answer_radios2', '2')
We are going to select this radio button: <input type="radio" name="Answer_radios2" id="Answer_radios_2_2" value="2">
 - - - - - -  starting a new element: `Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal2
Executing one action: self.actions.modify_checkbox('equal2', '1')
Looking for checkboxes with `name`: `equal2` the values: `['1']`
About to check this checkbox: <input type="checkbox" name="equal2" id="equal2" value="1">
 - - - - - -  starting a new element: `Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender1` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender2` since it is not visible.
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
 ------- evaluating input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
----> per-field score: 0.0
 ------- evaluating input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender1` since it is not visible.
 ------- evaluating input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender2` since it is not visible.
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0]}
instance_id: 20517 <-> row_number: 95
 --> inputs: ['Answer_radios1', 'equal1', 'Answer_radios2', 'equal2', 'gender1', 'gender2']
 --> Looking up gold labels from row index 95 of `input.csv` (unique inputs). 
 --> input labels: {'Answer_radios1': [2], 'equal1': [''], 'Answer_radios2': [1], 'equal2': [''], 'gender1': [nan], 'gender2': [nan]}
 - - - - - -  starting a new element: `Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios1
Executing one action: self.actions.modify_radio('Answer_radios1', '1')
We are going to select this radio button: <input type="radio" name="Answer_radios1" id="Answer_radios_1_1" value="1">
 - - - - - -  starting a new element: `Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal1
Executing one action: self.actions.modify_checkbox('equal1', 'on')
Looking for checkboxes with `name`: `equal1` the values: `['on']`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
 - - - - - -  starting a new element: `Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios2
Executing one action: self.actions.modify_radio('Answer_radios2', '1')
We are going to select this radio button: <input type="radio" name="Answer_radios2" id="Answer_radios_2_1" value="1">
 - - - - - -  starting a new element: `Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal2
Executing one action: self.actions.modify_checkbox('equal2', 'on')
Looking for checkboxes with `name`: `equal2` the values: `['on']`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
 - - - - - -  starting a new element: `Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender1` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender2` since it is not visible.
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
 ------- evaluating input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
----> per-field score: 1.0
 ------- evaluating input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender1` since it is not visible.
 ------- evaluating input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender2` since it is not visible.
 --> Per-instance overall score: 0.75
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0]}
instance_id: 20446 <-> row_number: 24
 --> inputs: ['Answer_radios1', 'equal1', 'Answer_radios2', 'equal2', 'gender1', 'gender2']
 --> Looking up gold labels from row index 24 of `input.csv` (unique inputs). 
 --> input labels: {'Answer_radios1': [2], 'equal1': [''], 'Answer_radios2': [1], 'equal2': [''], 'gender1': [nan], 'gender2': [nan]}
 - - - - - -  starting a new element: `Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios1
Executing one action: self.actions.modify_radio('Answer_radios1', '2')
We are going to select this radio button: <input type="radio" name="Answer_radios1" id="Answer_radios_1_2" value="2">
 - - - - - -  starting a new element: `Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal1
Executing one action: self.actions.modify_checkbox('equal1', 'on')
Looking for checkboxes with `name`: `equal1` the values: `['on']`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
 - - - - - -  starting a new element: `Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios2
Executing one action: self.actions.modify_radio('Answer_radios2', '1')
We are going to select this radio button: <input type="radio" name="Answer_radios2" id="Answer_radios_2_1" value="1">
 - - - - - -  starting a new element: `Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal2
Executing one action: self.actions.modify_checkbox('equal2', 'on')
Looking for checkboxes with `name`: `equal2` the values: `['on']`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
 - - - - - -  starting a new element: `Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender1` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender2` since it is not visible.
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
 ------- evaluating input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
----> per-field score: 1.0
 ------- evaluating input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender1` since it is not visible.
 ------- evaluating input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender2` since it is not visible.
 --> Per-instance overall score: 1.0
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0]}
instance_id: 20520 <-> row_number: 98
 --> inputs: ['Answer_radios1', 'equal1', 'Answer_radios2', 'equal2', 'gender1', 'gender2']
 --> Looking up gold labels from row index 98 of `input.csv` (unique inputs). 
 --> input labels: {'Answer_radios1': [2], 'equal1': [''], 'Answer_radios2': [1], 'equal2': [''], 'gender1': [nan], 'gender2': [nan]}
 - - - - - -  starting a new element: `Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios1
Executing one action: self.actions.modify_radio('Answer_radios1', '2')
We are going to select this radio button: <input type="radio" name="Answer_radios1" id="Answer_radios_1_2" value="2">
 - - - - - -  starting a new element: `Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal1
Executing one action: self.actions.modify_checkbox('equal1', '1')
Looking for checkboxes with `name`: `equal1` the values: `['1']`
About to check this checkbox: <input type="checkbox" name="equal1" id="equal1" value="1">
 - - - - - -  starting a new element: `Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios2
Executing one action: self.actions.modify_radio('Answer_radios2', '1')
We are going to select this radio button: <input type="radio" name="Answer_radios2" id="Answer_radios_2_1" value="1">
 - - - - - -  starting a new element: `Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal2
Executing one action: self.actions.modify_checkbox('equal2', 'on')
Looking for checkboxes with `name`: `equal2` the values: `['on']`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
 - - - - - -  starting a new element: `Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender1` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender2` since it is not visible.
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
 ------- evaluating input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
----> per-field score: 1.0
 ------- evaluating input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender1` since it is not visible.
 ------- evaluating input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender2` since it is not visible.
 --> Per-instance overall score: 0.75
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0]}
instance_id: 20457 <-> row_number: 35
 --> inputs: ['Answer_radios1', 'equal1', 'Answer_radios2', 'equal2', 'gender1', 'gender2']
 --> Looking up gold labels from row index 35 of `input.csv` (unique inputs). 
 --> input labels: {'Answer_radios1': [2], 'equal1': [''], 'Answer_radios2': [1], 'equal2': [''], 'gender1': [nan], 'gender2': [nan]}
 - - - - - -  starting a new element: `Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios1
Executing one action: self.actions.modify_radio('Answer_radios1', '2')
We are going to select this radio button: <input type="radio" name="Answer_radios1" id="Answer_radios_1_2" value="2">
 - - - - - -  starting a new element: `Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal1
Executing one action: self.actions.modify_checkbox('equal1', 'on')
Looking for checkboxes with `name`: `equal1` the values: `['on']`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
 - - - - - -  starting a new element: `Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios2
Executing one action: self.actions.modify_radio('Answer_radios2', '1')
We are going to select this radio button: <input type="radio" name="Answer_radios2" id="Answer_radios_2_1" value="1">
 - - - - - -  starting a new element: `Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal2
Executing one action: self.actions.modify_checkbox('equal2', 'on')
Looking for checkboxes with `name`: `equal2` the values: `['on']`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
 - - - - - -  starting a new element: `Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender1` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender2` since it is not visible.
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
 ------- evaluating input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
----> per-field score: 1.0
 ------- evaluating input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender1` since it is not visible.
 ------- evaluating input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender2` since it is not visible.
 --> Per-instance overall score: 1.0
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0]}
instance_id: 20449 <-> row_number: 27
 --> inputs: ['Answer_radios1', 'equal1', 'Answer_radios2', 'equal2', 'gender1', 'gender2']
 --> Looking up gold labels from row index 27 of `input.csv` (unique inputs). 
 --> input labels: {'Answer_radios1': [1], 'equal1': [''], 'Answer_radios2': [2], 'equal2': [''], 'gender1': [nan], 'gender2': [nan]}
 - - - - - -  starting a new element: `Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios1
Executing one action: self.actions.modify_radio('Answer_radios1', '1')
We are going to select this radio button: <input type="radio" name="Answer_radios1" id="Answer_radios_1_1" value="1">
 - - - - - -  starting a new element: `Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal1
Executing one action: self.actions.modify_checkbox('equal1', True)
Looking for checkboxes with `name`: `equal1` the values: `['True']`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
 - - - - - -  starting a new element: `Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios2
Executing one action: self.actions.modify_radio('Answer_radios2', '2')
We are going to select this radio button: <input type="radio" name="Answer_radios2" id="Answer_radios_2_2" value="2">
 - - - - - -  starting a new element: `Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal2
Executing one action: self.actions.modify_checkbox('equal2', 'on')
Looking for checkboxes with `name`: `equal2` the values: `['on']`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
 - - - - - -  starting a new element: `Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender1` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender2` since it is not visible.
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
 ------- evaluating input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
----> per-field score: 1.0
 ------- evaluating input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender1` since it is not visible.
 ------- evaluating input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender2` since it is not visible.
 --> Per-instance overall score: 1.0
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0]}
instance_id: 20422 <-> row_number: 0
 --> inputs: ['Answer_radios1', 'equal1', 'Answer_radios2', 'equal2', 'gender1', 'gender2']
 --> Looking up gold labels from row index 0 of `input.csv` (unique inputs). 
 --> input labels: {'Answer_radios1': [1], 'equal1': [''], 'Answer_radios2': [2], 'equal2': [''], 'gender1': [nan], 'gender2': [nan]}
 - - - - - -  starting a new element: `Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios1
Executing one action: self.actions.modify_radio('Answer_radios1', '2')
We are going to select this radio button: <input type="radio" name="Answer_radios1" id="Answer_radios_1_2" value="2">
 - - - - - -  starting a new element: `Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal1
Executing one action: self.actions.modify_checkbox('equal1', '1')
Looking for checkboxes with `name`: `equal1` the values: `['1']`
About to check this checkbox: <input type="checkbox" name="equal1" id="equal1" value="1">
 - - - - - -  starting a new element: `Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios2
Executing one action: self.actions.modify_radio('Answer_radios2', '2')
We are going to select this radio button: <input type="radio" name="Answer_radios2" id="Answer_radios_2_2" value="2">
 - - - - - -  starting a new element: `Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal2
Executing one action: self.actions.modify_checkbox('equal2', 'nan')
 ** Warning **: Found input value is 'nan' and filtered it out
 ** Warning **: Since the list of values `[]` is empty, and so, we're terminating the function
 - - - - - -  starting a new element: `Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender1` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender2` since it is not visible.
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
 ------- evaluating input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
----> per-field score: 1.0
 ------- evaluating input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender1` since it is not visible.
 ------- evaluating input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender2` since it is not visible.
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0]}
instance_id: 20440 <-> row_number: 18
 --> inputs: ['Answer_radios1', 'equal1', 'Answer_radios2', 'equal2', 'gender1', 'gender2']
 --> Looking up gold labels from row index 18 of `input.csv` (unique inputs). 
 --> input labels: {'Answer_radios1': [2], 'equal1': [''], 'Answer_radios2': [1], 'equal2': [''], 'gender1': [nan], 'gender2': [nan]}
 - - - - - -  starting a new element: `Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios1
Executing one action: self.actions.modify_radio('Answer_radios1', '2')
We are going to select this radio button: <input type="radio" name="Answer_radios1" id="Answer_radios_1_2" value="2">
 - - - - - -  starting a new element: `Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal1
Executing one action: self.actions.modify_checkbox('equal1', 'on')
Looking for checkboxes with `name`: `equal1` the values: `['on']`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
 - - - - - -  starting a new element: `Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios2
Executing one action: self.actions.modify_radio('Answer_radios2', '1')
We are going to select this radio button: <input type="radio" name="Answer_radios2" id="Answer_radios_2_1" value="1">
 - - - - - -  starting a new element: `Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal2
Executing one action: self.actions.modify_checkbox('equal2', 'on')
Looking for checkboxes with `name`: `equal2` the values: `['on']`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
 - - - - - -  starting a new element: `Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender1` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender2` since it is not visible.
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
 ------- evaluating input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
----> per-field score: 1.0
 ------- evaluating input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender1` since it is not visible.
 ------- evaluating input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender2` since it is not visible.
 --> Per-instance overall score: 1.0
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0]}
instance_id: 20458 <-> row_number: 36
 --> inputs: ['Answer_radios1', 'equal1', 'Answer_radios2', 'equal2', 'gender1', 'gender2']
 --> Looking up gold labels from row index 36 of `input.csv` (unique inputs). 
 --> input labels: {'Answer_radios1': [1], 'equal1': [''], 'Answer_radios2': [2], 'equal2': [''], 'gender1': [nan], 'gender2': [nan]}
 - - - - - -  starting a new element: `Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios1
Executing one action: self.actions.modify_radio('Answer_radios1', '1')
We are going to select this radio button: <input type="radio" name="Answer_radios1" id="Answer_radios_1_1" value="1">
 - - - - - -  starting a new element: `Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal1
Executing one action: self.actions.modify_checkbox('equal1', 'on')
Looking for checkboxes with `name`: `equal1` the values: `['on']`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
 - - - - - -  starting a new element: `Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios2
Executing one action: self.actions.modify_radio('Answer_radios2', '2')
We are going to select this radio button: <input type="radio" name="Answer_radios2" id="Answer_radios_2_2" value="2">
 - - - - - -  starting a new element: `Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal2
Executing one action: self.actions.modify_checkbox('equal2', 'on')
Looking for checkboxes with `name`: `equal2` the values: `['on']`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
 - - - - - -  starting a new element: `Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender1` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender2` since it is not visible.
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
 ------- evaluating input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
----> per-field score: 1.0
 ------- evaluating input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender1` since it is not visible.
 ------- evaluating input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender2` since it is not visible.
 --> Per-instance overall score: 1.0
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0]}
instance_id: 20463 <-> row_number: 41
 --> inputs: ['Answer_radios1', 'equal1', 'Answer_radios2', 'equal2', 'gender1', 'gender2']
 --> Looking up gold labels from row index 41 of `input.csv` (unique inputs). 
 --> input labels: {'Answer_radios1': [1], 'equal1': [''], 'Answer_radios2': [2], 'equal2': [1.0], 'gender1': [nan], 'gender2': [nan]}
 - - - - - -  starting a new element: `Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios1
Executing one action: self.actions.modify_radio('Answer_radios1', '1')
We are going to select this radio button: <input type="radio" name="Answer_radios1" id="Answer_radios_1_1" value="1">
 - - - - - -  starting a new element: `Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal1
Executing one action: self.actions.modify_checkbox('equal1', 'on')
Looking for checkboxes with `name`: `equal1` the values: `['on']`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
 - - - - - -  starting a new element: `Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios2
Executing one action: self.actions.modify_radio('Answer_radios2', '2')
We are going to select this radio button: <input type="radio" name="Answer_radios2" id="Answer_radios_2_2" value="2">
 - - - - - -  starting a new element: `Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal2
Executing one action: self.actions.modify_checkbox('equal2', 'on')
Looking for checkboxes with `name`: `equal2` the values: `['on']`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
 - - - - - -  starting a new element: `Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender1` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender2` since it is not visible.
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
 ------- evaluating input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[1.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: [1.0]
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender1` since it is not visible.
 ------- evaluating input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender2` since it is not visible.
 --> Per-instance overall score: 0.75
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0]}
instance_id: 20488 <-> row_number: 66
 --> inputs: ['Answer_radios1', 'equal1', 'Answer_radios2', 'equal2', 'gender1', 'gender2']
 --> Looking up gold labels from row index 66 of `input.csv` (unique inputs). 
 --> input labels: {'Answer_radios1': [2], 'equal1': [''], 'Answer_radios2': [1], 'equal2': [''], 'gender1': [nan], 'gender2': [nan]}
 - - - - - -  starting a new element: `Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios1
Executing one action: self.actions.modify_radio('Answer_radios1', '2')
We are going to select this radio button: <input type="radio" name="Answer_radios1" id="Answer_radios_1_2" value="2">
 - - - - - -  starting a new element: `Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal1
Executing one action: self.actions.modify_checkbox('equal1', 'on')
Looking for checkboxes with `name`: `equal1` the values: `['on']`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
 - - - - - -  starting a new element: `Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios2
Executing one action: self.actions.modify_radio('Answer_radios2', '1')
We are going to select this radio button: <input type="radio" name="Answer_radios2" id="Answer_radios_2_1" value="1">
 - - - - - -  starting a new element: `Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal2
Executing one action: self.actions.modify_checkbox('equal2', 'on')
Looking for checkboxes with `name`: `equal2` the values: `['on']`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
 - - - - - -  starting a new element: `Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender1` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender2` since it is not visible.
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
 ------- evaluating input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
----> per-field score: 1.0
 ------- evaluating input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender1` since it is not visible.
 ------- evaluating input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender2` since it is not visible.
 --> Per-instance overall score: 1.0
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0]}
instance_id: 20489 <-> row_number: 67
 --> inputs: ['Answer_radios1', 'equal1', 'Answer_radios2', 'equal2', 'gender1', 'gender2']
 --> Looking up gold labels from row index 67 of `input.csv` (unique inputs). 
 --> input labels: {'Answer_radios1': [2], 'equal1': [''], 'Answer_radios2': [1], 'equal2': [''], 'gender1': [nan], 'gender2': [nan]}
 - - - - - -  starting a new element: `Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios1
Executing one action: self.actions.modify_radio('Answer_radios1', '2')
We are going to select this radio button: <input type="radio" name="Answer_radios1" id="Answer_radios_1_2" value="2">
 - - - - - -  starting a new element: `Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal1
Executing one action: self.actions.modify_checkbox('equal1', 'on')
Looking for checkboxes with `name`: `equal1` the values: `['on']`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
 - - - - - -  starting a new element: `Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios2
Executing one action: self.actions.modify_radio('Answer_radios2', '1')
We are going to select this radio button: <input type="radio" name="Answer_radios2" id="Answer_radios_2_1" value="1">
 - - - - - -  starting a new element: `Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal2
Executing one action: self.actions.modify_checkbox('equal2', 'on')
Looking for checkboxes with `name`: `equal2` the values: `['on']`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
 - - - - - -  starting a new element: `Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender1` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender2` since it is not visible.
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
 ------- evaluating input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
----> per-field score: 1.0
 ------- evaluating input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender1` since it is not visible.
 ------- evaluating input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender2` since it is not visible.
 --> Per-instance overall score: 1.0
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0]}
instance_id: 20474 <-> row_number: 52
 --> inputs: ['Answer_radios1', 'equal1', 'Answer_radios2', 'equal2', 'gender1', 'gender2']
 --> Looking up gold labels from row index 52 of `input.csv` (unique inputs). 
 --> input labels: {'Answer_radios1': [2], 'equal1': [''], 'Answer_radios2': [1], 'equal2': [''], 'gender1': [nan], 'gender2': [nan]}
 - - - - - -  starting a new element: `Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios1
Executing one action: self.actions.modify_radio('Answer_radios1', '2')
We are going to select this radio button: <input type="radio" name="Answer_radios1" id="Answer_radios_1_2" value="2">
 - - - - - -  starting a new element: `Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal1
Executing one action: self.actions.modify_checkbox('equal1', 'on')
Looking for checkboxes with `name`: `equal1` the values: `['on']`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
 - - - - - -  starting a new element: `Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios2
Executing one action: self.actions.modify_radio('Answer_radios2', '1')
We are going to select this radio button: <input type="radio" name="Answer_radios2" id="Answer_radios_2_1" value="1">
 - - - - - -  starting a new element: `Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal2
Executing one action: self.actions.modify_checkbox('equal2', 'on')
Looking for checkboxes with `name`: `equal2` the values: `['on']`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
 - - - - - -  starting a new element: `Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender1` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender2` since it is not visible.
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
 ------- evaluating input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
----> per-field score: 1.0
 ------- evaluating input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender1` since it is not visible.
 ------- evaluating input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender2` since it is not visible.
 --> Per-instance overall score: 1.0
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]}
instance_id: 20436 <-> row_number: 14
 --> inputs: ['Answer_radios1', 'equal1', 'Answer_radios2', 'equal2', 'gender1', 'gender2']
 --> Looking up gold labels from row index 14 of `input.csv` (unique inputs). 
 --> input labels: {'Answer_radios1': [1], 'equal1': [''], 'Answer_radios2': [2], 'equal2': [''], 'gender1': [nan], 'gender2': [nan]}
 - - - - - -  starting a new element: `Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios1
Executing one action: self.actions.modify_radio('Answer_radios1', '1')
We are going to select this radio button: <input type="radio" name="Answer_radios1" id="Answer_radios_1_1" value="1">
 - - - - - -  starting a new element: `Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal1
Executing one action: self.actions.modify_checkbox('equal1', '1')
Looking for checkboxes with `name`: `equal1` the values: `['1']`
About to check this checkbox: <input type="checkbox" name="equal1" id="equal1" value="1">
 - - - - - -  starting a new element: `Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios2
Executing one action: self.actions.modify_radio('Answer_radios2', '2')
We are going to select this radio button: <input type="radio" name="Answer_radios2" id="Answer_radios_2_2" value="2">
 - - - - - -  starting a new element: `Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal2
Executing one action: self.actions.modify_checkbox('equal2', '1')
Looking for checkboxes with `name`: `equal2` the values: `['1']`
About to check this checkbox: <input type="checkbox" name="equal2" id="equal2" value="1">
 - - - - - -  starting a new element: `Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender1` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender2` since it is not visible.
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
 ------- evaluating input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
----> per-field score: 0.0
 ------- evaluating input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender1` since it is not visible.
 ------- evaluating input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender2` since it is not visible.
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0]}
instance_id: 20471 <-> row_number: 49
 --> inputs: ['Answer_radios1', 'equal1', 'Answer_radios2', 'equal2', 'gender1', 'gender2']
 --> Looking up gold labels from row index 49 of `input.csv` (unique inputs). 
 --> input labels: {'Answer_radios1': [2], 'equal1': [''], 'Answer_radios2': [1], 'equal2': [''], 'gender1': [nan], 'gender2': [nan]}
 - - - - - -  starting a new element: `Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios1
Executing one action: self.actions.modify_radio('Answer_radios1', '2')
We are going to select this radio button: <input type="radio" name="Answer_radios1" id="Answer_radios_1_2" value="2">
 - - - - - -  starting a new element: `Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal1
Executing one action: self.actions.modify_checkbox('equal1', 'on')
Looking for checkboxes with `name`: `equal1` the values: `['on']`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
 - - - - - -  starting a new element: `Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios2
Executing one action: self.actions.modify_radio('Answer_radios2', '1')
We are going to select this radio button: <input type="radio" name="Answer_radios2" id="Answer_radios_2_1" value="1">
 - - - - - -  starting a new element: `Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal2
Executing one action: self.actions.modify_checkbox('equal2', 'on')
Looking for checkboxes with `name`: `equal2` the values: `['on']`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
 - - - - - -  starting a new element: `Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender1` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender2` since it is not visible.
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
 ------- evaluating input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
----> per-field score: 1.0
 ------- evaluating input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender1` since it is not visible.
 ------- evaluating input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender2` since it is not visible.
 --> Per-instance overall score: 1.0
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0]}
instance_id: 20425 <-> row_number: 3
 --> inputs: ['Answer_radios1', 'equal1', 'Answer_radios2', 'equal2', 'gender1', 'gender2']
 --> Looking up gold labels from row index 3 of `input.csv` (unique inputs). 
 --> input labels: {'Answer_radios1': [2], 'equal1': [''], 'Answer_radios2': [1], 'equal2': [''], 'gender1': [nan], 'gender2': [nan]}
 - - - - - -  starting a new element: `Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios1
Executing one action: self.actions.modify_radio('Answer_radios1', '2')
We are going to select this radio button: <input type="radio" name="Answer_radios1" id="Answer_radios_1_2" value="2">
 - - - - - -  starting a new element: `Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal1
Executing one action: self.actions.modify_checkbox('equal1', 'on')
Looking for checkboxes with `name`: `equal1` the values: `['on']`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
 - - - - - -  starting a new element: `Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios2
Executing one action: self.actions.modify_radio('Answer_radios2', '1')
We are going to select this radio button: <input type="radio" name="Answer_radios2" id="Answer_radios_2_1" value="1">
 - - - - - -  starting a new element: `Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal2
Executing one action: self.actions.modify_checkbox('equal2', 'on')
Looking for checkboxes with `name`: `equal2` the values: `['on']`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
 - - - - - -  starting a new element: `Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender1` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender2` since it is not visible.
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
 ------- evaluating input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
----> per-field score: 1.0
 ------- evaluating input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender1` since it is not visible.
 ------- evaluating input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender2` since it is not visible.
 --> Per-instance overall score: 1.0
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0]}
instance_id: 20478 <-> row_number: 56
 --> inputs: ['Answer_radios1', 'equal1', 'Answer_radios2', 'equal2', 'gender1', 'gender2']
 --> Looking up gold labels from row index 56 of `input.csv` (unique inputs). 
 --> input labels: {'Answer_radios1': [2], 'equal1': [''], 'Answer_radios2': [1], 'equal2': [''], 'gender1': [nan], 'gender2': [nan]}
 - - - - - -  starting a new element: `Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios1
Executing one action: self.actions.modify_radio('Answer_radios1', '2')
We are going to select this radio button: <input type="radio" name="Answer_radios1" id="Answer_radios_1_2" value="2">
 - - - - - -  starting a new element: `Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal1
Executing one action: self.actions.modify_checkbox('equal1', 'on')
Looking for checkboxes with `name`: `equal1` the values: `['on']`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
 - - - - - -  starting a new element: `Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios2
Executing one action: self.actions.modify_radio('Answer_radios2', '2')
We are going to select this radio button: <input type="radio" name="Answer_radios2" id="Answer_radios_2_2" value="2">
 - - - - - -  starting a new element: `Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal2
Executing one action: self.actions.modify_checkbox('equal2', '1')
Looking for checkboxes with `name`: `equal2` the values: `['1']`
About to check this checkbox: <input type="checkbox" name="equal2" id="equal2" value="1">
 - - - - - -  starting a new element: `Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender1` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender2` since it is not visible.
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
 ------- evaluating input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
----> per-field score: 0.0
 ------- evaluating input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender1` since it is not visible.
 ------- evaluating input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender2` since it is not visible.
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0]}
instance_id: 20477 <-> row_number: 55
 --> inputs: ['Answer_radios1', 'equal1', 'Answer_radios2', 'equal2', 'gender1', 'gender2']
 --> Looking up gold labels from row index 55 of `input.csv` (unique inputs). 
 --> input labels: {'Answer_radios1': [2], 'equal1': [''], 'Answer_radios2': [1], 'equal2': [''], 'gender1': [nan], 'gender2': [nan]}
 - - - - - -  starting a new element: `Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios1
Executing one action: self.actions.modify_radio('Answer_radios1', '2')
We are going to select this radio button: <input type="radio" name="Answer_radios1" id="Answer_radios_1_2" value="2">
 - - - - - -  starting a new element: `Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal1
Executing one action: self.actions.modify_checkbox('equal1', 'on')
Looking for checkboxes with `name`: `equal1` the values: `['on']`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
 - - - - - -  starting a new element: `Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: Answer_radios2
Executing one action: self.actions.modify_radio('Answer_radios2', '1')
We are going to select this radio button: <input type="radio" name="Answer_radios2" id="Answer_radios_2_1" value="1">
 - - - - - -  starting a new element: `Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
about to try executing one action, on the following input: equal2
Executing one action: self.actions.modify_checkbox('equal2', 'on')
Looking for checkboxes with `name`: `equal2` the values: `['on']`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
 - - - - - -  starting a new element: `Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender1` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)` - - - - - -  
Skipping element `gender2` since it is not visible.
input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`)
 visible : []
 visible_values : []
input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`)
 visible : [' ']
 visible_values : [' ']
 ------- evaluating input: Input(name=`Answer_radios1`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`equal1`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Answer_radios2`, type=`radio`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `[1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`equal2`, type=`checkbox`, task=`winogrande validation (grammar) additional_ph`) ------- 
----> answers: `['']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
----> per-field score: 1.0
 ------- evaluating input: Input(name=`gender1`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender1` since it is not visible.
 ------- evaluating input: Input(name=`gender2`, type=`hidden`, task=`winogrande validation (grammar) additional_ph`) ------- 
Skipping element `gender2` since it is not visible.
 --> Per-instance overall score: 1.0
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0]}
 = = = = = = = = = = = = starting new task: `atomic_event2event-effects 4` = = = = = = = = = = = = 
First instance id: 33704
instance_id: 33808 <-> row_number: 104
 --> inputs: ['xhaseff', 'ohaseff', 'xeff2a', 'xeff3b', 'xeff3c', 'xeff3d', 'norational', 'oeff4a', 'oeff4b', 'oeff4c', 'oeff4d']
 --> Looking up gold labels from row index 104 of `input.csv` (unique inputs). 
 --> input labels: {'xhaseff': ['yes', 'yes', 'yes'], 'ohaseff': ['yes', 'no', 'yes'], 'xeff2a': ['smiles', 'gets recognized', 'gets praised'], 'xeff3b': ['is grateful', 'receives attention', 'gets thanked'], 'xeff3c': ['{}', '{}', '{}'], 'xeff3d': ['{}', '{}', '{}'], 'norational': ['{}', '{}', '{}'], 'oeff4a': ['blushes', '{}', 'blushes'], 'oeff4b': ['is embarrassed', '{}', 'gains confidence'], 'oeff4c': ['{}', '{}', '{}'], 'oeff4d': ['{}', '{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xhaseff
Executing one action: self.actions.modify_radio('xhaseff', 'yes')
We are going to select this radio button: <input id="radio3a" name="xhaseff" onclick="showhelper('xeff');requirelist(['input3a1', 'input3a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: ohaseff
Executing one action: self.actions.modify_radio('ohaseff', 'yes')
We are going to select this radio button: <input id="radio4a" name="ohaseff" onclick="showhelper('oeff');requirelist(['input4a1', 'input4a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff2a
Executing one action: self.actions.modify_text('xeff2a', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3b
Executing one action: self.actions.modify_text('xeff3b', '')
Since the input value is ``, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3c
Executing one action: self.actions.modify_text('xeff3c', 'PersonX feels proud of themselves.')
Add text `PersonX feels proud of themselves.` to this text input: <input autocomplete="off" id="input3a3" name="xeff3c" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3d
Executing one action: self.actions.modify_text('xeff3d', 'John gets embarrassed.')
Add text `John gets embarrassed.` to this text input: <input autocomplete="off" id="input2a4" name="xeff3d" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `norational` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4a
Executing one action: self.actions.modify_text('oeff4a', 'They feel embarrassed.')
Add text `They feel embarrassed.` to this text input: <input autocomplete="off" id="input4a1" name="oeff4a" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4b
Executing one action: self.actions.modify_text('oeff4b', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4c
Executing one action: self.actions.modify_text('oeff4c', 'PersonY feels embarrassed')
Add text `PersonY feels embarrassed` to this text input: <input autocomplete="off" id="input4a3" name="oeff4c" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4d
Executing one action: self.actions.modify_text('oeff4d', 'PersonY feels embarrassed.')
Add text `PersonY feels embarrassed.` to this text input: <input autocomplete="off" id="input4a4" name="oeff4d" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['PersonX feels proud of themselves.']
 visible_values : ['PersonX feels proud of themselves.']
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['John gets embarrassed.']
 visible_values : ['John gets embarrassed.']
input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)
 visible : ['']
 visible_values : ['']
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['They feel embarrassed.']
 visible_values : ['They feel embarrassed.']
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['PersonY feels embarrassed']
 visible_values : ['PersonY feels embarrassed']
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['PersonY feels embarrassed.']
 visible_values : ['PersonY feels embarrassed.']
 ------- evaluating input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'yes', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'no', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['smiles', 'gets recognized', 'gets praised']`
----> answers: `['smiles', 'gets praised', 'gets recognized']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['is grateful', 'receives attention', 'gets thanked']`
----> answers: `['is grateful', 'receives attention', 'gets thanked']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `norational` since it is not visible.
 ------- evaluating input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['blushes', '', 'blushes']`
----> answers: `['', 'blushes']` - type: `<class 'list'>`
----> baseline_answer: `They feel embarrassed.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['is embarrassed', '', 'gains confidence']`
----> answers: `['', 'is embarrassed', 'gains confidence']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 --> Per-instance overall score: 0.3333333333333333
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0], 'text': [0.0, 0.0, 0.0, 0.0]}
instance_id: 33829 <-> row_number: 125
 --> inputs: ['xhaseff', 'ohaseff', 'xeff2a', 'xeff3b', 'xeff3c', 'xeff3d', 'norational', 'oeff4a', 'oeff4b', 'oeff4c', 'oeff4d']
 --> Looking up gold labels from row index 125 of `input.csv` (unique inputs). 
 --> input labels: {'xhaseff': ['yes', 'yes', 'no'], 'ohaseff': ['yes', 'yes', 'yes'], 'xeff2a': ['gets information', 'becomes grateful towards PersonY', '{}'], 'xeff3b': ['gets flirted with', 'becomes more friendly towards PersonY', '{}'], 'xeff3c': ['{}', '{}', '{}'], 'xeff3d': ['{}', '{}', '{}'], 'norational': ['{}', '{}', '{}'], 'oeff4a': ['has a new friend', 'becomes more friendly towards PersonX', 'they appear shocked'], 'oeff4b': ['gets flirted with', 'happier for helping PersonX', 'they feel surprised'], 'oeff4c': ['{}', '{}', '{}'], 'oeff4d': ['{}', '{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xhaseff
Executing one action: self.actions.modify_radio('xhaseff', 'yes')
We are going to select this radio button: <input id="radio3a" name="xhaseff" onclick="showhelper('xeff');requirelist(['input3a1', 'input3a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: ohaseff
Executing one action: self.actions.modify_radio('ohaseff', 'yes')
We are going to select this radio button: <input id="radio4a" name="ohaseff" onclick="showhelper('oeff');requirelist(['input4a1', 'input4a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff2a
Executing one action: self.actions.modify_text('xeff2a', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3b
Executing one action: self.actions.modify_text('xeff3b', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3c
Executing one action: self.actions.modify_text('xeff3c', 'PersonY feels surprised.')
Add text `PersonY feels surprised.` to this text input: <input autocomplete="off" id="input3a3" name="xeff3c" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3d
Executing one action: self.actions.modify_text('xeff3d', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `norational` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4a
Executing one action: self.actions.modify_text('oeff4a', 'PersonY feels surprised and slightly confused.')
Add text `PersonY feels surprised and slightly confused.` to this text input: <input autocomplete="off" id="input4a1" name="oeff4a" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4b
Executing one action: self.actions.modify_text('oeff4b', 'PersonY starts avoiding PersonX.')
Add text `PersonY starts avoiding PersonX.` to this text input: <input autocomplete="off" id="input4a2" name="oeff4b" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4c
Executing one action: self.actions.modify_text('oeff4c', 'PersonY feels surprised and turns to PersonX.')
Add text `PersonY feels surprised and turns to PersonX.` to this text input: <input autocomplete="off" id="input4a3" name="oeff4c" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4d
Executing one action: self.actions.modify_text('oeff4d', 'nan')
Since the input value is `nan`, we are not going to modify the text.
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['PersonY feels surprised.']
 visible_values : ['PersonY feels surprised.']
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)
 visible : ['']
 visible_values : ['']
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['PersonY feels surprised and slightly confused.']
 visible_values : ['PersonY feels surprised and slightly confused.']
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['PersonY starts avoiding PersonX.']
 visible_values : ['PersonY starts avoiding PersonX.']
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['PersonY feels surprised and turns to PersonX.']
 visible_values : ['PersonY feels surprised and turns to PersonX.']
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
 ------- evaluating input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'yes', 'no']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'yes', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['gets information', 'becomes grateful towards PersonY', '']`
----> answers: `['', 'becomes grateful towards PersonY', 'gets information']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['gets flirted with', 'becomes more friendly towards PersonY', '']`
----> answers: `['', 'becomes more friendly towards PersonY', 'gets flirted with']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `norational` since it is not visible.
 ------- evaluating input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['has a new friend', 'becomes more friendly towards PersonX', 'they appear shocked']`
----> answers: `['becomes more friendly towards PersonX', 'has a new friend', 'they appear shocked']` - type: `<class 'list'>`
----> baseline_answer: `PersonY feels surprised and slightly confused.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['gets flirted with', 'happier for helping PersonX', 'they feel surprised']`
----> answers: `['happier for helping PersonX', 'they feel surprised', 'gets flirted with']` - type: `<class 'list'>`
----> baseline_answer: `PersonY starts avoiding PersonX.` - type: `<class 'str'>`
 --> scores:  0.25
----> per-field score: 0.25
 ------- evaluating input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 --> Per-instance overall score: 0.375
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0], 'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25]}
instance_id: 33816 <-> row_number: 112
 --> inputs: ['xhaseff', 'ohaseff', 'xeff2a', 'xeff3b', 'xeff3c', 'xeff3d', 'norational', 'oeff4a', 'oeff4b', 'oeff4c', 'oeff4d']
 --> Looking up gold labels from row index 112 of `input.csv` (unique inputs). 
 --> input labels: {'xhaseff': ['no', 'no', 'yes'], 'ohaseff': ['no', 'yes', 'yes'], 'xeff2a': ['{}', '{}', 'gets sore'], 'xeff3b': ['{}', '{}', 'sweats'], 'xeff3c': ['{}', '{}', '{}'], 'xeff3d': ['{}', '{}', '{}'], 'norational': ['Nothing involuntary or unemotional would happen to either person as a result of this action.', '{}', '{}'], 'oeff4a': ['{}', 'Person Y is clean', 'cries'], 'oeff4b': ['{}', 'Person Y falls over', 'yells'], 'oeff4c': ['{}', '{}', '{}'], 'oeff4d': ['{}', '{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xhaseff
Executing one action: self.actions.modify_radio('xhaseff', 'yes')
We are going to select this radio button: <input id="radio3a" name="xhaseff" onclick="showhelper('xeff');requirelist(['input3a1', 'input3a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: ohaseff
Executing one action: self.actions.modify_radio('ohaseff', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff2a
Executing one action: self.actions.modify_text('xeff2a', 'PersonY feels a gust of wind.')
Add text `PersonY feels a gust of wind.` to this text input: <input autocomplete="off" id="input3a1" name="xeff2a" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3b
Executing one action: self.actions.modify_text('xeff3b', '')
Since the input value is ``, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3c
Executing one action: self.actions.modify_text('xeff3c', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3d
Executing one action: self.actions.modify_text('xeff3d', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `norational` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4a` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4b` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4c` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4d` since it is not visible.
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : []
 visible_values : []
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['PersonY feels a gust of wind.']
 visible_values : ['PersonY feels a gust of wind.']
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)
 visible : ['']
 visible_values : ['']
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
 ------- evaluating input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['no', 'no', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['no', 'yes', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', 'gets sore']`
----> answers: `['', 'gets sore']` - type: `<class 'list'>`
----> baseline_answer: `PersonY feels a gust of wind.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', 'sweats']`
----> answers: `['', 'sweats']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `norational` since it is not visible.
 ------- evaluating input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4a` since it is not visible.
 ------- evaluating input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4b` since it is not visible.
 ------- evaluating input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4c` since it is not visible.
 ------- evaluating input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4d` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 0.0, 0.0], 'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0]}
instance_id: 33838 <-> row_number: 134
 --> inputs: ['xhaseff', 'ohaseff', 'xeff2a', 'xeff3b', 'xeff3c', 'xeff3d', 'norational', 'oeff4a', 'oeff4b', 'oeff4c', 'oeff4d']
 --> Looking up gold labels from row index 134 of `input.csv` (unique inputs). 
 --> input labels: {'xhaseff': ['no', 'no', 'yes'], 'ohaseff': ['yes', 'yes', 'yes'], 'xeff2a': ['{}', '{}', 'he is sent home'], 'xeff3b': ['{}', '{}', 'he falls asleep'], 'xeff3c': ['{}', '{}', '{}'], 'xeff3d': ['{}', '{}', '{}'], 'norational': ['{}', '{}', '{}'], 'oeff4a': ['smile at Person X', 'Y improves', 'they are put on bed rest'], 'oeff4b': ['Thank Person X', 'Y gets worse', 'they are reassured'], 'oeff4c': ['{}', '{}', '{}'], 'oeff4d': ['{}', '{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xhaseff
Executing one action: self.actions.modify_radio('xhaseff', 'yes')
We are going to select this radio button: <input id="radio3a" name="xhaseff" onclick="showhelper('xeff');requirelist(['input3a1', 'input3a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: ohaseff
Executing one action: self.actions.modify_radio('ohaseff', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff2a
Executing one action: self.actions.modify_text('xeff2a', 'PersonX is appreciated by PersonY.')
Add text `PersonX is appreciated by PersonY.` to this text input: <input autocomplete="off" id="input3a1" name="xeff2a" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3b
Executing one action: self.actions.modify_text('xeff3b', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3c
Executing one action: self.actions.modify_text('xeff3c', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3d
Executing one action: self.actions.modify_text('xeff3d', 'PersonX feels a sense of accomplishment.')
Add text `PersonX feels a sense of accomplishment.` to this text input: <input autocomplete="off" id="input2a4" name="xeff3d" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `norational` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4a` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4b` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4c` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4d` since it is not visible.
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : []
 visible_values : []
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['PersonX is appreciated by PersonY.']
 visible_values : ['PersonX is appreciated by PersonY.']
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['PersonX feels a sense of accomplishment.']
 visible_values : ['PersonX feels a sense of accomplishment.']
input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)
 visible : ['']
 visible_values : ['']
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
 ------- evaluating input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['no', 'no', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'yes', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', 'he is sent home']`
----> answers: `['', 'he is sent home']` - type: `<class 'list'>`
----> baseline_answer: `PersonX is appreciated by PersonY.` - type: `<class 'str'>`
 --> scores:  0.22222222222222224
----> per-field score: 0.22222222222222224
 ------- evaluating input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', 'he falls asleep']`
----> answers: `['', 'he falls asleep']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `norational` since it is not visible.
 ------- evaluating input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4a` since it is not visible.
 ------- evaluating input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4b` since it is not visible.
 ------- evaluating input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4c` since it is not visible.
 ------- evaluating input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4d` since it is not visible.
 --> Per-instance overall score: 0.05555555555555556
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0], 'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.22222222222222224, 0.0]}
instance_id: 33789 <-> row_number: 85
 --> inputs: ['xhaseff', 'ohaseff', 'xeff2a', 'xeff3b', 'xeff3c', 'xeff3d', 'norational', 'oeff4a', 'oeff4b', 'oeff4c', 'oeff4d']
 --> Looking up gold labels from row index 85 of `input.csv` (unique inputs). 
 --> input labels: {'xhaseff': ['no', 'yes', 'yes'], 'ohaseff': ['no', 'no', 'no'], 'xeff2a': ['{}', 'gets an answer', 'gets a job'], 'xeff3b': ['{}', 'gets confused', 'gets promoted'], 'xeff3c': ['{}', '{}', '{}'], 'xeff3d': ['{}', '{}', '{}'], 'norational': ['Person X is only interacting alone', '{}', '{}'], 'oeff4a': ['{}', '{}', '{}'], 'oeff4b': ['{}', '{}', '{}'], 'oeff4c': ['{}', '{}', '{}'], 'oeff4d': ['{}', '{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xhaseff
Executing one action: self.actions.modify_radio('xhaseff', 'yes')
We are going to select this radio button: <input id="radio3a" name="xhaseff" onclick="showhelper('xeff');requirelist(['input3a1', 'input3a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: ohaseff
Executing one action: self.actions.modify_radio('ohaseff', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff2a
Executing one action: self.actions.modify_text('xeff2a', 'PersonX feels proud of themselves.')
Add text `PersonX feels proud of themselves.` to this text input: <input autocomplete="off" id="input3a1" name="xeff2a" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3b
Executing one action: self.actions.modify_text('xeff3b', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3c
Executing one action: self.actions.modify_text('xeff3c', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3d
Executing one action: self.actions.modify_text('xeff3d', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `norational` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4a` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4b` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4c` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4d` since it is not visible.
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : []
 visible_values : []
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['PersonX feels proud of themselves.']
 visible_values : ['PersonX feels proud of themselves.']
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)
 visible : ['']
 visible_values : ['']
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
 ------- evaluating input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['no', 'yes', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['no', 'no', 'no']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', 'gets an answer', 'gets a job']`
----> answers: `['', 'gets an answer', 'gets a job']` - type: `<class 'list'>`
----> baseline_answer: `PersonX feels proud of themselves.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', 'gets confused', 'gets promoted']`
----> answers: `['', 'gets promoted', 'gets confused']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `norational` since it is not visible.
 ------- evaluating input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4a` since it is not visible.
 ------- evaluating input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4b` since it is not visible.
 ------- evaluating input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4c` since it is not visible.
 ------- evaluating input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4d` since it is not visible.
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0], 'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.22222222222222224, 0.0, 0.0, 0.0]}
instance_id: 33780 <-> row_number: 76
 --> inputs: ['xhaseff', 'ohaseff', 'xeff2a', 'xeff3b', 'xeff3c', 'xeff3d', 'norational', 'oeff4a', 'oeff4b', 'oeff4c', 'oeff4d']
 --> Looking up gold labels from row index 76 of `input.csv` (unique inputs). 
 --> input labels: {'xhaseff': ['yes', 'no', 'yes'], 'ohaseff': ['yes', 'no', 'yes'], 'xeff2a': ['He is happy', '{}', 'sweats from nerves'], 'xeff3b': ['He has a good time.', '{}', 'smiles'], 'xeff3c': ['{}', '{}', '{}'], 'xeff3d': ['{}', '{}', '{}'], 'norational': ['{}', 'Nothing involuntary or unemotional would happen to either person as a result of this action.', '{}'], 'oeff4a': ['Goes to the prom', '{}', 'gets complimented'], 'oeff4b': ['Fall in love and dances.', '{}', 'gets danced with'], 'oeff4c': ['{}', '{}', '{}'], 'oeff4d': ['{}', '{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xhaseff
Executing one action: self.actions.modify_radio('xhaseff', 'yes')
We are going to select this radio button: <input id="radio3a" name="xhaseff" onclick="showhelper('xeff');requirelist(['input3a1', 'input3a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: ohaseff
Executing one action: self.actions.modify_radio('ohaseff', 'yes')
We are going to select this radio button: <input id="radio4a" name="ohaseff" onclick="showhelper('oeff');requirelist(['input4a1', 'input4a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff2a
Executing one action: self.actions.modify_text('xeff2a', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3b
Executing one action: self.actions.modify_text('xeff3b', 'PersonY feels excited to be at the prom with PersonX.')
Add text `PersonY feels excited to be at the prom with PersonX.` to this text input: <input autocomplete="off" id="input3a2" name="xeff3b" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3c
Executing one action: self.actions.modify_text('xeff3c', 'PersonY feels grateful towards X')
Add text `PersonY feels grateful towards X` to this text input: <input autocomplete="off" id="input3a3" name="xeff3c" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3d
Executing one action: self.actions.modify_text('xeff3d', 'PersonX feels proud of themselves.')
Add text `PersonX feels proud of themselves.` to this text input: <input autocomplete="off" id="input2a4" name="xeff3d" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `norational` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4a
Executing one action: self.actions.modify_text('oeff4a', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4b
Executing one action: self.actions.modify_text('oeff4b', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4c
Executing one action: self.actions.modify_text('oeff4c', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4d
Executing one action: self.actions.modify_text('oeff4d', 'nan')
Since the input value is `nan`, we are not going to modify the text.
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['PersonY feels excited to be at the prom with PersonX.']
 visible_values : ['PersonY feels excited to be at the prom with PersonX.']
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['PersonY feels grateful towards X']
 visible_values : ['PersonY feels grateful towards X']
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['PersonX feels proud of themselves.']
 visible_values : ['PersonX feels proud of themselves.']
input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)
 visible : ['']
 visible_values : ['']
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
 ------- evaluating input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'no', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'no', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['He is happy', '', 'sweats from nerves']`
----> answers: `['', 'sweats from nerves', 'He is happy']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['He has a good time.', '', 'smiles']`
----> answers: `['He has a good time.', '', 'smiles']` - type: `<class 'list'>`
----> baseline_answer: `PersonY feels excited to be at the prom with PersonX.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `norational` since it is not visible.
 ------- evaluating input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['Goes to the prom', '', 'gets complimented']`
----> answers: `['', 'gets complimented', 'Goes to the prom']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['Fall in love and dances.', '', 'gets danced with']`
----> answers: `['', 'Fall in love and dances.', 'gets danced with']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 --> Per-instance overall score: 0.3333333333333333
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0], 'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.22222222222222224, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33747 <-> row_number: 43
 --> inputs: ['xhaseff', 'ohaseff', 'xeff2a', 'xeff3b', 'xeff3c', 'xeff3d', 'norational', 'oeff4a', 'oeff4b', 'oeff4c', 'oeff4d']
 --> Looking up gold labels from row index 43 of `input.csv` (unique inputs). 
 --> input labels: {'xhaseff': ['yes', 'no', 'no'], 'ohaseff': ['yes', 'no', 'yes'], 'xeff2a': ['they talk', '{}', '{}'], 'xeff3b': ['sit down', '{}', '{}'], 'xeff3c': ['{}', '{}', '{}'], 'xeff3d': ['{}', '{}', '{}'], 'norational': ['{}', 'Nothing involuntary or unemotional would happen to either person as a result of this action.', '{}'], 'oeff4a': ['makes a friend', '{}', 'they are confused'], 'oeff4b': ['shakes hands', '{}', 'they are shocked'], 'oeff4c': ['{}', '{}', '{}'], 'oeff4d': ['{}', '{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xhaseff
Executing one action: self.actions.modify_radio('xhaseff', 'yes')
We are going to select this radio button: <input id="radio3a" name="xhaseff" onclick="showhelper('xeff');requirelist(['input3a1', 'input3a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: ohaseff
Executing one action: self.actions.modify_radio('ohaseff', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff2a
Executing one action: self.actions.modify_text('xeff2a', 'PersonX feels confused.')
Add text `PersonX feels confused.` to this text input: <input autocomplete="off" id="input3a1" name="xeff2a" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3b
Executing one action: self.actions.modify_text('xeff3b', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3c
Executing one action: self.actions.modify_text('xeff3c', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3d
Executing one action: self.actions.modify_text('xeff3d', 'PersonX becomes more confident.')
Add text `PersonX becomes more confident.` to this text input: <input autocomplete="off" id="input2a4" name="xeff3d" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `norational` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4a` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4b` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4c` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4d` since it is not visible.
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : []
 visible_values : []
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['PersonX feels confused.']
 visible_values : ['PersonX feels confused.']
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['PersonX becomes more confident.']
 visible_values : ['PersonX becomes more confident.']
input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)
 visible : ['']
 visible_values : ['']
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
 ------- evaluating input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'no', 'no']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'no', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['they talk', '', '']`
----> answers: `['', 'they talk']` - type: `<class 'list'>`
----> baseline_answer: `PersonX feels confused.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['sit down', '', '']`
----> answers: `['', 'sit down']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `norational` since it is not visible.
 ------- evaluating input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4a` since it is not visible.
 ------- evaluating input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4b` since it is not visible.
 ------- evaluating input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4c` since it is not visible.
 ------- evaluating input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4d` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0], 'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.22222222222222224, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33800 <-> row_number: 96
 --> inputs: ['xhaseff', 'ohaseff', 'xeff2a', 'xeff3b', 'xeff3c', 'xeff3d', 'norational', 'oeff4a', 'oeff4b', 'oeff4c', 'oeff4d']
 --> Looking up gold labels from row index 96 of `input.csv` (unique inputs). 
 --> input labels: {'xhaseff': ['yes', 'yes', 'yes'], 'ohaseff': ['no', 'no', 'yes'], 'xeff2a': ['smile', 'gets to know themselves better', 'gets a hug'], 'xeff3b': ['blush', 'tries to become a better person', 'gets greeted'], 'xeff3c': ['{}', '{}', '{}'], 'xeff3d': ['{}', '{}', '{}'], 'norational': ['{}', '{}', '{}'], 'oeff4a': ['{}', '{}', 'gets a handshake'], 'oeff4b': ['{}', '{}', 'receives a hug'], 'oeff4c': ['{}', '{}', '{}'], 'oeff4d': ['{}', '{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xhaseff
Executing one action: self.actions.modify_radio('xhaseff', 'yes')
We are going to select this radio button: <input id="radio3a" name="xhaseff" onclick="showhelper('xeff');requirelist(['input3a1', 'input3a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: ohaseff
Executing one action: self.actions.modify_radio('ohaseff', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff2a
Executing one action: self.actions.modify_text('xeff2a', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3b
Executing one action: self.actions.modify_text('xeff3b', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3c
Executing one action: self.actions.modify_text('xeff3c', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3d
Executing one action: self.actions.modify_text('xeff3d', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `norational` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4a` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4b` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4c` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4d` since it is not visible.
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : []
 visible_values : []
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)
 visible : ['']
 visible_values : ['']
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
 ------- evaluating input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'yes', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['no', 'no', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['smile', 'gets to know themselves better', 'gets a hug']`
----> answers: `['gets to know themselves better', 'smile', 'gets a hug']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['blush', 'tries to become a better person', 'gets greeted']`
----> answers: `['tries to become a better person', 'gets greeted', 'blush']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `norational` since it is not visible.
 ------- evaluating input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4a` since it is not visible.
 ------- evaluating input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4b` since it is not visible.
 ------- evaluating input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4c` since it is not visible.
 ------- evaluating input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4d` since it is not visible.
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0], 'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.22222222222222224, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33836 <-> row_number: 132
 --> inputs: ['xhaseff', 'ohaseff', 'xeff2a', 'xeff3b', 'xeff3c', 'xeff3d', 'norational', 'oeff4a', 'oeff4b', 'oeff4c', 'oeff4d']
 --> Looking up gold labels from row index 132 of `input.csv` (unique inputs). 
 --> input labels: {'xhaseff': ['no', 'yes', 'yes'], 'ohaseff': ['no', 'yes', 'yes'], 'xeff2a': ['{}', 'gets dirty', 'helps person y work.'], 'xeff3b': ['{}', 'catches breath', "inspects person y's work."], 'xeff3c': ['{}', '{}', '{}'], 'xeff3d': ['{}', '{}', '{}'], 'norational': ['Nothing involuntary or unemotional would happen to either person as a result of this action.', '{}', '{}'], 'oeff4a': ['{}', 'gets tired', 'gets a project done.'], 'oeff4b': ['{}', 'gets sore', 'helps person x work.'], 'oeff4c': ['{}', '{}', '{}'], 'oeff4d': ['{}', '{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xhaseff
Executing one action: self.actions.modify_radio('xhaseff', 'yes')
We are going to select this radio button: <input id="radio3a" name="xhaseff" onclick="showhelper('xeff');requirelist(['input3a1', 'input3a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: ohaseff
Executing one action: self.actions.modify_radio('ohaseff', 'yes')
We are going to select this radio button: <input id="radio4a" name="ohaseff" onclick="showhelper('oeff');requirelist(['input4a1', 'input4a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff2a
Executing one action: self.actions.modify_text('xeff2a', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3b
Executing one action: self.actions.modify_text('xeff3b', 'PersonY becomes confused by PersonX\'s actions.')
Add text `PersonY becomes confused by PersonX's actions.` to this text input: <input autocomplete="off" id="input3a2" name="xeff3b" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3c
Executing one action: self.actions.modify_text('xeff3c', 'PersonX feels overwhelmed by the workload.')
Add text `PersonX feels overwhelmed by the workload.` to this text input: <input autocomplete="off" id="input3a3" name="xeff3c" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3d
Executing one action: self.actions.modify_text('xeff3d', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `norational` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4a
Executing one action: self.actions.modify_text('oeff4a', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4b
Executing one action: self.actions.modify_text('oeff4b', '[write an effect]')
Add text `[write an effect]` to this text input: <input autocomplete="off" id="input4a2" name="oeff4b" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4c
Executing one action: self.actions.modify_text('oeff4c', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4d
Executing one action: self.actions.modify_text('oeff4d', '[write another effect - optional]')
Add text `[write another effect - optional]` to this text input: <input autocomplete="off" id="input4a4" name="oeff4d" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ["PersonY becomes confused by PersonX's actions."]
 visible_values : ["PersonY becomes confused by PersonX's actions."]
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['PersonX feels overwhelmed by the workload.']
 visible_values : ['PersonX feels overwhelmed by the workload.']
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)
 visible : ['']
 visible_values : ['']
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['[write an effect]']
 visible_values : ['[write an effect]']
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['[write another effect - optional]']
 visible_values : ['[write another effect - optional]']
 ------- evaluating input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['no', 'yes', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['no', 'yes', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', 'gets dirty', 'helps person y work.']`
----> answers: `['', 'gets dirty', 'helps person y work.']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', 'catches breath', "inspects person y's work."]`
----> answers: `['', "inspects person y's work.", 'catches breath']` - type: `<class 'list'>`
----> baseline_answer: `PersonY becomes confused by PersonX's actions.` - type: `<class 'str'>`
 --> scores:  0.16666666666666666
----> per-field score: 0.16666666666666666
 ------- evaluating input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `norational` since it is not visible.
 ------- evaluating input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', 'gets tired', 'gets a project done.']`
----> answers: `['', 'gets tired', 'gets a project done.']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', 'gets sore', 'helps person x work.']`
----> answers: `['', 'gets sore', 'helps person x work.']` - type: `<class 'list'>`
----> baseline_answer: `[write an effect]` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 --> Per-instance overall score: 0.3611111111111111
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0], 'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.22222222222222224, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.16666666666666666, 0.0, 0.0]}
instance_id: 33781 <-> row_number: 77
 --> inputs: ['xhaseff', 'ohaseff', 'xeff2a', 'xeff3b', 'xeff3c', 'xeff3d', 'norational', 'oeff4a', 'oeff4b', 'oeff4c', 'oeff4d']
 --> Looking up gold labels from row index 77 of `input.csv` (unique inputs). 
 --> input labels: {'xhaseff': ['no', 'yes', 'yes'], 'ohaseff': ['yes', 'yes', 'yes'], 'xeff2a': ['{}', 'becomes happier', 'gets thanked'], 'xeff3b': ['{}', 'gets thanked', 'has to work hard'], 'xeff3c': ['{}', '{}', '{}'], 'xeff3d': ['{}', '{}', '{}'], 'norational': ['{}', '{}', '{}'], 'oeff4a': ['Gets something', 'becomes grateful towards PersonX', 'becomes grateful towards person X'], 'oeff4b': ['Is provided with something.', 'take advantage of PersonX', 'gets enough nutrients'], 'oeff4c': ['{}', '{}', 'gets good education'], 'oeff4d': ['{}', '{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xhaseff
Executing one action: self.actions.modify_radio('xhaseff', 'yes')
We are going to select this radio button: <input id="radio3a" name="xhaseff" onclick="showhelper('xeff');requirelist(['input3a1', 'input3a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: ohaseff
Executing one action: self.actions.modify_radio('ohaseff', 'yes')
We are going to select this radio button: <input id="radio4a" name="ohaseff" onclick="showhelper('oeff');requirelist(['input4a1', 'input4a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff2a
Executing one action: self.actions.modify_text('xeff2a', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3b
Executing one action: self.actions.modify_text('xeff3b', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3c
Executing one action: self.actions.modify_text('xeff3c', 'PersonY thanks PersonX.')
Add text `PersonY thanks PersonX.` to this text input: <input autocomplete="off" id="input3a3" name="xeff3c" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3d
Executing one action: self.actions.modify_text('xeff3d', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `norational` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4a
Executing one action: self.actions.modify_text('oeff4a', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4b
Executing one action: self.actions.modify_text('oeff4b', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4c
Executing one action: self.actions.modify_text('oeff4c', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4d
Executing one action: self.actions.modify_text('oeff4d', 'nan')
Since the input value is `nan`, we are not going to modify the text.
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['PersonY thanks PersonX.']
 visible_values : ['PersonY thanks PersonX.']
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)
 visible : ['']
 visible_values : ['']
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
 ------- evaluating input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['no', 'yes', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'yes', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', 'becomes happier', 'gets thanked']`
----> answers: `['', 'gets thanked', 'becomes happier']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', 'gets thanked', 'has to work hard']`
----> answers: `['', 'gets thanked', 'has to work hard']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `norational` since it is not visible.
 ------- evaluating input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['Gets something', 'becomes grateful towards PersonX', 'becomes grateful towards person X']`
----> answers: `['becomes grateful towards person X', 'Gets something', 'becomes grateful towards PersonX']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['Is provided with something.', 'take advantage of PersonX', 'gets enough nutrients']`
----> answers: `['gets enough nutrients', 'Is provided with something.', 'take advantage of PersonX']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', 'gets good education']`
----> answers: `['', 'gets good education']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 --> Per-instance overall score: 0.2857142857142857
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0], 'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.22222222222222224, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.16666666666666666, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33748 <-> row_number: 44
 --> inputs: ['xhaseff', 'ohaseff', 'xeff2a', 'xeff3b', 'xeff3c', 'xeff3d', 'norational', 'oeff4a', 'oeff4b', 'oeff4c', 'oeff4d']
 --> Looking up gold labels from row index 44 of `input.csv` (unique inputs). 
 --> input labels: {'xhaseff': ['no', 'yes', 'yes'], 'ohaseff': ['no', 'yes', 'yes'], 'xeff2a': ['{}', 'arms extended', 'laughs'], 'xeff3b': ['{}', 'loses their balance', 'smiles'], 'xeff3c': ['{}', 'has sore muscles', '{}'], 'xeff3d': ['{}', '{}', '{}'], 'norational': ['Nothing involuntary or unemotional would happen to either person as a result of this action.', '{}', '{}'], 'oeff4a': ['{}', 'placed in high altitude', 'cries'], 'oeff4b': ['{}', 'becomes difficult in breathing', 'yells at PersonX'], 'oeff4c': ['{}', '{}', '{}'], 'oeff4d': ['{}', '{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xhaseff
Executing one action: self.actions.modify_radio('xhaseff', 'yes')
We are going to select this radio button: <input id="radio3a" name="xhaseff" onclick="showhelper('xeff');requirelist(['input3a1', 'input3a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: ohaseff
Executing one action: self.actions.modify_radio('ohaseff', 'yes')
We are going to select this radio button: <input id="radio4a" name="ohaseff" onclick="showhelper('oeff');requirelist(['input4a1', 'input4a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff2a
Executing one action: self.actions.modify_text('xeff2a', 'gets suspended from work')
Add text `gets suspended from work` to this text input: <input autocomplete="off" id="input3a1" name="xeff2a" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3b
Executing one action: self.actions.modify_text('xeff3b', 'PersonY feels confused by the action.')
Add text `PersonY feels confused by the action.` to this text input: <input autocomplete="off" id="input3a2" name="xeff3b" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3c
Executing one action: self.actions.modify_text('xeff3c', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3d
Executing one action: self.actions.modify_text('xeff3d', '[write another effect on PersonX - optional]')
Add text `[write another effect on PersonX - optional]` to this text input: <input autocomplete="off" id="input2a4" name="xeff3d" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `norational` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4a
Executing one action: self.actions.modify_text('oeff4a', 'PersonY is confused.')
Add text `PersonY is confused.` to this text input: <input autocomplete="off" id="input4a1" name="oeff4a" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4b
Executing one action: self.actions.modify_text('oeff4b', 'PersonY feels embarrassed')
Add text `PersonY feels embarrassed` to this text input: <input autocomplete="off" id="input4a2" name="oeff4b" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4c
Executing one action: self.actions.modify_text('oeff4c', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4d
Executing one action: self.actions.modify_text('oeff4d', 'PersonY feels confused.')
Add text `PersonY feels confused.` to this text input: <input autocomplete="off" id="input4a4" name="oeff4d" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['gets suspended from work']
 visible_values : ['gets suspended from work']
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['PersonY feels confused by the action.']
 visible_values : ['PersonY feels confused by the action.']
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['[write another effect on PersonX - optional]']
 visible_values : ['[write another effect on PersonX - optional]']
input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)
 visible : ['']
 visible_values : ['']
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['PersonY is confused.']
 visible_values : ['PersonY is confused.']
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['PersonY feels embarrassed']
 visible_values : ['PersonY feels embarrassed']
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['PersonY feels confused.']
 visible_values : ['PersonY feels confused.']
 ------- evaluating input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['no', 'yes', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['no', 'yes', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', 'arms extended', 'laughs']`
----> answers: `['', 'laughs', 'arms extended']` - type: `<class 'list'>`
----> baseline_answer: `gets suspended from work` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', 'loses their balance', 'smiles']`
----> answers: `['', 'smiles', 'loses their balance']` - type: `<class 'list'>`
----> baseline_answer: `PersonY feels confused by the action.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', 'has sore muscles', '']`
----> answers: `['', 'has sore muscles']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `norational` since it is not visible.
 ------- evaluating input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', 'placed in high altitude', 'cries']`
----> answers: `['', 'placed in high altitude', 'cries']` - type: `<class 'list'>`
----> baseline_answer: `PersonY is confused.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', 'becomes difficult in breathing', 'yells at PersonX']`
----> answers: `['', 'yells at PersonX', 'becomes difficult in breathing']` - type: `<class 'list'>`
----> baseline_answer: `PersonY feels embarrassed` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 --> Per-instance overall score: 0.2857142857142857
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.22222222222222224, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.16666666666666666, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33745 <-> row_number: 41
 --> inputs: ['xhaseff', 'ohaseff', 'xeff2a', 'xeff3b', 'xeff3c', 'xeff3d', 'norational', 'oeff4a', 'oeff4b', 'oeff4c', 'oeff4d']
 --> Looking up gold labels from row index 41 of `input.csv` (unique inputs). 
 --> input labels: {'xhaseff': ['no', 'yes', 'yes'], 'ohaseff': ['no', 'no', 'yes'], 'xeff2a': ['{}', 'is happy', 'CRIES'], 'xeff3b': ['{}', 'is relieved', 'GETS TEXTS'], 'xeff3c': ['{}', '{}', '{}'], 'xeff3d': ['{}', '{}', '{}'], 'norational': ['Nothing involuntary or unemotional would happen to either person as a result of this action.', '{}', '{}'], 'oeff4a': ['{}', '{}', 'BECOMES ISOLATED'], 'oeff4b': ['{}', '{}', 'IS UNFRIENDED'], 'oeff4c': ['{}', '{}', '{}'], 'oeff4d': ['{}', '{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xhaseff
Executing one action: self.actions.modify_radio('xhaseff', 'yes')
We are going to select this radio button: <input id="radio3a" name="xhaseff" onclick="showhelper('xeff');requirelist(['input3a1', 'input3a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: ohaseff
Executing one action: self.actions.modify_radio('ohaseff', 'yes')
We are going to select this radio button: <input id="radio4a" name="ohaseff" onclick="showhelper('oeff');requirelist(['input4a1', 'input4a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff2a
Executing one action: self.actions.modify_text('xeff2a', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3b
Executing one action: self.actions.modify_text('xeff3b', 'PersonX feels confused and lost.')
Add text `PersonX feels confused and lost.` to this text input: <input autocomplete="off" id="input3a2" name="xeff3b" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3c
Executing one action: self.actions.modify_text('xeff3c', 'PersonX feels a sense of loss and isolation.')
Add text `PersonX feels a sense of loss and isolation.` to this text input: <input autocomplete="off" id="input3a3" name="xeff3c" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3d
Executing one action: self.actions.modify_text('xeff3d', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `norational` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4a
Executing one action: self.actions.modify_text('oeff4a', 'PersonY feels confused about PersonX\'s departure.')
Add text `PersonY feels confused about PersonX's departure.` to this text input: <input autocomplete="off" id="input4a1" name="oeff4a" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4b
Executing one action: self.actions.modify_text('oeff4b', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4c
Executing one action: self.actions.modify_text('oeff4c', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4d
Executing one action: self.actions.modify_text('oeff4d', '')
Since the input value is ``, we are not going to modify the text.
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['PersonX feels confused and lost.']
 visible_values : ['PersonX feels confused and lost.']
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['PersonX feels a sense of loss and isolation.']
 visible_values : ['PersonX feels a sense of loss and isolation.']
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)
 visible : ['']
 visible_values : ['']
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ["PersonY feels confused about PersonX's departure."]
 visible_values : ["PersonY feels confused about PersonX's departure."]
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
 ------- evaluating input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['no', 'yes', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['no', 'no', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', 'is happy', 'CRIES']`
----> answers: `['', 'is happy', 'CRIES']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', 'is relieved', 'GETS TEXTS']`
----> answers: `['', 'GETS TEXTS', 'is relieved']` - type: `<class 'list'>`
----> baseline_answer: `PersonX feels confused and lost.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `norational` since it is not visible.
 ------- evaluating input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', 'BECOMES ISOLATED']`
----> answers: `['', 'BECOMES ISOLATED']` - type: `<class 'list'>`
----> baseline_answer: `PersonY feels confused about PersonX's departure.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', 'IS UNFRIENDED']`
----> answers: `['', 'IS UNFRIENDED']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 --> Per-instance overall score: 0.16666666666666666
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0], 'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.22222222222222224, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.16666666666666666, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33720 <-> row_number: 16
 --> inputs: ['xhaseff', 'ohaseff', 'xeff2a', 'xeff3b', 'xeff3c', 'xeff3d', 'norational', 'oeff4a', 'oeff4b', 'oeff4c', 'oeff4d']
 --> Looking up gold labels from row index 16 of `input.csv` (unique inputs). 
 --> input labels: {'xhaseff': ['no', 'no', 'no'], 'ohaseff': ['no', 'yes', 'yes'], 'xeff2a': ['{}', '{}', '{}'], 'xeff3b': ['{}', '{}', '{}'], 'xeff3c': ['{}', '{}', '{}'], 'xeff3d': ['{}', '{}', '{}'], 'norational': ['Event is incomplete', '{}', '{}'], 'oeff4a': ['{}', 'Person Y does something good because of X', 'trembles'], 'oeff4b': ['{}', 'Y does something bad because of X', 'yells'], 'oeff4c': ['{}', '{}', '{}'], 'oeff4d': ['{}', '{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xhaseff
Executing one action: self.actions.modify_radio('xhaseff', 'yes')
We are going to select this radio button: <input id="radio3a" name="xhaseff" onclick="showhelper('xeff');requirelist(['input3a1', 'input3a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: ohaseff
Executing one action: self.actions.modify_radio('ohaseff', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff2a
Executing one action: self.actions.modify_text('xeff2a', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3b
Executing one action: self.actions.modify_text('xeff3b', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3c
Executing one action: self.actions.modify_text('xeff3c', 'PersonY feels confused.')
Add text `PersonY feels confused.` to this text input: <input autocomplete="off" id="input3a3" name="xeff3c" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3d
Executing one action: self.actions.modify_text('xeff3d', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `norational` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4a` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4b` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4c` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4d` since it is not visible.
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : []
 visible_values : []
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['PersonY feels confused.']
 visible_values : ['PersonY feels confused.']
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)
 visible : ['']
 visible_values : ['']
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
 ------- evaluating input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['no', 'no', 'no']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['no', 'yes', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `norational` since it is not visible.
 ------- evaluating input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4a` since it is not visible.
 ------- evaluating input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4b` since it is not visible.
 ------- evaluating input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4c` since it is not visible.
 ------- evaluating input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4d` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0], 'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.22222222222222224, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.16666666666666666, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33775 <-> row_number: 71
 --> inputs: ['xhaseff', 'ohaseff', 'xeff2a', 'xeff3b', 'xeff3c', 'xeff3d', 'norational', 'oeff4a', 'oeff4b', 'oeff4c', 'oeff4d']
 --> Looking up gold labels from row index 71 of `input.csv` (unique inputs). 
 --> input labels: {'xhaseff': ['yes', 'no', 'no'], 'ohaseff': ['yes', 'yes', 'no'], 'xeff2a': ['greet Person Y', '{}', '{}'], 'xeff3b': ['smile', '{}', '{}'], 'xeff3c': ['{}', '{}', '{}'], 'xeff3d': ['{}', '{}', '{}'], 'norational': ['{}', '{}', 'Nothing involuntary or unemotional would happen to either person as a result of this action.'], 'oeff4a': ['smile', 'person y is grateful', '{}'], 'oeff4b': ['greet Person X', 'person y is appreciative', '{}'], 'oeff4c': ['{}', '{}', '{}'], 'oeff4d': ['{}', '{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xhaseff
Executing one action: self.actions.modify_radio('xhaseff', 'yes')
We are going to select this radio button: <input id="radio3a" name="xhaseff" onclick="showhelper('xeff');requirelist(['input3a1', 'input3a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: ohaseff
Executing one action: self.actions.modify_radio('ohaseff', 'yes')
We are going to select this radio button: <input id="radio4a" name="ohaseff" onclick="showhelper('oeff');requirelist(['input4a1', 'input4a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff2a
Executing one action: self.actions.modify_text('xeff2a', 'PersonX feels confused about choosing PersonY.')
Add text `PersonX feels confused about choosing PersonY.` to this text input: <input autocomplete="off" id="input3a1" name="xeff2a" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3b
Executing one action: self.actions.modify_text('xeff3b', 'PersonY feels surprised.')
Add text `PersonY feels surprised.` to this text input: <input autocomplete="off" id="input3a2" name="xeff3b" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3c
Executing one action: self.actions.modify_text('xeff3c', '')
Since the input value is ``, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3d
Executing one action: self.actions.modify_text('xeff3d', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `norational` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4a
Executing one action: self.actions.modify_text('oeff4a', 'PersonY feels surprised.')
Add text `PersonY feels surprised.` to this text input: <input autocomplete="off" id="input4a1" name="oeff4a" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4b
Executing one action: self.actions.modify_text('oeff4b', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4c
Executing one action: self.actions.modify_text('oeff4c', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4d
Executing one action: self.actions.modify_text('oeff4d', 'nan')
Since the input value is `nan`, we are not going to modify the text.
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['PersonX feels confused about choosing PersonY.']
 visible_values : ['PersonX feels confused about choosing PersonY.']
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['PersonY feels surprised.']
 visible_values : ['PersonY feels surprised.']
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)
 visible : ['']
 visible_values : ['']
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['PersonY feels surprised.']
 visible_values : ['PersonY feels surprised.']
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
 ------- evaluating input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'no', 'no']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'yes', 'no']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['greet Person Y', '', '']`
----> answers: `['', 'greet Person Y']` - type: `<class 'list'>`
----> baseline_answer: `PersonX feels confused about choosing PersonY.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['smile', '', '']`
----> answers: `['', 'smile']` - type: `<class 'list'>`
----> baseline_answer: `PersonY feels surprised.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `norational` since it is not visible.
 ------- evaluating input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['smile', 'person y is grateful', '']`
----> answers: `['person y is grateful', '', 'smile']` - type: `<class 'list'>`
----> baseline_answer: `PersonY feels surprised.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['greet Person X', 'person y is appreciative', '']`
----> answers: `['person y is appreciative', '', 'greet Person X']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 --> Per-instance overall score: 0.16666666666666666
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0], 'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.22222222222222224, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.16666666666666666, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33711 <-> row_number: 7
 --> inputs: ['xhaseff', 'ohaseff', 'xeff2a', 'xeff3b', 'xeff3c', 'xeff3d', 'norational', 'oeff4a', 'oeff4b', 'oeff4c', 'oeff4d']
 --> Looking up gold labels from row index 7 of `input.csv` (unique inputs). 
 --> input labels: {'xhaseff': ['yes', 'yes', 'no'], 'ohaseff': ['yes', 'yes', 'no'], 'xeff2a': ['get up', 'gets wet', '{}'], 'xeff3b': ['dry Person Y off', 'gets dirty', '{}'], 'xeff3c': ['{}', '{}', '{}'], 'xeff3d': ['{}', '{}', '{}'], 'norational': ['{}', '{}', "He's bathing"], 'oeff4a': ['dry off with a towel', 'gets clean', '{}'], 'oeff4b': ['get out of bath', 'gets dried off', '{}'], 'oeff4c': ['{}', '{}', '{}'], 'oeff4d': ['{}', '{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xhaseff
Executing one action: self.actions.modify_radio('xhaseff', 'yes')
We are going to select this radio button: <input id="radio3a" name="xhaseff" onclick="showhelper('xeff');requirelist(['input3a1', 'input3a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: ohaseff
Executing one action: self.actions.modify_radio('ohaseff', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff2a
Executing one action: self.actions.modify_text('xeff2a', 'PersonY splashes water on PersonX.')
Add text `PersonY splashes water on PersonX.` to this text input: <input autocomplete="off" id="input3a1" name="xeff2a" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3b
Executing one action: self.actions.modify_text('xeff3b', 'PersonY feels refreshed and relaxed.')
Add text `PersonY feels refreshed and relaxed.` to this text input: <input autocomplete="off" id="input3a2" name="xeff3b" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3c
Executing one action: self.actions.modify_text('xeff3c', 'PersonX feels refreshed and energized.')
Add text `PersonX feels refreshed and energized.` to this text input: <input autocomplete="off" id="input3a3" name="xeff3c" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3d
Executing one action: self.actions.modify_text('xeff3d', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `norational` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4a` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4b` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4c` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4d` since it is not visible.
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : []
 visible_values : []
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['PersonY splashes water on PersonX.']
 visible_values : ['PersonY splashes water on PersonX.']
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['PersonY feels refreshed and relaxed.']
 visible_values : ['PersonY feels refreshed and relaxed.']
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['PersonX feels refreshed and energized.']
 visible_values : ['PersonX feels refreshed and energized.']
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)
 visible : ['']
 visible_values : ['']
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
 ------- evaluating input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'yes', 'no']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'yes', 'no']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['get up', 'gets wet', '']`
----> answers: `['', 'get up', 'gets wet']` - type: `<class 'list'>`
----> baseline_answer: `PersonY splashes water on PersonX.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['dry Person Y off', 'gets dirty', '']`
----> answers: `['', 'gets dirty', 'dry Person Y off']` - type: `<class 'list'>`
----> baseline_answer: `PersonY feels refreshed and relaxed.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `norational` since it is not visible.
 ------- evaluating input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4a` since it is not visible.
 ------- evaluating input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4b` since it is not visible.
 ------- evaluating input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4c` since it is not visible.
 ------- evaluating input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4d` since it is not visible.
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0], 'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.22222222222222224, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.16666666666666666, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33762 <-> row_number: 58
 --> inputs: ['xhaseff', 'ohaseff', 'xeff2a', 'xeff3b', 'xeff3c', 'xeff3d', 'norational', 'oeff4a', 'oeff4b', 'oeff4c', 'oeff4d']
 --> Looking up gold labels from row index 58 of `input.csv` (unique inputs). 
 --> input labels: {'xhaseff': ['yes', 'yes', 'no'], 'ohaseff': ['yes', 'yes', 'no'], 'xeff2a': ['Enjoys compainionship', 'Gain membership', '{}'], 'xeff3b': ['Spends time with Person Y', 'Are trained', '{}'], 'xeff3c': ['{}', '{}', '{}'], 'xeff3d': ['{}', '{}', '{}'], 'norational': ['{}', '{}', 'They are already together.'], 'oeff4a': ['Enjoys compainionship', 'Gain an employee', '{}'], 'oeff4b': ['Spends time with Person Y', 'Team improves', '{}'], 'oeff4c': ['{}', '{}', '{}'], 'oeff4d': ['{}', '{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xhaseff
Executing one action: self.actions.modify_radio('xhaseff', 'yes')
We are going to select this radio button: <input id="radio3a" name="xhaseff" onclick="showhelper('xeff');requirelist(['input3a1', 'input3a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: ohaseff
Executing one action: self.actions.modify_radio('ohaseff', 'yes')
We are going to select this radio button: <input id="radio4a" name="ohaseff" onclick="showhelper('oeff');requirelist(['input4a1', 'input4a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff2a
Executing one action: self.actions.modify_text('xeff2a', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3b
Executing one action: self.actions.modify_text('xeff3b', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3c
Executing one action: self.actions.modify_text('xeff3c', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3d
Executing one action: self.actions.modify_text('xeff3d', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `norational` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4a
Executing one action: self.actions.modify_text('oeff4a', '[write an effect]')
Add text `[write an effect]` to this text input: <input autocomplete="off" id="input4a1" name="oeff4a" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4b
Executing one action: self.actions.modify_text('oeff4b', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4c
Executing one action: self.actions.modify_text('oeff4c', 'PersonY feels a sense of belonging.')
Add text `PersonY feels a sense of belonging.` to this text input: <input autocomplete="off" id="input4a3" name="oeff4c" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4d
Executing one action: self.actions.modify_text('oeff4d', 'nan')
Since the input value is `nan`, we are not going to modify the text.
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)
 visible : ['']
 visible_values : ['']
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['[write an effect]']
 visible_values : ['[write an effect]']
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['PersonY feels a sense of belonging.']
 visible_values : ['PersonY feels a sense of belonging.']
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
 ------- evaluating input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'yes', 'no']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'yes', 'no']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['Enjoys compainionship', 'Gain membership', '']`
----> answers: `['', 'Gain membership', 'Enjoys compainionship']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['Spends time with Person Y', 'Are trained', '']`
----> answers: `['', 'Are trained', 'Spends time with Person Y']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `norational` since it is not visible.
 ------- evaluating input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['Enjoys compainionship', 'Gain an employee', '']`
----> answers: `['', 'Gain an employee', 'Enjoys compainionship']` - type: `<class 'list'>`
----> baseline_answer: `[write an effect]` - type: `<class 'str'>`
 --> scores:  0.3333333333333333
----> per-field score: 0.3333333333333333
 ------- evaluating input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['Spends time with Person Y', 'Team improves', '']`
----> answers: `['', 'Team improves', 'Spends time with Person Y']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 --> Per-instance overall score: 0.3888888888888889
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0], 'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.22222222222222224, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.16666666666666666, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3333333333333333, 0.0]}
instance_id: 33834 <-> row_number: 130
 --> inputs: ['xhaseff', 'ohaseff', 'xeff2a', 'xeff3b', 'xeff3c', 'xeff3d', 'norational', 'oeff4a', 'oeff4b', 'oeff4c', 'oeff4d']
 --> Looking up gold labels from row index 130 of `input.csv` (unique inputs). 
 --> input labels: {'xhaseff': ['yes', 'yes', 'yes'], 'ohaseff': ['yes', 'yes', 'yes'], 'xeff2a': ['gets waved at', 'Are ignored', 'hide his hand'], 'xeff3b': ['gets greeted', 'Are greeted', 'smile at PersonY'], 'xeff3c': ['{}', '{}', '{}'], 'xeff3d': ['{}', '{}', '{}'], 'norational': ['{}', '{}', '{}'], 'oeff4a': ['gets greeted', 'Catch up with X', 'Smile PersonX back'], 'oeff4b': ['gets smiled at', 'Meet up with X', nan], 'oeff4c': ['{}', '{}', '{}'], 'oeff4d': ['{}', '{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xhaseff
Executing one action: self.actions.modify_radio('xhaseff', 'yes')
We are going to select this radio button: <input id="radio3a" name="xhaseff" onclick="showhelper('xeff');requirelist(['input3a1', 'input3a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: ohaseff
Executing one action: self.actions.modify_radio('ohaseff', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff2a
Executing one action: self.actions.modify_text('xeff2a', '')
Since the input value is ``, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3b
Executing one action: self.actions.modify_text('xeff3b', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3c
Executing one action: self.actions.modify_text('xeff3c', 'PersonX gets acknowledged by PersonY.')
Add text `PersonX gets acknowledged by PersonY.` to this text input: <input autocomplete="off" id="input3a3" name="xeff3c" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3d
Executing one action: self.actions.modify_text('xeff3d', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `norational` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4a` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4b` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4c` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4d` since it is not visible.
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : []
 visible_values : []
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['PersonX gets acknowledged by PersonY.']
 visible_values : ['PersonX gets acknowledged by PersonY.']
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)
 visible : ['']
 visible_values : ['']
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
 ------- evaluating input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'yes', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'yes', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['gets waved at', 'Are ignored', 'hide his hand']`
----> answers: `['gets waved at', 'hide his hand', 'Are ignored']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['gets greeted', 'Are greeted', 'smile at PersonY']`
----> answers: `['Are greeted', 'smile at PersonY', 'gets greeted']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `norational` since it is not visible.
 ------- evaluating input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4a` since it is not visible.
 ------- evaluating input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4b` since it is not visible.
 ------- evaluating input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4c` since it is not visible.
 ------- evaluating input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4d` since it is not visible.
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0], 'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.22222222222222224, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.16666666666666666, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3333333333333333, 0.0, 0.0, 0.0]}
instance_id: 33760 <-> row_number: 56
 --> inputs: ['xhaseff', 'ohaseff', 'xeff2a', 'xeff3b', 'xeff3c', 'xeff3d', 'norational', 'oeff4a', 'oeff4b', 'oeff4c', 'oeff4d']
 --> Looking up gold labels from row index 56 of `input.csv` (unique inputs). 
 --> input labels: {'xhaseff': ['yes', 'yes', 'yes'], 'ohaseff': ['yes', 'yes', 'yes'], 'xeff2a': ['will get tired', 'stands out in comparison', 'person x leaves person y behind'], 'xeff3b': ['will get sweaty', 'gets stimulated', 'person x takes person y down'], 'xeff3c': ['{}', 'gets admired', '{}'], 'xeff3d': ['{}', '{}', '{}'], 'norational': ['{}', '{}', '{}'], 'oeff4a': ['slows down', 'gets looked down on', 'person y hits person x'], 'oeff4b': ['pulls a muscle', 'gets tired', 'person y goes the other way from person x'], 'oeff4c': ['{}', '{}', '{}'], 'oeff4d': ['{}', '{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xhaseff
Executing one action: self.actions.modify_radio('xhaseff', 'yes')
We are going to select this radio button: <input id="radio3a" name="xhaseff" onclick="showhelper('xeff');requirelist(['input3a1', 'input3a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: ohaseff
Executing one action: self.actions.modify_radio('ohaseff', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff2a
Executing one action: self.actions.modify_text('xeff2a', 'PersonY tries to catch up.')
Add text `PersonY tries to catch up.` to this text input: <input autocomplete="off" id="input3a1" name="xeff2a" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3b
Executing one action: self.actions.modify_text('xeff3b', 'PersonY cannot catch up with PersonX.')
Add text `PersonY cannot catch up with PersonX.` to this text input: <input autocomplete="off" id="input3a2" name="xeff3b" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3c
Executing one action: self.actions.modify_text('xeff3c', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3d
Executing one action: self.actions.modify_text('xeff3d', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `norational` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4a` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4b` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4c` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `oeff4d` since it is not visible.
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : []
 visible_values : []
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['PersonY tries to catch up.']
 visible_values : ['PersonY tries to catch up.']
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['PersonY cannot catch up with PersonX.']
 visible_values : ['PersonY cannot catch up with PersonX.']
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)
 visible : ['']
 visible_values : ['']
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
 ------- evaluating input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'yes', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'yes', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['will get tired', 'stands out in comparison', 'person x leaves person y behind']`
----> answers: `['stands out in comparison', 'will get tired', 'person x leaves person y behind']` - type: `<class 'list'>`
----> baseline_answer: `PersonY tries to catch up.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['will get sweaty', 'gets stimulated', 'person x takes person y down']`
----> answers: `['person x takes person y down', 'gets stimulated', 'will get sweaty']` - type: `<class 'list'>`
----> baseline_answer: `PersonY cannot catch up with PersonX.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', 'gets admired', '']`
----> answers: `['', 'gets admired']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `norational` since it is not visible.
 ------- evaluating input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4a` since it is not visible.
 ------- evaluating input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4b` since it is not visible.
 ------- evaluating input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4c` since it is not visible.
 ------- evaluating input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `oeff4d` since it is not visible.
 --> Per-instance overall score: 0.2
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0], 'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.22222222222222224, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.16666666666666666, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3333333333333333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33805 <-> row_number: 101
 --> inputs: ['xhaseff', 'ohaseff', 'xeff2a', 'xeff3b', 'xeff3c', 'xeff3d', 'norational', 'oeff4a', 'oeff4b', 'oeff4c', 'oeff4d']
 --> Looking up gold labels from row index 101 of `input.csv` (unique inputs). 
 --> input labels: {'xhaseff': ['no', 'yes', 'no'], 'ohaseff': ['no', 'yes', 'yes'], 'xeff2a': ['{}', 'gets thanked', '{}'], 'xeff3b': ['{}', 'gets smiled at', '{}'], 'xeff3c': ['{}', '{}', '{}'], 'xeff3d': ['{}', '{}', '{}'], 'norational': ['Nothing involuntary or unemotional would happen to either person as a result of this action.', '{}', '{}'], 'oeff4a': ['{}', 'smiles', 'is locked in a room'], 'oeff4b': ['{}', 'laughs', 'is let go'], 'oeff4c': ['{}', '{}', '{}'], 'oeff4d': ['{}', '{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xhaseff
Executing one action: self.actions.modify_radio('xhaseff', 'yes')
We are going to select this radio button: <input id="radio3a" name="xhaseff" onclick="showhelper('xeff');requirelist(['input3a1', 'input3a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: ohaseff
Executing one action: self.actions.modify_radio('ohaseff', 'yes')
We are going to select this radio button: <input id="radio4a" name="ohaseff" onclick="showhelper('oeff');requirelist(['input4a1', 'input4a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff2a
Executing one action: self.actions.modify_text('xeff2a', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3b
Executing one action: self.actions.modify_text('xeff3b', 'PersonY feels confused by PersonX\'s action.')
Add text `PersonY feels confused by PersonX's action.` to this text input: <input autocomplete="off" id="input3a2" name="xeff3b" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3c
Executing one action: self.actions.modify_text('xeff3c', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3d
Executing one action: self.actions.modify_text('xeff3d', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `norational` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4a
Executing one action: self.actions.modify_text('oeff4a', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4b
Executing one action: self.actions.modify_text('oeff4b', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4c
Executing one action: self.actions.modify_text('oeff4c', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4d
Executing one action: self.actions.modify_text('oeff4d', 'nan')
Since the input value is `nan`, we are not going to modify the text.
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ["PersonY feels confused by PersonX's action."]
 visible_values : ["PersonY feels confused by PersonX's action."]
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)
 visible : ['']
 visible_values : ['']
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
 ------- evaluating input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['no', 'yes', 'no']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['no', 'yes', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', 'gets thanked', '']`
----> answers: `['', 'gets thanked']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', 'gets smiled at', '']`
----> answers: `['', 'gets smiled at']` - type: `<class 'list'>`
----> baseline_answer: `PersonY feels confused by PersonX's action.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `norational` since it is not visible.
 ------- evaluating input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', 'smiles', 'is locked in a room']`
----> answers: `['', 'smiles', 'is locked in a room']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', 'laughs', 'is let go']`
----> answers: `['', 'is let go', 'laughs']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 --> Per-instance overall score: 0.16666666666666666
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0], 'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.22222222222222224, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.16666666666666666, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3333333333333333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33825 <-> row_number: 121
 --> inputs: ['xhaseff', 'ohaseff', 'xeff2a', 'xeff3b', 'xeff3c', 'xeff3d', 'norational', 'oeff4a', 'oeff4b', 'oeff4c', 'oeff4d']
 --> Looking up gold labels from row index 121 of `input.csv` (unique inputs). 
 --> input labels: {'xhaseff': ['yes', 'no', 'yes'], 'ohaseff': ['yes', 'yes', 'yes'], 'xeff2a': ['Y does well', '{}', 'smiles'], 'xeff3b': ['Y does not do well', '{}', 'laughs'], 'xeff3c': ['{}', '{}', '{}'], 'xeff3d': ['{}', '{}', '{}'], 'norational': ['{}', '{}', '{}'], 'oeff4a': ['Y passes the test', 'Person Y passes the test', 'smiles'], 'oeff4b': ['Y does not pass the test', 'Person Y fails the test', 'laughs'], 'oeff4c': ['{}', '{}', '{}'], 'oeff4d': ['{}', '{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xhaseff
Executing one action: self.actions.modify_radio('xhaseff', 'yes')
We are going to select this radio button: <input id="radio3a" name="xhaseff" onclick="showhelper('xeff');requirelist(['input3a1', 'input3a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: ohaseff
Executing one action: self.actions.modify_radio('ohaseff', 'yes')
We are going to select this radio button: <input id="radio4a" name="ohaseff" onclick="showhelper('oeff');requirelist(['input4a1', 'input4a2']);allNoHide()" required="" type="radio" value="yes">
 - - - - - -  starting a new element: `Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff2a
Executing one action: self.actions.modify_text('xeff2a', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3b
Executing one action: self.actions.modify_text('xeff3b', 'PersonY feels confused about the test.')
Add text `PersonY feels confused about the test.` to this text input: <input autocomplete="off" id="input3a2" name="xeff3b" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3c
Executing one action: self.actions.modify_text('xeff3c', 'PersonY becomes cautious around PersonX.')
Add text `PersonY becomes cautious around PersonX.` to this text input: <input autocomplete="off" id="input3a3" name="xeff3c" style="padding-left:10px;margin-left:10px;background-color:#f0f0f0;width:250px" type="text" width="500px">
 - - - - - -  starting a new element: `Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: xeff3d
Executing one action: self.actions.modify_text('xeff3d', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)` - - - - - -  
Skipping element `norational` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4a
Executing one action: self.actions.modify_text('oeff4a', 'PersonY feels perplexed by PersonX\'s behavior.')
Add text `PersonY feels perplexed by PersonX's behavior.` to this text input: <input autocomplete="off" id="input4a1" name="oeff4a" style="padding-left:10px;margin-left:10px;width:250px" type="text" width="500px" required="">
 - - - - - -  starting a new element: `Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4b
Executing one action: self.actions.modify_text('oeff4b', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4c
Executing one action: self.actions.modify_text('oeff4c', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)` - - - - - -  
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
about to try executing one action, on the following input: oeff4d
Executing one action: self.actions.modify_text('oeff4d', 'nan')
Since the input value is `nan`, we are not going to modify the text.
input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`)
 visible : ['yes']
 visible_values : ['yes']
input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['PersonY feels confused about the test.']
 visible_values : ['PersonY feels confused about the test.']
input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ['PersonY becomes cautious around PersonX.']
 visible_values : ['PersonY becomes cautious around PersonX.']
input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`)
 visible : ['']
 visible_values : ['']
input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : ["PersonY feels perplexed by PersonX's behavior."]
 visible_values : ["PersonY feels perplexed by PersonX's behavior."]
input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`)
 visible : [None]
 visible_values : [None]
 ------- evaluating input: Input(name=`xhaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'no', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ohaseff`, type=`radio`, task=`atomic_event2event-effects 4`) ------- 
----> answers: `['yes', 'yes', 'yes']` - type: `<class 'list'>`
----> baseline_answer: `yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`xeff2a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['Y does well', '', 'smiles']`
----> answers: `['', 'smiles', 'Y does well']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['Y does not do well', '', 'laughs']`
----> answers: `['', 'laughs', 'Y does not do well']` - type: `<class 'list'>`
----> baseline_answer: `PersonY feels confused about the test.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`xeff3c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`xeff3d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`norational`, type=`textarea`, task=`atomic_event2event-effects 4`) ------- 
Skipping element `norational` since it is not visible.
 ------- evaluating input: Input(name=`oeff4a`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['Y passes the test', 'Person Y passes the test', 'smiles']`
----> answers: `['smiles', 'Y passes the test', 'Person Y passes the test']` - type: `<class 'list'>`
----> baseline_answer: `PersonY feels perplexed by PersonX's behavior.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4b`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['Y does not pass the test', 'Person Y fails the test', 'laughs']`
----> answers: `['Y does not pass the test', 'laughs', 'Person Y fails the test']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`oeff4c`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 ------- evaluating input: Input(name=`oeff4d`, type=`text`, task=`atomic_event2event-effects 4`) ------- 
answers after mapping: `['', '', '']`
 --> Per-instance overall score: 0.3333333333333333
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0], 'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.22222222222222224, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.16666666666666666, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3333333333333333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
 = = = = = = = = = = = = starting new task: `ANLI Generation Eval - Reflective_ACL_1` = = = = = = = = = = = = 
First instance id: 28310
instance_id: 28458 <-> row_number: 148
 --> inputs: ['o1_h_coherence', 'h_o2_coherence', 'o1_h_o2_coherence', 'overall_coherence']
 --> Looking up gold labels from row index 148 of `input.csv` (unique inputs). 
 --> input labels: {'o1_h_coherence': [2, 1, -1], 'h_o2_coherence': [1, -1, -1], 'o1_h_o2_coherence': [1, -1, -1], 'overall_coherence': [1, -1, -2]}
 - - - - - -  starting a new element: `Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_coherence
Executing one action: self.actions.modify_radio('o1_h_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_coherence" id="o1_h_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: h_o2_coherence
Executing one action: self.actions.modify_radio('h_o2_coherence', '2')
We are going to select this radio button: <input type="radio" name="h_o2_coherence" id="h_o2_coherence_4" autocomplete="off" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_o2_coherence
Executing one action: self.actions.modify_radio('o1_h_o2_coherence', '2')
We are going to select this radio button: <input type="radio" name="o1_h_o2_coherence" id="o1_h_o2_coherence_4" autocomplete="off" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: overall_coherence
Executing one action: self.actions.modify_radio('overall_coherence', '2')
We are going to select this radio button: <input type="radio" name="overall_coherence" id="overall_coherence_4" autocomplete="off" value="2" required="">
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, 1, -1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[1, -1, -1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[1, -1, -1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[1, -1, -2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0]}
instance_id: 28447 <-> row_number: 137
 --> inputs: ['o1_h_coherence', 'h_o2_coherence', 'o1_h_o2_coherence', 'overall_coherence']
 --> Looking up gold labels from row index 137 of `input.csv` (unique inputs). 
 --> input labels: {'o1_h_coherence': [2, 2, 1], 'h_o2_coherence': [-2, -2, -2], 'o1_h_o2_coherence': [-2, -2, -2], 'overall_coherence': [-2, -2, -2]}
 - - - - - -  starting a new element: `Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_coherence
Executing one action: self.actions.modify_radio('o1_h_coherence', '2')
We are going to select this radio button: <input type="radio" name="o1_h_coherence" id="o1_h_coherence_4" autocomplete="off" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: h_o2_coherence
Executing one action: self.actions.modify_radio('h_o2_coherence', '-2')
We are going to select this radio button: <input type="radio" name="h_o2_coherence" id="h_o2_coherence_1" autocomplete="off" value="-2" required="">
 - - - - - -  starting a new element: `Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_o2_coherence
Executing one action: self.actions.modify_radio('o1_h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_o2_coherence" id="o1_h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: overall_coherence
Executing one action: self.actions.modify_radio('overall_coherence', '2')
We are going to select this radio button: <input type="radio" name="overall_coherence" id="overall_coherence_4" autocomplete="off" value="2" required="">
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-2, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-2, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-2, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.75
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0]}
instance_id: 28311 <-> row_number: 1
 --> inputs: ['o1_h_coherence', 'h_o2_coherence', 'o1_h_o2_coherence', 'overall_coherence']
 --> Looking up gold labels from row index 1 of `input.csv` (unique inputs). 
 --> input labels: {'o1_h_coherence': [-1, -2, -2], 'h_o2_coherence': [-1, -2, -2], 'o1_h_o2_coherence': [-2, -2, -2], 'overall_coherence': [-2, -2, -2]}
 - - - - - -  starting a new element: `Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_coherence
Executing one action: self.actions.modify_radio('o1_h_coherence', '-2')
We are going to select this radio button: <input type="radio" name="o1_h_coherence" id="o1_h_coherence_1" autocomplete="off" value="-2" required="">
 - - - - - -  starting a new element: `Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: h_o2_coherence
Executing one action: self.actions.modify_radio('h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="h_o2_coherence" id="h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_o2_coherence
Executing one action: self.actions.modify_radio('o1_h_o2_coherence', '2')
We are going to select this radio button: <input type="radio" name="o1_h_o2_coherence" id="o1_h_o2_coherence_4" autocomplete="off" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: overall_coherence
Executing one action: self.actions.modify_radio('overall_coherence', '2')
We are going to select this radio button: <input type="radio" name="overall_coherence" id="overall_coherence_4" autocomplete="off" value="2" required="">
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-1, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-1, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-2, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-2, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.75
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0]}
instance_id: 28425 <-> row_number: 115
 --> inputs: ['o1_h_coherence', 'h_o2_coherence', 'o1_h_o2_coherence', 'overall_coherence']
 --> Looking up gold labels from row index 115 of `input.csv` (unique inputs). 
 --> input labels: {'o1_h_coherence': [1, 1, -2], 'h_o2_coherence': [-1, 1, 1], 'o1_h_o2_coherence': [-1, 1, -2], 'overall_coherence': [-1, 1, -2]}
 - - - - - -  starting a new element: `Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_coherence
Executing one action: self.actions.modify_radio('o1_h_coherence', '2')
We are going to select this radio button: <input type="radio" name="o1_h_coherence" id="o1_h_coherence_4" autocomplete="off" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: h_o2_coherence
Executing one action: self.actions.modify_radio('h_o2_coherence', '2')
We are going to select this radio button: <input type="radio" name="h_o2_coherence" id="h_o2_coherence_4" autocomplete="off" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_o2_coherence
Executing one action: self.actions.modify_radio('o1_h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_o2_coherence" id="o1_h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: overall_coherence
Executing one action: self.actions.modify_radio('overall_coherence', '2')
We are going to select this radio button: <input type="radio" name="overall_coherence" id="overall_coherence_4" autocomplete="off" value="2" required="">
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[1, 1, -2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-1, 1, -2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-1, 1, -2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0]}
instance_id: 28351 <-> row_number: 41
 --> inputs: ['o1_h_coherence', 'h_o2_coherence', 'o1_h_o2_coherence', 'overall_coherence']
 --> Looking up gold labels from row index 41 of `input.csv` (unique inputs). 
 --> input labels: {'o1_h_coherence': [2, 2, 2], 'h_o2_coherence': [2, 2, 2], 'o1_h_o2_coherence': [2, 2, 2], 'overall_coherence': [2, 2, 2]}
 - - - - - -  starting a new element: `Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_coherence
Executing one action: self.actions.modify_radio('o1_h_coherence', '2')
We are going to select this radio button: <input type="radio" name="o1_h_coherence" id="o1_h_coherence_4" autocomplete="off" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: h_o2_coherence
Executing one action: self.actions.modify_radio('h_o2_coherence', '2')
We are going to select this radio button: <input type="radio" name="h_o2_coherence" id="h_o2_coherence_4" autocomplete="off" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_o2_coherence
Executing one action: self.actions.modify_radio('o1_h_o2_coherence', '2')
We are going to select this radio button: <input type="radio" name="o1_h_o2_coherence" id="o1_h_o2_coherence_4" autocomplete="off" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: overall_coherence
Executing one action: self.actions.modify_radio('overall_coherence', '2')
We are going to select this radio button: <input type="radio" name="overall_coherence" id="overall_coherence_4" autocomplete="off" value="2" required="">
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 1.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0]}
instance_id: 28329 <-> row_number: 19
 --> inputs: ['o1_h_coherence', 'h_o2_coherence', 'o1_h_o2_coherence', 'overall_coherence']
 --> Looking up gold labels from row index 19 of `input.csv` (unique inputs). 
 --> input labels: {'o1_h_coherence': [-2, -2, -2], 'h_o2_coherence': [-2, -2, -2], 'o1_h_o2_coherence': [-2, -2, -2], 'overall_coherence': [-2, -2, -2]}
 - - - - - -  starting a new element: `Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_coherence
Executing one action: self.actions.modify_radio('o1_h_coherence', '-2')
We are going to select this radio button: <input type="radio" name="o1_h_coherence" id="o1_h_coherence_1" autocomplete="off" value="-2" required="">
 - - - - - -  starting a new element: `Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: h_o2_coherence
Executing one action: self.actions.modify_radio('h_o2_coherence', '-2')
We are going to select this radio button: <input type="radio" name="h_o2_coherence" id="h_o2_coherence_1" autocomplete="off" value="-2" required="">
 - - - - - -  starting a new element: `Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_o2_coherence
Executing one action: self.actions.modify_radio('o1_h_o2_coherence', '2')
We are going to select this radio button: <input type="radio" name="o1_h_o2_coherence" id="o1_h_o2_coherence_4" autocomplete="off" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: overall_coherence
Executing one action: self.actions.modify_radio('overall_coherence', '2')
We are going to select this radio button: <input type="radio" name="overall_coherence" id="overall_coherence_4" autocomplete="off" value="2" required="">
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-2, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-2, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-2, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-2, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 1.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]}
instance_id: 28448 <-> row_number: 138
 --> inputs: ['o1_h_coherence', 'h_o2_coherence', 'o1_h_o2_coherence', 'overall_coherence']
 --> Looking up gold labels from row index 138 of `input.csv` (unique inputs). 
 --> input labels: {'o1_h_coherence': [-1, -2, 1], 'h_o2_coherence': [-2, -2, -2], 'o1_h_o2_coherence': [-2, -2, -2], 'overall_coherence': [-2, -2, -2]}
 - - - - - -  starting a new element: `Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_coherence
Executing one action: self.actions.modify_radio('o1_h_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_coherence" id="o1_h_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: h_o2_coherence
Executing one action: self.actions.modify_radio('h_o2_coherence', '-1')
We are going to select this radio button: <input type="radio" name="h_o2_coherence" id="h_o2_coherence_2" autocomplete="off" value="-1" required="">
 - - - - - -  starting a new element: `Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_o2_coherence
Executing one action: self.actions.modify_radio('o1_h_o2_coherence', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: overall_coherence
Executing one action: self.actions.modify_radio('overall_coherence', '2')
We are going to select this radio button: <input type="radio" name="overall_coherence" id="overall_coherence_4" autocomplete="off" value="2" required="">
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['-1']
 visible_values : ['-1']
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : []
 visible_values : []
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-1, -2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-2, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `-1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-2, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-2, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0]}
instance_id: 28343 <-> row_number: 33
 --> inputs: ['o1_h_coherence', 'h_o2_coherence', 'o1_h_o2_coherence', 'overall_coherence']
 --> Looking up gold labels from row index 33 of `input.csv` (unique inputs). 
 --> input labels: {'o1_h_coherence': [2, -2, -2], 'h_o2_coherence': [2, -2, -2], 'o1_h_o2_coherence': [2, -2, -2], 'overall_coherence': [2, -2, -2]}
 - - - - - -  starting a new element: `Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_coherence
Executing one action: self.actions.modify_radio('o1_h_coherence', '-2')
We are going to select this radio button: <input type="radio" name="o1_h_coherence" id="o1_h_coherence_1" autocomplete="off" value="-2" required="">
 - - - - - -  starting a new element: `Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: h_o2_coherence
Executing one action: self.actions.modify_radio('h_o2_coherence', '-2')
We are going to select this radio button: <input type="radio" name="h_o2_coherence" id="h_o2_coherence_1" autocomplete="off" value="-2" required="">
 - - - - - -  starting a new element: `Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_o2_coherence
Executing one action: self.actions.modify_radio('o1_h_o2_coherence', '-2')
We are going to select this radio button: <input type="radio" name="o1_h_o2_coherence" id="o1_h_o2_coherence_1" autocomplete="off" value="-2" required="">
 - - - - - -  starting a new element: `Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: overall_coherence
Executing one action: self.actions.modify_radio('overall_coherence', '2')
We are going to select this radio button: <input type="radio" name="overall_coherence" id="overall_coherence_4" autocomplete="off" value="2" required="">
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 1.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0]}
instance_id: 28401 <-> row_number: 91
 --> inputs: ['o1_h_coherence', 'h_o2_coherence', 'o1_h_o2_coherence', 'overall_coherence']
 --> Looking up gold labels from row index 91 of `input.csv` (unique inputs). 
 --> input labels: {'o1_h_coherence': [2, 2, 2], 'h_o2_coherence': [-2, -1, 1], 'o1_h_o2_coherence': [-2, -1, 1], 'overall_coherence': [-2, -1, 1]}
 - - - - - -  starting a new element: `Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_coherence
Executing one action: self.actions.modify_radio('o1_h_coherence', '-2')
We are going to select this radio button: <input type="radio" name="o1_h_coherence" id="o1_h_coherence_1" autocomplete="off" value="-2" required="">
 - - - - - -  starting a new element: `Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: h_o2_coherence
Executing one action: self.actions.modify_radio('h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="h_o2_coherence" id="h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_o2_coherence
Executing one action: self.actions.modify_radio('o1_h_o2_coherence', '-2')
We are going to select this radio button: <input type="radio" name="o1_h_o2_coherence" id="o1_h_o2_coherence_1" autocomplete="off" value="-2" required="">
 - - - - - -  starting a new element: `Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: overall_coherence
Executing one action: self.actions.modify_radio('overall_coherence', '2')
We are going to select this radio button: <input type="radio" name="overall_coherence" id="overall_coherence_4" autocomplete="off" value="2" required="">
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-2, -1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-2, -1, 1]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-2, -1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.75
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0]}
instance_id: 28415 <-> row_number: 105
 --> inputs: ['o1_h_coherence', 'h_o2_coherence', 'o1_h_o2_coherence', 'overall_coherence']
 --> Looking up gold labels from row index 105 of `input.csv` (unique inputs). 
 --> input labels: {'o1_h_coherence': [2, 1, 2], 'h_o2_coherence': [2, 1, 2], 'o1_h_o2_coherence': [2, 1, 2], 'overall_coherence': [2, 1, 2]}
 - - - - - -  starting a new element: `Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_coherence
Executing one action: self.actions.modify_radio('o1_h_coherence', '2')
We are going to select this radio button: <input type="radio" name="o1_h_coherence" id="o1_h_coherence_4" autocomplete="off" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: h_o2_coherence
Executing one action: self.actions.modify_radio('h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="h_o2_coherence" id="h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_o2_coherence
Executing one action: self.actions.modify_radio('o1_h_o2_coherence', '2')
We are going to select this radio button: <input type="radio" name="o1_h_o2_coherence" id="o1_h_o2_coherence_4" autocomplete="off" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: overall_coherence
Executing one action: self.actions.modify_radio('overall_coherence', '-2')
We are going to select this radio button: <input type="radio" name="overall_coherence" id="overall_coherence_1" autocomplete="off" value="-2" required="">
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['-2']
 visible_values : ['-2']
 ------- evaluating input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.75
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0]}
instance_id: 28342 <-> row_number: 32
 --> inputs: ['o1_h_coherence', 'h_o2_coherence', 'o1_h_o2_coherence', 'overall_coherence']
 --> Looking up gold labels from row index 32 of `input.csv` (unique inputs). 
 --> input labels: {'o1_h_coherence': [1, -2, -1], 'h_o2_coherence': [1, -2, -2], 'o1_h_o2_coherence': [1, -2, -2], 'overall_coherence': [1, -2, -2]}
 - - - - - -  starting a new element: `Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_coherence
Executing one action: self.actions.modify_radio('o1_h_coherence', '2')
We are going to select this radio button: <input type="radio" name="o1_h_coherence" id="o1_h_coherence_4" autocomplete="off" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: h_o2_coherence
Executing one action: self.actions.modify_radio('h_o2_coherence', '2')
We are going to select this radio button: <input type="radio" name="h_o2_coherence" id="h_o2_coherence_4" autocomplete="off" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_o2_coherence
Executing one action: self.actions.modify_radio('o1_h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_o2_coherence" id="o1_h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: overall_coherence
Executing one action: self.actions.modify_radio('overall_coherence', '2')
We are going to select this radio button: <input type="radio" name="overall_coherence" id="overall_coherence_4" autocomplete="off" value="2" required="">
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[1, -2, -1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[1, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[1, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[1, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0]}
instance_id: 28440 <-> row_number: 130
 --> inputs: ['o1_h_coherence', 'h_o2_coherence', 'o1_h_o2_coherence', 'overall_coherence']
 --> Looking up gold labels from row index 130 of `input.csv` (unique inputs). 
 --> input labels: {'o1_h_coherence': [1, 1, 1], 'h_o2_coherence': [1, 1, 1], 'o1_h_o2_coherence': [1, 1, 1], 'overall_coherence': [1, 1, 1]}
 - - - - - -  starting a new element: `Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_coherence
Executing one action: self.actions.modify_radio('o1_h_coherence', '2')
We are going to select this radio button: <input type="radio" name="o1_h_coherence" id="o1_h_coherence_4" autocomplete="off" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: h_o2_coherence
Executing one action: self.actions.modify_radio('h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="h_o2_coherence" id="h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_o2_coherence
Executing one action: self.actions.modify_radio('o1_h_o2_coherence', '-2')
We are going to select this radio button: <input type="radio" name="o1_h_o2_coherence" id="o1_h_o2_coherence_1" autocomplete="off" value="-2" required="">
 - - - - - -  starting a new element: `Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: overall_coherence
Executing one action: self.actions.modify_radio('overall_coherence', '2')
We are going to select this radio button: <input type="radio" name="overall_coherence" id="overall_coherence_4" autocomplete="off" value="2" required="">
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 28436 <-> row_number: 126
 --> inputs: ['o1_h_coherence', 'h_o2_coherence', 'o1_h_o2_coherence', 'overall_coherence']
 --> Looking up gold labels from row index 126 of `input.csv` (unique inputs). 
 --> input labels: {'o1_h_coherence': [2, 2, 2], 'h_o2_coherence': [-1, 1, -2], 'o1_h_o2_coherence': [1, 1, -2], 'overall_coherence': [1, 1, -2]}
 - - - - - -  starting a new element: `Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_coherence
Executing one action: self.actions.modify_radio('o1_h_coherence', '2')
We are going to select this radio button: <input type="radio" name="o1_h_coherence" id="o1_h_coherence_4" autocomplete="off" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: h_o2_coherence
Executing one action: self.actions.modify_radio('h_o2_coherence', '2')
We are going to select this radio button: <input type="radio" name="h_o2_coherence" id="h_o2_coherence_4" autocomplete="off" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_o2_coherence
Executing one action: self.actions.modify_radio('o1_h_o2_coherence', '2')
We are going to select this radio button: <input type="radio" name="o1_h_o2_coherence" id="o1_h_o2_coherence_4" autocomplete="off" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: overall_coherence
Executing one action: self.actions.modify_radio('overall_coherence', '2')
We are going to select this radio button: <input type="radio" name="overall_coherence" id="overall_coherence_4" autocomplete="off" value="2" required="">
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-1, 1, -2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[1, 1, -2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[1, 1, -2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 28452 <-> row_number: 142
 --> inputs: ['o1_h_coherence', 'h_o2_coherence', 'o1_h_o2_coherence', 'overall_coherence']
 --> Looking up gold labels from row index 142 of `input.csv` (unique inputs). 
 --> input labels: {'o1_h_coherence': [2, -1, 1], 'h_o2_coherence': [-2, -2, -2], 'o1_h_o2_coherence': [-2, -2, -2], 'overall_coherence': [-2, -2, -2]}
 - - - - - -  starting a new element: `Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_coherence
Executing one action: self.actions.modify_radio('o1_h_coherence', '-2')
We are going to select this radio button: <input type="radio" name="o1_h_coherence" id="o1_h_coherence_1" autocomplete="off" value="-2" required="">
 - - - - - -  starting a new element: `Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: h_o2_coherence
Executing one action: self.actions.modify_radio('h_o2_coherence', '-2')
We are going to select this radio button: <input type="radio" name="h_o2_coherence" id="h_o2_coherence_1" autocomplete="off" value="-2" required="">
 - - - - - -  starting a new element: `Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_o2_coherence
Executing one action: self.actions.modify_radio('o1_h_o2_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_o2_coherence" id="o1_h_o2_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: overall_coherence
Executing one action: self.actions.modify_radio('overall_coherence', '2')
We are going to select this radio button: <input type="radio" name="overall_coherence" id="overall_coherence_4" autocomplete="off" value="2" required="">
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, -1, 1]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-2, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-2, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-2, -2, -2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.75
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0]}
instance_id: 28416 <-> row_number: 106
 --> inputs: ['o1_h_coherence', 'h_o2_coherence', 'o1_h_o2_coherence', 'overall_coherence']
 --> Looking up gold labels from row index 106 of `input.csv` (unique inputs). 
 --> input labels: {'o1_h_coherence': [2, 2, 1], 'h_o2_coherence': [2, 2, 1], 'o1_h_o2_coherence': [2, 2, 1], 'overall_coherence': [2, 2, 2]}
 - - - - - -  starting a new element: `Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_coherence
Executing one action: self.actions.modify_radio('o1_h_coherence', '2')
We are going to select this radio button: <input type="radio" name="o1_h_coherence" id="o1_h_coherence_4" autocomplete="off" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: h_o2_coherence
Executing one action: self.actions.modify_radio('h_o2_coherence', '-2')
We are going to select this radio button: <input type="radio" name="h_o2_coherence" id="h_o2_coherence_1" autocomplete="off" value="-2" required="">
 - - - - - -  starting a new element: `Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_o2_coherence
Executing one action: self.actions.modify_radio('o1_h_o2_coherence', '2')
We are going to select this radio button: <input type="radio" name="o1_h_o2_coherence" id="o1_h_o2_coherence_4" autocomplete="off" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: overall_coherence
Executing one action: self.actions.modify_radio('overall_coherence', '2')
We are going to select this radio button: <input type="radio" name="overall_coherence" id="overall_coherence_4" autocomplete="off" value="2" required="">
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 1.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0]}
instance_id: 28461 <-> row_number: 151
 --> inputs: ['o1_h_coherence', 'h_o2_coherence', 'o1_h_o2_coherence', 'overall_coherence']
 --> Looking up gold labels from row index 151 of `input.csv` (unique inputs). 
 --> input labels: {'o1_h_coherence': [1, 1, -1], 'h_o2_coherence': [1, 1, 1], 'o1_h_o2_coherence': [1, 1, -1], 'overall_coherence': [1, 1, -2]}
 - - - - - -  starting a new element: `Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_coherence
Executing one action: self.actions.modify_radio('o1_h_coherence', '1')
We are going to select this radio button: <input type="radio" name="o1_h_coherence" id="o1_h_coherence_3" autocomplete="off" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: h_o2_coherence
Executing one action: self.actions.modify_radio('h_o2_coherence', '-2')
We are going to select this radio button: <input type="radio" name="h_o2_coherence" id="h_o2_coherence_1" autocomplete="off" value="-2" required="">
 - - - - - -  starting a new element: `Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_o2_coherence
Executing one action: self.actions.modify_radio('o1_h_o2_coherence', '2')
We are going to select this radio button: <input type="radio" name="o1_h_o2_coherence" id="o1_h_o2_coherence_4" autocomplete="off" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: overall_coherence
Executing one action: self.actions.modify_radio('overall_coherence', '2')
We are going to select this radio button: <input type="radio" name="overall_coherence" id="overall_coherence_4" autocomplete="off" value="2" required="">
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[1, 1, -1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[1, 1, -1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[1, 1, -2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 28414 <-> row_number: 104
 --> inputs: ['o1_h_coherence', 'h_o2_coherence', 'o1_h_o2_coherence', 'overall_coherence']
 --> Looking up gold labels from row index 104 of `input.csv` (unique inputs). 
 --> input labels: {'o1_h_coherence': [-1, -1, -1], 'h_o2_coherence': [-1, -1, -1], 'o1_h_o2_coherence': [-1, -1, -1], 'overall_coherence': [-1, -1, -2]}
 - - - - - -  starting a new element: `Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_coherence
Executing one action: self.actions.modify_radio('o1_h_coherence', '-2')
We are going to select this radio button: <input type="radio" name="o1_h_coherence" id="o1_h_coherence_1" autocomplete="off" value="-2" required="">
 - - - - - -  starting a new element: `Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: h_o2_coherence
Executing one action: self.actions.modify_radio('h_o2_coherence', '2')
We are going to select this radio button: <input type="radio" name="h_o2_coherence" id="h_o2_coherence_4" autocomplete="off" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_o2_coherence
Executing one action: self.actions.modify_radio('o1_h_o2_coherence', '2')
We are going to select this radio button: <input type="radio" name="o1_h_o2_coherence" id="o1_h_o2_coherence_4" autocomplete="off" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: overall_coherence
Executing one action: self.actions.modify_radio('overall_coherence', '2')
We are going to select this radio button: <input type="radio" name="overall_coherence" id="overall_coherence_4" autocomplete="off" value="2" required="">
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-1, -1, -1]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-1, -1, -1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-1, -1, -1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-1, -1, -2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 28437 <-> row_number: 127
 --> inputs: ['o1_h_coherence', 'h_o2_coherence', 'o1_h_o2_coherence', 'overall_coherence']
 --> Looking up gold labels from row index 127 of `input.csv` (unique inputs). 
 --> input labels: {'o1_h_coherence': [2, 2, 2], 'h_o2_coherence': [2, 2, 2], 'o1_h_o2_coherence': [2, 2, 2], 'overall_coherence': [2, 2, 2]}
 - - - - - -  starting a new element: `Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_coherence
Executing one action: self.actions.modify_radio('o1_h_coherence', '2')
We are going to select this radio button: <input type="radio" name="o1_h_coherence" id="o1_h_coherence_4" autocomplete="off" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: h_o2_coherence
Executing one action: self.actions.modify_radio('h_o2_coherence', '2')
We are going to select this radio button: <input type="radio" name="h_o2_coherence" id="h_o2_coherence_4" autocomplete="off" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_o2_coherence
Executing one action: self.actions.modify_radio('o1_h_o2_coherence', '2')
We are going to select this radio button: <input type="radio" name="o1_h_o2_coherence" id="o1_h_o2_coherence_4" autocomplete="off" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: overall_coherence
Executing one action: self.actions.modify_radio('overall_coherence', '2')
We are going to select this radio button: <input type="radio" name="overall_coherence" id="overall_coherence_4" autocomplete="off" value="2" required="">
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 1.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0]}
instance_id: 28462 <-> row_number: 152
 --> inputs: ['o1_h_coherence', 'h_o2_coherence', 'o1_h_o2_coherence', 'overall_coherence']
 --> Looking up gold labels from row index 152 of `input.csv` (unique inputs). 
 --> input labels: {'o1_h_coherence': [-1, 2, -1], 'h_o2_coherence': [1, -2, -1], 'o1_h_o2_coherence': [-1, -2, -1], 'overall_coherence': [-1, -2, -1]}
 - - - - - -  starting a new element: `Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_coherence
Executing one action: self.actions.modify_radio('o1_h_coherence', '-2')
We are going to select this radio button: <input type="radio" name="o1_h_coherence" id="o1_h_coherence_1" autocomplete="off" value="-2" required="">
 - - - - - -  starting a new element: `Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: h_o2_coherence
Executing one action: self.actions.modify_radio('h_o2_coherence', '-2')
We are going to select this radio button: <input type="radio" name="h_o2_coherence" id="h_o2_coherence_1" autocomplete="off" value="-2" required="">
 - - - - - -  starting a new element: `Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_o2_coherence
Executing one action: self.actions.modify_radio('o1_h_o2_coherence', '2')
We are going to select this radio button: <input type="radio" name="o1_h_o2_coherence" id="o1_h_o2_coherence_4" autocomplete="off" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: overall_coherence
Executing one action: self.actions.modify_radio('overall_coherence', '1')
We are going to select this radio button: <input type="radio" name="overall_coherence" id="overall_coherence_3" autocomplete="off" value="1" required="">
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-1, 2, -1]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[1, -2, -1]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-1, -2, -1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-1, -2, -1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0]}
instance_id: 28421 <-> row_number: 111
 --> inputs: ['o1_h_coherence', 'h_o2_coherence', 'o1_h_o2_coherence', 'overall_coherence']
 --> Looking up gold labels from row index 111 of `input.csv` (unique inputs). 
 --> input labels: {'o1_h_coherence': [1, -1, 1], 'h_o2_coherence': [-1, -2, -1], 'o1_h_o2_coherence': [-1, -2, -1], 'overall_coherence': [-1, -2, -1]}
 - - - - - -  starting a new element: `Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_coherence
Executing one action: self.actions.modify_radio('o1_h_coherence', '2')
We are going to select this radio button: <input type="radio" name="o1_h_coherence" id="o1_h_coherence_4" autocomplete="off" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: h_o2_coherence
Executing one action: self.actions.modify_radio('h_o2_coherence', '-1')
We are going to select this radio button: <input type="radio" name="h_o2_coherence" id="h_o2_coherence_2" autocomplete="off" value="-1" required="">
 - - - - - -  starting a new element: `Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: o1_h_o2_coherence
Executing one action: self.actions.modify_radio('o1_h_o2_coherence', '2')
We are going to select this radio button: <input type="radio" name="o1_h_o2_coherence" id="o1_h_o2_coherence_4" autocomplete="off" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)` - - - - - -  
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
about to try executing one action, on the following input: overall_coherence
Executing one action: self.actions.modify_radio('overall_coherence', '2')
We are going to select this radio button: <input type="radio" name="overall_coherence" id="overall_coherence_4" autocomplete="off" value="2" required="">
input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['-1']
 visible_values : ['-1']
input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`o1_h_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[1, -1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-1, -2, -1]` - type: `<class 'list'>`
----> baseline_answer: `-1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`o1_h_o2_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-1, -2, -1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`overall_coherence`, type=`radio`, task=`ANLI Generation Eval - Reflective_ACL_1`) ------- 
----> answers: `[-1, -2, -1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0]}
 = = = = = = = = = = = = starting new task: `ATOMIC - Object Rationale 13` = = = = = = = = = = = = 
First instance id: 15403
instance_id: 15560 <-> row_number: 157
Could not find input field with name `Step`
 --> inputs: ['rationale1', 'rationale2', 'rationale3']
 --> Looking up gold labels from row index 157 of `input.csv` (unique inputs). 
 --> input labels: {'rationale1': ['A drill is a tool used to drill screws into a wall. You need a drill to put screws into your house.'], 'rationale2': ['A sleeping bag is a warm, plush, zippered bag used for sleeping. You need a sleeping bag to sleep in the woods on your camping trip.'], 'rationale3': ["A bottle is a container used to hold liquids. You need a bottle to hold the bleach that you will be using to bleach your friend's hair."]}
 - - - - - -  starting a new element: `Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale1
Executing one action: self.actions.modify_text('rationale1', 'Drills provide the torque and rotation necessary for driving screws into surfaces, making them perfectly suited for assembling a house.')
Add text `Drills provide the torque and rotation necessary for driving screws into surfaces, making them perfectly suited for assembling a house.` to this text input: <textarea rows="1" class="required inline-input" name="rationale1" placeholder="Why? ..." required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale2
Executing one action: self.actions.modify_text('rationale2', 'A sleeping bag provides insulation and cushioning, which helps keep a person warm and comfortable when sleeping on the ground.')
Add text `A sleeping bag provides insulation and cushioning, which helps keep a person warm and comfortable when sleeping on the ground.` to this text input: <textarea rows="1" class="required inline-input" name="rationale2" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale3
Executing one action: self.actions.modify_text('rationale3', 'A bottle is designed to hold liquids without leaking, making it ideal for storing and applying hair bleach.')
Add text `A bottle is designed to hold liquids without leaking, making it ideal for storing and applying hair bleach.` to this text input: <textarea rows="1" class="required inline-input" name="rationale3" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Drills provide the torque and rotation necessary for driving screws into surfaces, making them perfectly suited for assembling a house.']
 visible_values : ['Drills provide the torque and rotation necessary for driving screws into surfaces, making them perfectly suited for assembling a house.']
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['A sleeping bag provides insulation and cushioning, which helps keep a person warm and comfortable when sleeping on the ground.']
 visible_values : ['A sleeping bag provides insulation and cushioning, which helps keep a person warm and comfortable when sleeping on the ground.']
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['A bottle is designed to hold liquids without leaking, making it ideal for storing and applying hair bleach.']
 visible_values : ['A bottle is designed to hold liquids without leaking, making it ideal for storing and applying hair bleach.']
 ------- evaluating input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['A drill is a tool used to drill screws into a wall. You need a drill to put screws into your house.']`
----> answers: `['A drill is a tool used to drill screws into a wall. You need a drill to put screws into your house.']` - type: `<class 'list'>`
----> baseline_answer: `Drills provide the torque and rotation necessary for driving screws into surfaces, making them perfectly suited for assembling a house.` - type: `<class 'str'>`
 --> scores:  0.23809523809523808
----> per-field score: 0.23809523809523808
 ------- evaluating input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['A sleeping bag is a warm, plush, zippered bag used for sleeping. You need a sleeping bag to sleep in the woods on your camping trip.']`
----> answers: `['A sleeping bag is a warm, plush, zippered bag used for sleeping. You need a sleeping bag to sleep in the woods on your camping trip.']` - type: `<class 'list'>`
----> baseline_answer: `A sleeping bag provides insulation and cushioning, which helps keep a person warm and comfortable when sleeping on the ground.` - type: `<class 'str'>`
 --> scores:  0.3043478260869565
----> per-field score: 0.3043478260869565
 ------- evaluating input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `["A bottle is a container used to hold liquids. You need a bottle to hold the bleach that you will be using to bleach your friend's hair."]`
----> answers: `["A bottle is a container used to hold liquids. You need a bottle to hold the bleach that you will be using to bleach your friend's hair."]` - type: `<class 'list'>`
----> baseline_answer: `A bottle is designed to hold liquids without leaking, making it ideal for storing and applying hair bleach.` - type: `<class 'str'>`
 --> scores:  0.30434782608695654
----> per-field score: 0.30434782608695654
 --> Per-instance overall score: 0.28226363008971705
 --> Per-instance per-field breakdown: {'textarea': [0.23809523809523808, 0.3043478260869565, 0.30434782608695654]}
instance_id: 15440 <-> row_number: 37
Could not find input field with name `Step`
 --> inputs: ['rationale1', 'rationale2', 'rationale3']
 --> Looking up gold labels from row index 37 of `input.csv` (unique inputs). 
 --> input labels: {'rationale1': ['So the can make posts.'], 'rationale2': ['So they can win the game.'], 'rationale3': ['They need laundry to fold.']}
 - - - - - -  starting a new element: `Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale1
Executing one action: self.actions.modify_text('rationale1', 'A computer is required to access the internet, which is necessary to log into any social media platform. This allows PersonX to post remarks about PersonY online.')
Add text `A computer is required to access the internet, which is necessary to log into any social media platform. This allows PersonX to post remarks about PersonY online.` to this text input: <textarea rows="1" class="required inline-input" name="rationale1" placeholder="Why? ..." required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale2
Executing one action: self.actions.modify_text('rationale2', 'Quarters are required to operate many arcade machines, allowing players to practice and improve their skills.')
Add text `Quarters are required to operate many arcade machines, allowing players to practice and improve their skills.` to this text input: <textarea rows="1" class="required inline-input" name="rationale2" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale3
Executing one action: self.actions.modify_text('rationale3', 'Clothes are essential garments for personal attire, providing coverage, comfort, and protection for the body. After laundering, folding these clothes not only helps in organizing them neatly but also in maintaining their shape and quality, making them ready for future use.')
Add text `Clothes are essential garments for personal attire, providing coverage, comfort, and protection for the body. After laundering, folding these clothes not only helps in organizing them neatly but also in maintaining their shape and quality, making them ready for future use.` to this text input: <textarea rows="1" class="required inline-input" name="rationale3" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['A computer is required to access the internet, which is necessary to log into any social media platform. This allows PersonX to post remarks about PersonY online.']
 visible_values : ['A computer is required to access the internet, which is necessary to log into any social media platform. This allows PersonX to post remarks about PersonY online.']
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Quarters are required to operate many arcade machines, allowing players to practice and improve their skills.']
 visible_values : ['Quarters are required to operate many arcade machines, allowing players to practice and improve their skills.']
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Clothes are essential garments for personal attire, providing coverage, comfort, and protection for the body. After laundering, folding these clothes not only helps in organizing them neatly but also in maintaining their shape and quality, making them ready for future use.']
 visible_values : ['Clothes are essential garments for personal attire, providing coverage, comfort, and protection for the body. After laundering, folding these clothes not only helps in organizing them neatly but also in maintaining their shape and quality, making them ready for future use.']
 ------- evaluating input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['So the can make posts.']`
----> answers: `['So the can make posts.']` - type: `<class 'list'>`
----> baseline_answer: `A computer is required to access the internet, which is necessary to log into any social media platform. This allows PersonX to post remarks about PersonY online.` - type: `<class 'str'>`
 --> scores:  0.125
----> per-field score: 0.125
 ------- evaluating input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['So they can win the game.']`
----> answers: `['So they can win the game.']` - type: `<class 'list'>`
----> baseline_answer: `Quarters are required to operate many arcade machines, allowing players to practice and improve their skills.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['They need laundry to fold.']`
----> answers: `['They need laundry to fold.']` - type: `<class 'list'>`
----> baseline_answer: `Clothes are essential garments for personal attire, providing coverage, comfort, and protection for the body. After laundering, folding these clothes not only helps in organizing them neatly but also in maintaining their shape and quality, making them ready for future use.` - type: `<class 'str'>`
 --> scores:  0.04347826086956522
----> per-field score: 0.04347826086956522
 --> Per-instance overall score: 0.05615942028985507
 --> Per-instance per-field breakdown: {'textarea': [0.23809523809523808, 0.3043478260869565, 0.30434782608695654, 0.125, 0.0, 0.04347826086956522]}
instance_id: 15552 <-> row_number: 149
Could not find input field with name `Step`
 --> inputs: ['rationale1', 'rationale2', 'rationale3']
 --> Looking up gold labels from row index 149 of `input.csv` (unique inputs). 
 --> input labels: {'rationale1': ['They need to make a marketing strategy.'], 'rationale2': ['A grinder is easier than a mill.'], 'rationale3': ['To get the clothes clean.']}
 - - - - - -  starting a new element: `Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale1
Executing one action: self.actions.modify_text('rationale1', 'Surveys are tools designed to collect information by asking specific questions. They enable collecting data from a diverse audience quickly, providing insights about customer preferences or experiences relevant to PersonX’s task.')
Add text `Surveys are tools designed to collect information by asking specific questions. They enable collecting data from a diverse audience quickly, providing insights about customer preferences or experiences relevant to PersonX’s task.` to this text input: <textarea rows="1" class="required inline-input" name="rationale1" placeholder="Why? ..." required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale2
Executing one action: self.actions.modify_text('rationale2', 'A grinder is used to grind coffee beans into fine or coarse powders for brewing. Grinding fresh beans helps release the oils and flavors for a fresh cup of coffee.')
Add text `A grinder is used to grind coffee beans into fine or coarse powders for brewing. Grinding fresh beans helps release the oils and flavors for a fresh cup of coffee.` to this text input: <textarea rows="1" class="required inline-input" name="rationale2" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale3
Executing one action: self.actions.modify_text('rationale3', 'Washing powder helps to remove stains and dirt, ensuring the money becomes clean after the wash.')
Add text `Washing powder helps to remove stains and dirt, ensuring the money becomes clean after the wash.` to this text input: <textarea rows="1" class="required inline-input" name="rationale3" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Surveys are tools designed to collect information by asking specific questions. They enable collecting data from a diverse audience quickly, providing insights about customer preferences or experiences relevant to PersonX’s task.']
 visible_values : ['Surveys are tools designed to collect information by asking specific questions. They enable collecting data from a diverse audience quickly, providing insights about customer preferences or experiences relevant to PersonX’s task.']
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['A grinder is used to grind coffee beans into fine or coarse powders for brewing. Grinding fresh beans helps release the oils and flavors for a fresh cup of coffee.']
 visible_values : ['A grinder is used to grind coffee beans into fine or coarse powders for brewing. Grinding fresh beans helps release the oils and flavors for a fresh cup of coffee.']
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Washing powder helps to remove stains and dirt, ensuring the money becomes clean after the wash.']
 visible_values : ['Washing powder helps to remove stains and dirt, ensuring the money becomes clean after the wash.']
 ------- evaluating input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['They need to make a marketing strategy.']`
----> answers: `['They need to make a marketing strategy.']` - type: `<class 'list'>`
----> baseline_answer: `Surveys are tools designed to collect information by asking specific questions. They enable collecting data from a diverse audience quickly, providing insights about customer preferences or experiences relevant to PersonX’s task.` - type: `<class 'str'>`
 --> scores:  0.10256410256410256
----> per-field score: 0.10256410256410256
 ------- evaluating input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['A grinder is easier than a mill.']`
----> answers: `['A grinder is easier than a mill.']` - type: `<class 'list'>`
----> baseline_answer: `A grinder is used to grind coffee beans into fine or coarse powders for brewing. Grinding fresh beans helps release the oils and flavors for a fresh cup of coffee.` - type: `<class 'str'>`
 --> scores:  0.21621621621621623
----> per-field score: 0.21621621621621623
 ------- evaluating input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['To get the clothes clean.']`
----> answers: `['To get the clothes clean.']` - type: `<class 'list'>`
----> baseline_answer: `Washing powder helps to remove stains and dirt, ensuring the money becomes clean after the wash.` - type: `<class 'str'>`
 --> scores:  0.2857142857142857
----> per-field score: 0.2857142857142857
 --> Per-instance overall score: 0.2014982014982015
 --> Per-instance per-field breakdown: {'textarea': [0.23809523809523808, 0.3043478260869565, 0.30434782608695654, 0.125, 0.0, 0.04347826086956522, 0.10256410256410256, 0.21621621621621623, 0.2857142857142857]}
instance_id: 15831 <-> row_number: 428
Could not find input field with name `Step`
 --> inputs: ['rationale1', 'rationale2', 'rationale3']
 --> Looking up gold labels from row index 428 of `input.csv` (unique inputs). 
 --> input labels: {'rationale1': ['Combine the ingredients to create the meal.'], 'rationale2': ['Provide the person with nutrients.'], 'rationale3': ['Protect themselves from skin cancer.']}
 - - - - - -  starting a new element: `Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale1
Executing one action: self.actions.modify_text('rationale1', 'A mixing bowl allows for large amounts of ingredients to be combined effectively, ensuring the candy has a consistent flavor and texture.')
Add text `A mixing bowl allows for large amounts of ingredients to be combined effectively, ensuring the candy has a consistent flavor and texture.` to this text input: <textarea rows="1" class="required inline-input" name="rationale1" placeholder="Why? ..." required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale2
Executing one action: self.actions.modify_text('rationale2', 'Soup is easy to swallow and digest, making it an ideal food for someone who is ill and may have difficulty eating.')
Add text `Soup is easy to swallow and digest, making it an ideal food for someone who is ill and may have difficulty eating.` to this text input: <textarea rows="1" class="required inline-input" name="rationale2" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale3
Executing one action: self.actions.modify_text('rationale3', 'Sunscreen protects the skin from UV rays, reducing the risk of burns and skin cancer when out in the sun.')
Add text `Sunscreen protects the skin from UV rays, reducing the risk of burns and skin cancer when out in the sun.` to this text input: <textarea rows="1" class="required inline-input" name="rationale3" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['A mixing bowl allows for large amounts of ingredients to be combined effectively, ensuring the candy has a consistent flavor and texture.']
 visible_values : ['A mixing bowl allows for large amounts of ingredients to be combined effectively, ensuring the candy has a consistent flavor and texture.']
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Soup is easy to swallow and digest, making it an ideal food for someone who is ill and may have difficulty eating.']
 visible_values : ['Soup is easy to swallow and digest, making it an ideal food for someone who is ill and may have difficulty eating.']
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Sunscreen protects the skin from UV rays, reducing the risk of burns and skin cancer when out in the sun.']
 visible_values : ['Sunscreen protects the skin from UV rays, reducing the risk of burns and skin cancer when out in the sun.']
 ------- evaluating input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Combine the ingredients to create the meal.']`
----> answers: `['Combine the ingredients to create the meal.']` - type: `<class 'list'>`
----> baseline_answer: `A mixing bowl allows for large amounts of ingredients to be combined effectively, ensuring the candy has a consistent flavor and texture.` - type: `<class 'str'>`
 --> scores:  0.20689655172413793
----> per-field score: 0.20689655172413793
 ------- evaluating input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Provide the person with nutrients.']`
----> answers: `['Provide the person with nutrients.']` - type: `<class 'list'>`
----> baseline_answer: `Soup is easy to swallow and digest, making it an ideal food for someone who is ill and may have difficulty eating.` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Protect themselves from skin cancer.']`
----> answers: `['Protect themselves from skin cancer.']` - type: `<class 'list'>`
----> baseline_answer: `Sunscreen protects the skin from UV rays, reducing the risk of burns and skin cancer when out in the sun.` - type: `<class 'str'>`
 --> scores:  0.32000000000000006
----> per-field score: 0.32000000000000006
 --> Per-instance overall score: 0.175632183908046
 --> Per-instance per-field breakdown: {'textarea': [0.23809523809523808, 0.3043478260869565, 0.30434782608695654, 0.125, 0.0, 0.04347826086956522, 0.10256410256410256, 0.21621621621621623, 0.2857142857142857, 0.20689655172413793, 0.0, 0.32000000000000006]}
instance_id: 15753 <-> row_number: 350
Could not find input field with name `Step`
 --> inputs: ['rationale1', 'rationale2', 'rationale3']
 --> Looking up gold labels from row index 350 of `input.csv` (unique inputs). 
 --> input labels: {'rationale1': ['The wedding is a formal affair. A tux is required.'], 'rationale2': ['The officiant must be a licensed official to legally perform a marriage.'], 'rationale3': ["The library is on the other side of town and the buses don't go there, they have to drive a car."]}
 - - - - - -  starting a new element: `Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale1
Executing one action: self.actions.modify_text('rationale1', 'A tuxedo is traditionally worn at weddings to symbolize formality and respect for the occasion.')
Add text `A tuxedo is traditionally worn at weddings to symbolize formality and respect for the occasion.` to this text input: <textarea rows="1" class="required inline-input" name="rationale1" placeholder="Why? ..." required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale2
Executing one action: self.actions.modify_text('rationale2', 'A marriage officiant is authorized to perform legal marriage ceremonies. This makes the union between two people official and recognized by law.')
Add text `A marriage officiant is authorized to perform legal marriage ceremonies. This makes the union between two people official and recognized by law.` to this text input: <textarea rows="1" class="required inline-input" name="rationale2" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale3
Executing one action: self.actions.modify_text('rationale3', 'A car provides a convenient mode of transportation over longer distances, allowing PersonX to travel back home quickly and comfortably after returning the library books.')
Add text `A car provides a convenient mode of transportation over longer distances, allowing PersonX to travel back home quickly and comfortably after returning the library books.` to this text input: <textarea rows="1" class="required inline-input" name="rationale3" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['A tuxedo is traditionally worn at weddings to symbolize formality and respect for the occasion.']
 visible_values : ['A tuxedo is traditionally worn at weddings to symbolize formality and respect for the occasion.']
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['A marriage officiant is authorized to perform legal marriage ceremonies. This makes the union between two people official and recognized by law.']
 visible_values : ['A marriage officiant is authorized to perform legal marriage ceremonies. This makes the union between two people official and recognized by law.']
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['A car provides a convenient mode of transportation over longer distances, allowing PersonX to travel back home quickly and comfortably after returning the library books.']
 visible_values : ['A car provides a convenient mode of transportation over longer distances, allowing PersonX to travel back home quickly and comfortably after returning the library books.']
 ------- evaluating input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['The wedding is a formal affair. A tux is required.']`
----> answers: `['The wedding is a formal affair. A tux is required.']` - type: `<class 'list'>`
----> baseline_answer: `A tuxedo is traditionally worn at weddings to symbolize formality and respect for the occasion.` - type: `<class 'str'>`
 --> scores:  0.16
----> per-field score: 0.16
 ------- evaluating input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['The officiant must be a licensed official to legally perform a marriage.']`
----> answers: `['The officiant must be a licensed official to legally perform a marriage.']` - type: `<class 'list'>`
----> baseline_answer: `A marriage officiant is authorized to perform legal marriage ceremonies. This makes the union between two people official and recognized by law.` - type: `<class 'str'>`
 --> scores:  0.29411764705882354
----> per-field score: 0.29411764705882354
 ------- evaluating input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `["The library is on the other side of town and the buses don't go there, they have to drive a car."]`
----> answers: `["The library is on the other side of town and the buses don't go there, they have to drive a car."]` - type: `<class 'list'>`
----> baseline_answer: `A car provides a convenient mode of transportation over longer distances, allowing PersonX to travel back home quickly and comfortably after returning the library books.` - type: `<class 'str'>`
 --> scores:  0.1276595744680851
----> per-field score: 0.1276595744680851
 --> Per-instance overall score: 0.19392574050896952
 --> Per-instance per-field breakdown: {'textarea': [0.23809523809523808, 0.3043478260869565, 0.30434782608695654, 0.125, 0.0, 0.04347826086956522, 0.10256410256410256, 0.21621621621621623, 0.2857142857142857, 0.20689655172413793, 0.0, 0.32000000000000006, 0.16, 0.29411764705882354, 0.1276595744680851]}
instance_id: 15702 <-> row_number: 299
Could not find input field with name `Step`
 --> inputs: ['rationale1', 'rationale2', 'rationale3']
 --> Looking up gold labels from row index 299 of `input.csv` (unique inputs). 
 --> input labels: {'rationale1': ['The remote has a button on it. You push the button and it turns off the alarm.'], 'rationale2': ['Cake is generally served at parties. It is sweet and chocolately. You put candles in it and sing happy birthday.'], 'rationale3': ['The blanket goes on top of you to keep you warm. It is heavy and blocks out the cold air.']}
 - - - - - -  starting a new element: `Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale1
Executing one action: self.actions.modify_text('rationale1', '')
Since the input value is ``, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale2
Executing one action: self.actions.modify_text('rationale2', 'A cake is a traditional food for celebrating birthdays and is usually shared with guests at the party.')
Add text `A cake is a traditional food for celebrating birthdays and is usually shared with guests at the party.` to this text input: <textarea rows="1" class="required inline-input" name="rationale2" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale3
Executing one action: self.actions.modify_text('rationale3', 'The blanket provides insulation and warmth, making it essential for staying comfortable and warm during a nap, especially in cold environments.')
Add text `The blanket provides insulation and warmth, making it essential for staying comfortable and warm during a nap, especially in cold environments.` to this text input: <textarea rows="1" class="required inline-input" name="rationale3" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['']
 visible_values : ['']
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['A cake is a traditional food for celebrating birthdays and is usually shared with guests at the party.']
 visible_values : ['A cake is a traditional food for celebrating birthdays and is usually shared with guests at the party.']
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['The blanket provides insulation and warmth, making it essential for staying comfortable and warm during a nap, especially in cold environments.']
 visible_values : ['The blanket provides insulation and warmth, making it essential for staying comfortable and warm during a nap, especially in cold environments.']
 ------- evaluating input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['The remote has a button on it. You push the button and it turns off the alarm.']`
----> answers: `['The remote has a button on it. You push the button and it turns off the alarm.']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Cake is generally served at parties. It is sweet and chocolately. You put candles in it and sing happy birthday.']`
----> answers: `['Cake is generally served at parties. It is sweet and chocolately. You put candles in it and sing happy birthday.']` - type: `<class 'list'>`
----> baseline_answer: `A cake is a traditional food for celebrating birthdays and is usually shared with guests at the party.` - type: `<class 'str'>`
 --> scores:  0.2105263157894737
----> per-field score: 0.2105263157894737
 ------- evaluating input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['The blanket goes on top of you to keep you warm. It is heavy and blocks out the cold air.']`
----> answers: `['The blanket goes on top of you to keep you warm. It is heavy and blocks out the cold air.']` - type: `<class 'list'>`
----> baseline_answer: `The blanket provides insulation and warmth, making it essential for staying comfortable and warm during a nap, especially in cold environments.` - type: `<class 'str'>`
 --> scores:  0.24390243902439024
----> per-field score: 0.24390243902439024
 --> Per-instance overall score: 0.1514762516046213
 --> Per-instance per-field breakdown: {'textarea': [0.23809523809523808, 0.3043478260869565, 0.30434782608695654, 0.125, 0.0, 0.04347826086956522, 0.10256410256410256, 0.21621621621621623, 0.2857142857142857, 0.20689655172413793, 0.0, 0.32000000000000006, 0.16, 0.29411764705882354, 0.1276595744680851, 0.0, 0.2105263157894737, 0.24390243902439024]}
instance_id: 15414 <-> row_number: 11
Could not find input field with name `Step`
 --> inputs: ['rationale1', 'rationale2', 'rationale3']
 --> Looking up gold labels from row index 11 of `input.csv` (unique inputs). 
 --> input labels: {'rationale1': ['Going to Craiglist means going online. Going online means having a modem for connection. PersonX goes on Craigslist so a modem is needed.'], 'rationale2': ['Purchases need to be paid. PersonX went to the comic store so PersonX needs a checkbook.'], 'rationale3': ['Cash can be kept in a bag. PersonX gets paid money so PersonX can  use a dufflebag.']}
 - - - - - -  starting a new element: `Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale1
Executing one action: self.actions.modify_text('rationale1', 'A modem connects to the internet. PersonX needs internet access to use Craigslist for finding new friends.')
Add text `A modem connects to the internet. PersonX needs internet access to use Craigslist for finding new friends.` to this text input: <textarea rows="1" class="required inline-input" name="rationale1" placeholder="Why? ..." required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale2
Executing one action: self.actions.modify_text('rationale2', 'A checkbook allows for financial transactions without carrying cash, providing a secure and traceable method of payment for goods and services, making it suitable for purchases at stores like comic shops.')
Add text `A checkbook allows for financial transactions without carrying cash, providing a secure and traceable method of payment for goods and services, making it suitable for purchases at stores like comic shops.` to this text input: <textarea rows="1" class="required inline-input" name="rationale2" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale3
Executing one action: self.actions.modify_text('rationale3', 'A dufflebag is sizeable enough to securely carry a large amount of cash, making it a practical choice for transporting money discreetly and efficiently.')
Add text `A dufflebag is sizeable enough to securely carry a large amount of cash, making it a practical choice for transporting money discreetly and efficiently.` to this text input: <textarea rows="1" class="required inline-input" name="rationale3" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['A modem connects to the internet. PersonX needs internet access to use Craigslist for finding new friends.']
 visible_values : ['A modem connects to the internet. PersonX needs internet access to use Craigslist for finding new friends.']
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['A checkbook allows for financial transactions without carrying cash, providing a secure and traceable method of payment for goods and services, making it suitable for purchases at stores like comic shops.']
 visible_values : ['A checkbook allows for financial transactions without carrying cash, providing a secure and traceable method of payment for goods and services, making it suitable for purchases at stores like comic shops.']
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['A dufflebag is sizeable enough to securely carry a large amount of cash, making it a practical choice for transporting money discreetly and efficiently.']
 visible_values : ['A dufflebag is sizeable enough to securely carry a large amount of cash, making it a practical choice for transporting money discreetly and efficiently.']
 ------- evaluating input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Going to Craiglist means going online. Going online means having a modem for connection. PersonX goes on Craigslist so a modem is needed.']`
----> answers: `['Going to Craiglist means going online. Going online means having a modem for connection. PersonX goes on Craigslist so a modem is needed.']` - type: `<class 'list'>`
----> baseline_answer: `A modem connects to the internet. PersonX needs internet access to use Craigslist for finding new friends.` - type: `<class 'str'>`
 --> scores:  0.25
----> per-field score: 0.25
 ------- evaluating input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Purchases need to be paid. PersonX went to the comic store so PersonX needs a checkbook.']`
----> answers: `['Purchases need to be paid. PersonX went to the comic store so PersonX needs a checkbook.']` - type: `<class 'list'>`
----> baseline_answer: `A checkbook allows for financial transactions without carrying cash, providing a secure and traceable method of payment for goods and services, making it suitable for purchases at stores like comic shops.` - type: `<class 'str'>`
 --> scores:  0.0851063829787234
----> per-field score: 0.0851063829787234
 ------- evaluating input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Cash can be kept in a bag. PersonX gets paid money so PersonX can  use a dufflebag.']`
----> answers: `['Cash can be kept in a bag. PersonX gets paid money so PersonX can  use a dufflebag.']` - type: `<class 'list'>`
----> baseline_answer: `A dufflebag is sizeable enough to securely carry a large amount of cash, making it a practical choice for transporting money discreetly and efficiently.` - type: `<class 'str'>`
 --> scores:  0.14634146341463414
----> per-field score: 0.14634146341463414
 --> Per-instance overall score: 0.16048261546445253
 --> Per-instance per-field breakdown: {'textarea': [0.23809523809523808, 0.3043478260869565, 0.30434782608695654, 0.125, 0.0, 0.04347826086956522, 0.10256410256410256, 0.21621621621621623, 0.2857142857142857, 0.20689655172413793, 0.0, 0.32000000000000006, 0.16, 0.29411764705882354, 0.1276595744680851, 0.0, 0.2105263157894737, 0.24390243902439024, 0.25, 0.0851063829787234, 0.14634146341463414]}
instance_id: 15446 <-> row_number: 43
Could not find input field with name `Step`
 --> inputs: ['rationale1', 'rationale2', 'rationale3']
 --> Looking up gold labels from row index 43 of `input.csv` (unique inputs). 
 --> input labels: {'rationale1': ['Money is paid to the transport provider to allow maintenance of the service'], 'rationale2': ['A wallet secure is cash and makes it easier to transport'], 'rationale3': ['A plastic bag keeps items in one spot and makes them easier to throw out']}
 - - - - - -  starting a new element: `Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale1
Executing one action: self.actions.modify_text('rationale1', 'Money is required to pay for services and goods. Without money, PersonX cannot purchase a ticket for the bus ride to work.')
Add text `Money is required to pay for services and goods. Without money, PersonX cannot purchase a ticket for the bus ride to work.` to this text input: <textarea rows="1" class="required inline-input" name="rationale1" placeholder="Why? ..." required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale2
Executing one action: self.actions.modify_text('rationale2', 'A wallet is typically used to securely hold both cash and cards, making transactions more manageable and organized for daily purchases like buying a pack of cigarettes.')
Add text `A wallet is typically used to securely hold both cash and cards, making transactions more manageable and organized for daily purchases like buying a pack of cigarettes.` to this text input: <textarea rows="1" class="required inline-input" name="rationale2" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale3
Executing one action: self.actions.modify_text('rationale3', 'A plastic bag can be used to contain small items, making it easier to hide or dispose of them discreetly.')
Add text `A plastic bag can be used to contain small items, making it easier to hide or dispose of them discreetly.` to this text input: <textarea rows="1" class="required inline-input" name="rationale3" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Money is required to pay for services and goods. Without money, PersonX cannot purchase a ticket for the bus ride to work.']
 visible_values : ['Money is required to pay for services and goods. Without money, PersonX cannot purchase a ticket for the bus ride to work.']
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['A wallet is typically used to securely hold both cash and cards, making transactions more manageable and organized for daily purchases like buying a pack of cigarettes.']
 visible_values : ['A wallet is typically used to securely hold both cash and cards, making transactions more manageable and organized for daily purchases like buying a pack of cigarettes.']
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['A plastic bag can be used to contain small items, making it easier to hide or dispose of them discreetly.']
 visible_values : ['A plastic bag can be used to contain small items, making it easier to hide or dispose of them discreetly.']
 ------- evaluating input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Money is paid to the transport provider to allow maintenance of the service']`
----> answers: `['Money is paid to the transport provider to allow maintenance of the service']` - type: `<class 'list'>`
----> baseline_answer: `Money is required to pay for services and goods. Without money, PersonX cannot purchase a ticket for the bus ride to work.` - type: `<class 'str'>`
 --> scores:  0.2857142857142857
----> per-field score: 0.2857142857142857
 ------- evaluating input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['A wallet secure is cash and makes it easier to transport']`
----> answers: `['A wallet secure is cash and makes it easier to transport']` - type: `<class 'list'>`
----> baseline_answer: `A wallet is typically used to securely hold both cash and cards, making transactions more manageable and organized for daily purchases like buying a pack of cigarettes.` - type: `<class 'str'>`
 --> scores:  0.3157894736842105
----> per-field score: 0.3157894736842105
 ------- evaluating input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['A plastic bag keeps items in one spot and makes them easier to throw out']`
----> answers: `['A plastic bag keeps items in one spot and makes them easier to throw out']` - type: `<class 'list'>`
----> baseline_answer: `A plastic bag can be used to contain small items, making it easier to hide or dispose of them discreetly.` - type: `<class 'str'>`
 --> scores:  0.4
----> per-field score: 0.4
 --> Per-instance overall score: 0.3338345864661654
 --> Per-instance per-field breakdown: {'textarea': [0.23809523809523808, 0.3043478260869565, 0.30434782608695654, 0.125, 0.0, 0.04347826086956522, 0.10256410256410256, 0.21621621621621623, 0.2857142857142857, 0.20689655172413793, 0.0, 0.32000000000000006, 0.16, 0.29411764705882354, 0.1276595744680851, 0.0, 0.2105263157894737, 0.24390243902439024, 0.25, 0.0851063829787234, 0.14634146341463414, 0.2857142857142857, 0.3157894736842105, 0.4]}
instance_id: 15593 <-> row_number: 190
Could not find input field with name `Step`
 --> inputs: ['rationale1', 'rationale2', 'rationale3']
 --> Looking up gold labels from row index 190 of `input.csv` (unique inputs). 
 --> input labels: {'rationale1': ['A fire leaves behind hot and dirty ashes. They want to use the shovel to remove the ashes to not burn themselves and stay clean.'], 'rationale2': ['treating a broken arm requires seeing a doctor. Doctors charge money for treatment.'], 'rationale3': ['Paint is a messy liquid that stains. They want to store the paint in a bucket to keep it from making a mess.']}
 - - - - - -  starting a new element: `Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale1
Executing one action: self.actions.modify_text('rationale1', 'A shovel can help gather the remnants of a fire, containing the ash and debris in one place for efficient cleanup.')
Add text `A shovel can help gather the remnants of a fire, containing the ash and debris in one place for efficient cleanup.` to this text input: <textarea rows="1" class="required inline-input" name="rationale1" placeholder="Why? ..." required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale2
Executing one action: self.actions.modify_text('rationale2', 'Medical treatment and evaluations have costs that require payment, often significant, and money is needed to cover these expenses.')
Add text `Medical treatment and evaluations have costs that require payment, often significant, and money is needed to cover these expenses.` to this text input: <textarea rows="1" class="required inline-input" name="rationale2" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale3
Executing one action: self.actions.modify_text('rationale3', 'A bucket is essential for containing liquid paint during application to prevent spillage and ensure a clean workspace.')
Add text `A bucket is essential for containing liquid paint during application to prevent spillage and ensure a clean workspace.` to this text input: <textarea rows="1" class="required inline-input" name="rationale3" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['A shovel can help gather the remnants of a fire, containing the ash and debris in one place for efficient cleanup.']
 visible_values : ['A shovel can help gather the remnants of a fire, containing the ash and debris in one place for efficient cleanup.']
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Medical treatment and evaluations have costs that require payment, often significant, and money is needed to cover these expenses.']
 visible_values : ['Medical treatment and evaluations have costs that require payment, often significant, and money is needed to cover these expenses.']
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['A bucket is essential for containing liquid paint during application to prevent spillage and ensure a clean workspace.']
 visible_values : ['A bucket is essential for containing liquid paint during application to prevent spillage and ensure a clean workspace.']
 ------- evaluating input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['A fire leaves behind hot and dirty ashes. They want to use the shovel to remove the ashes to not burn themselves and stay clean.']`
----> answers: `['A fire leaves behind hot and dirty ashes. They want to use the shovel to remove the ashes to not burn themselves and stay clean.']` - type: `<class 'list'>`
----> baseline_answer: `A shovel can help gather the remnants of a fire, containing the ash and debris in one place for efficient cleanup.` - type: `<class 'str'>`
 --> scores:  0.21739130434782608
----> per-field score: 0.21739130434782608
 ------- evaluating input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['treating a broken arm requires seeing a doctor. Doctors charge money for treatment.']`
----> answers: `['treating a broken arm requires seeing a doctor. Doctors charge money for treatment.']` - type: `<class 'list'>`
----> baseline_answer: `Medical treatment and evaluations have costs that require payment, often significant, and money is needed to cover these expenses.` - type: `<class 'str'>`
 --> scores:  0.125
----> per-field score: 0.125
 ------- evaluating input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Paint is a messy liquid that stains. They want to store the paint in a bucket to keep it from making a mess.']`
----> answers: `['Paint is a messy liquid that stains. They want to store the paint in a bucket to keep it from making a mess.']` - type: `<class 'list'>`
----> baseline_answer: `A bucket is essential for containing liquid paint during application to prevent spillage and ensure a clean workspace.` - type: `<class 'str'>`
 --> scores:  0.24390243902439024
----> per-field score: 0.24390243902439024
 --> Per-instance overall score: 0.19543124779073875
 --> Per-instance per-field breakdown: {'textarea': [0.23809523809523808, 0.3043478260869565, 0.30434782608695654, 0.125, 0.0, 0.04347826086956522, 0.10256410256410256, 0.21621621621621623, 0.2857142857142857, 0.20689655172413793, 0.0, 0.32000000000000006, 0.16, 0.29411764705882354, 0.1276595744680851, 0.0, 0.2105263157894737, 0.24390243902439024, 0.25, 0.0851063829787234, 0.14634146341463414, 0.2857142857142857, 0.3157894736842105, 0.4, 0.21739130434782608, 0.125, 0.24390243902439024]}
instance_id: 15507 <-> row_number: 104
Could not find input field with name `Step`
 --> inputs: ['rationale1', 'rationale2', 'rationale3']
 --> Looking up gold labels from row index 104 of `input.csv` (unique inputs). 
 --> input labels: {'rationale1': ["A uniform will indicate a person's team so that everyone will be able to differentiate the teams."], 'rationale2': ['A cellphone would be needed to play music.  The headphones only work with another device.'], 'rationale3': ['A resume will show the applicable skills and past job history.  It will help determine whether an employer will hire someone.']}
 - - - - - -  starting a new element: `Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale1
Executing one action: self.actions.modify_text('rationale1', '')
Since the input value is ``, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale2
Executing one action: self.actions.modify_text('rationale2', 'Headphones can be plugged into cellphones to listen to music, making it a common use for cellphones.')
Add text `Headphones can be plugged into cellphones to listen to music, making it a common use for cellphones.` to this text input: <textarea rows="1" class="required inline-input" name="rationale2" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale3
Executing one action: self.actions.modify_text('rationale3', 'A resume highlights a person\'s skills, accomplishments, and relevant experience, convincing employers of their suitability for the job.')
Add text `A resume highlights a person's skills, accomplishments, and relevant experience, convincing employers of their suitability for the job.` to this text input: <textarea rows="1" class="required inline-input" name="rationale3" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['']
 visible_values : ['']
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Headphones can be plugged into cellphones to listen to music, making it a common use for cellphones.']
 visible_values : ['Headphones can be plugged into cellphones to listen to music, making it a common use for cellphones.']
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ["A resume highlights a person's skills, accomplishments, and relevant experience, convincing employers of their suitability for the job."]
 visible_values : ["A resume highlights a person's skills, accomplishments, and relevant experience, convincing employers of their suitability for the job."]
 ------- evaluating input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `["A uniform will indicate a person's team so that everyone will be able to differentiate the teams."]`
----> answers: `["A uniform will indicate a person's team so that everyone will be able to differentiate the teams."]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['A cellphone would be needed to play music.  The headphones only work with another device.']`
----> answers: `['A cellphone would be needed to play music.  The headphones only work with another device.']` - type: `<class 'list'>`
----> baseline_answer: `Headphones can be plugged into cellphones to listen to music, making it a common use for cellphones.` - type: `<class 'str'>`
 --> scores:  0.18750000000000003
----> per-field score: 0.18750000000000003
 ------- evaluating input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['A resume will show the applicable skills and past job history.  It will help determine whether an employer will hire someone.']`
----> answers: `['A resume will show the applicable skills and past job history.  It will help determine whether an employer will hire someone.']` - type: `<class 'list'>`
----> baseline_answer: `A resume highlights a person's skills, accomplishments, and relevant experience, convincing employers of their suitability for the job.` - type: `<class 'str'>`
 --> scores:  0.25
----> per-field score: 0.25
 --> Per-instance overall score: 0.14583333333333334
 --> Per-instance per-field breakdown: {'textarea': [0.23809523809523808, 0.3043478260869565, 0.30434782608695654, 0.125, 0.0, 0.04347826086956522, 0.10256410256410256, 0.21621621621621623, 0.2857142857142857, 0.20689655172413793, 0.0, 0.32000000000000006, 0.16, 0.29411764705882354, 0.1276595744680851, 0.0, 0.2105263157894737, 0.24390243902439024, 0.25, 0.0851063829787234, 0.14634146341463414, 0.2857142857142857, 0.3157894736842105, 0.4, 0.21739130434782608, 0.125, 0.24390243902439024, 0.0, 0.18750000000000003, 0.25]}
instance_id: 15685 <-> row_number: 282
Could not find input field with name `Step`
 --> inputs: ['rationale1', 'rationale2', 'rationale3']
 --> Looking up gold labels from row index 282 of `input.csv` (unique inputs). 
 --> input labels: {'rationale1': ['A bat is hard and can be used as a weapon.  One can use a bat to beat a person with.'], 'rationale2': ['You need somewhere safe to store the paper to keep it from tearing. A backpack is safe and can securely hold the paper.'], 'rationale3': ['Your hands are busy when riding a bike and cannot hold things. A backpack can be worn to keep things in while you drive.']}
 - - - - - -  starting a new element: `Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale1
Executing one action: self.actions.modify_text('rationale1', 'A bat is often considered a weapon and can inflict serious injuries, making it a plausible choice for a harmful act.')
Add text `A bat is often considered a weapon and can inflict serious injuries, making it a plausible choice for a harmful act.` to this text input: <textarea rows="1" class="required inline-input" name="rationale1" placeholder="Why? ..." required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale2
Executing one action: self.actions.modify_text('rationale2', 'A carrier provides an efficient way to organize and protect papers while being mobile.')
Add text `A carrier provides an efficient way to organize and protect papers while being mobile.` to this text input: <textarea rows="1" class="required inline-input" name="rationale2" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale3
Executing one action: self.actions.modify_text('rationale3', 'A backpack allows you to carry items hands-free, making it practical for biking.')
Add text `A backpack allows you to carry items hands-free, making it practical for biking.` to this text input: <textarea rows="1" class="required inline-input" name="rationale3" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['A bat is often considered a weapon and can inflict serious injuries, making it a plausible choice for a harmful act.']
 visible_values : ['A bat is often considered a weapon and can inflict serious injuries, making it a plausible choice for a harmful act.']
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['A carrier provides an efficient way to organize and protect papers while being mobile.']
 visible_values : ['A carrier provides an efficient way to organize and protect papers while being mobile.']
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['A backpack allows you to carry items hands-free, making it practical for biking.']
 visible_values : ['A backpack allows you to carry items hands-free, making it practical for biking.']
 ------- evaluating input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['A bat is hard and can be used as a weapon.  One can use a bat to beat a person with.']`
----> answers: `['A bat is hard and can be used as a weapon.  One can use a bat to beat a person with.']` - type: `<class 'list'>`
----> baseline_answer: `A bat is often considered a weapon and can inflict serious injuries, making it a plausible choice for a harmful act.` - type: `<class 'str'>`
 --> scores:  0.38095238095238093
----> per-field score: 0.38095238095238093
 ------- evaluating input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['You need somewhere safe to store the paper to keep it from tearing. A backpack is safe and can securely hold the paper.']`
----> answers: `['You need somewhere safe to store the paper to keep it from tearing. A backpack is safe and can securely hold the paper.']` - type: `<class 'list'>`
----> baseline_answer: `A carrier provides an efficient way to organize and protect papers while being mobile.` - type: `<class 'str'>`
 --> scores:  0.16216216216216214
----> per-field score: 0.16216216216216214
 ------- evaluating input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Your hands are busy when riding a bike and cannot hold things. A backpack can be worn to keep things in while you drive.']`
----> answers: `['Your hands are busy when riding a bike and cannot hold things. A backpack can be worn to keep things in while you drive.']` - type: `<class 'list'>`
----> baseline_answer: `A backpack allows you to carry items hands-free, making it practical for biking.` - type: `<class 'str'>`
 --> scores:  0.15789473684210525
----> per-field score: 0.15789473684210525
 --> Per-instance overall score: 0.23366975998554942
 --> Per-instance per-field breakdown: {'textarea': [0.23809523809523808, 0.3043478260869565, 0.30434782608695654, 0.125, 0.0, 0.04347826086956522, 0.10256410256410256, 0.21621621621621623, 0.2857142857142857, 0.20689655172413793, 0.0, 0.32000000000000006, 0.16, 0.29411764705882354, 0.1276595744680851, 0.0, 0.2105263157894737, 0.24390243902439024, 0.25, 0.0851063829787234, 0.14634146341463414, 0.2857142857142857, 0.3157894736842105, 0.4, 0.21739130434782608, 0.125, 0.24390243902439024, 0.0, 0.18750000000000003, 0.25, 0.38095238095238093, 0.16216216216216214, 0.15789473684210525]}
instance_id: 15854 <-> row_number: 451
Could not find input field with name `Step`
 --> inputs: ['rationale1', 'rationale2', 'rationale3']
 --> Looking up gold labels from row index 451 of `input.csv` (unique inputs). 
 --> input labels: {'rationale1': ['Audit workpapers are all digitized now and it would be extremely inefficient to use paper binders in the current age.'], 'rationale2': ['They are saving small amounts of coins and cash that must be physically stored somewhere.'], 'rationale3': ['It is required by law in most places to wear a helmet while riding a bike. In addition, the helmet protects against head injury in case of an accident.']}
 - - - - - -  starting a new element: `Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale1
Executing one action: self.actions.modify_text('rationale1', '')
Since the input value is ``, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale2
Executing one action: self.actions.modify_text('rationale2', 'A piggy bank is a designated place to store coins and small bills, making it easier to set aside a portion of money without spending it, thereby aiding in saving.')
Add text `A piggy bank is a designated place to store coins and small bills, making it easier to set aside a portion of money without spending it, thereby aiding in saving.` to this text input: <textarea rows="1" class="required inline-input" name="rationale2" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale3
Executing one action: self.actions.modify_text('rationale3', 'Wearing a helmet while riding a bike significantly reduces the risk of head injuries in the event of an accident.')
Add text `Wearing a helmet while riding a bike significantly reduces the risk of head injuries in the event of an accident.` to this text input: <textarea rows="1" class="required inline-input" name="rationale3" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['']
 visible_values : ['']
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['A piggy bank is a designated place to store coins and small bills, making it easier to set aside a portion of money without spending it, thereby aiding in saving.']
 visible_values : ['A piggy bank is a designated place to store coins and small bills, making it easier to set aside a portion of money without spending it, thereby aiding in saving.']
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Wearing a helmet while riding a bike significantly reduces the risk of head injuries in the event of an accident.']
 visible_values : ['Wearing a helmet while riding a bike significantly reduces the risk of head injuries in the event of an accident.']
 ------- evaluating input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Audit workpapers are all digitized now and it would be extremely inefficient to use paper binders in the current age.']`
----> answers: `['Audit workpapers are all digitized now and it would be extremely inefficient to use paper binders in the current age.']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['They are saving small amounts of coins and cash that must be physically stored somewhere.']`
----> answers: `['They are saving small amounts of coins and cash that must be physically stored somewhere.']` - type: `<class 'list'>`
----> baseline_answer: `A piggy bank is a designated place to store coins and small bills, making it easier to set aside a portion of money without spending it, thereby aiding in saving.` - type: `<class 'str'>`
 --> scores:  0.08888888888888888
----> per-field score: 0.08888888888888888
 ------- evaluating input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['It is required by law in most places to wear a helmet while riding a bike. In addition, the helmet protects against head injury in case of an accident.']`
----> answers: `['It is required by law in most places to wear a helmet while riding a bike. In addition, the helmet protects against head injury in case of an accident.']` - type: `<class 'list'>`
----> baseline_answer: `Wearing a helmet while riding a bike significantly reduces the risk of head injuries in the event of an accident.` - type: `<class 'str'>`
 --> scores:  0.5714285714285714
----> per-field score: 0.5714285714285714
 --> Per-instance overall score: 0.2201058201058201
 --> Per-instance per-field breakdown: {'textarea': [0.23809523809523808, 0.3043478260869565, 0.30434782608695654, 0.125, 0.0, 0.04347826086956522, 0.10256410256410256, 0.21621621621621623, 0.2857142857142857, 0.20689655172413793, 0.0, 0.32000000000000006, 0.16, 0.29411764705882354, 0.1276595744680851, 0.0, 0.2105263157894737, 0.24390243902439024, 0.25, 0.0851063829787234, 0.14634146341463414, 0.2857142857142857, 0.3157894736842105, 0.4, 0.21739130434782608, 0.125, 0.24390243902439024, 0.0, 0.18750000000000003, 0.25, 0.38095238095238093, 0.16216216216216214, 0.15789473684210525, 0.0, 0.08888888888888888, 0.5714285714285714]}
instance_id: 15721 <-> row_number: 318
Could not find input field with name `Step`
 --> inputs: ['rationale1', 'rationale2', 'rationale3']
 --> Looking up gold labels from row index 318 of `input.csv` (unique inputs). 
 --> input labels: {'rationale1': ['A mobile phone allows you to download different apps like Tinder or Bumble. You can swipe right to match with someone and find a date.'], 'rationale2': ['A house provides shelter from the elements like rain and wind. When babysitting everyone can stay there to stay safe and warm.'], 'rationale3': ['A pot holds dirt and can have water poured into it. You can place a seed into it or place a flower directly into it to have or give as a gift.']}
 - - - - - -  starting a new element: `Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale1
Executing one action: self.actions.modify_text('rationale1', 'A mobile phone provides access to dating apps, allowing PersonX to connect with potential partners efficiently from anywhere at any time.')
Add text `A mobile phone provides access to dating apps, allowing PersonX to connect with potential partners efficiently from anywhere at any time.` to this text input: <textarea rows="1" class="required inline-input" name="rationale1" placeholder="Why? ..." required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale2
Executing one action: self.actions.modify_text('rationale2', 'A house provides shelter and security, making it a safe place for supervision and care during babysitting.')
Add text `A house provides shelter and security, making it a safe place for supervision and care during babysitting.` to this text input: <textarea rows="1" class="required inline-input" name="rationale2" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale3
Executing one action: self.actions.modify_text('rationale3', 'A pot is essential for containing soil and providing a stable base, allowing the flower to absorb water and nutrients effectively for growth.')
Add text `A pot is essential for containing soil and providing a stable base, allowing the flower to absorb water and nutrients effectively for growth.` to this text input: <textarea rows="1" class="required inline-input" name="rationale3" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['A mobile phone provides access to dating apps, allowing PersonX to connect with potential partners efficiently from anywhere at any time.']
 visible_values : ['A mobile phone provides access to dating apps, allowing PersonX to connect with potential partners efficiently from anywhere at any time.']
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['A house provides shelter and security, making it a safe place for supervision and care during babysitting.']
 visible_values : ['A house provides shelter and security, making it a safe place for supervision and care during babysitting.']
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['A pot is essential for containing soil and providing a stable base, allowing the flower to absorb water and nutrients effectively for growth.']
 visible_values : ['A pot is essential for containing soil and providing a stable base, allowing the flower to absorb water and nutrients effectively for growth.']
 ------- evaluating input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['A mobile phone allows you to download different apps like Tinder or Bumble. You can swipe right to match with someone and find a date.']`
----> answers: `['A mobile phone allows you to download different apps like Tinder or Bumble. You can swipe right to match with someone and find a date.']` - type: `<class 'list'>`
----> baseline_answer: `A mobile phone provides access to dating apps, allowing PersonX to connect with potential partners efficiently from anywhere at any time.` - type: `<class 'str'>`
 --> scores:  0.30434782608695654
----> per-field score: 0.30434782608695654
 ------- evaluating input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['A house provides shelter from the elements like rain and wind. When babysitting everyone can stay there to stay safe and warm.']`
----> answers: `['A house provides shelter from the elements like rain and wind. When babysitting everyone can stay there to stay safe and warm.']` - type: `<class 'list'>`
----> baseline_answer: `A house provides shelter and security, making it a safe place for supervision and care during babysitting.` - type: `<class 'str'>`
 --> scores:  0.358974358974359
----> per-field score: 0.358974358974359
 ------- evaluating input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['A pot holds dirt and can have water poured into it. You can place a seed into it or place a flower directly into it to have or give as a gift.']`
----> answers: `['A pot holds dirt and can have water poured into it. You can place a seed into it or place a flower directly into it to have or give as a gift.']` - type: `<class 'list'>`
----> baseline_answer: `A pot is essential for containing soil and providing a stable base, allowing the flower to absorb water and nutrients effectively for growth.` - type: `<class 'str'>`
 --> scores:  0.21818181818181817
----> per-field score: 0.21818181818181817
 --> Per-instance overall score: 0.2938346677477112
 --> Per-instance per-field breakdown: {'textarea': [0.23809523809523808, 0.3043478260869565, 0.30434782608695654, 0.125, 0.0, 0.04347826086956522, 0.10256410256410256, 0.21621621621621623, 0.2857142857142857, 0.20689655172413793, 0.0, 0.32000000000000006, 0.16, 0.29411764705882354, 0.1276595744680851, 0.0, 0.2105263157894737, 0.24390243902439024, 0.25, 0.0851063829787234, 0.14634146341463414, 0.2857142857142857, 0.3157894736842105, 0.4, 0.21739130434782608, 0.125, 0.24390243902439024, 0.0, 0.18750000000000003, 0.25, 0.38095238095238093, 0.16216216216216214, 0.15789473684210525, 0.0, 0.08888888888888888, 0.5714285714285714, 0.30434782608695654, 0.358974358974359, 0.21818181818181817]}
instance_id: 15627 <-> row_number: 224
Could not find input field with name `Step`
 --> inputs: ['rationale1', 'rationale2', 'rationale3']
 --> Looking up gold labels from row index 224 of `input.csv` (unique inputs). 
 --> input labels: {'rationale1': ['Cleats help the foot stay steady on the turf. A player wearing cleats can run faster.'], 'rationale2': ['A job interviewer expects  to see a resume. The resume lists the candidate’s education and previous jobs.'], 'rationale3': ['A door is the exit of a room or  building. The other side of the door is outside of the shop.']}
 - - - - - -  starting a new element: `Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale1
Executing one action: self.actions.modify_text('rationale1', 'Cleats provide better traction on turf, allowing for faster, more secure movements essential in football.')
Add text `Cleats provide better traction on turf, allowing for faster, more secure movements essential in football.` to this text input: <textarea rows="1" class="required inline-input" name="rationale1" placeholder="Why? ..." required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale2
Executing one action: self.actions.modify_text('rationale2', 'A resume systematically presents skills and experience, making it easier for the interviewer to understand PersonX’s qualifications.')
Add text `A resume systematically presents skills and experience, making it easier for the interviewer to understand PersonX’s qualifications.` to this text input: <textarea rows="1" class="required inline-input" name="rationale2" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale3
Executing one action: self.actions.modify_text('rationale3', 'To leave quickly, PersonX needs the door as an exit route and to signal they won’t tolerate poor service.')
Add text `To leave quickly, PersonX needs the door as an exit route and to signal they won’t tolerate poor service.` to this text input: <textarea rows="1" class="required inline-input" name="rationale3" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Cleats provide better traction on turf, allowing for faster, more secure movements essential in football.']
 visible_values : ['Cleats provide better traction on turf, allowing for faster, more secure movements essential in football.']
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['A resume systematically presents skills and experience, making it easier for the interviewer to understand PersonX’s qualifications.']
 visible_values : ['A resume systematically presents skills and experience, making it easier for the interviewer to understand PersonX’s qualifications.']
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['To leave quickly, PersonX needs the door as an exit route and to signal they won’t tolerate poor service.']
 visible_values : ['To leave quickly, PersonX needs the door as an exit route and to signal they won’t tolerate poor service.']
 ------- evaluating input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Cleats help the foot stay steady on the turf. A player wearing cleats can run faster.']`
----> answers: `['Cleats help the foot stay steady on the turf. A player wearing cleats can run faster.']` - type: `<class 'list'>`
----> baseline_answer: `Cleats provide better traction on turf, allowing for faster, more secure movements essential in football.` - type: `<class 'str'>`
 --> scores:  0.2580645161290323
----> per-field score: 0.2580645161290323
 ------- evaluating input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['A job interviewer expects  to see a resume. The resume lists the candidate’s education and previous jobs.']`
----> answers: `['A job interviewer expects  to see a resume. The resume lists the candidate’s education and previous jobs.']` - type: `<class 'list'>`
----> baseline_answer: `A resume systematically presents skills and experience, making it easier for the interviewer to understand PersonX’s qualifications.` - type: `<class 'str'>`
 --> scores:  0.2222222222222222
----> per-field score: 0.2222222222222222
 ------- evaluating input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['A door is the exit of a room or  building. The other side of the door is outside of the shop.']`
----> answers: `['A door is the exit of a room or  building. The other side of the door is outside of the shop.']` - type: `<class 'list'>`
----> baseline_answer: `To leave quickly, PersonX needs the door as an exit route and to signal they won’t tolerate poor service.` - type: `<class 'str'>`
 --> scores:  0.0975609756097561
----> per-field score: 0.0975609756097561
 --> Per-instance overall score: 0.1926159046536702
 --> Per-instance per-field breakdown: {'textarea': [0.23809523809523808, 0.3043478260869565, 0.30434782608695654, 0.125, 0.0, 0.04347826086956522, 0.10256410256410256, 0.21621621621621623, 0.2857142857142857, 0.20689655172413793, 0.0, 0.32000000000000006, 0.16, 0.29411764705882354, 0.1276595744680851, 0.0, 0.2105263157894737, 0.24390243902439024, 0.25, 0.0851063829787234, 0.14634146341463414, 0.2857142857142857, 0.3157894736842105, 0.4, 0.21739130434782608, 0.125, 0.24390243902439024, 0.0, 0.18750000000000003, 0.25, 0.38095238095238093, 0.16216216216216214, 0.15789473684210525, 0.0, 0.08888888888888888, 0.5714285714285714, 0.30434782608695654, 0.358974358974359, 0.21818181818181817, 0.2580645161290323, 0.2222222222222222, 0.0975609756097561]}
instance_id: 15811 <-> row_number: 408
Could not find input field with name `Step`
 --> inputs: ['rationale1', 'rationale2', 'rationale3']
 --> Looking up gold labels from row index 408 of `input.csv` (unique inputs). 
 --> input labels: {'rationale1': ['A suit allows a person to look professional and well groomed.'], 'rationale2': ['A purse is a cloth bag that holds money and other items to keep them safe and can be carried by handles.'], 'rationale3': ['A camera records an image to be viewed or printed later.']}
 - - - - - -  starting a new element: `Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale1
Executing one action: self.actions.modify_text('rationale1', 'A suit is traditionally considered formal attire, making it suitable for creating a positive impression during job interviews.')
Add text `A suit is traditionally considered formal attire, making it suitable for creating a positive impression during job interviews.` to this text input: <textarea rows="1" class="required inline-input" name="rationale1" placeholder="Why? ..." required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale2
Executing one action: self.actions.modify_text('rationale2', 'A purse is commonly used to carry personal items, including money, which makes it a convenient way to bring along cash for an allowance.')
Add text `A purse is commonly used to carry personal items, including money, which makes it a convenient way to bring along cash for an allowance.` to this text input: <textarea rows="1" class="required inline-input" name="rationale2" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale3
Executing one action: self.actions.modify_text('rationale3', 'Taking photos helps capture special moments to remember and share later. A camera, due to its ability to capture high-quality images, is ideal for documenting important events.')
Add text `Taking photos helps capture special moments to remember and share later. A camera, due to its ability to capture high-quality images, is ideal for documenting important events.` to this text input: <textarea rows="1" class="required inline-input" name="rationale3" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['A suit is traditionally considered formal attire, making it suitable for creating a positive impression during job interviews.']
 visible_values : ['A suit is traditionally considered formal attire, making it suitable for creating a positive impression during job interviews.']
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['A purse is commonly used to carry personal items, including money, which makes it a convenient way to bring along cash for an allowance.']
 visible_values : ['A purse is commonly used to carry personal items, including money, which makes it a convenient way to bring along cash for an allowance.']
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Taking photos helps capture special moments to remember and share later. A camera, due to its ability to capture high-quality images, is ideal for documenting important events.']
 visible_values : ['Taking photos helps capture special moments to remember and share later. A camera, due to its ability to capture high-quality images, is ideal for documenting important events.']
 ------- evaluating input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['A suit allows a person to look professional and well groomed.']`
----> answers: `['A suit allows a person to look professional and well groomed.']` - type: `<class 'list'>`
----> baseline_answer: `A suit is traditionally considered formal attire, making it suitable for creating a positive impression during job interviews.` - type: `<class 'str'>`
 --> scores:  0.20689655172413793
----> per-field score: 0.20689655172413793
 ------- evaluating input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['A purse is a cloth bag that holds money and other items to keep them safe and can be carried by handles.']`
----> answers: `['A purse is a cloth bag that holds money and other items to keep them safe and can be carried by handles.']` - type: `<class 'list'>`
----> baseline_answer: `A purse is commonly used to carry personal items, including money, which makes it a convenient way to bring along cash for an allowance.` - type: `<class 'str'>`
 --> scores:  0.21739130434782608
----> per-field score: 0.21739130434782608
 ------- evaluating input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['A camera records an image to be viewed or printed later.']`
----> answers: `['A camera records an image to be viewed or printed later.']` - type: `<class 'list'>`
----> baseline_answer: `Taking photos helps capture special moments to remember and share later. A camera, due to its ability to capture high-quality images, is ideal for documenting important events.` - type: `<class 'str'>`
 --> scores:  0.15384615384615383
----> per-field score: 0.15384615384615383
 --> Per-instance overall score: 0.1927113366393726
 --> Per-instance per-field breakdown: {'textarea': [0.23809523809523808, 0.3043478260869565, 0.30434782608695654, 0.125, 0.0, 0.04347826086956522, 0.10256410256410256, 0.21621621621621623, 0.2857142857142857, 0.20689655172413793, 0.0, 0.32000000000000006, 0.16, 0.29411764705882354, 0.1276595744680851, 0.0, 0.2105263157894737, 0.24390243902439024, 0.25, 0.0851063829787234, 0.14634146341463414, 0.2857142857142857, 0.3157894736842105, 0.4, 0.21739130434782608, 0.125, 0.24390243902439024, 0.0, 0.18750000000000003, 0.25, 0.38095238095238093, 0.16216216216216214, 0.15789473684210525, 0.0, 0.08888888888888888, 0.5714285714285714, 0.30434782608695654, 0.358974358974359, 0.21818181818181817, 0.2580645161290323, 0.2222222222222222, 0.0975609756097561, 0.20689655172413793, 0.21739130434782608, 0.15384615384615383]}
instance_id: 15611 <-> row_number: 208
Could not find input field with name `Step`
 --> inputs: ['rationale1', 'rationale2', 'rationale3']
 --> Looking up gold labels from row index 208 of `input.csv` (unique inputs). 
 --> input labels: {'rationale1': ['To be able to make a payment.'], 'rationale2': ['To comfort the burn.'], 'rationale3': ['To keep the soda cold.']}
 - - - - - -  starting a new element: `Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale1
Executing one action: self.actions.modify_text('rationale1', 'A credit card is used for online transactions. It facilitates secure payments for items bought on websites like Amazon.')
Add text `A credit card is used for online transactions. It facilitates secure payments for items bought on websites like Amazon.` to this text input: <textarea rows="1" class="required inline-input" name="rationale1" placeholder="Why? ..." required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale2
Executing one action: self.actions.modify_text('rationale2', 'Wrapping ice in a towel prevents direct skin contact, reducing the risk of ice burn and allowing a more comfortable application.')
Add text `Wrapping ice in a towel prevents direct skin contact, reducing the risk of ice burn and allowing a more comfortable application.` to this text input: <textarea rows="1" class="required inline-input" name="rationale2" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale3
Executing one action: self.actions.modify_text('rationale3', 'A fridge keeps drinks like soda cold, enhancing refreshment and taste when dehydrated.')
Add text `A fridge keeps drinks like soda cold, enhancing refreshment and taste when dehydrated.` to this text input: <textarea rows="1" class="required inline-input" name="rationale3" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['A credit card is used for online transactions. It facilitates secure payments for items bought on websites like Amazon.']
 visible_values : ['A credit card is used for online transactions. It facilitates secure payments for items bought on websites like Amazon.']
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Wrapping ice in a towel prevents direct skin contact, reducing the risk of ice burn and allowing a more comfortable application.']
 visible_values : ['Wrapping ice in a towel prevents direct skin contact, reducing the risk of ice burn and allowing a more comfortable application.']
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['A fridge keeps drinks like soda cold, enhancing refreshment and taste when dehydrated.']
 visible_values : ['A fridge keeps drinks like soda cold, enhancing refreshment and taste when dehydrated.']
 ------- evaluating input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['To be able to make a payment.']`
----> answers: `['To be able to make a payment.']` - type: `<class 'list'>`
----> baseline_answer: `A credit card is used for online transactions. It facilitates secure payments for items bought on websites like Amazon.` - type: `<class 'str'>`
 --> scores:  0.15384615384615385
----> per-field score: 0.15384615384615385
 ------- evaluating input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['To comfort the burn.']`
----> answers: `['To comfort the burn.']` - type: `<class 'list'>`
----> baseline_answer: `Wrapping ice in a towel prevents direct skin contact, reducing the risk of ice burn and allowing a more comfortable application.` - type: `<class 'str'>`
 --> scores:  0.16
----> per-field score: 0.16
 ------- evaluating input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['To keep the soda cold.']`
----> answers: `['To keep the soda cold.']` - type: `<class 'list'>`
----> baseline_answer: `A fridge keeps drinks like soda cold, enhancing refreshment and taste when dehydrated.` - type: `<class 'str'>`
 --> scores:  0.33333333333333337
----> per-field score: 0.33333333333333337
 --> Per-instance overall score: 0.21572649572649574
 --> Per-instance per-field breakdown: {'textarea': [0.23809523809523808, 0.3043478260869565, 0.30434782608695654, 0.125, 0.0, 0.04347826086956522, 0.10256410256410256, 0.21621621621621623, 0.2857142857142857, 0.20689655172413793, 0.0, 0.32000000000000006, 0.16, 0.29411764705882354, 0.1276595744680851, 0.0, 0.2105263157894737, 0.24390243902439024, 0.25, 0.0851063829787234, 0.14634146341463414, 0.2857142857142857, 0.3157894736842105, 0.4, 0.21739130434782608, 0.125, 0.24390243902439024, 0.0, 0.18750000000000003, 0.25, 0.38095238095238093, 0.16216216216216214, 0.15789473684210525, 0.0, 0.08888888888888888, 0.5714285714285714, 0.30434782608695654, 0.358974358974359, 0.21818181818181817, 0.2580645161290323, 0.2222222222222222, 0.0975609756097561, 0.20689655172413793, 0.21739130434782608, 0.15384615384615383, 0.15384615384615385, 0.16, 0.33333333333333337]}
instance_id: 15771 <-> row_number: 368
Could not find input field with name `Step`
 --> inputs: ['rationale1', 'rationale2', 'rationale3']
 --> Looking up gold labels from row index 368 of `input.csv` (unique inputs). 
 --> input labels: {'rationale1': ['So that the clips are hidden from view.'], 'rationale2': ['Sick people congregate in airports.'], 'rationale3': ['Car crashes usually occur on roadways.']}
 - - - - - -  starting a new element: `Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale1
Executing one action: self.actions.modify_text('rationale1', 'Backpacks are designed to hold and carry items efficiently, allowing PersonX to easily and discreetly store the clips without drawing attention.')
Add text `Backpacks are designed to hold and carry items efficiently, allowing PersonX to easily and discreetly store the clips without drawing attention.` to this text input: <textarea rows="1" class="required inline-input" name="rationale1" placeholder="Why? ..." required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale2
Executing one action: self.actions.modify_text('rationale2', 'Hand sanitizer kills germs on your hands. Airports have many people and surfaces that might carry germs.')
Add text `Hand sanitizer kills germs on your hands. Airports have many people and surfaces that might carry germs.` to this text input: <textarea rows="1" class="required inline-input" name="rationale2" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale3
Executing one action: self.actions.modify_text('rationale3', 'Roads are common places to witness traffic incidents, including crashes, due to the movement of vehicles.')
Add text `Roads are common places to witness traffic incidents, including crashes, due to the movement of vehicles.` to this text input: <textarea rows="1" class="required inline-input" name="rationale3" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Backpacks are designed to hold and carry items efficiently, allowing PersonX to easily and discreetly store the clips without drawing attention.']
 visible_values : ['Backpacks are designed to hold and carry items efficiently, allowing PersonX to easily and discreetly store the clips without drawing attention.']
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Hand sanitizer kills germs on your hands. Airports have many people and surfaces that might carry germs.']
 visible_values : ['Hand sanitizer kills germs on your hands. Airports have many people and surfaces that might carry germs.']
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Roads are common places to witness traffic incidents, including crashes, due to the movement of vehicles.']
 visible_values : ['Roads are common places to witness traffic incidents, including crashes, due to the movement of vehicles.']
 ------- evaluating input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['So that the clips are hidden from view.']`
----> answers: `['So that the clips are hidden from view.']` - type: `<class 'list'>`
----> baseline_answer: `Backpacks are designed to hold and carry items efficiently, allowing PersonX to easily and discreetly store the clips without drawing attention.` - type: `<class 'str'>`
 --> scores:  0.13793103448275862
----> per-field score: 0.13793103448275862
 ------- evaluating input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Sick people congregate in airports.']`
----> answers: `['Sick people congregate in airports.']` - type: `<class 'list'>`
----> baseline_answer: `Hand sanitizer kills germs on your hands. Airports have many people and surfaces that might carry germs.` - type: `<class 'str'>`
 --> scores:  0.0909090909090909
----> per-field score: 0.0909090909090909
 ------- evaluating input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Car crashes usually occur on roadways.']`
----> answers: `['Car crashes usually occur on roadways.']` - type: `<class 'list'>`
----> baseline_answer: `Roads are common places to witness traffic incidents, including crashes, due to the movement of vehicles.` - type: `<class 'str'>`
 --> scores:  0.09090909090909091
----> per-field score: 0.09090909090909091
 --> Per-instance overall score: 0.10658307210031348
 --> Per-instance per-field breakdown: {'textarea': [0.23809523809523808, 0.3043478260869565, 0.30434782608695654, 0.125, 0.0, 0.04347826086956522, 0.10256410256410256, 0.21621621621621623, 0.2857142857142857, 0.20689655172413793, 0.0, 0.32000000000000006, 0.16, 0.29411764705882354, 0.1276595744680851, 0.0, 0.2105263157894737, 0.24390243902439024, 0.25, 0.0851063829787234, 0.14634146341463414, 0.2857142857142857, 0.3157894736842105, 0.4, 0.21739130434782608, 0.125, 0.24390243902439024, 0.0, 0.18750000000000003, 0.25, 0.38095238095238093, 0.16216216216216214, 0.15789473684210525, 0.0, 0.08888888888888888, 0.5714285714285714, 0.30434782608695654, 0.358974358974359, 0.21818181818181817, 0.2580645161290323, 0.2222222222222222, 0.0975609756097561, 0.20689655172413793, 0.21739130434782608, 0.15384615384615383, 0.15384615384615385, 0.16, 0.33333333333333337, 0.13793103448275862, 0.0909090909090909, 0.09090909090909091]}
instance_id: 15761 <-> row_number: 358
Could not find input field with name `Step`
 --> inputs: ['rationale1', 'rationale2', 'rationale3']
 --> Looking up gold labels from row index 358 of `input.csv` (unique inputs). 
 --> input labels: {'rationale1': ['a camera is used to take both images and videos.'], 'rationale2': ['a face mask makes sure that when you cough or sneeze that the germs dont go flying'], 'rationale3': ['they may enjoy playing football and a football is needed to play the game']}
 - - - - - -  starting a new element: `Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale1
Executing one action: self.actions.modify_text('rationale1', '')
Since the input value is ``, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale2
Executing one action: self.actions.modify_text('rationale2', 'Wearing a face mask helps block respiratory droplets produced during coughing or sneezing, thus reducing the virus spread.')
Add text `Wearing a face mask helps block respiratory droplets produced during coughing or sneezing, thus reducing the virus spread.` to this text input: <textarea rows="1" class="required inline-input" name="rationale2" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale3
Executing one action: self.actions.modify_text('rationale3', 'A football is needed to make a touchdown because it is the essential equipment used in the game to score points by carrying it across the opponent's goal line.')
Failed to execute an action self.actions.modify_text('rationale3', 'A football is needed to make a touchdown because it is the essential equipment used in the game to score points by carrying it across the opponent's goal line.'), error: unterminated string literal (detected at line 1) (<string>, line 1)
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['']
 visible_values : ['']
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Wearing a face mask helps block respiratory droplets produced during coughing or sneezing, thus reducing the virus spread.']
 visible_values : ['Wearing a face mask helps block respiratory droplets produced during coughing or sneezing, thus reducing the virus spread.']
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['']
 visible_values : ['']
 ------- evaluating input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['a camera is used to take both images and videos.']`
----> answers: `['a camera is used to take both images and videos.']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['a face mask makes sure that when you cough or sneeze that the germs dont go flying']`
----> answers: `['a face mask makes sure that when you cough or sneeze that the germs dont go flying']` - type: `<class 'list'>`
----> baseline_answer: `Wearing a face mask helps block respiratory droplets produced during coughing or sneezing, thus reducing the virus spread.` - type: `<class 'str'>`
 --> scores:  0.39999999999999997
----> per-field score: 0.39999999999999997
 ------- evaluating input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['they may enjoy playing football and a football is needed to play the game']`
----> answers: `['they may enjoy playing football and a football is needed to play the game']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.13333333333333333
 --> Per-instance per-field breakdown: {'textarea': [0.23809523809523808, 0.3043478260869565, 0.30434782608695654, 0.125, 0.0, 0.04347826086956522, 0.10256410256410256, 0.21621621621621623, 0.2857142857142857, 0.20689655172413793, 0.0, 0.32000000000000006, 0.16, 0.29411764705882354, 0.1276595744680851, 0.0, 0.2105263157894737, 0.24390243902439024, 0.25, 0.0851063829787234, 0.14634146341463414, 0.2857142857142857, 0.3157894736842105, 0.4, 0.21739130434782608, 0.125, 0.24390243902439024, 0.0, 0.18750000000000003, 0.25, 0.38095238095238093, 0.16216216216216214, 0.15789473684210525, 0.0, 0.08888888888888888, 0.5714285714285714, 0.30434782608695654, 0.358974358974359, 0.21818181818181817, 0.2580645161290323, 0.2222222222222222, 0.0975609756097561, 0.20689655172413793, 0.21739130434782608, 0.15384615384615383, 0.15384615384615385, 0.16, 0.33333333333333337, 0.13793103448275862, 0.0909090909090909, 0.09090909090909091, 0.0, 0.39999999999999997, 0.0]}
instance_id: 15729 <-> row_number: 326
Could not find input field with name `Step`
 --> inputs: ['rationale1', 'rationale2', 'rationale3']
 --> Looking up gold labels from row index 326 of `input.csv` (unique inputs). 
 --> input labels: {'rationale1': ['Open the skull for medical records'], 'rationale2': ['Arrive at the destination faster than walking.'], 'rationale3': ['Consolidate their ideas on a piece of paper.']}
 - - - - - -  starting a new element: `Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale1
Executing one action: self.actions.modify_text('rationale1', '')
Since the input value is ``, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale2
Executing one action: self.actions.modify_text('rationale2', 'Trucks have the capacity to carry heavy loads and travel long distances, making them suitable for logistic purposes such as moving items from one location to another.')
Add text `Trucks have the capacity to carry heavy loads and travel long distances, making them suitable for logistic purposes such as moving items from one location to another.` to this text input: <textarea rows="1" class="required inline-input" name="rationale2" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale3
Executing one action: self.actions.modify_text('rationale3', 'An inkpen provides the precision needed for writing poetry, offering a traditional feel that can inspire creativity.')
Add text `An inkpen provides the precision needed for writing poetry, offering a traditional feel that can inspire creativity.` to this text input: <textarea rows="1" class="required inline-input" name="rationale3" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['']
 visible_values : ['']
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Trucks have the capacity to carry heavy loads and travel long distances, making them suitable for logistic purposes such as moving items from one location to another.']
 visible_values : ['Trucks have the capacity to carry heavy loads and travel long distances, making them suitable for logistic purposes such as moving items from one location to another.']
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['An inkpen provides the precision needed for writing poetry, offering a traditional feel that can inspire creativity.']
 visible_values : ['An inkpen provides the precision needed for writing poetry, offering a traditional feel that can inspire creativity.']
 ------- evaluating input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Open the skull for medical records']`
----> answers: `['Open the skull for medical records']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Arrive at the destination faster than walking.']`
----> answers: `['Arrive at the destination faster than walking.']` - type: `<class 'list'>`
----> baseline_answer: `Trucks have the capacity to carry heavy loads and travel long distances, making them suitable for logistic purposes such as moving items from one location to another.` - type: `<class 'str'>`
 --> scores:  0.058823529411764705
----> per-field score: 0.058823529411764705
 ------- evaluating input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['Consolidate their ideas on a piece of paper.']`
----> answers: `['Consolidate their ideas on a piece of paper.']` - type: `<class 'list'>`
----> baseline_answer: `An inkpen provides the precision needed for writing poetry, offering a traditional feel that can inspire creativity.` - type: `<class 'str'>`
 --> scores:  0.07999999999999999
----> per-field score: 0.07999999999999999
 --> Per-instance overall score: 0.04627450980392156
 --> Per-instance per-field breakdown: {'textarea': [0.23809523809523808, 0.3043478260869565, 0.30434782608695654, 0.125, 0.0, 0.04347826086956522, 0.10256410256410256, 0.21621621621621623, 0.2857142857142857, 0.20689655172413793, 0.0, 0.32000000000000006, 0.16, 0.29411764705882354, 0.1276595744680851, 0.0, 0.2105263157894737, 0.24390243902439024, 0.25, 0.0851063829787234, 0.14634146341463414, 0.2857142857142857, 0.3157894736842105, 0.4, 0.21739130434782608, 0.125, 0.24390243902439024, 0.0, 0.18750000000000003, 0.25, 0.38095238095238093, 0.16216216216216214, 0.15789473684210525, 0.0, 0.08888888888888888, 0.5714285714285714, 0.30434782608695654, 0.358974358974359, 0.21818181818181817, 0.2580645161290323, 0.2222222222222222, 0.0975609756097561, 0.20689655172413793, 0.21739130434782608, 0.15384615384615383, 0.15384615384615385, 0.16, 0.33333333333333337, 0.13793103448275862, 0.0909090909090909, 0.09090909090909091, 0.0, 0.39999999999999997, 0.0, 0.0, 0.058823529411764705, 0.07999999999999999]}
instance_id: 15419 <-> row_number: 16
Could not find input field with name `Step`
 --> inputs: ['rationale1', 'rationale2', 'rationale3']
 --> Looking up gold labels from row index 16 of `input.csv` (unique inputs). 
 --> input labels: {'rationale1': ['you need to have money to purchase anything'], 'rationale2': ['to contact someone on the spot, as cell phone is necessary'], 'rationale3': ['to speak with someone in an emergency over the phone, you would need to speak  to them which means you need to have a voice']}
 - - - - - -  starting a new element: `Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale1
Executing one action: self.actions.modify_text('rationale1', 'Currency, such as cash or cards, is universally accepted for transactions, allowing purchases in most settings, including shoe stores.')
Add text `Currency, such as cash or cards, is universally accepted for transactions, allowing purchases in most settings, including shoe stores.` to this text input: <textarea rows="1" class="required inline-input" name="rationale1" placeholder="Why? ..." required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale2
Executing one action: self.actions.modify_text('rationale2', 'Using a cell phone allows PersonX to quickly reach the janitorial staff without leaving the location of the mess.')
Add text `Using a cell phone allows PersonX to quickly reach the janitorial staff without leaving the location of the mess.` to this text input: <textarea rows="1" class="required inline-input" name="rationale2" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
 - - - - - -  starting a new element: `Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)` - - - - - -  
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
about to try executing one action, on the following input: rationale3
Executing one action: self.actions.modify_text('rationale3', 'A voice is essential for communication, especially in emergencies. To report an incident and request assistance, you need to verbally convey information to the operator.')
Add text `A voice is essential for communication, especially in emergencies. To report an incident and request assistance, you need to verbally convey information to the operator.` to this text input: <textarea rows="1" class="required inline-input" name="rationale3" placeholder="Why? ..." required="" style="height: 76px;"></textarea>
input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Currency, such as cash or cards, is universally accepted for transactions, allowing purchases in most settings, including shoe stores.']
 visible_values : ['Currency, such as cash or cards, is universally accepted for transactions, allowing purchases in most settings, including shoe stores.']
input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['Using a cell phone allows PersonX to quickly reach the janitorial staff without leaving the location of the mess.']
 visible_values : ['Using a cell phone allows PersonX to quickly reach the janitorial staff without leaving the location of the mess.']
input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`)
 visible : ['A voice is essential for communication, especially in emergencies. To report an incident and request assistance, you need to verbally convey information to the operator.']
 visible_values : ['A voice is essential for communication, especially in emergencies. To report an incident and request assistance, you need to verbally convey information to the operator.']
 ------- evaluating input: Input(name=`rationale1`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['you need to have money to purchase anything']`
----> answers: `['you need to have money to purchase anything']` - type: `<class 'list'>`
----> baseline_answer: `Currency, such as cash or cards, is universally accepted for transactions, allowing purchases in most settings, including shoe stores.` - type: `<class 'str'>`
 --> scores:  0.07407407407407407
----> per-field score: 0.07407407407407407
 ------- evaluating input: Input(name=`rationale2`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['to contact someone on the spot, as cell phone is necessary']`
----> answers: `['to contact someone on the spot, as cell phone is necessary']` - type: `<class 'list'>`
----> baseline_answer: `Using a cell phone allows PersonX to quickly reach the janitorial staff without leaving the location of the mess.` - type: `<class 'str'>`
 --> scores:  0.13333333333333333
----> per-field score: 0.13333333333333333
 ------- evaluating input: Input(name=`rationale3`, type=`textarea`, task=`ATOMIC - Object Rationale 13`) ------- 
answers after mapping: `['to speak with someone in an emergency over the phone, you would need to speak  to them which means you need to have a voice']`
----> answers: `['to speak with someone in an emergency over the phone, you would need to speak  to them which means you need to have a voice']` - type: `<class 'list'>`
----> baseline_answer: `A voice is essential for communication, especially in emergencies. To report an incident and request assistance, you need to verbally convey information to the operator.` - type: `<class 'str'>`
 --> scores:  0.24
----> per-field score: 0.24
 --> Per-instance overall score: 0.1491358024691358
 --> Per-instance per-field breakdown: {'textarea': [0.23809523809523808, 0.3043478260869565, 0.30434782608695654, 0.125, 0.0, 0.04347826086956522, 0.10256410256410256, 0.21621621621621623, 0.2857142857142857, 0.20689655172413793, 0.0, 0.32000000000000006, 0.16, 0.29411764705882354, 0.1276595744680851, 0.0, 0.2105263157894737, 0.24390243902439024, 0.25, 0.0851063829787234, 0.14634146341463414, 0.2857142857142857, 0.3157894736842105, 0.4, 0.21739130434782608, 0.125, 0.24390243902439024, 0.0, 0.18750000000000003, 0.25, 0.38095238095238093, 0.16216216216216214, 0.15789473684210525, 0.0, 0.08888888888888888, 0.5714285714285714, 0.30434782608695654, 0.358974358974359, 0.21818181818181817, 0.2580645161290323, 0.2222222222222222, 0.0975609756097561, 0.20689655172413793, 0.21739130434782608, 0.15384615384615383, 0.15384615384615385, 0.16, 0.33333333333333337, 0.13793103448275862, 0.0909090909090909, 0.09090909090909091, 0.0, 0.39999999999999997, 0.0, 0.0, 0.058823529411764705, 0.07999999999999999, 0.07407407407407407, 0.13333333333333333, 0.24]}
 = = = = = = = = = = = = starting new task: `Missing Adjective FITB` = = = = = = = = = = = = 
First instance id: 5903
instance_id: 5958 <-> row_number: 55
 --> inputs: ['Sent0FreeTextInput', 'Sent1FreeTextInput', 'Sent2FreeTextInput', 'Sent3FreeTextInput', 'Sent4FreeTextInput', 'Sent5FreeTextInput', 'Sent6FreeTextInput', 'Sent7FreeTextInput', 'Sent8FreeTextInput', 'Sent9FreeTextInput']
 --> Looking up gold labels from row index 55 of `input.csv` (unique inputs). 
 --> input labels: {'Sent0FreeTextInput': ['record', 'record, total', 'highest, largest', 'needed', 'final, record'], 'Sent1FreeTextInput': ['space', 'low-atmosphere, geostationary', 'direct', 'outer', 'polar, stable'], 'Sent2FreeTextInput': ['economic', 'real, lasting', 'greater, noticeable , direct', 'wanted', 'lasting, positive'], 'Sent3FreeTextInput': ['UN', 'UN', 'UN', 'national', 'French'], 'Sent4FreeTextInput': ['airbag', 'same', 'same', 'mechanical', 'steering'], 'Sent5FreeTextInput': ['foreign', 'financial, humanitarian', 'financial, relief', 'foreign', 'financial'], 'Sent6FreeTextInput': ['integral', 'easy, popular', 'easy, obvious', 'important', 'easy'], 'Sent7FreeTextInput': ['original', 'same', 'same', 'banking', 'original'], 'Sent8FreeTextInput': ['keen', 'close, sharp', 'cautious, close', 'close', 'sharp, wary'], 'Sent9FreeTextInput': ['last', 'last, this', 'last, this', 'last', 'last, this']}
 - - - - - -  starting a new element: `Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent0FreeTextInput
Executing one action: self.actions.modify_text('Sent0FreeTextInput', 'record')
Add text `record` to this text input: <input class="form-control" name="Sent0FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent1FreeTextInput
Executing one action: self.actions.modify_text('Sent1FreeTextInput', 'geostationary')
Add text `geostationary` to this text input: <input class="form-control" name="Sent1FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent2FreeTextInput
Executing one action: self.actions.modify_text('Sent2FreeTextInput', 'immediate')
Add text `immediate` to this text input: <input class="form-control" name="Sent2FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent3FreeTextInput
Executing one action: self.actions.modify_text('Sent3FreeTextInput', 'immediate')
Add text `immediate` to this text input: <input class="form-control" name="Sent3FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent4FreeTextInput
Executing one action: self.actions.modify_text('Sent4FreeTextInput', 'same')
Add text `same` to this text input: <input class="form-control" name="Sent4FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent5FreeTextInput
Executing one action: self.actions.modify_text('Sent5FreeTextInput', 'financial')
Add text `financial` to this text input: <input class="form-control" name="Sent5FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent6FreeTextInput
Executing one action: self.actions.modify_text('Sent6FreeTextInput', 'financial')
Add text `financial` to this text input: <input class="form-control" name="Sent6FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent7FreeTextInput
Executing one action: self.actions.modify_text('Sent7FreeTextInput', 'easy')
Add text `easy` to this text input: <input class="form-control" name="Sent7FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent8FreeTextInput
Executing one action: self.actions.modify_text('Sent8FreeTextInput', 'original')
Add text `original` to this text input: <input class="form-control" name="Sent8FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent9FreeTextInput
Executing one action: self.actions.modify_text('Sent9FreeTextInput', '')
Since the input value is ``, we are not going to modify the text.
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['record']
 visible_values : ['record']
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['geostationary']
 visible_values : ['geostationary']
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['immediate']
 visible_values : ['immediate']
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['immediate']
 visible_values : ['immediate']
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['same']
 visible_values : ['same']
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['financial']
 visible_values : ['financial']
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['financial']
 visible_values : ['financial']
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['easy']
 visible_values : ['easy']
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['original']
 visible_values : ['original']
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : [None]
 visible_values : [None]
 ------- evaluating input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['record', 'record, total', 'highest, largest', 'needed', 'final, record']`
----> answers: `['record', 'record, total', 'needed', 'final, record', 'highest, largest']` - type: `<class 'list'>`
----> baseline_answer: `record` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['space', 'low-atmosphere, geostationary', 'direct', 'outer', 'polar, stable']`
----> answers: `['low-atmosphere, geostationary', 'direct', 'polar, stable', 'space', 'outer']` - type: `<class 'list'>`
----> baseline_answer: `geostationary` - type: `<class 'str'>`
 --> scores:  0.5
----> per-field score: 0.5
 ------- evaluating input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['economic', 'real, lasting', 'greater, noticeable , direct', 'wanted', 'lasting, positive']`
----> answers: `['economic', 'greater, noticeable , direct', 'wanted', 'real, lasting', 'lasting, positive']` - type: `<class 'list'>`
----> baseline_answer: `immediate` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['UN', 'UN', 'UN', 'national', 'French']`
----> answers: `['French', 'UN', 'national']` - type: `<class 'list'>`
----> baseline_answer: `immediate` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['airbag', 'same', 'same', 'mechanical', 'steering']`
----> answers: `['same', 'airbag', 'steering', 'mechanical']` - type: `<class 'list'>`
----> baseline_answer: `same` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['foreign', 'financial, humanitarian', 'financial, relief', 'foreign', 'financial']`
----> answers: `['financial', 'financial, humanitarian', 'foreign', 'financial, relief']` - type: `<class 'list'>`
----> baseline_answer: `financial` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['integral', 'easy, popular', 'easy, obvious', 'important', 'easy']`
----> answers: `['integral', 'easy, obvious', 'easy', 'easy, popular', 'important']` - type: `<class 'list'>`
----> baseline_answer: `financial` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['original', 'same', 'same', 'banking', 'original']`
----> answers: `['same', 'original', 'banking']` - type: `<class 'list'>`
----> baseline_answer: `easy` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['keen', 'close, sharp', 'cautious, close', 'close', 'sharp, wary']`
----> answers: `['cautious, close', 'sharp, wary', 'close', 'keen', 'close, sharp']` - type: `<class 'list'>`
----> baseline_answer: `original` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['last', 'last, this', 'last, this', 'last', 'last, this']`
----> answers: `['last, this', 'last']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.35
 --> Per-instance per-field breakdown: {'text': [1.0, 0.5, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 5924 <-> row_number: 21
 --> inputs: ['Sent0FreeTextInput', 'Sent1FreeTextInput', 'Sent2FreeTextInput', 'Sent3FreeTextInput', 'Sent4FreeTextInput', 'Sent5FreeTextInput', 'Sent6FreeTextInput', 'Sent7FreeTextInput', 'Sent8FreeTextInput', 'Sent9FreeTextInput']
 --> Looking up gold labels from row index 21 of `input.csv` (unique inputs). 
 --> input labels: {'Sent0FreeTextInput': ['strong', 'real', 'risky', 'hated', 'risky'], 'Sent1FreeTextInput': ['fine', 'good', 'good', 'good', 'great'], 'Sent2FreeTextInput': ['cronic', 'long-lasting', 'unexpected', 'cancer', 'terminal'], 'Sent3FreeTextInput': ['historical', 'honorary', 'historic', 'breathtaking', 'probing research and'], 'Sent4FreeTextInput': ['agricultural', 'farm', 'arable', 'restricted', 'seized'], 'Sent5FreeTextInput': ['final', 'new', 'new', 'new', 'more peaceful'], 'Sent6FreeTextInput': ['Israeli', 'Obama', 'new', 'upcoming', 'new'], 'Sent7FreeTextInput': ['main', 'main', 'whole', 'core', 'single earning'], 'Sent8FreeTextInput': ['full', 'soccer', 'power, football', 'key', 'non'], 'Sent9FreeTextInput': ['cold', 'warm', 'lukewarm', 'cold', 'cold']}
 - - - - - -  starting a new element: `Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent0FreeTextInput
Executing one action: self.actions.modify_text('Sent0FreeTextInput', 'promising')
Add text `promising` to this text input: <input class="form-control" name="Sent0FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent1FreeTextInput
Executing one action: self.actions.modify_text('Sent1FreeTextInput', 'good')
Add text `good` to this text input: <input class="form-control" name="Sent1FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent2FreeTextInput
Executing one action: self.actions.modify_text('Sent2FreeTextInput', 'chronic')
Add text `chronic` to this text input: <input class="form-control" name="Sent2FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent3FreeTextInput
Executing one action: self.actions.modify_text('Sent3FreeTextInput', 'chronic')
Add text `chronic` to this text input: <input class="form-control" name="Sent3FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent4FreeTextInput
Executing one action: self.actions.modify_text('Sent4FreeTextInput', 'meticulous')
Add text `meticulous` to this text input: <input class="form-control" name="Sent4FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent5FreeTextInput
Executing one action: self.actions.modify_text('Sent5FreeTextInput', 'critical')
Add text `critical` to this text input: <input class="form-control" name="Sent5FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent6FreeTextInput
Executing one action: self.actions.modify_text('Sent6FreeTextInput', 'crucial')
Add text `crucial` to this text input: <input class="form-control" name="Sent6FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent7FreeTextInput
Executing one action: self.actions.modify_text('Sent7FreeTextInput', 'incoming')
Add text `incoming` to this text input: <input class="form-control" name="Sent7FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent8FreeTextInput
Executing one action: self.actions.modify_text('Sent8FreeTextInput', 'professional')
Add text `professional` to this text input: <input class="form-control" name="Sent8FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent9FreeTextInput
Executing one action: self.actions.modify_text('Sent9FreeTextInput', 'cold')
Add text `cold` to this text input: <input class="form-control" name="Sent9FreeTextInput" size="120" type="text">
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['promising']
 visible_values : ['promising']
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['good']
 visible_values : ['good']
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['chronic']
 visible_values : ['chronic']
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['chronic']
 visible_values : ['chronic']
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['meticulous']
 visible_values : ['meticulous']
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['critical']
 visible_values : ['critical']
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['crucial']
 visible_values : ['crucial']
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['incoming']
 visible_values : ['incoming']
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['professional']
 visible_values : ['professional']
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['cold']
 visible_values : ['cold']
 ------- evaluating input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['strong', 'real', 'risky', 'hated', 'risky']`
----> answers: `['risky', 'real', 'strong', 'hated']` - type: `<class 'list'>`
----> baseline_answer: `promising` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['fine', 'good', 'good', 'good', 'great']`
----> answers: `['great', 'good', 'fine']` - type: `<class 'list'>`
----> baseline_answer: `good` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['cronic', 'long-lasting', 'unexpected', 'cancer', 'terminal']`
----> answers: `['terminal', 'unexpected', 'long-lasting', 'cancer', 'cronic']` - type: `<class 'list'>`
----> baseline_answer: `chronic` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['historical', 'honorary', 'historic', 'breathtaking', 'probing research and']`
----> answers: `['breathtaking', 'honorary', 'historic', 'historical', 'probing research and']` - type: `<class 'list'>`
----> baseline_answer: `chronic` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['agricultural', 'farm', 'arable', 'restricted', 'seized']`
----> answers: `['agricultural', 'arable', 'farm', 'restricted', 'seized']` - type: `<class 'list'>`
----> baseline_answer: `meticulous` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['final', 'new', 'new', 'new', 'more peaceful']`
----> answers: `['final', 'more peaceful', 'new']` - type: `<class 'list'>`
----> baseline_answer: `critical` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['Israeli', 'Obama', 'new', 'upcoming', 'new']`
----> answers: `['Obama', 'upcoming', 'Israeli', 'new']` - type: `<class 'list'>`
----> baseline_answer: `crucial` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['main', 'main', 'whole', 'core', 'single earning']`
----> answers: `['core', 'main', 'single earning', 'whole']` - type: `<class 'list'>`
----> baseline_answer: `incoming` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['full', 'soccer', 'power, football', 'key', 'non']`
----> answers: `['key', 'full', 'soccer', 'non', 'power, football']` - type: `<class 'list'>`
----> baseline_answer: `professional` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['cold', 'warm', 'lukewarm', 'cold', 'cold']`
----> answers: `['cold', 'warm', 'lukewarm']` - type: `<class 'list'>`
----> baseline_answer: `cold` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.2
 --> Per-instance per-field breakdown: {'text': [1.0, 0.5, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]}
instance_id: 6000 <-> row_number: 97
 --> inputs: ['Sent0FreeTextInput', 'Sent1FreeTextInput', 'Sent2FreeTextInput', 'Sent3FreeTextInput', 'Sent4FreeTextInput', 'Sent5FreeTextInput', 'Sent6FreeTextInput', 'Sent7FreeTextInput', 'Sent8FreeTextInput', 'Sent9FreeTextInput']
 --> Looking up gold labels from row index 97 of `input.csv` (unique inputs). 
 --> input labels: {'Sent0FreeTextInput': ['PAPAL', 'major', 'first', 'Vatican', 'papal'], 'Sent1FreeTextInput': ['CHIEF', 'domestic', 'Humanitarian', 'foreign', 'political'], 'Sent2FreeTextInput': ['LARGE, UNPRECEDENTED', 'large', 'large', 'huge, large', 'large'], 'Sent3FreeTextInput': ['INTELLIGENCE', 'governmental', 'communications', 'global, foreign', 'political'], 'Sent4FreeTextInput': ['LAST, THIS', 'last', 'this', 'last, this', 'last'], 'Sent5FreeTextInput': ['THIRD, FIRST, SECOND, LAST', 'first', 'fourth', 'first, second, third, fourth', 'last'], 'Sent6FreeTextInput': ['TOTAL', 'financial', 'bipartisan', 'clear, agreed', 'powerful'], 'Sent7FreeTextInput': ['SOME', 'all', 'some', 'some', 'some'], 'Sent8FreeTextInput': ['ANCIENT', 'capital', 'Israeli', 'Israel', 'ancient'], 'Sent9FreeTextInput': ['LAST, THIS', 'last', 'last', 'last', 'last']}
 - - - - - -  starting a new element: `Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent0FreeTextInput
Executing one action: self.actions.modify_text('Sent0FreeTextInput', 'papal')
Add text `papal` to this text input: <input class="form-control" name="Sent0FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent1FreeTextInput
Executing one action: self.actions.modify_text('Sent1FreeTextInput', 'special')
Add text `special` to this text input: <input class="form-control" name="Sent1FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent2FreeTextInput
Executing one action: self.actions.modify_text('Sent2FreeTextInput', 'decisive')
Add text `decisive` to this text input: <input class="form-control" name="Sent2FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent3FreeTextInput
Executing one action: self.actions.modify_text('Sent3FreeTextInput', 'significant')
Add text `significant` to this text input: <input class="form-control" name="Sent3FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent4FreeTextInput
Executing one action: self.actions.modify_text('Sent4FreeTextInput', 'last')
Add text `last` to this text input: <input class="form-control" name="Sent4FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent5FreeTextInput
Executing one action: self.actions.modify_text('Sent5FreeTextInput', 'last')
Add text `last` to this text input: <input class="form-control" name="Sent5FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent6FreeTextInput
Executing one action: self.actions.modify_text('Sent6FreeTextInput', 'current')
Add text `current` to this text input: <input class="form-control" name="Sent6FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent7FreeTextInput
Executing one action: self.actions.modify_text('Sent7FreeTextInput', 'national')
Add text `national` to this text input: <input class="form-control" name="Sent7FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent8FreeTextInput
Executing one action: self.actions.modify_text('Sent8FreeTextInput', 'great')
Add text `great` to this text input: <input class="form-control" name="Sent8FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent9FreeTextInput
Executing one action: self.actions.modify_text('Sent9FreeTextInput', 'last')
Add text `last` to this text input: <input class="form-control" name="Sent9FreeTextInput" size="120" type="text">
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['papal']
 visible_values : ['papal']
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['special']
 visible_values : ['special']
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['decisive']
 visible_values : ['decisive']
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['significant']
 visible_values : ['significant']
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['last']
 visible_values : ['last']
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['last']
 visible_values : ['last']
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['current']
 visible_values : ['current']
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['national']
 visible_values : ['national']
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['great']
 visible_values : ['great']
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['last']
 visible_values : ['last']
 ------- evaluating input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['PAPAL', 'major', 'first', 'Vatican', 'papal']`
----> answers: `['major', 'Vatican', 'PAPAL', 'first', 'papal']` - type: `<class 'list'>`
----> baseline_answer: `papal` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['CHIEF', 'domestic', 'Humanitarian', 'foreign', 'political']`
----> answers: `['CHIEF', 'domestic', 'political', 'foreign', 'Humanitarian']` - type: `<class 'list'>`
----> baseline_answer: `special` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['LARGE, UNPRECEDENTED', 'large', 'large', 'huge, large', 'large']`
----> answers: `['LARGE, UNPRECEDENTED', 'large', 'huge, large']` - type: `<class 'list'>`
----> baseline_answer: `decisive` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['INTELLIGENCE', 'governmental', 'communications', 'global, foreign', 'political']`
----> answers: `['governmental', 'global, foreign', 'INTELLIGENCE', 'political', 'communications']` - type: `<class 'list'>`
----> baseline_answer: `significant` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['LAST, THIS', 'last', 'this', 'last, this', 'last']`
----> answers: `['LAST, THIS', 'this', 'last', 'last, this']` - type: `<class 'list'>`
----> baseline_answer: `last` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['THIRD, FIRST, SECOND, LAST', 'first', 'fourth', 'first, second, third, fourth', 'last']`
----> answers: `['last', 'fourth', 'first, second, third, fourth', 'first', 'THIRD, FIRST, SECOND, LAST']` - type: `<class 'list'>`
----> baseline_answer: `last` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['TOTAL', 'financial', 'bipartisan', 'clear, agreed', 'powerful']`
----> answers: `['financial', 'bipartisan', 'powerful', 'TOTAL', 'clear, agreed']` - type: `<class 'list'>`
----> baseline_answer: `current` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['SOME', 'all', 'some', 'some', 'some']`
----> answers: `['some', 'SOME', 'all']` - type: `<class 'list'>`
----> baseline_answer: `national` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['ANCIENT', 'capital', 'Israeli', 'Israel', 'ancient']`
----> answers: `['Israeli', 'Israel', 'capital', 'ANCIENT', 'ancient']` - type: `<class 'list'>`
----> baseline_answer: `great` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['LAST, THIS', 'last', 'last', 'last', 'last']`
----> answers: `['LAST, THIS', 'last']` - type: `<class 'list'>`
----> baseline_answer: `last` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.4
 --> Per-instance per-field breakdown: {'text': [1.0, 0.5, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0]}
instance_id: 5942 <-> row_number: 39
 --> inputs: ['Sent0FreeTextInput', 'Sent1FreeTextInput', 'Sent2FreeTextInput', 'Sent3FreeTextInput', 'Sent4FreeTextInput', 'Sent5FreeTextInput', 'Sent6FreeTextInput', 'Sent7FreeTextInput', 'Sent8FreeTextInput', 'Sent9FreeTextInput']
 --> Looking up gold labels from row index 39 of `input.csv` (unique inputs). 
 --> input labels: {'Sent0FreeTextInput': ['formal', 'Pitching', 'favorable', 'pitching', 'field'], 'Sent1FreeTextInput': ['mass', 'Mass', 'mass', 'mass', 'mass'], 'Sent2FreeTextInput': ['corporate', 'Of', 'political', 'total', 'equalizing'], 'Sent3FreeTextInput': ['final', 'Consecutive', 'consecutive', 'straight', 'straight'], 'Sent4FreeTextInput': ['final', 'Around', 'encompassing', 'encompassing', 'new'], 'Sent5FreeTextInput': ['into', 'To', 'during', 'all', 'this'], 'Sent6FreeTextInput': ['final', 'Second', 'latter', 'second', 'second'], 'Sent7FreeTextInput': ['old', 'Tour', "winners'", 'prized', 'old'], 'Sent8FreeTextInput': ['illegal', 'The', 'racist', 'criminal', 'his'], 'Sent9FreeTextInput': ['second', 'First', 'first', 'second', 'first']}
 - - - - - -  starting a new element: `Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent0FreeTextInput
Executing one action: self.actions.modify_text('Sent0FreeTextInput', 'successful')
Add text `successful` to this text input: <input class="form-control" name="Sent0FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent1FreeTextInput
Executing one action: self.actions.modify_text('Sent1FreeTextInput', 'mass')
Add text `mass` to this text input: <input class="form-control" name="Sent1FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent2FreeTextInput
Executing one action: self.actions.modify_text('Sent2FreeTextInput', 'global')
Add text `global` to this text input: <input class="form-control" name="Sent2FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent3FreeTextInput
Executing one action: self.actions.modify_text('Sent3FreeTextInput', 'consecutive')
Add text `consecutive` to this text input: <input class="form-control" name="Sent3FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent4FreeTextInput
Executing one action: self.actions.modify_text('Sent4FreeTextInput', 'consecutive')
Add text `consecutive` to this text input: <input class="form-control" name="Sent4FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent5FreeTextInput
Executing one action: self.actions.modify_text('Sent5FreeTextInput', '')
Since the input value is ``, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent6FreeTextInput
Executing one action: self.actions.modify_text('Sent6FreeTextInput', 'last')
Add text `last` to this text input: <input class="form-control" name="Sent6FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent7FreeTextInput
Executing one action: self.actions.modify_text('Sent7FreeTextInput', 'later')
Add text `later` to this text input: <input class="form-control" name="Sent7FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent8FreeTextInput
Executing one action: self.actions.modify_text('Sent8FreeTextInput', 'suspicious')
Add text `suspicious` to this text input: <input class="form-control" name="Sent8FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent9FreeTextInput
Executing one action: self.actions.modify_text('Sent9FreeTextInput', 'first')
Add text `first` to this text input: <input class="form-control" name="Sent9FreeTextInput" size="120" type="text">
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['successful']
 visible_values : ['successful']
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['mass']
 visible_values : ['mass']
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['global']
 visible_values : ['global']
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['consecutive']
 visible_values : ['consecutive']
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['consecutive']
 visible_values : ['consecutive']
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : [None]
 visible_values : [None]
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['last']
 visible_values : ['last']
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['later']
 visible_values : ['later']
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['suspicious']
 visible_values : ['suspicious']
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['first']
 visible_values : ['first']
 ------- evaluating input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['formal', 'Pitching', 'favorable', 'pitching', 'field']`
----> answers: `['Pitching', 'field', 'favorable', 'pitching', 'formal']` - type: `<class 'list'>`
----> baseline_answer: `successful` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['mass', 'Mass', 'mass', 'mass', 'mass']`
----> answers: `['Mass', 'mass']` - type: `<class 'list'>`
----> baseline_answer: `mass` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['corporate', 'Of', 'political', 'total', 'equalizing']`
----> answers: `['corporate', 'Of', 'political', 'total', 'equalizing']` - type: `<class 'list'>`
----> baseline_answer: `global` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['final', 'Consecutive', 'consecutive', 'straight', 'straight']`
----> answers: `['final', 'straight', 'consecutive', 'Consecutive']` - type: `<class 'list'>`
----> baseline_answer: `consecutive` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['final', 'Around', 'encompassing', 'encompassing', 'new']`
----> answers: `['final', 'encompassing', 'Around', 'new']` - type: `<class 'list'>`
----> baseline_answer: `consecutive` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['into', 'To', 'during', 'all', 'this']`
----> answers: `['this', 'To', 'into', 'during', 'all']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['final', 'Second', 'latter', 'second', 'second']`
----> answers: `['final', 'Second', 'latter', 'second']` - type: `<class 'list'>`
----> baseline_answer: `last` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['old', 'Tour', "winners'", 'prized', 'old']`
----> answers: `['prized', "winners'", 'Tour', 'old']` - type: `<class 'list'>`
----> baseline_answer: `later` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['illegal', 'The', 'racist', 'criminal', 'his']`
----> answers: `['criminal', 'The', 'illegal', 'racist', 'his']` - type: `<class 'list'>`
----> baseline_answer: `suspicious` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['second', 'First', 'first', 'second', 'first']`
----> answers: `['First', 'first', 'second']` - type: `<class 'list'>`
----> baseline_answer: `first` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.3
 --> Per-instance per-field breakdown: {'text': [1.0, 0.5, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]}
instance_id: 5951 <-> row_number: 48
 --> inputs: ['Sent0FreeTextInput', 'Sent1FreeTextInput', 'Sent2FreeTextInput', 'Sent3FreeTextInput', 'Sent4FreeTextInput', 'Sent5FreeTextInput', 'Sent6FreeTextInput', 'Sent7FreeTextInput', 'Sent8FreeTextInput', 'Sent9FreeTextInput']
 --> Looking up gold labels from row index 48 of `input.csv` (unique inputs). 
 --> input labels: {'Sent0FreeTextInput': ['feature', 'news', 'split', 'feature', 'wide'], 'Sent1FreeTextInput': ['first', 'first', 'first', 'first', 'first'], 'Sent2FreeTextInput': ['flood', 'car', 'premium', 'health', 'car'], 'Sent3FreeTextInput': ['industrial', 'television', 'Motorola', 'technology', 'phone'], 'Sent4FreeTextInput': ['high', 'middle', 'middle', 'private', 'high'], 'Sent5FreeTextInput': ['injured', 'batting', 'leave', 'injured', 'wait'], 'Sent6FreeTextInput': ['national', 'negative', 'national', 'national', 'massive'], 'Sent7FreeTextInput': ['muslim', 'Iranian', 'Iranian', 'rich', 'family'], 'Sent8FreeTextInput': ['government', 'executive', 'public', 'elected', 'state'], 'Sent9FreeTextInput': ['first', 'first', 'first', 'first', 'first']}
 - - - - - -  starting a new element: `Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent0FreeTextInput
Executing one action: self.actions.modify_text('Sent0FreeTextInput', 'editorial')
Add text `editorial` to this text input: <input class="form-control" name="Sent0FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent1FreeTextInput
Executing one action: self.actions.modify_text('Sent1FreeTextInput', 'first')
Add text `first` to this text input: <input class="form-control" name="Sent1FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent2FreeTextInput
Executing one action: self.actions.modify_text('Sent2FreeTextInput', 'life')
Add text `life` to this text input: <input class="form-control" name="Sent2FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent3FreeTextInput
Executing one action: self.actions.modify_text('Sent3FreeTextInput', 'Japanese')
Add text `Japanese` to this text input: <input class="form-control" name="Sent3FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent4FreeTextInput
Executing one action: self.actions.modify_text('Sent4FreeTextInput', 'Chinese')
Add text `Chinese` to this text input: <input class="form-control" name="Sent4FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent5FreeTextInput
Executing one action: self.actions.modify_text('Sent5FreeTextInput', 'disabled')
Add text `disabled` to this text input: <input class="form-control" name="Sent5FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent6FreeTextInput
Executing one action: self.actions.modify_text('Sent6FreeTextInput', 'disabled')
Add text `disabled` to this text input: <input class="form-control" name="Sent6FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent7FreeTextInput
Executing one action: self.actions.modify_text('Sent7FreeTextInput', 'national')
Add text `national` to this text input: <input class="form-control" name="Sent7FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent8FreeTextInput
Executing one action: self.actions.modify_text('Sent8FreeTextInput', 'influential')
Add text `influential` to this text input: <input class="form-control" name="Sent8FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent9FreeTextInput
Executing one action: self.actions.modify_text('Sent9FreeTextInput', 'first')
Add text `first` to this text input: <input class="form-control" name="Sent9FreeTextInput" size="120" type="text">
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['editorial']
 visible_values : ['editorial']
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['first']
 visible_values : ['first']
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['life']
 visible_values : ['life']
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['Japanese']
 visible_values : ['Japanese']
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['Chinese']
 visible_values : ['Chinese']
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['disabled']
 visible_values : ['disabled']
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['disabled']
 visible_values : ['disabled']
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['national']
 visible_values : ['national']
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['influential']
 visible_values : ['influential']
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['first']
 visible_values : ['first']
 ------- evaluating input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['feature', 'news', 'split', 'feature', 'wide']`
----> answers: `['split', 'feature', 'news', 'wide']` - type: `<class 'list'>`
----> baseline_answer: `editorial` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['first', 'first', 'first', 'first', 'first']`
----> answers: `['first']` - type: `<class 'list'>`
----> baseline_answer: `first` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['flood', 'car', 'premium', 'health', 'car']`
----> answers: `['premium', 'car', 'flood', 'health']` - type: `<class 'list'>`
----> baseline_answer: `life` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['industrial', 'television', 'Motorola', 'technology', 'phone']`
----> answers: `['industrial', 'technology', 'Motorola', 'phone', 'television']` - type: `<class 'list'>`
----> baseline_answer: `Japanese` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['high', 'middle', 'middle', 'private', 'high']`
----> answers: `['private', 'high', 'middle']` - type: `<class 'list'>`
----> baseline_answer: `Chinese` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['injured', 'batting', 'leave', 'injured', 'wait']`
----> answers: `['leave', 'batting', 'wait', 'injured']` - type: `<class 'list'>`
----> baseline_answer: `disabled` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['national', 'negative', 'national', 'national', 'massive']`
----> answers: `['massive', 'negative', 'national']` - type: `<class 'list'>`
----> baseline_answer: `disabled` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['muslim', 'Iranian', 'Iranian', 'rich', 'family']`
----> answers: `['family', 'rich', 'muslim', 'Iranian']` - type: `<class 'list'>`
----> baseline_answer: `national` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['government', 'executive', 'public', 'elected', 'state']`
----> answers: `['executive', 'government', 'state', 'public', 'elected']` - type: `<class 'list'>`
----> baseline_answer: `influential` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['first', 'first', 'first', 'first', 'first']`
----> answers: `['first']` - type: `<class 'list'>`
----> baseline_answer: `first` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.2
 --> Per-instance per-field breakdown: {'text': [1.0, 0.5, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]}
instance_id: 5964 <-> row_number: 61
 --> inputs: ['Sent0FreeTextInput', 'Sent1FreeTextInput', 'Sent2FreeTextInput', 'Sent3FreeTextInput', 'Sent4FreeTextInput', 'Sent5FreeTextInput', 'Sent6FreeTextInput', 'Sent7FreeTextInput', 'Sent8FreeTextInput', 'Sent9FreeTextInput']
 --> Looking up gold labels from row index 61 of `input.csv` (unique inputs). 
 --> input labels: {'Sent0FreeTextInput': ['national', 'Old', 'national', 'previous', 'yearly'], 'Sent1FreeTextInput': ['expected', 'Future', 'criminal', 'upcoming', 'political'], 'Sent2FreeTextInput': ['upcoming', 'Area', 'voting', 'school', 'school'], 'Sent3FreeTextInput': ['additional', 'New', 'new', 'new', 'brand new'], 'Sent4FreeTextInput': ['economic', 'Better, new', 'national', 'wage', 'economic'], 'Sent5FreeTextInput': ['aggressive', 'Isolated', 'domestic', 'abhorrent', 'questionable social'], 'Sent6FreeTextInput': ['cricket', 'To', 'losing', 'home', 'with a'], 'Sent7FreeTextInput': ['vast', 'Greater', 'decreasing', 'increasing', 'a record'], 'Sent8FreeTextInput': ['budgetary', 'Major', 'no', 'huge', 'questionable'], 'Sent9FreeTextInput': ['interest', 'Interest', 'high', 'interest', 'fed funds']}
 - - - - - -  starting a new element: `Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent0FreeTextInput
Executing one action: self.actions.modify_text('Sent0FreeTextInput', 'national')
Add text `national` to this text input: <input class="form-control" name="Sent0FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent1FreeTextInput
Executing one action: self.actions.modify_text('Sent1FreeTextInput', 'immediate')
Add text `immediate` to this text input: <input class="form-control" name="Sent1FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent2FreeTextInput
Executing one action: self.actions.modify_text('Sent2FreeTextInput', 'political')
Add text `political` to this text input: <input class="form-control" name="Sent2FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent3FreeTextInput
Executing one action: self.actions.modify_text('Sent3FreeTextInput', 'extensive')
Add text `extensive` to this text input: <input class="form-control" name="Sent3FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent4FreeTextInput
Executing one action: self.actions.modify_text('Sent4FreeTextInput', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent5FreeTextInput
Executing one action: self.actions.modify_text('Sent5FreeTextInput', 'aggressive')
Add text `aggressive` to this text input: <input class="form-control" name="Sent5FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent6FreeTextInput
Executing one action: self.actions.modify_text('Sent6FreeTextInput', 'aggressive')
Add text `aggressive` to this text input: <input class="form-control" name="Sent6FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent7FreeTextInput
Executing one action: self.actions.modify_text('Sent7FreeTextInput', 'unprecedented')
Add text `unprecedented` to this text input: <input class="form-control" name="Sent7FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent8FreeTextInput
Executing one action: self.actions.modify_text('Sent8FreeTextInput', 'significant')
Add text `significant` to this text input: <input class="form-control" name="Sent8FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent9FreeTextInput
Executing one action: self.actions.modify_text('Sent9FreeTextInput', 'interest')
Add text `interest` to this text input: <input class="form-control" name="Sent9FreeTextInput" size="120" type="text">
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['national']
 visible_values : ['national']
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['immediate']
 visible_values : ['immediate']
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['political']
 visible_values : ['political']
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['extensive']
 visible_values : ['extensive']
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : [None]
 visible_values : [None]
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['aggressive']
 visible_values : ['aggressive']
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['aggressive']
 visible_values : ['aggressive']
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['unprecedented']
 visible_values : ['unprecedented']
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['significant']
 visible_values : ['significant']
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['interest']
 visible_values : ['interest']
 ------- evaluating input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['national', 'Old', 'national', 'previous', 'yearly']`
----> answers: `['Old', 'yearly', 'previous', 'national']` - type: `<class 'list'>`
----> baseline_answer: `national` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['expected', 'Future', 'criminal', 'upcoming', 'political']`
----> answers: `['criminal', 'upcoming', 'expected', 'Future', 'political']` - type: `<class 'list'>`
----> baseline_answer: `immediate` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['upcoming', 'Area', 'voting', 'school', 'school']`
----> answers: `['school', 'upcoming', 'Area', 'voting']` - type: `<class 'list'>`
----> baseline_answer: `political` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['additional', 'New', 'new', 'new', 'brand new']`
----> answers: `['additional', 'New', 'brand new', 'new']` - type: `<class 'list'>`
----> baseline_answer: `extensive` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['economic', 'Better, new', 'national', 'wage', 'economic']`
----> answers: `['economic', 'wage', 'national', 'Better, new']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['aggressive', 'Isolated', 'domestic', 'abhorrent', 'questionable social']`
----> answers: `['Isolated', 'abhorrent', 'questionable social', 'domestic', 'aggressive']` - type: `<class 'list'>`
----> baseline_answer: `aggressive` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['cricket', 'To', 'losing', 'home', 'with a']`
----> answers: `['To', 'losing', 'with a', 'home', 'cricket']` - type: `<class 'list'>`
----> baseline_answer: `aggressive` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['vast', 'Greater', 'decreasing', 'increasing', 'a record']`
----> answers: `['increasing', 'decreasing', 'vast', 'Greater', 'a record']` - type: `<class 'list'>`
----> baseline_answer: `unprecedented` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['budgetary', 'Major', 'no', 'huge', 'questionable']`
----> answers: `['huge', 'budgetary', 'questionable', 'no', 'Major']` - type: `<class 'list'>`
----> baseline_answer: `significant` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['interest', 'Interest', 'high', 'interest', 'fed funds']`
----> answers: `['fed funds', 'high', 'interest', 'Interest']` - type: `<class 'list'>`
----> baseline_answer: `interest` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.3
 --> Per-instance per-field breakdown: {'text': [1.0, 0.5, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0]}
instance_id: 5909 <-> row_number: 6
 --> inputs: ['Sent0FreeTextInput', 'Sent1FreeTextInput', 'Sent2FreeTextInput', 'Sent3FreeTextInput', 'Sent4FreeTextInput', 'Sent5FreeTextInput', 'Sent6FreeTextInput', 'Sent7FreeTextInput', 'Sent8FreeTextInput', 'Sent9FreeTextInput']
 --> Looking up gold labels from row index 6 of `input.csv` (unique inputs). 
 --> input labels: {'Sent0FreeTextInput': ['republican', 'radical', 'political', 'Republican', 'government'], 'Sent1FreeTextInput': ['third', 'fourth', 'first', 'second, third,', 'second'], 'Sent2FreeTextInput': ['organized', 'open', 'outrageous', 'dangerous', 'violent'], 'Sent3FreeTextInput': ['weather', 'drought', 'financial, political', 'refugee', 'mid'], 'Sent4FreeTextInput': ['remote', 'northern', 'southern, western, northern, eastern', 'west', 'other'], 'Sent5FreeTextInput': ['superb', 'great', 'apt, complete', 'electronic', 'innate'], 'Sent6FreeTextInput': ['last', 'last', 'last', 'last', 'in the'], 'Sent7FreeTextInput': ['second', 'second', 'first', 'busy', 'second'], 'Sent8FreeTextInput': ['whole', 'law', 'entire', 'important', 'law'], 'Sent9FreeTextInput': ['recon', 'secret', 'exploratory', 'rescue', 'good']}
 - - - - - -  starting a new element: `Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent0FreeTextInput
Executing one action: self.actions.modify_text('Sent0FreeTextInput', 'rebel')
Add text `rebel` to this text input: <input class="form-control" name="Sent0FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent1FreeTextInput
Executing one action: self.actions.modify_text('Sent1FreeTextInput', 'second')
Add text `second` to this text input: <input class="form-control" name="Sent1FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent2FreeTextInput
Executing one action: self.actions.modify_text('Sent2FreeTextInput', 'angry')
Add text `angry` to this text input: <input class="form-control" name="Sent2FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent3FreeTextInput
Executing one action: self.actions.modify_text('Sent3FreeTextInput', 'angry')
Add text `angry` to this text input: <input class="form-control" name="Sent3FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent4FreeTextInput
Executing one action: self.actions.modify_text('Sent4FreeTextInput', '')
Since the input value is ``, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent5FreeTextInput
Executing one action: self.actions.modify_text('Sent5FreeTextInput', '')
Since the input value is ``, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent6FreeTextInput
Executing one action: self.actions.modify_text('Sent6FreeTextInput', 'innate')
Add text `innate` to this text input: <input class="form-control" name="Sent6FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent7FreeTextInput
Executing one action: self.actions.modify_text('Sent7FreeTextInput', 'last')
Add text `last` to this text input: <input class="form-control" name="Sent7FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent8FreeTextInput
Executing one action: self.actions.modify_text('Sent8FreeTextInput', 'entire')
Add text `entire` to this text input: <input class="form-control" name="Sent8FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent9FreeTextInput
Executing one action: self.actions.modify_text('Sent9FreeTextInput', 'humanitarian')
Add text `humanitarian` to this text input: <input class="form-control" name="Sent9FreeTextInput" size="120" type="text">
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['rebel']
 visible_values : ['rebel']
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['second']
 visible_values : ['second']
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['angry']
 visible_values : ['angry']
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['angry']
 visible_values : ['angry']
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : [None]
 visible_values : [None]
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : [None]
 visible_values : [None]
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['innate']
 visible_values : ['innate']
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['last']
 visible_values : ['last']
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['entire']
 visible_values : ['entire']
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['humanitarian']
 visible_values : ['humanitarian']
 ------- evaluating input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['republican', 'radical', 'political', 'Republican', 'government']`
----> answers: `['government', 'political', 'republican', 'radical', 'Republican']` - type: `<class 'list'>`
----> baseline_answer: `rebel` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['third', 'fourth', 'first', 'second, third,', 'second']`
----> answers: `['second, third,', 'fourth', 'second', 'third', 'first']` - type: `<class 'list'>`
----> baseline_answer: `second` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['organized', 'open', 'outrageous', 'dangerous', 'violent']`
----> answers: `['dangerous', 'violent', 'organized', 'outrageous', 'open']` - type: `<class 'list'>`
----> baseline_answer: `angry` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['weather', 'drought', 'financial, political', 'refugee', 'mid']`
----> answers: `['weather', 'refugee', 'drought', 'financial, political', 'mid']` - type: `<class 'list'>`
----> baseline_answer: `angry` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['remote', 'northern', 'southern, western, northern, eastern', 'west', 'other']`
----> answers: `['remote', 'other', 'northern', 'west', 'southern, western, northern, eastern']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['superb', 'great', 'apt, complete', 'electronic', 'innate']`
----> answers: `['superb', 'apt, complete', 'great', 'innate', 'electronic']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['last', 'last', 'last', 'last', 'in the']`
----> answers: `['in the', 'last']` - type: `<class 'list'>`
----> baseline_answer: `innate` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['second', 'second', 'first', 'busy', 'second']`
----> answers: `['busy', 'first', 'second']` - type: `<class 'list'>`
----> baseline_answer: `last` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['whole', 'law', 'entire', 'important', 'law']`
----> answers: `['important', 'law', 'entire', 'whole']` - type: `<class 'list'>`
----> baseline_answer: `entire` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['recon', 'secret', 'exploratory', 'rescue', 'good']`
----> answers: `['rescue', 'secret', 'recon', 'good', 'exploratory']` - type: `<class 'list'>`
----> baseline_answer: `humanitarian` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.2
 --> Per-instance per-field breakdown: {'text': [1.0, 0.5, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]}
instance_id: 5928 <-> row_number: 25
 --> inputs: ['Sent0FreeTextInput', 'Sent1FreeTextInput', 'Sent2FreeTextInput', 'Sent3FreeTextInput', 'Sent4FreeTextInput', 'Sent5FreeTextInput', 'Sent6FreeTextInput', 'Sent7FreeTextInput', 'Sent8FreeTextInput', 'Sent9FreeTextInput']
 --> Looking up gold labels from row index 25 of `input.csv` (unique inputs). 
 --> input labels: {'Sent0FreeTextInput': ['legal', 'legal', 'hearing', 'protective'], 'Sent1FreeTextInput': ['right', 'political', 'political', 'growing'], 'Sent2FreeTextInput': ['Lutheran', 'prime', 'Prime', 'foreign'], 'Sent3FreeTextInput': ['other', 'other', 'previous, other', 'previous'], 'Sent4FreeTextInput': ['sunlit', 'new', 'business', 'home'], 'Sent5FreeTextInput': ['literary', 'Iraqi', 'poetic', 'literary'], 'Sent6FreeTextInput': ['real', 'certain', 'daily, ongoing, continious', 'enduring'], 'Sent7FreeTextInput': ['legal', 'financial', 'political, state', 'future'], 'Sent8FreeTextInput': ['bad', 'inclimate', 'inclement', 'bad'], 'Sent9FreeTextInput': ['violent', 'political', 'brief, sudden', 'public']}
 - - - - - -  starting a new element: `Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent0FreeTextInput
Executing one action: self.actions.modify_text('Sent0FreeTextInput', 'eligible')
Add text `eligible` to this text input: <input class="form-control" name="Sent0FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent1FreeTextInput
Executing one action: self.actions.modify_text('Sent1FreeTextInput', 'crowded')
Add text `crowded` to this text input: <input class="form-control" name="Sent1FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent2FreeTextInput
Executing one action: self.actions.modify_text('Sent2FreeTextInput', 'cultural')
Add text `cultural` to this text input: <input class="form-control" name="Sent2FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent3FreeTextInput
Executing one action: self.actions.modify_text('Sent3FreeTextInput', 'cultural')
Add text `cultural` to this text input: <input class="form-control" name="Sent3FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent4FreeTextInput
Executing one action: self.actions.modify_text('Sent4FreeTextInput', 'previous')
Add text `previous` to this text input: <input class="form-control" name="Sent4FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent5FreeTextInput
Executing one action: self.actions.modify_text('Sent5FreeTextInput', 'cultural')
Add text `cultural` to this text input: <input class="form-control" name="Sent5FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent6FreeTextInput
Executing one action: self.actions.modify_text('Sent6FreeTextInput', 'literary')
Add text `literary` to this text input: <input class="form-control" name="Sent6FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent7FreeTextInput
Executing one action: self.actions.modify_text('Sent7FreeTextInput', 'unsettled')
Add text `unsettled` to this text input: <input class="form-control" name="Sent7FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent8FreeTextInput
Executing one action: self.actions.modify_text('Sent8FreeTextInput', 'adverse')
Add text `adverse` to this text input: <input class="form-control" name="Sent8FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent9FreeTextInput
Executing one action: self.actions.modify_text('Sent9FreeTextInput', 'financial')
Add text `financial` to this text input: <input class="form-control" name="Sent9FreeTextInput" size="120" type="text">
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['eligible']
 visible_values : ['eligible']
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['crowded']
 visible_values : ['crowded']
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['cultural']
 visible_values : ['cultural']
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['cultural']
 visible_values : ['cultural']
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['previous']
 visible_values : ['previous']
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['cultural']
 visible_values : ['cultural']
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['literary']
 visible_values : ['literary']
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['unsettled']
 visible_values : ['unsettled']
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['adverse']
 visible_values : ['adverse']
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['financial']
 visible_values : ['financial']
 ------- evaluating input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['legal', 'legal', 'hearing', 'protective']`
----> answers: `['protective', 'legal', 'hearing']` - type: `<class 'list'>`
----> baseline_answer: `eligible` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['right', 'political', 'political', 'growing']`
----> answers: `['right', 'political', 'growing']` - type: `<class 'list'>`
----> baseline_answer: `crowded` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['Lutheran', 'prime', 'Prime', 'foreign']`
----> answers: `['Lutheran', 'prime', 'foreign', 'Prime']` - type: `<class 'list'>`
----> baseline_answer: `cultural` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['other', 'other', 'previous, other', 'previous']`
----> answers: `['other', 'previous, other', 'previous']` - type: `<class 'list'>`
----> baseline_answer: `cultural` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['sunlit', 'new', 'business', 'home']`
----> answers: `['business', 'new', 'home', 'sunlit']` - type: `<class 'list'>`
----> baseline_answer: `previous` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['literary', 'Iraqi', 'poetic', 'literary']`
----> answers: `['Iraqi', 'poetic', 'literary']` - type: `<class 'list'>`
----> baseline_answer: `cultural` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['real', 'certain', 'daily, ongoing, continious', 'enduring']`
----> answers: `['certain', 'daily, ongoing, continious', 'real', 'enduring']` - type: `<class 'list'>`
----> baseline_answer: `literary` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['legal', 'financial', 'political, state', 'future']`
----> answers: `['financial', 'legal', 'future', 'political, state']` - type: `<class 'list'>`
----> baseline_answer: `unsettled` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['bad', 'inclimate', 'inclement', 'bad']`
----> answers: `['bad', 'inclimate', 'inclement']` - type: `<class 'list'>`
----> baseline_answer: `adverse` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['violent', 'political', 'brief, sudden', 'public']`
----> answers: `['political', 'brief, sudden', 'violent', 'public']` - type: `<class 'list'>`
----> baseline_answer: `financial` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [1.0, 0.5, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 5963 <-> row_number: 60
 --> inputs: ['Sent0FreeTextInput', 'Sent1FreeTextInput', 'Sent2FreeTextInput', 'Sent3FreeTextInput', 'Sent4FreeTextInput', 'Sent5FreeTextInput', 'Sent6FreeTextInput', 'Sent7FreeTextInput', 'Sent8FreeTextInput', 'Sent9FreeTextInput']
 --> Looking up gold labels from row index 60 of `input.csv` (unique inputs). 
 --> input labels: {'Sent0FreeTextInput': ['college', 'competitive', 'junior', 'professional', 'amateur'], 'Sent1FreeTextInput': ['good', 'good', 'good', 'good', 'enchanting'], 'Sent2FreeTextInput': ['next', 'review', 'this, next', 'next', 'next'], 'Sent3FreeTextInput': ['good', 'good', 'good', 'good', 'good'], 'Sent4FreeTextInput': ['powerfull', 'pivitol', 'economic, military', 'same', 'dominant'], 'Sent5FreeTextInput': ['mandatory', 'unlimited', 'extensive', 'initial', 'expanded'], 'Sent6FreeTextInput': ['comunist', 'state', 'Indian, U.S.', 'American', 'American'], 'Sent7FreeTextInput': ['first', 'first', 'first', 'first', 'first'], 'Sent8FreeTextInput': ['proper', 'only', 'best', 'perfect', 'best'], 'Sent9FreeTextInput': ['perminate', 'major', 'economic', 'further', 'immediate']}
 - - - - - -  starting a new element: `Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent0FreeTextInput
Executing one action: self.actions.modify_text('Sent0FreeTextInput', 'amateur')
Add text `amateur` to this text input: <input class="form-control" name="Sent0FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent1FreeTextInput
Executing one action: self.actions.modify_text('Sent1FreeTextInput', 'enjoyable')
Add text `enjoyable` to this text input: <input class="form-control" name="Sent1FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent2FreeTextInput
Executing one action: self.actions.modify_text('Sent2FreeTextInput', 'next')
Add text `next` to this text input: <input class="form-control" name="Sent2FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent3FreeTextInput
Executing one action: self.actions.modify_text('Sent3FreeTextInput', 'next')
Add text `next` to this text input: <input class="form-control" name="Sent3FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent4FreeTextInput
Executing one action: self.actions.modify_text('Sent4FreeTextInput', 'good')
Add text `good` to this text input: <input class="form-control" name="Sent4FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent5FreeTextInput
Executing one action: self.actions.modify_text('Sent5FreeTextInput', 'free')
Add text `free` to this text input: <input class="form-control" name="Sent5FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent6FreeTextInput
Executing one action: self.actions.modify_text('Sent6FreeTextInput', 'free')
Add text `free` to this text input: <input class="form-control" name="Sent6FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent7FreeTextInput
Executing one action: self.actions.modify_text('Sent7FreeTextInput', 'Indian')
Add text `Indian` to this text input: <input class="form-control" name="Sent7FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent8FreeTextInput
Executing one action: self.actions.modify_text('Sent8FreeTextInput', 'first')
Add text `first` to this text input: <input class="form-control" name="Sent8FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent9FreeTextInput
Executing one action: self.actions.modify_text('Sent9FreeTextInput', 'economic')
Add text `economic` to this text input: <input class="form-control" name="Sent9FreeTextInput" size="120" type="text">
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['amateur']
 visible_values : ['amateur']
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['enjoyable']
 visible_values : ['enjoyable']
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['next']
 visible_values : ['next']
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['next']
 visible_values : ['next']
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['good']
 visible_values : ['good']
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['free']
 visible_values : ['free']
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['free']
 visible_values : ['free']
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['Indian']
 visible_values : ['Indian']
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['first']
 visible_values : ['first']
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['economic']
 visible_values : ['economic']
 ------- evaluating input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['college', 'competitive', 'junior', 'professional', 'amateur']`
----> answers: `['college', 'competitive', 'professional', 'amateur', 'junior']` - type: `<class 'list'>`
----> baseline_answer: `amateur` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['good', 'good', 'good', 'good', 'enchanting']`
----> answers: `['enchanting', 'good']` - type: `<class 'list'>`
----> baseline_answer: `enjoyable` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['next', 'review', 'this, next', 'next', 'next']`
----> answers: `['this, next', 'next', 'review']` - type: `<class 'list'>`
----> baseline_answer: `next` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['good', 'good', 'good', 'good', 'good']`
----> answers: `['good']` - type: `<class 'list'>`
----> baseline_answer: `next` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['powerfull', 'pivitol', 'economic, military', 'same', 'dominant']`
----> answers: `['dominant', 'same', 'powerfull', 'economic, military', 'pivitol']` - type: `<class 'list'>`
----> baseline_answer: `good` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['mandatory', 'unlimited', 'extensive', 'initial', 'expanded']`
----> answers: `['extensive', 'initial', 'unlimited', 'mandatory', 'expanded']` - type: `<class 'list'>`
----> baseline_answer: `free` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['comunist', 'state', 'Indian, U.S.', 'American', 'American']`
----> answers: `['Indian, U.S.', 'American', 'state', 'comunist']` - type: `<class 'list'>`
----> baseline_answer: `free` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['first', 'first', 'first', 'first', 'first']`
----> answers: `['first']` - type: `<class 'list'>`
----> baseline_answer: `Indian` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['proper', 'only', 'best', 'perfect', 'best']`
----> answers: `['proper', 'perfect', 'best', 'only']` - type: `<class 'list'>`
----> baseline_answer: `first` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['perminate', 'major', 'economic', 'further', 'immediate']`
----> answers: `['major', 'perminate', 'economic', 'immediate', 'further']` - type: `<class 'list'>`
----> baseline_answer: `economic` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.3
 --> Per-instance per-field breakdown: {'text': [1.0, 0.5, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]}
instance_id: 5946 <-> row_number: 43
 --> inputs: ['Sent0FreeTextInput', 'Sent1FreeTextInput', 'Sent2FreeTextInput', 'Sent3FreeTextInput', 'Sent4FreeTextInput', 'Sent5FreeTextInput', 'Sent6FreeTextInput', 'Sent7FreeTextInput', 'Sent8FreeTextInput', 'Sent9FreeTextInput']
 --> Looking up gold labels from row index 43 of `input.csv` (unique inputs). 
 --> input labels: {'Sent0FreeTextInput': ['national', 'media', 'public', 'international', 'worldwide'], 'Sent1FreeTextInput': ['untapped, untouched', 'black', 'fresh, abundant', 'enough', 'increased'], 'Sent2FreeTextInput': ['small, single', 'fried', 'small', 'small', 'large'], 'Sent3FreeTextInput': ['left, right', 'left', 'left', 'right', 'left'], 'Sent4FreeTextInput': ['first, next', 'paved', 'fourth', 'first', '4th'], 'Sent5FreeTextInput': ['national, divisional', 'champion', 'series', 'state', 'championship'], 'Sent6FreeTextInput': ['Israel, Palestinian', 'new', 'local', 'Israeli', 'Israeli'], 'Sent7FreeTextInput': ['damaged, increasing', 'harsh', 'political', 'global', 'social'], 'Sent8FreeTextInput': ['grand', 'season', 'grand', 'inaugural', 'grand'], 'Sent9FreeTextInput': ['negotiation, ambassador', 'national', 'American', 'Pakistani', 'allied']}
 - - - - - -  starting a new element: `Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent0FreeTextInput
Executing one action: self.actions.modify_text('Sent0FreeTextInput', 'widespread')
Add text `widespread` to this text input: <input class="form-control" name="Sent0FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent1FreeTextInput
Executing one action: self.actions.modify_text('Sent1FreeTextInput', 'ample')
Add text `ample` to this text input: <input class="form-control" name="Sent1FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent2FreeTextInput
Executing one action: self.actions.modify_text('Sent2FreeTextInput', 'small')
Add text `small` to this text input: <input class="form-control" name="Sent2FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent3FreeTextInput
Executing one action: self.actions.modify_text('Sent3FreeTextInput', 'small')
Add text `small` to this text input: <input class="form-control" name="Sent3FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent4FreeTextInput
Executing one action: self.actions.modify_text('Sent4FreeTextInput', 'rear')
Add text `rear` to this text input: <input class="form-control" name="Sent4FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent5FreeTextInput
Executing one action: self.actions.modify_text('Sent5FreeTextInput', 'national')
Add text `national` to this text input: <input class="form-control" name="Sent5FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent6FreeTextInput
Executing one action: self.actions.modify_text('Sent6FreeTextInput', 'national')
Add text `national` to this text input: <input class="form-control" name="Sent6FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent7FreeTextInput
Executing one action: self.actions.modify_text('Sent7FreeTextInput', '')
Since the input value is ``, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent8FreeTextInput
Executing one action: self.actions.modify_text('Sent8FreeTextInput', 'grand')
Add text `grand` to this text input: <input class="form-control" name="Sent8FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent9FreeTextInput
Executing one action: self.actions.modify_text('Sent9FreeTextInput', 'American')
Add text `American` to this text input: <input class="form-control" name="Sent9FreeTextInput" size="120" type="text">
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['widespread']
 visible_values : ['widespread']
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['ample']
 visible_values : ['ample']
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['small']
 visible_values : ['small']
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['small']
 visible_values : ['small']
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['rear']
 visible_values : ['rear']
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['national']
 visible_values : ['national']
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['national']
 visible_values : ['national']
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : [None]
 visible_values : [None]
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['grand']
 visible_values : ['grand']
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['American']
 visible_values : ['American']
 ------- evaluating input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['national', 'media', 'public', 'international', 'worldwide']`
----> answers: `['worldwide', 'national', 'public', 'international', 'media']` - type: `<class 'list'>`
----> baseline_answer: `widespread` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['untapped, untouched', 'black', 'fresh, abundant', 'enough', 'increased']`
----> answers: `['increased', 'black', 'untapped, untouched', 'enough', 'fresh, abundant']` - type: `<class 'list'>`
----> baseline_answer: `ample` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['small, single', 'fried', 'small', 'small', 'large']`
----> answers: `['fried', 'large', 'small, single', 'small']` - type: `<class 'list'>`
----> baseline_answer: `small` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['left, right', 'left', 'left', 'right', 'left']`
----> answers: `['right', 'left', 'left, right']` - type: `<class 'list'>`
----> baseline_answer: `small` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['first, next', 'paved', 'fourth', 'first', '4th']`
----> answers: `['first, next', 'fourth', 'first', 'paved', '4th']` - type: `<class 'list'>`
----> baseline_answer: `rear` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['national, divisional', 'champion', 'series', 'state', 'championship']`
----> answers: `['championship', 'national, divisional', 'state', 'series', 'champion']` - type: `<class 'list'>`
----> baseline_answer: `national` - type: `<class 'str'>`
 --> scores:  0.6666666666666666
----> per-field score: 0.6666666666666666
 ------- evaluating input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['Israel, Palestinian', 'new', 'local', 'Israeli', 'Israeli']`
----> answers: `['Israel, Palestinian', 'local', 'Israeli', 'new']` - type: `<class 'list'>`
----> baseline_answer: `national` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['damaged, increasing', 'harsh', 'political', 'global', 'social']`
----> answers: `['global', 'damaged, increasing', 'political', 'social', 'harsh']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['grand', 'season', 'grand', 'inaugural', 'grand']`
----> answers: `['inaugural', 'grand', 'season']` - type: `<class 'list'>`
----> baseline_answer: `grand` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['negotiation, ambassador', 'national', 'American', 'Pakistani', 'allied']`
----> answers: `['American', 'Pakistani', 'negotiation, ambassador', 'national', 'allied']` - type: `<class 'list'>`
----> baseline_answer: `American` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.36666666666666664
 --> Per-instance per-field breakdown: {'text': [1.0, 0.5, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 1.0, 1.0]}
instance_id: 5986 <-> row_number: 83
 --> inputs: ['Sent0FreeTextInput', 'Sent1FreeTextInput', 'Sent2FreeTextInput', 'Sent3FreeTextInput', 'Sent4FreeTextInput', 'Sent5FreeTextInput', 'Sent6FreeTextInput', 'Sent7FreeTextInput', 'Sent8FreeTextInput', 'Sent9FreeTextInput']
 --> Looking up gold labels from row index 83 of `input.csv` (unique inputs). 
 --> input labels: {'Sent0FreeTextInput': ['this', 'last', 'last', 'last', 'last'], 'Sent1FreeTextInput': ['ticker tat', 'long', 'large', 'ticker-tape', 'long'], 'Sent2FreeTextInput': ['serious', 'neurological', 'permanent', 'permanent neurological', 'long term'], 'Sent3FreeTextInput': ['star', 'best', 'starting', 'leading', 'starting'], 'Sent4FreeTextInput': ['first', 'female', 'elected', 'sitting', 'Mexican'], 'Sent5FreeTextInput': ['professional', 'well-known', 'internal', 'outstanding noted', 'paid'], 'Sent6FreeTextInput': ['new', 'new', 'new', 'current', 'new'], 'Sent7FreeTextInput': ['managing', 'assistant', "paper's", 'chief', 'sports'], 'Sent8FreeTextInput': ['Peaceful', 'Raw', 'TRUE', 'Sincere', 'TRUE'], 'Sent9FreeTextInput': ['break', 'under', 'vacation', 'normal clocked', 'pay']}
 - - - - - -  starting a new element: `Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent0FreeTextInput
Executing one action: self.actions.modify_text('Sent0FreeTextInput', 'last')
Add text `last` to this text input: <input class="form-control" name="Sent0FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent1FreeTextInput
Executing one action: self.actions.modify_text('Sent1FreeTextInput', 'victory')
Add text `victory` to this text input: <input class="form-control" name="Sent1FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent2FreeTextInput
Executing one action: self.actions.modify_text('Sent2FreeTextInput', 'potential')
Add text `potential` to this text input: <input class="form-control" name="Sent2FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent3FreeTextInput
Executing one action: self.actions.modify_text('Sent3FreeTextInput', 'potential')
Add text `potential` to this text input: <input class="form-control" name="Sent3FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent4FreeTextInput
Executing one action: self.actions.modify_text('Sent4FreeTextInput', 'former')
Add text `former` to this text input: <input class="form-control" name="Sent4FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent5FreeTextInput
Executing one action: self.actions.modify_text('Sent5FreeTextInput', 'former')
Add text `former` to this text input: <input class="form-control" name="Sent5FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent6FreeTextInput
Executing one action: self.actions.modify_text('Sent6FreeTextInput', 'Israeli')
Add text `Israeli` to this text input: <input class="form-control" name="Sent6FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent7FreeTextInput
Executing one action: self.actions.modify_text('Sent7FreeTextInput', 'new')
Add text `new` to this text input: <input class="form-control" name="Sent7FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent8FreeTextInput
Executing one action: self.actions.modify_text('Sent8FreeTextInput', 'unwavering')
Add text `unwavering` to this text input: <input class="form-control" name="Sent8FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent9FreeTextInput
Executing one action: self.actions.modify_text('Sent9FreeTextInput', 'police')
Add text `police` to this text input: <input class="form-control" name="Sent9FreeTextInput" size="120" type="text">
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['last']
 visible_values : ['last']
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['victory']
 visible_values : ['victory']
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['potential']
 visible_values : ['potential']
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['potential']
 visible_values : ['potential']
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['former']
 visible_values : ['former']
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['former']
 visible_values : ['former']
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['Israeli']
 visible_values : ['Israeli']
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['new']
 visible_values : ['new']
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['unwavering']
 visible_values : ['unwavering']
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['police']
 visible_values : ['police']
 ------- evaluating input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['this', 'last', 'last', 'last', 'last']`
----> answers: `['this', 'last']` - type: `<class 'list'>`
----> baseline_answer: `last` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['ticker tat', 'long', 'large', 'ticker-tape', 'long']`
----> answers: `['large', 'long', 'ticker tat', 'ticker-tape']` - type: `<class 'list'>`
----> baseline_answer: `victory` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['serious', 'neurological', 'permanent', 'permanent neurological', 'long term']`
----> answers: `['permanent neurological', 'neurological', 'serious', 'long term', 'permanent']` - type: `<class 'list'>`
----> baseline_answer: `potential` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['star', 'best', 'starting', 'leading', 'starting']`
----> answers: `['starting', 'leading', 'best', 'star']` - type: `<class 'list'>`
----> baseline_answer: `potential` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['first', 'female', 'elected', 'sitting', 'Mexican']`
----> answers: `['female', 'first', 'sitting', 'Mexican', 'elected']` - type: `<class 'list'>`
----> baseline_answer: `former` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['professional', 'well-known', 'internal', 'outstanding noted', 'paid']`
----> answers: `['outstanding noted', 'internal', 'well-known', 'paid', 'professional']` - type: `<class 'list'>`
----> baseline_answer: `former` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['new', 'new', 'new', 'current', 'new']`
----> answers: `['current', 'new']` - type: `<class 'list'>`
----> baseline_answer: `Israeli` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['managing', 'assistant', "paper's", 'chief', 'sports']`
----> answers: `['sports', 'assistant', 'chief', "paper's", 'managing']` - type: `<class 'list'>`
----> baseline_answer: `new` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['Peaceful', 'Raw', 'TRUE', 'Sincere', 'TRUE']`
----> answers: `['Raw', 'TRUE', 'Sincere', 'Peaceful']` - type: `<class 'list'>`
----> baseline_answer: `unwavering` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['break', 'under', 'vacation', 'normal clocked', 'pay']`
----> answers: `['vacation', 'break', 'under', 'normal clocked', 'pay']` - type: `<class 'list'>`
----> baseline_answer: `police` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.1
 --> Per-instance per-field breakdown: {'text': [1.0, 0.5, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 5934 <-> row_number: 31
 --> inputs: ['Sent0FreeTextInput', 'Sent1FreeTextInput', 'Sent2FreeTextInput', 'Sent3FreeTextInput', 'Sent4FreeTextInput', 'Sent5FreeTextInput', 'Sent6FreeTextInput', 'Sent7FreeTextInput', 'Sent8FreeTextInput', 'Sent9FreeTextInput']
 --> Looking up gold labels from row index 31 of `input.csv` (unique inputs). 
 --> input labels: {'Sent0FreeTextInput': ['the direct', 'direct', 'full', 'overhead', 'full, partial'], 'Sent1FreeTextInput': ['lastlack of', 'last', 'last, this', 'last', 'last'], 'Sent2FreeTextInput': ['lack of', 'first', 'total', 'only, most', 'recent'], 'Sent3FreeTextInput': ['lay offs', 'national', 'educational', 'negotiation', 'complete, federal'], 'Sent4FreeTextInput': ['big', 'ongoing', 'usual', 'biggest, next', 'big, major, biggest'], 'Sent5FreeTextInput': ['adoption', 'fostering', 'court, adoption', 'adoption', 'adoption, legal'], 'Sent6FreeTextInput': ['Congressional', 'national', 'national', 'UN, government', 'democratic, state'], 'Sent7FreeTextInput': ['press', 'open', 'public', 'press', 'public'], 'Sent8FreeTextInput': ['civilian', 'national', 'national', 'military, political, business', 'democratic, state'], 'Sent9FreeTextInput': ['child care', 'social', 'medical', 'education, unemployment', 'judicial']}
 - - - - - -  starting a new element: `Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent0FreeTextInput
Executing one action: self.actions.modify_text('Sent0FreeTextInput', 'full')
Add text `full` to this text input: <input class="form-control" name="Sent0FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent1FreeTextInput
Executing one action: self.actions.modify_text('Sent1FreeTextInput', 'last')
Add text `last` to this text input: <input class="form-control" name="Sent1FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent2FreeTextInput
Executing one action: self.actions.modify_text('Sent2FreeTextInput', 'only')
Add text `only` to this text input: <input class="form-control" name="Sent2FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent3FreeTextInput
Executing one action: self.actions.modify_text('Sent3FreeTextInput', 'strict')
Add text `strict` to this text input: <input class="form-control" name="Sent3FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent4FreeTextInput
Executing one action: self.actions.modify_text('Sent4FreeTextInput', 'strict')
Add text `strict` to this text input: <input class="form-control" name="Sent4FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent5FreeTextInput
Executing one action: self.actions.modify_text('Sent5FreeTextInput', 'adoption')
Add text `adoption` to this text input: <input class="form-control" name="Sent5FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent6FreeTextInput
Executing one action: self.actions.modify_text('Sent6FreeTextInput', 'adoption')
Add text `adoption` to this text input: <input class="form-control" name="Sent6FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent7FreeTextInput
Executing one action: self.actions.modify_text('Sent7FreeTextInput', 'diplomatic')
Add text `diplomatic` to this text input: <input class="form-control" name="Sent7FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent8FreeTextInput
Executing one action: self.actions.modify_text('Sent8FreeTextInput', 'civilian')
Add text `civilian` to this text input: <input class="form-control" name="Sent8FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent9FreeTextInput
Executing one action: self.actions.modify_text('Sent9FreeTextInput', 'education')
Add text `education` to this text input: <input class="form-control" name="Sent9FreeTextInput" size="120" type="text">
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['full']
 visible_values : ['full']
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['last']
 visible_values : ['last']
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['only']
 visible_values : ['only']
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['strict']
 visible_values : ['strict']
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['strict']
 visible_values : ['strict']
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['adoption']
 visible_values : ['adoption']
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['adoption']
 visible_values : ['adoption']
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['diplomatic']
 visible_values : ['diplomatic']
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['civilian']
 visible_values : ['civilian']
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['education']
 visible_values : ['education']
 ------- evaluating input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['the direct', 'direct', 'full', 'overhead', 'full, partial']`
----> answers: `['full, partial', 'full', 'direct', 'overhead', 'the direct']` - type: `<class 'list'>`
----> baseline_answer: `full` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['lastlack of', 'last', 'last, this', 'last', 'last']`
----> answers: `['last, this', 'lastlack of', 'last']` - type: `<class 'list'>`
----> baseline_answer: `last` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['lack of', 'first', 'total', 'only, most', 'recent']`
----> answers: `['total', 'recent', 'only, most', 'lack of', 'first']` - type: `<class 'list'>`
----> baseline_answer: `only` - type: `<class 'str'>`
 --> scores:  0.6666666666666666
----> per-field score: 0.6666666666666666
 ------- evaluating input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['lay offs', 'national', 'educational', 'negotiation', 'complete, federal']`
----> answers: `['lay offs', 'educational', 'national', 'negotiation', 'complete, federal']` - type: `<class 'list'>`
----> baseline_answer: `strict` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['big', 'ongoing', 'usual', 'biggest, next', 'big, major, biggest']`
----> answers: `['biggest, next', 'ongoing', 'big, major, biggest', 'big', 'usual']` - type: `<class 'list'>`
----> baseline_answer: `strict` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['adoption', 'fostering', 'court, adoption', 'adoption', 'adoption, legal']`
----> answers: `['court, adoption', 'fostering', 'adoption', 'adoption, legal']` - type: `<class 'list'>`
----> baseline_answer: `adoption` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['Congressional', 'national', 'national', 'UN, government', 'democratic, state']`
----> answers: `['Congressional', 'UN, government', 'democratic, state', 'national']` - type: `<class 'list'>`
----> baseline_answer: `adoption` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['press', 'open', 'public', 'press', 'public']`
----> answers: `['open', 'public', 'press']` - type: `<class 'list'>`
----> baseline_answer: `diplomatic` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['civilian', 'national', 'national', 'military, political, business', 'democratic, state']`
----> answers: `['democratic, state', 'military, political, business', 'civilian', 'national']` - type: `<class 'list'>`
----> baseline_answer: `civilian` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['child care', 'social', 'medical', 'education, unemployment', 'judicial']`
----> answers: `['judicial', 'medical', 'child care', 'social', 'education, unemployment']` - type: `<class 'list'>`
----> baseline_answer: `education` - type: `<class 'str'>`
 --> scores:  0.6666666666666666
----> per-field score: 0.6666666666666666
 --> Per-instance overall score: 0.5333333333333333
 --> Per-instance per-field breakdown: {'text': [1.0, 0.5, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.6666666666666666, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.6666666666666666]}
instance_id: 5988 <-> row_number: 85
 --> inputs: ['Sent0FreeTextInput', 'Sent1FreeTextInput', 'Sent2FreeTextInput', 'Sent3FreeTextInput', 'Sent4FreeTextInput', 'Sent5FreeTextInput', 'Sent6FreeTextInput', 'Sent7FreeTextInput', 'Sent8FreeTextInput', 'Sent9FreeTextInput']
 --> Looking up gold labels from row index 85 of `input.csv` (unique inputs). 
 --> input labels: {'Sent0FreeTextInput': ['entertainment', 'longest-running', 'longest-running', 'premier', 'oldest'], 'Sent1FreeTextInput': ['anger', 'mental', 'well-known', 'drinking', 'financial'], 'Sent2FreeTextInput': ['fourth', 'first', 'current', 'second', 'second'], 'Sent3FreeTextInput': ['national', 'Kuwait', 'eastern', 'southern', 'closed'], 'Sent4FreeTextInput': ['second', 'respectable', 'daring', 'surprising', 'inspired'], 'Sent5FreeTextInput': ['home', 'talented', 'popular', 'entire', 'elite'], 'Sent6FreeTextInput': ['final', 'blue', 'staggering', 'blue', 'blue'], 'Sent7FreeTextInput': ['new', 'struggling', 'Spanish', 'main', 'athletic'], 'Sent8FreeTextInput': ['home', 'seasonal', 'batting', 'season', 'overall'], 'Sent9FreeTextInput': ['second', 'strangest, funniest', 'surprising', 'important', 'funniest']}
 - - - - - -  starting a new element: `Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent0FreeTextInput
Executing one action: self.actions.modify_text('Sent0FreeTextInput', 'longest')
Add text `longest` to this text input: <input class="form-control" name="Sent0FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent1FreeTextInput
Executing one action: self.actions.modify_text('Sent1FreeTextInput', 'significant')
Add text `significant` to this text input: <input class="form-control" name="Sent1FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent2FreeTextInput
Executing one action: self.actions.modify_text('Sent2FreeTextInput', 'final')
Add text `final` to this text input: <input class="form-control" name="Sent2FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent3FreeTextInput
Executing one action: self.actions.modify_text('Sent3FreeTextInput', '')
Since the input value is ``, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent4FreeTextInput
Executing one action: self.actions.modify_text('Sent4FreeTextInput', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent5FreeTextInput
Executing one action: self.actions.modify_text('Sent5FreeTextInput', 'most competitive')
Add text `most competitive` to this text input: <input class="form-control" name="Sent5FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent6FreeTextInput
Executing one action: self.actions.modify_text('Sent6FreeTextInput', 'strongest')
Add text `strongest` to this text input: <input class="form-control" name="Sent6FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent7FreeTextInput
Executing one action: self.actions.modify_text('Sent7FreeTextInput', 'blue-chip')
Add text `blue-chip` to this text input: <input class="form-control" name="Sent7FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent8FreeTextInput
Executing one action: self.actions.modify_text('Sent8FreeTextInput', 'winning')
Add text `winning` to this text input: <input class="form-control" name="Sent8FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent9FreeTextInput
Executing one action: self.actions.modify_text('Sent9FreeTextInput', 'same')
Add text `same` to this text input: <input class="form-control" name="Sent9FreeTextInput" size="120" type="text">
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['longest']
 visible_values : ['longest']
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['significant']
 visible_values : ['significant']
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['final']
 visible_values : ['final']
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : [None]
 visible_values : [None]
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : [None]
 visible_values : [None]
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['most competitive']
 visible_values : ['most competitive']
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['strongest']
 visible_values : ['strongest']
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['blue-chip']
 visible_values : ['blue-chip']
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['winning']
 visible_values : ['winning']
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['same']
 visible_values : ['same']
 ------- evaluating input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['entertainment', 'longest-running', 'longest-running', 'premier', 'oldest']`
----> answers: `['premier', 'oldest', 'longest-running', 'entertainment']` - type: `<class 'list'>`
----> baseline_answer: `longest` - type: `<class 'str'>`
 --> scores:  0.6666666666666666
----> per-field score: 0.6666666666666666
 ------- evaluating input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['anger', 'mental', 'well-known', 'drinking', 'financial']`
----> answers: `['financial', 'well-known', 'mental', 'drinking', 'anger']` - type: `<class 'list'>`
----> baseline_answer: `significant` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['fourth', 'first', 'current', 'second', 'second']`
----> answers: `['second', 'fourth', 'current', 'first']` - type: `<class 'list'>`
----> baseline_answer: `final` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['national', 'Kuwait', 'eastern', 'southern', 'closed']`
----> answers: `['Kuwait', 'eastern', 'national', 'closed', 'southern']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['second', 'respectable', 'daring', 'surprising', 'inspired']`
----> answers: `['second', 'respectable', 'inspired', 'daring', 'surprising']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['home', 'talented', 'popular', 'entire', 'elite']`
----> answers: `['home', 'talented', 'entire', 'popular', 'elite']` - type: `<class 'list'>`
----> baseline_answer: `most competitive` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['final', 'blue', 'staggering', 'blue', 'blue']`
----> answers: `['final', 'blue', 'staggering']` - type: `<class 'list'>`
----> baseline_answer: `strongest` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['new', 'struggling', 'Spanish', 'main', 'athletic']`
----> answers: `['Spanish', 'main', 'new', 'struggling', 'athletic']` - type: `<class 'list'>`
----> baseline_answer: `blue-chip` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['home', 'seasonal', 'batting', 'season', 'overall']`
----> answers: `['seasonal', 'overall', 'home', 'batting', 'season']` - type: `<class 'list'>`
----> baseline_answer: `winning` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['second', 'strangest, funniest', 'surprising', 'important', 'funniest']`
----> answers: `['funniest', 'strangest, funniest', 'second', 'surprising', 'important']` - type: `<class 'list'>`
----> baseline_answer: `same` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.06666666666666667
 --> Per-instance per-field breakdown: {'text': [1.0, 0.5, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.6666666666666666, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 5905 <-> row_number: 2
 --> inputs: ['Sent0FreeTextInput', 'Sent1FreeTextInput', 'Sent2FreeTextInput', 'Sent3FreeTextInput', 'Sent4FreeTextInput', 'Sent5FreeTextInput', 'Sent6FreeTextInput', 'Sent7FreeTextInput', 'Sent8FreeTextInput', 'Sent9FreeTextInput']
 --> Looking up gold labels from row index 2 of `input.csv` (unique inputs). 
 --> input labels: {'Sent0FreeTextInput': ['harsh', 'hard', 'good', 'hard', 'hard'], 'Sent1FreeTextInput': ['monthly', 'revised', 'average', 'quarterly', 'sale'], 'Sent2FreeTextInput': ['scrappy', 'single', 'east', 'talented, robust', 'new'], 'Sent3FreeTextInput': ['first', 'final', 'one', 'last', 'last'], 'Sent4FreeTextInput': ['military', 'international', 'much', 'trade, financial', 'political, financial'], 'Sent5FreeTextInput': ['eastern', 'Eastern', 'Eastern', 'local', 'local'], 'Sent6FreeTextInput': ['bluefin', 'bluefin', 'speckled', 'yellowfin, bigeye', 'Australia'], 'Sent7FreeTextInput': ['ernest', 'elderly', 'ugly', 'old, ambitious', 'amicable'], 'Sent8FreeTextInput': ['prime', 'prime', 'prime', 'Prime, Defense, Intelligence', 'Arabian, financial'], 'Sent9FreeTextInput': ['physical', 'court', 'state', 'forensic', 'new']}
 - - - - - -  starting a new element: `Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent0FreeTextInput
Executing one action: self.actions.modify_text('Sent0FreeTextInput', 'harsh')
Add text `harsh` to this text input: <input class="form-control" name="Sent0FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent1FreeTextInput
Executing one action: self.actions.modify_text('Sent1FreeTextInput', 'annual')
Add text `annual` to this text input: <input class="form-control" name="Sent1FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent2FreeTextInput
Executing one action: self.actions.modify_text('Sent2FreeTextInput', 'veteran')
Add text `veteran` to this text input: <input class="form-control" name="Sent2FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent3FreeTextInput
Executing one action: self.actions.modify_text('Sent3FreeTextInput', 'disciplined')
Add text `disciplined` to this text input: <input class="form-control" name="Sent3FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent4FreeTextInput
Executing one action: self.actions.modify_text('Sent4FreeTextInput', 'first')
Add text `first` to this text input: <input class="form-control" name="Sent4FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent5FreeTextInput
Executing one action: self.actions.modify_text('Sent5FreeTextInput', 'local')
Add text `local` to this text input: <input class="form-control" name="Sent5FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent6FreeTextInput
Executing one action: self.actions.modify_text('Sent6FreeTextInput', 'local')
Add text `local` to this text input: <input class="form-control" name="Sent6FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent7FreeTextInput
Executing one action: self.actions.modify_text('Sent7FreeTextInput', 'affable')
Add text `affable` to this text input: <input class="form-control" name="Sent7FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent8FreeTextInput
Executing one action: self.actions.modify_text('Sent8FreeTextInput', 'affable')
Add text `affable` to this text input: <input class="form-control" name="Sent8FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent9FreeTextInput
Executing one action: self.actions.modify_text('Sent9FreeTextInput', 'incriminating')
Add text `incriminating` to this text input: <input class="form-control" name="Sent9FreeTextInput" size="120" type="text">
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['harsh']
 visible_values : ['harsh']
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['annual']
 visible_values : ['annual']
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['veteran']
 visible_values : ['veteran']
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['disciplined']
 visible_values : ['disciplined']
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['first']
 visible_values : ['first']
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['local']
 visible_values : ['local']
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['local']
 visible_values : ['local']
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['affable']
 visible_values : ['affable']
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['affable']
 visible_values : ['affable']
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['incriminating']
 visible_values : ['incriminating']
 ------- evaluating input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['harsh', 'hard', 'good', 'hard', 'hard']`
----> answers: `['hard', 'good', 'harsh']` - type: `<class 'list'>`
----> baseline_answer: `harsh` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['monthly', 'revised', 'average', 'quarterly', 'sale']`
----> answers: `['monthly', 'average', 'quarterly', 'sale', 'revised']` - type: `<class 'list'>`
----> baseline_answer: `annual` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['scrappy', 'single', 'east', 'talented, robust', 'new']`
----> answers: `['talented, robust', 'single', 'new', 'east', 'scrappy']` - type: `<class 'list'>`
----> baseline_answer: `veteran` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['first', 'final', 'one', 'last', 'last']`
----> answers: `['final', 'one', 'last', 'first']` - type: `<class 'list'>`
----> baseline_answer: `disciplined` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['military', 'international', 'much', 'trade, financial', 'political, financial']`
----> answers: `['political, financial', 'military', 'much', 'international', 'trade, financial']` - type: `<class 'list'>`
----> baseline_answer: `first` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['eastern', 'Eastern', 'Eastern', 'local', 'local']`
----> answers: `['eastern', 'Eastern', 'local']` - type: `<class 'list'>`
----> baseline_answer: `local` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['bluefin', 'bluefin', 'speckled', 'yellowfin, bigeye', 'Australia']`
----> answers: `['Australia', 'speckled', 'yellowfin, bigeye', 'bluefin']` - type: `<class 'list'>`
----> baseline_answer: `local` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['ernest', 'elderly', 'ugly', 'old, ambitious', 'amicable']`
----> answers: `['ernest', 'elderly', 'old, ambitious', 'ugly', 'amicable']` - type: `<class 'list'>`
----> baseline_answer: `affable` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['prime', 'prime', 'prime', 'Prime, Defense, Intelligence', 'Arabian, financial']`
----> answers: `['prime', 'Arabian, financial', 'Prime, Defense, Intelligence']` - type: `<class 'list'>`
----> baseline_answer: `affable` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['physical', 'court', 'state', 'forensic', 'new']`
----> answers: `['physical', 'court', 'state', 'forensic', 'new']` - type: `<class 'list'>`
----> baseline_answer: `incriminating` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.2
 --> Per-instance per-field breakdown: {'text': [1.0, 0.5, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.6666666666666666, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 5973 <-> row_number: 70
 --> inputs: ['Sent0FreeTextInput', 'Sent1FreeTextInput', 'Sent2FreeTextInput', 'Sent3FreeTextInput', 'Sent4FreeTextInput', 'Sent5FreeTextInput', 'Sent6FreeTextInput', 'Sent7FreeTextInput', 'Sent8FreeTextInput', 'Sent9FreeTextInput']
 --> Looking up gold labels from row index 70 of `input.csv` (unique inputs). 
 --> input labels: {'Sent0FreeTextInput': ['budget', 'budget', 'national', 'debt', 'financial'], 'Sent1FreeTextInput': ['global', 'family', 'national', 'female', 'important'], 'Sent2FreeTextInput': ['key', 'large', 'pivotal', 'critical', 'vital'], 'Sent3FreeTextInput': ['recorded', 'living', 'evolutionary', 'known', 'bleak'], 'Sent4FreeTextInput': ['next', 'next', 'first', 'first', 'next'], 'Sent5FreeTextInput': ['gay', 'gay', 'same-sex', 'gay', 'gay'], 'Sent6FreeTextInput': ['new', 'constitutional', 'whole', 'complete', 'complete, total'], 'Sent7FreeTextInput': ['continuous', '10 year', 'male', 'continual', 'total'], 'Sent8FreeTextInput': ['Soviet', 'WW2', 'old', 'Soviet', 'war, Soviet'], 'Sent9FreeTextInput': ['young', 'young', 'infant', 'beautiful', 'beautiful']}
 - - - - - -  starting a new element: `Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent0FreeTextInput
Executing one action: self.actions.modify_text('Sent0FreeTextInput', 'current')
Add text `current` to this text input: <input class="form-control" name="Sent0FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent1FreeTextInput
Executing one action: self.actions.modify_text('Sent1FreeTextInput', 'global')
Add text `global` to this text input: <input class="form-control" name="Sent1FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent2FreeTextInput
Executing one action: self.actions.modify_text('Sent2FreeTextInput', 'key')
Add text `key` to this text input: <input class="form-control" name="Sent2FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent3FreeTextInput
Executing one action: self.actions.modify_text('Sent3FreeTextInput', 'key')
Add text `key` to this text input: <input class="form-control" name="Sent3FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent4FreeTextInput
Executing one action: self.actions.modify_text('Sent4FreeTextInput', 'entire documented')
Add text `entire documented` to this text input: <input class="form-control" name="Sent4FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent5FreeTextInput
Executing one action: self.actions.modify_text('Sent5FreeTextInput', 'same')
Add text `same` to this text input: <input class="form-control" name="Sent5FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent6FreeTextInput
Executing one action: self.actions.modify_text('Sent6FreeTextInput', 'same-sex')
Add text `same-sex` to this text input: <input class="form-control" name="Sent6FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent7FreeTextInput
Executing one action: self.actions.modify_text('Sent7FreeTextInput', 'comprehensive')
Add text `comprehensive` to this text input: <input class="form-control" name="Sent7FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent8FreeTextInput
Executing one action: self.actions.modify_text('Sent8FreeTextInput', 'Soviet')
Add text `Soviet` to this text input: <input class="form-control" name="Sent8FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent9FreeTextInput
Executing one action: self.actions.modify_text('Sent9FreeTextInput', 'beautiful')
Add text `beautiful` to this text input: <input class="form-control" name="Sent9FreeTextInput" size="120" type="text">
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['current']
 visible_values : ['current']
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['global']
 visible_values : ['global']
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['key']
 visible_values : ['key']
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['key']
 visible_values : ['key']
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['entire documented']
 visible_values : ['entire documented']
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['same']
 visible_values : ['same']
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['same-sex']
 visible_values : ['same-sex']
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['comprehensive']
 visible_values : ['comprehensive']
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['Soviet']
 visible_values : ['Soviet']
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['beautiful']
 visible_values : ['beautiful']
 ------- evaluating input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['budget', 'budget', 'national', 'debt', 'financial']`
----> answers: `['financial', 'debt', 'budget', 'national']` - type: `<class 'list'>`
----> baseline_answer: `current` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['global', 'family', 'national', 'female', 'important']`
----> answers: `['global', 'family', 'female', 'national', 'important']` - type: `<class 'list'>`
----> baseline_answer: `global` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['key', 'large', 'pivotal', 'critical', 'vital']`
----> answers: `['key', 'vital', 'critical', 'large', 'pivotal']` - type: `<class 'list'>`
----> baseline_answer: `key` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['recorded', 'living', 'evolutionary', 'known', 'bleak']`
----> answers: `['living', 'known', 'evolutionary', 'bleak', 'recorded']` - type: `<class 'list'>`
----> baseline_answer: `key` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['next', 'next', 'first', 'first', 'next']`
----> answers: `['next', 'first']` - type: `<class 'list'>`
----> baseline_answer: `entire documented` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['gay', 'gay', 'same-sex', 'gay', 'gay']`
----> answers: `['same-sex', 'gay']` - type: `<class 'list'>`
----> baseline_answer: `same` - type: `<class 'str'>`
 --> scores:  0.6666666666666666
----> per-field score: 0.6666666666666666
 ------- evaluating input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['new', 'constitutional', 'whole', 'complete', 'complete, total']`
----> answers: `['complete, total', 'whole', 'new', 'complete', 'constitutional']` - type: `<class 'list'>`
----> baseline_answer: `same-sex` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['continuous', '10 year', 'male', 'continual', 'total']`
----> answers: `['continual', 'male', 'continuous', '10 year', 'total']` - type: `<class 'list'>`
----> baseline_answer: `comprehensive` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['Soviet', 'WW2', 'old', 'Soviet', 'war, Soviet']`
----> answers: `['war, Soviet', 'old', 'Soviet', 'WW2']` - type: `<class 'list'>`
----> baseline_answer: `Soviet` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['young', 'young', 'infant', 'beautiful', 'beautiful']`
----> answers: `['infant', 'young', 'beautiful']` - type: `<class 'list'>`
----> baseline_answer: `beautiful` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.4666666666666666
 --> Per-instance per-field breakdown: {'text': [1.0, 0.5, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.6666666666666666, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 1.0, 1.0]}
instance_id: 5913 <-> row_number: 10
 --> inputs: ['Sent0FreeTextInput', 'Sent1FreeTextInput', 'Sent2FreeTextInput', 'Sent3FreeTextInput', 'Sent4FreeTextInput', 'Sent5FreeTextInput', 'Sent6FreeTextInput', 'Sent7FreeTextInput', 'Sent8FreeTextInput', 'Sent9FreeTextInput']
 --> Looking up gold labels from row index 10 of `input.csv` (unique inputs). 
 --> input labels: {'Sent0FreeTextInput': ['mass', 'mass', 'mass', 'mass', 'mass'], 'Sent1FreeTextInput': ['increased', 'increased', 'huge', 'high', 'increasing'], 'Sent2FreeTextInput': ['rate', 'price', 'usual', 'price', 'temporary'], 'Sent3FreeTextInput': ['popular', 'popular', 'popular', 'popular', 'popular'], 'Sent4FreeTextInput': ['long, difficult', 'long', 'long', 'long', 'difficult'], 'Sent5FreeTextInput': ['first', 'final', 'primary', 'first', 'final'], 'Sent6FreeTextInput': ['rising, high', 'high', 'large', 'high', 'rising'], 'Sent7FreeTextInput': ['military, victory', 'veterans', 'local', 'holiday', 'military'], 'Sent8FreeTextInput': ["own, company's", 'retirement', 'speculative', 'own', 'personal'], 'Sent9FreeTextInput': ['east', 'east', 'front', 'east', 'east']}
 - - - - - -  starting a new element: `Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent0FreeTextInput
Executing one action: self.actions.modify_text('Sent0FreeTextInput', 'mass')
Add text `mass` to this text input: <input class="form-control" name="Sent0FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent1FreeTextInput
Executing one action: self.actions.modify_text('Sent1FreeTextInput', 'increasing')
Add text `increasing` to this text input: <input class="form-control" name="Sent1FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent2FreeTextInput
Executing one action: self.actions.modify_text('Sent2FreeTextInput', 'increasing')
Add text `increasing` to this text input: <input class="form-control" name="Sent2FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent3FreeTextInput
Executing one action: self.actions.modify_text('Sent3FreeTextInput', 'popular')
Add text `popular` to this text input: <input class="form-control" name="Sent3FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent4FreeTextInput
Executing one action: self.actions.modify_text('Sent4FreeTextInput', 'popular')
Add text `popular` to this text input: <input class="form-control" name="Sent4FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent5FreeTextInput
Executing one action: self.actions.modify_text('Sent5FreeTextInput', 'final')
Add text `final` to this text input: <input class="form-control" name="Sent5FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent6FreeTextInput
Executing one action: self.actions.modify_text('Sent6FreeTextInput', 'final')
Add text `final` to this text input: <input class="form-control" name="Sent6FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent7FreeTextInput
Executing one action: self.actions.modify_text('Sent7FreeTextInput', 'rising')
Add text `rising` to this text input: <input class="form-control" name="Sent7FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent8FreeTextInput
Executing one action: self.actions.modify_text('Sent8FreeTextInput', 'own')
Add text `own` to this text input: <input class="form-control" name="Sent8FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent9FreeTextInput
Executing one action: self.actions.modify_text('Sent9FreeTextInput', 'eastern')
Add text `eastern` to this text input: <input class="form-control" name="Sent9FreeTextInput" size="120" type="text">
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['mass']
 visible_values : ['mass']
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['increasing']
 visible_values : ['increasing']
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['increasing']
 visible_values : ['increasing']
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['popular']
 visible_values : ['popular']
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['popular']
 visible_values : ['popular']
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['final']
 visible_values : ['final']
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['final']
 visible_values : ['final']
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['rising']
 visible_values : ['rising']
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['own']
 visible_values : ['own']
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['eastern']
 visible_values : ['eastern']
 ------- evaluating input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['mass', 'mass', 'mass', 'mass', 'mass']`
----> answers: `['mass']` - type: `<class 'list'>`
----> baseline_answer: `mass` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['increased', 'increased', 'huge', 'high', 'increasing']`
----> answers: `['huge', 'high', 'increased', 'increasing']` - type: `<class 'list'>`
----> baseline_answer: `increasing` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['rate', 'price', 'usual', 'price', 'temporary']`
----> answers: `['temporary', 'price', 'rate', 'usual']` - type: `<class 'list'>`
----> baseline_answer: `increasing` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['popular', 'popular', 'popular', 'popular', 'popular']`
----> answers: `['popular']` - type: `<class 'list'>`
----> baseline_answer: `popular` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['long, difficult', 'long', 'long', 'long', 'difficult']`
----> answers: `['difficult', 'long', 'long, difficult']` - type: `<class 'list'>`
----> baseline_answer: `popular` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['first', 'final', 'primary', 'first', 'final']`
----> answers: `['final', 'primary', 'first']` - type: `<class 'list'>`
----> baseline_answer: `final` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['rising, high', 'high', 'large', 'high', 'rising']`
----> answers: `['rising', 'high', 'large', 'rising, high']` - type: `<class 'list'>`
----> baseline_answer: `final` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['military, victory', 'veterans', 'local', 'holiday', 'military']`
----> answers: `['veterans', 'military', 'holiday', 'military, victory', 'local']` - type: `<class 'list'>`
----> baseline_answer: `rising` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `["own, company's", 'retirement', 'speculative', 'own', 'personal']`
----> answers: `["own, company's", 'retirement', 'own', 'speculative', 'personal']` - type: `<class 'list'>`
----> baseline_answer: `own` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['east', 'east', 'front', 'east', 'east']`
----> answers: `['front', 'east']` - type: `<class 'list'>`
----> baseline_answer: `eastern` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'text': [1.0, 0.5, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.6666666666666666, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0]}
instance_id: 5999 <-> row_number: 96
 --> inputs: ['Sent0FreeTextInput', 'Sent1FreeTextInput', 'Sent2FreeTextInput', 'Sent3FreeTextInput', 'Sent4FreeTextInput', 'Sent5FreeTextInput', 'Sent6FreeTextInput', 'Sent7FreeTextInput', 'Sent8FreeTextInput', 'Sent9FreeTextInput']
 --> Looking up gold labels from row index 96 of `input.csv` (unique inputs). 
 --> input labels: {'Sent0FreeTextInput': ['best', 'interception, touchdown', 'consecutive', 'failed', 'consecutive'], 'Sent1FreeTextInput': ['tense', 'soccer', 'attack', 'war', 'end'], 'Sent2FreeTextInput': ['mass', 'serious, reported, expected, predicted, quick', 'possible', 'predicted', 'sharp'], 'Sent3FreeTextInput': ['national', 'interim, federal, acting, despotic, panicked', 'Mexican', 'Chinese', 'worried'], 'Sent4FreeTextInput': ['last', 'first, latter, second', 'last', 'last', 'last'], 'Sent5FreeTextInput': ['blatant', 'legal, judicial', 'harsh', 'further', 'illegal'], 'Sent6FreeTextInput': ['second', 'liberal, conservative, unusual, reclusive, remote', 'small', 'current', 'strange'], 'Sent7FreeTextInput': ['dirty', 'stale, contaminated, dirty, excess', 'dirty', 'contaminated', 'old'], 'Sent8FreeTextInput': ['trending', 'popular, common', 'popular', 'hot', 'desired'], 'Sent9FreeTextInput': ['peaceful', 'Palestinian, independent', 'Palestinian', 'Palestinian', 'new']}
 - - - - - -  starting a new element: `Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent0FreeTextInput
Executing one action: self.actions.modify_text('Sent0FreeTextInput', 'memorable')
Add text `memorable` to this text input: <input class="form-control" name="Sent0FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent1FreeTextInput
Executing one action: self.actions.modify_text('Sent1FreeTextInput', 'cat and mouse')
Add text `cat and mouse` to this text input: <input class="form-control" name="Sent1FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent2FreeTextInput
Executing one action: self.actions.modify_text('Sent2FreeTextInput', 'potential')
Add text `potential` to this text input: <input class="form-control" name="Sent2FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent3FreeTextInput
Executing one action: self.actions.modify_text('Sent3FreeTextInput', 'potential')
Add text `potential` to this text input: <input class="form-control" name="Sent3FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent4FreeTextInput
Executing one action: self.actions.modify_text('Sent4FreeTextInput', 'Japanese')
Add text `Japanese` to this text input: <input class="form-control" name="Sent4FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent5FreeTextInput
Executing one action: self.actions.modify_text('Sent5FreeTextInput', 'legal')
Add text `legal` to this text input: <input class="form-control" name="Sent5FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent6FreeTextInput
Executing one action: self.actions.modify_text('Sent6FreeTextInput', 'legal')
Add text `legal` to this text input: <input class="form-control" name="Sent6FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent7FreeTextInput
Executing one action: self.actions.modify_text('Sent7FreeTextInput', 'controversial')
Add text `controversial` to this text input: <input class="form-control" name="Sent7FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent8FreeTextInput
Executing one action: self.actions.modify_text('Sent8FreeTextInput', 'iconic')
Add text `iconic` to this text input: <input class="form-control" name="Sent8FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent9FreeTextInput
Executing one action: self.actions.modify_text('Sent9FreeTextInput', 'Palestinian')
Add text `Palestinian` to this text input: <input class="form-control" name="Sent9FreeTextInput" size="120" type="text">
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['memorable']
 visible_values : ['memorable']
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['cat and mouse']
 visible_values : ['cat and mouse']
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['potential']
 visible_values : ['potential']
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['potential']
 visible_values : ['potential']
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['Japanese']
 visible_values : ['Japanese']
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['legal']
 visible_values : ['legal']
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['legal']
 visible_values : ['legal']
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['controversial']
 visible_values : ['controversial']
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['iconic']
 visible_values : ['iconic']
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['Palestinian']
 visible_values : ['Palestinian']
 ------- evaluating input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['best', 'interception, touchdown', 'consecutive', 'failed', 'consecutive']`
----> answers: `['interception, touchdown', 'consecutive', 'best', 'failed']` - type: `<class 'list'>`
----> baseline_answer: `memorable` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['tense', 'soccer', 'attack', 'war', 'end']`
----> answers: `['attack', 'soccer', 'tense', 'end', 'war']` - type: `<class 'list'>`
----> baseline_answer: `cat and mouse` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['mass', 'serious, reported, expected, predicted, quick', 'possible', 'predicted', 'sharp']`
----> answers: `['sharp', 'mass', 'possible', 'predicted', 'serious, reported, expected, predicted, quick']` - type: `<class 'list'>`
----> baseline_answer: `potential` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['national', 'interim, federal, acting, despotic, panicked', 'Mexican', 'Chinese', 'worried']`
----> answers: `['Chinese', 'interim, federal, acting, despotic, panicked', 'national', 'Mexican', 'worried']` - type: `<class 'list'>`
----> baseline_answer: `potential` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['last', 'first, latter, second', 'last', 'last', 'last']`
----> answers: `['first, latter, second', 'last']` - type: `<class 'list'>`
----> baseline_answer: `Japanese` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['blatant', 'legal, judicial', 'harsh', 'further', 'illegal']`
----> answers: `['illegal', 'further', 'blatant', 'legal, judicial', 'harsh']` - type: `<class 'list'>`
----> baseline_answer: `legal` - type: `<class 'str'>`
 --> scores:  0.6666666666666666
----> per-field score: 0.6666666666666666
 ------- evaluating input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['second', 'liberal, conservative, unusual, reclusive, remote', 'small', 'current', 'strange']`
----> answers: `['strange', 'small', 'liberal, conservative, unusual, reclusive, remote', 'second', 'current']` - type: `<class 'list'>`
----> baseline_answer: `legal` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['dirty', 'stale, contaminated, dirty, excess', 'dirty', 'contaminated', 'old']`
----> answers: `['contaminated', 'dirty', 'old', 'stale, contaminated, dirty, excess']` - type: `<class 'list'>`
----> baseline_answer: `controversial` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['trending', 'popular, common', 'popular', 'hot', 'desired']`
----> answers: `['popular, common', 'hot', 'desired', 'trending', 'popular']` - type: `<class 'list'>`
----> baseline_answer: `iconic` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['peaceful', 'Palestinian, independent', 'Palestinian', 'Palestinian', 'new']`
----> answers: `['Palestinian, independent', 'new', 'Palestinian', 'peaceful']` - type: `<class 'list'>`
----> baseline_answer: `Palestinian` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.16666666666666666
 --> Per-instance per-field breakdown: {'text': [1.0, 0.5, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.6666666666666666, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.0, 1.0]}
instance_id: 5959 <-> row_number: 56
 --> inputs: ['Sent0FreeTextInput', 'Sent1FreeTextInput', 'Sent2FreeTextInput', 'Sent3FreeTextInput', 'Sent4FreeTextInput', 'Sent5FreeTextInput', 'Sent6FreeTextInput', 'Sent7FreeTextInput', 'Sent8FreeTextInput', 'Sent9FreeTextInput']
 --> Looking up gold labels from row index 56 of `input.csv` (unique inputs). 
 --> input labels: {'Sent0FreeTextInput': ['new, renowned', 'large', 'full, cooncert', 'classical', 'chamber, large'], 'Sent1FreeTextInput': ['nearby', 'nearby', 'nearby, local', 'nearby', 'local'], 'Sent2FreeTextInput': ['pending', 'recent', 'example, previous', 'open', 'criminal, pending'], 'Sent3FreeTextInput': ['mining, nuclear, scientific', 'nuclear', 'nuclear', 'nuclear', 'nuclear'], 'Sent4FreeTextInput': ['brief', 'heated', 'heated, friendly', 'thought, he, heated', 'cordial'], 'Sent5FreeTextInput': ['crude', 'foreign', 'crude', 'crude', 'foreign'], 'Sent6FreeTextInput': ['same', 'same', 'same', 'same', 'same'], 'Sent7FreeTextInput': ['Upcoming, Adult', 'Last', 'adult', 'TV', 'mature'], 'Sent8FreeTextInput': ['past', 'current', 'following, current', 'stated', 'last'], 'Sent9FreeTextInput': ['this', 'last', 'this, last', 'this', 'last, this']}
 - - - - - -  starting a new element: `Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent0FreeTextInput
Executing one action: self.actions.modify_text('Sent0FreeTextInput', 'international')
Add text `international` to this text input: <input class="form-control" name="Sent0FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent1FreeTextInput
Executing one action: self.actions.modify_text('Sent1FreeTextInput', 'nearby')
Add text `nearby` to this text input: <input class="form-control" name="Sent1FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent2FreeTextInput
Executing one action: self.actions.modify_text('Sent2FreeTextInput', 'landmark')
Add text `landmark` to this text input: <input class="form-control" name="Sent2FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent3FreeTextInput
Executing one action: self.actions.modify_text('Sent3FreeTextInput', 'controversial')
Add text `controversial` to this text input: <input class="form-control" name="Sent3FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent4FreeTextInput
Executing one action: self.actions.modify_text('Sent4FreeTextInput', 'controversial')
Add text `controversial` to this text input: <input class="form-control" name="Sent4FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent5FreeTextInput
Executing one action: self.actions.modify_text('Sent5FreeTextInput', 'brief')
Add text `brief` to this text input: <input class="form-control" name="Sent5FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent6FreeTextInput
Executing one action: self.actions.modify_text('Sent6FreeTextInput', 'crude')
Add text `crude` to this text input: <input class="form-control" name="Sent6FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent7FreeTextInput
Executing one action: self.actions.modify_text('Sent7FreeTextInput', 'same')
Add text `same` to this text input: <input class="form-control" name="Sent7FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent8FreeTextInput
Executing one action: self.actions.modify_text('Sent8FreeTextInput', 'Adult')
Add text `Adult` to this text input: <input class="form-control" name="Sent8FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent9FreeTextInput
Executing one action: self.actions.modify_text('Sent9FreeTextInput', 'this')
Add text `this` to this text input: <input class="form-control" name="Sent9FreeTextInput" size="120" type="text">
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['international']
 visible_values : ['international']
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['nearby']
 visible_values : ['nearby']
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['landmark']
 visible_values : ['landmark']
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['controversial']
 visible_values : ['controversial']
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['controversial']
 visible_values : ['controversial']
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['brief']
 visible_values : ['brief']
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['crude']
 visible_values : ['crude']
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['same']
 visible_values : ['same']
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['Adult']
 visible_values : ['Adult']
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['this']
 visible_values : ['this']
 ------- evaluating input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['new, renowned', 'large', 'full, cooncert', 'classical', 'chamber, large']`
----> answers: `['chamber, large', 'large', 'new, renowned', 'classical', 'full, cooncert']` - type: `<class 'list'>`
----> baseline_answer: `international` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['nearby', 'nearby', 'nearby, local', 'nearby', 'local']`
----> answers: `['nearby', 'nearby, local', 'local']` - type: `<class 'list'>`
----> baseline_answer: `nearby` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['pending', 'recent', 'example, previous', 'open', 'criminal, pending']`
----> answers: `['open', 'example, previous', 'recent', 'criminal, pending', 'pending']` - type: `<class 'list'>`
----> baseline_answer: `landmark` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['mining, nuclear, scientific', 'nuclear', 'nuclear', 'nuclear', 'nuclear']`
----> answers: `['nuclear', 'mining, nuclear, scientific']` - type: `<class 'list'>`
----> baseline_answer: `controversial` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['brief', 'heated', 'heated, friendly', 'thought, he, heated', 'cordial']`
----> answers: `['cordial', 'thought, he, heated', 'brief', 'heated', 'heated, friendly']` - type: `<class 'list'>`
----> baseline_answer: `controversial` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['crude', 'foreign', 'crude', 'crude', 'foreign']`
----> answers: `['crude', 'foreign']` - type: `<class 'list'>`
----> baseline_answer: `brief` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['same', 'same', 'same', 'same', 'same']`
----> answers: `['same']` - type: `<class 'list'>`
----> baseline_answer: `crude` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['Upcoming, Adult', 'Last', 'adult', 'TV', 'mature']`
----> answers: `['TV', 'Upcoming, Adult', 'mature', 'adult', 'Last']` - type: `<class 'list'>`
----> baseline_answer: `same` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['past', 'current', 'following, current', 'stated', 'last']`
----> answers: `['last', 'past', 'stated', 'following, current', 'current']` - type: `<class 'list'>`
----> baseline_answer: `Adult` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['this', 'last', 'this, last', 'this', 'last, this']`
----> answers: `['this', 'last', 'this, last', 'last, this']` - type: `<class 'list'>`
----> baseline_answer: `this` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.2
 --> Per-instance per-field breakdown: {'text': [1.0, 0.5, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.6666666666666666, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]}
instance_id: 5930 <-> row_number: 27
 --> inputs: ['Sent0FreeTextInput', 'Sent1FreeTextInput', 'Sent2FreeTextInput', 'Sent3FreeTextInput', 'Sent4FreeTextInput', 'Sent5FreeTextInput', 'Sent6FreeTextInput', 'Sent7FreeTextInput', 'Sent8FreeTextInput', 'Sent9FreeTextInput']
 --> Looking up gold labels from row index 27 of `input.csv` (unique inputs). 
 --> input labels: {'Sent0FreeTextInput': ['economic', 'alternative', 'incredible', 'political', 'interesting'], 'Sent1FreeTextInput': ['English', 'literature', 'History', 'math', 'english, math, physics, physical education'], 'Sent2FreeTextInput': ['civic', 'majority', 'upmost', 'positive', 'widespread, mass'], 'Sent3FreeTextInput': ['vials', 'pure', 'trace', 'active', 'enriched'], 'Sent4FreeTextInput': ['nuclear', 'nuclear', 'nuclear', 'nuclear', 'nuclear, missile'], 'Sent5FreeTextInput': ['last', 'sales', 'this', 'one', 'this, last'], 'Sent6FreeTextInput': ['regular', 'same', 'same', 'present', 'same'], 'Sent7FreeTextInput': ['far', 'retaining', 'green', 'back', 'outfield'], 'Sent8FreeTextInput': ['political', 'violent', 'dismal', 'unstable', 'surprising, violent'], 'Sent9FreeTextInput': ['verbal', 'assertive', 'inaffectual', 'official', 'initial']}
 - - - - - -  starting a new element: `Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent0FreeTextInput
Executing one action: self.actions.modify_text('Sent0FreeTextInput', 'accurate')
Add text `accurate` to this text input: <input class="form-control" name="Sent0FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent1FreeTextInput
Executing one action: self.actions.modify_text('Sent1FreeTextInput', 'skilled')
Add text `skilled` to this text input: <input class="form-control" name="Sent1FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent2FreeTextInput
Executing one action: self.actions.modify_text('Sent2FreeTextInput', 'broad')
Add text `broad` to this text input: <input class="form-control" name="Sent2FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent3FreeTextInput
Executing one action: self.actions.modify_text('Sent3FreeTextInput', 'broad')
Add text `broad` to this text input: <input class="form-control" name="Sent3FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent4FreeTextInput
Executing one action: self.actions.modify_text('Sent4FreeTextInput', 'enough')
Add text `enough` to this text input: <input class="form-control" name="Sent4FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent5FreeTextInput
Executing one action: self.actions.modify_text('Sent5FreeTextInput', 'nuclear')
Add text `nuclear` to this text input: <input class="form-control" name="Sent5FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent6FreeTextInput
Executing one action: self.actions.modify_text('Sent6FreeTextInput', 'previous')
Add text `previous` to this text input: <input class="form-control" name="Sent6FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent7FreeTextInput
Executing one action: self.actions.modify_text('Sent7FreeTextInput', 'same')
Add text `same` to this text input: <input class="form-control" name="Sent7FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent8FreeTextInput
Executing one action: self.actions.modify_text('Sent8FreeTextInput', 'violent')
Add text `violent` to this text input: <input class="form-control" name="Sent8FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent9FreeTextInput
Executing one action: self.actions.modify_text('Sent9FreeTextInput', 'immediate')
Add text `immediate` to this text input: <input class="form-control" name="Sent9FreeTextInput" size="120" type="text">
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['accurate']
 visible_values : ['accurate']
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['skilled']
 visible_values : ['skilled']
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['broad']
 visible_values : ['broad']
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['broad']
 visible_values : ['broad']
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['enough']
 visible_values : ['enough']
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['nuclear']
 visible_values : ['nuclear']
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['previous']
 visible_values : ['previous']
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['same']
 visible_values : ['same']
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['violent']
 visible_values : ['violent']
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['immediate']
 visible_values : ['immediate']
 ------- evaluating input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['economic', 'alternative', 'incredible', 'political', 'interesting']`
----> answers: `['economic', 'incredible', 'political', 'interesting', 'alternative']` - type: `<class 'list'>`
----> baseline_answer: `accurate` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['English', 'literature', 'History', 'math', 'english, math, physics, physical education']`
----> answers: `['english, math, physics, physical education', 'literature', 'English', 'math', 'History']` - type: `<class 'list'>`
----> baseline_answer: `skilled` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['civic', 'majority', 'upmost', 'positive', 'widespread, mass']`
----> answers: `['upmost', 'widespread, mass', 'civic', 'positive', 'majority']` - type: `<class 'list'>`
----> baseline_answer: `broad` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['vials', 'pure', 'trace', 'active', 'enriched']`
----> answers: `['enriched', 'trace', 'pure', 'vials', 'active']` - type: `<class 'list'>`
----> baseline_answer: `broad` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['nuclear', 'nuclear', 'nuclear', 'nuclear', 'nuclear, missile']`
----> answers: `['nuclear', 'nuclear, missile']` - type: `<class 'list'>`
----> baseline_answer: `enough` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['last', 'sales', 'this', 'one', 'this, last']`
----> answers: `['this', 'one', 'last', 'sales', 'this, last']` - type: `<class 'list'>`
----> baseline_answer: `nuclear` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['regular', 'same', 'same', 'present', 'same']`
----> answers: `['same', 'regular', 'present']` - type: `<class 'list'>`
----> baseline_answer: `previous` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['far', 'retaining', 'green', 'back', 'outfield']`
----> answers: `['back', 'green', 'far', 'retaining', 'outfield']` - type: `<class 'list'>`
----> baseline_answer: `same` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['political', 'violent', 'dismal', 'unstable', 'surprising, violent']`
----> answers: `['unstable', 'dismal', 'violent', 'political', 'surprising, violent']` - type: `<class 'list'>`
----> baseline_answer: `violent` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['verbal', 'assertive', 'inaffectual', 'official', 'initial']`
----> answers: `['verbal', 'initial', 'assertive', 'inaffectual', 'official']` - type: `<class 'list'>`
----> baseline_answer: `immediate` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.1
 --> Per-instance per-field breakdown: {'text': [1.0, 0.5, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.6666666666666666, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]}
instance_id: 5914 <-> row_number: 11
 --> inputs: ['Sent0FreeTextInput', 'Sent1FreeTextInput', 'Sent2FreeTextInput', 'Sent3FreeTextInput', 'Sent4FreeTextInput', 'Sent5FreeTextInput', 'Sent6FreeTextInput', 'Sent7FreeTextInput', 'Sent8FreeTextInput', 'Sent9FreeTextInput']
 --> Looking up gold labels from row index 11 of `input.csv` (unique inputs). 
 --> input labels: {'Sent0FreeTextInput': ['swift', 'careful', 'supervised', 'multinational', 'necessary'], 'Sent1FreeTextInput': ['strong, mexican', 'Mexican', 'Mexican', 'Mexican', 'Mexican'], 'Sent2FreeTextInput': ['mild, severe', 'chronic', 'stomach', 'physical', 'internal'], 'Sent3FreeTextInput': ['big, vast', 'large', 'huge', 'huge', 'massive'], 'Sent4FreeTextInput': ['prime', 'prime', 'prime', 'late', 'prime'], 'Sent5FreeTextInput': ['ethic, advanced, was', 'electrical', 'mechanical', 'mechanical', 'chemical'], 'Sent6FreeTextInput': ['hate', 'violent', 'punishable', 'international', 'organized'], 'Sent7FreeTextInput': ['environmental', 'final', 'second', 'first', 'final'], 'Sent8FreeTextInput': ['small, wise', 'young', 'corageous', 'dead', 'innocent'], 'Sent9FreeTextInput': ['state, federal', 'government', 'financial', 'public', 'government']}
 - - - - - -  starting a new element: `Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent0FreeTextInput
Executing one action: self.actions.modify_text('Sent0FreeTextInput', 'emergency')
Add text `emergency` to this text input: <input class="form-control" name="Sent0FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent1FreeTextInput
Executing one action: self.actions.modify_text('Sent1FreeTextInput', 'Argentinian')
Add text `Argentinian` to this text input: <input class="form-control" name="Sent1FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent2FreeTextInput
Executing one action: self.actions.modify_text('Sent2FreeTextInput', 'anticipated')
Add text `anticipated` to this text input: <input class="form-control" name="Sent2FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent3FreeTextInput
Executing one action: self.actions.modify_text('Sent3FreeTextInput', 'significant')
Add text `significant` to this text input: <input class="form-control" name="Sent3FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent4FreeTextInput
Executing one action: self.actions.modify_text('Sent4FreeTextInput', 'substantial')
Add text `substantial` to this text input: <input class="form-control" name="Sent4FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent5FreeTextInput
Executing one action: self.actions.modify_text('Sent5FreeTextInput', 'electrical')
Add text `electrical` to this text input: <input class="form-control" name="Sent5FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent6FreeTextInput
Executing one action: self.actions.modify_text('Sent6FreeTextInput', 'electrical')
Add text `electrical` to this text input: <input class="form-control" name="Sent6FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent7FreeTextInput
Executing one action: self.actions.modify_text('Sent7FreeTextInput', 'organized')
Add text `organized` to this text input: <input class="form-control" name="Sent7FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent8FreeTextInput
Executing one action: self.actions.modify_text('Sent8FreeTextInput', 'young')
Add text `young` to this text input: <input class="form-control" name="Sent8FreeTextInput" size="120" type="text">
 - - - - - -  starting a new element: `Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)` - - - - - -  
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
about to try executing one action, on the following input: Sent9FreeTextInput
Executing one action: self.actions.modify_text('Sent9FreeTextInput', 'financial')
Add text `financial` to this text input: <input class="form-control" name="Sent9FreeTextInput" size="120" type="text">
input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['emergency']
 visible_values : ['emergency']
input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['Argentinian']
 visible_values : ['Argentinian']
input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['anticipated']
 visible_values : ['anticipated']
input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['significant']
 visible_values : ['significant']
input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['substantial']
 visible_values : ['substantial']
input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['electrical']
 visible_values : ['electrical']
input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['electrical']
 visible_values : ['electrical']
input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['organized']
 visible_values : ['organized']
input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['young']
 visible_values : ['young']
input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`)
 visible : ['financial']
 visible_values : ['financial']
 ------- evaluating input: Input(name=`Sent0FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['swift', 'careful', 'supervised', 'multinational', 'necessary']`
----> answers: `['careful', 'multinational', 'swift', 'necessary', 'supervised']` - type: `<class 'list'>`
----> baseline_answer: `emergency` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent1FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['strong, mexican', 'Mexican', 'Mexican', 'Mexican', 'Mexican']`
----> answers: `['Mexican', 'strong, mexican']` - type: `<class 'list'>`
----> baseline_answer: `Argentinian` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent2FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['mild, severe', 'chronic', 'stomach', 'physical', 'internal']`
----> answers: `['physical', 'internal', 'stomach', 'mild, severe', 'chronic']` - type: `<class 'list'>`
----> baseline_answer: `anticipated` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent3FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['big, vast', 'large', 'huge', 'huge', 'massive']`
----> answers: `['huge', 'big, vast', 'large', 'massive']` - type: `<class 'list'>`
----> baseline_answer: `significant` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent4FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['prime', 'prime', 'prime', 'late', 'prime']`
----> answers: `['prime', 'late']` - type: `<class 'list'>`
----> baseline_answer: `substantial` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent5FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['ethic, advanced, was', 'electrical', 'mechanical', 'mechanical', 'chemical']`
----> answers: `['mechanical', 'chemical', 'ethic, advanced, was', 'electrical']` - type: `<class 'list'>`
----> baseline_answer: `electrical` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent6FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['hate', 'violent', 'punishable', 'international', 'organized']`
----> answers: `['violent', 'hate', 'organized', 'punishable', 'international']` - type: `<class 'list'>`
----> baseline_answer: `electrical` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent7FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['environmental', 'final', 'second', 'first', 'final']`
----> answers: `['environmental', 'final', 'first', 'second']` - type: `<class 'list'>`
----> baseline_answer: `organized` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`Sent8FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['small, wise', 'young', 'corageous', 'dead', 'innocent']`
----> answers: `['innocent', 'corageous', 'small, wise', 'dead', 'young']` - type: `<class 'list'>`
----> baseline_answer: `young` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`Sent9FreeTextInput`, type=`text`, task=`Missing Adjective FITB`) ------- 
answers after mapping: `['state, federal', 'government', 'financial', 'public', 'government']`
----> answers: `['state, federal', 'public', 'financial', 'government']` - type: `<class 'list'>`
----> baseline_answer: `financial` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.3
 --> Per-instance per-field breakdown: {'text': [1.0, 0.5, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.6666666666666666, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.6666666666666666, 0.6666666666666666, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0]}
 = = = = = = = = = = = = starting new task: `Simplicity HIT` = = = = = = = = = = = = 
First instance id: 18595
instance_id: 18614 <-> row_number: 19
 --> inputs: ['meaning_0_1', 'grammar_0_1', 'meaning_0_0', 'grammar_0_0', 'meaning_0_5', 'grammar_0_5', 'meaning_0_4', 'grammar_0_4', 'meaning_0_2', 'grammar_0_2', 'meaning_0_3', 'grammar_0_3', 'meaning_1_2', 'grammar_1_2', 'meaning_1_4', 'grammar_1_4', 'meaning_1_5', 'grammar_1_5', 'meaning_1_0', 'grammar_1_0', 'meaning_1_1', 'grammar_1_1', 'meaning_1_3', 'grammar_1_3']
 --> Looking up gold labels from row index 19 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_1': [2, 2, 2], 'grammar_0_1': [1, 4, 2], 'meaning_0_0': [4, 3, 5], 'grammar_0_0': [5, 4, 5], 'meaning_0_5': [5.0, 3.0, 5.0], 'grammar_0_5': [5.0, 4.0, 5.0], 'meaning_0_4': [3.0, 3.0, 4.0], 'grammar_0_4': [1.0, 2.0, 3.0], 'meaning_0_2': [2, 3, 3], 'grammar_0_2': [2, 4, 4], 'meaning_0_3': [4.0, 4.0, 4.0], 'grammar_0_3': [4.0, 5.0, 3.0], 'meaning_1_2': [1, 4, 3], 'grammar_1_2': [1, 4, 2], 'meaning_1_4': [1.0, 4.0, 3.0], 'grammar_1_4': [1.0, 3.0, 2.0], 'meaning_1_5': [4.0, 2.0, 3.0], 'grammar_1_5': [1.0, 5.0, 5.0], 'meaning_1_0': [3, 4, 4], 'grammar_1_0': [1, 5, 4], 'meaning_1_1': [3, 5, 2], 'grammar_1_1': [1, 4, 1], 'meaning_1_3': [5.0, 4.0, 5.0], 'grammar_1_3': [4.0, 4.0, 5.0]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', '5')
We are going to select this select `meaning_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', '5')
We are going to select this select `grammar_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', '5')
We are going to select this select `grammar_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', '5')
We are going to select this select `meaning_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_select('grammar_0_5', '5')
We are going to select this select `grammar_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', '3')
We are going to select this select `meaning_0_4` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', '3')
We are going to select this select `grammar_0_4` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', '3')
We are going to select this select `meaning_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', '3')
We are going to select this select `grammar_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', '3')
We are going to select this select `meaning_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', '5')
We are going to select this select `grammar_0_3` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_2
Executing one action: self.actions.modify_select('meaning_1_2', 'identical')
Failed to execute an action self.actions.modify_select('meaning_1_2', 'identical'), error: Input value `identical` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_2
Executing one action: self.actions.modify_select('grammar_1_2', '5')
We are going to select this select `grammar_1_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_4
Executing one action: self.actions.modify_select('meaning_1_4', '4')
We are going to select this select `meaning_1_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_4
Executing one action: self.actions.modify_select('grammar_1_4', '5')
We are going to select this select `grammar_1_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_5
Executing one action: self.actions.modify_select('meaning_1_5', '3')
We are going to select this select `meaning_1_5` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_5
Executing one action: self.actions.modify_select('grammar_1_5', '5')
We are going to select this select `grammar_1_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_0
Executing one action: self.actions.modify_select('meaning_1_0', '5')
We are going to select this select `meaning_1_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_0
Executing one action: self.actions.modify_select('grammar_1_0', '5')
We are going to select this select `grammar_1_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_1
Executing one action: self.actions.modify_select('meaning_1_1', 'blank')
We are going to select this select `meaning_1_1` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_1
Executing one action: self.actions.modify_select('grammar_1_1', '5')
We are going to select this select `grammar_1_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_3
Executing one action: self.actions.modify_select('meaning_1_3', '3')
We are going to select this select `meaning_1_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_3
Executing one action: self.actions.modify_select('grammar_1_3', '3')
We are going to select this select `grammar_1_3` with value `3`
input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[1, 4, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 3, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 4, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 3.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 4.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 3.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[1.0, 2.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2, 4, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 4.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 5.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[1, 4, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[1, 4, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[1.0, 4.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[1.0, 3.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 2.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[1.0, 5.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3, 4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[1, 5, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3, 5, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[1, 4, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 4.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 4.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 18619 <-> row_number: 24
 --> inputs: ['meaning_0_1', 'grammar_0_1', 'meaning_0_5', 'grammar_0_5', 'meaning_0_2', 'grammar_0_2', 'meaning_0_3', 'grammar_0_3', 'meaning_0_4', 'grammar_0_4', 'meaning_0_0', 'grammar_0_0', 'meaning_1_3', 'grammar_1_3', 'meaning_1_4', 'grammar_1_4', 'meaning_1_5', 'grammar_1_5', 'meaning_1_0', 'grammar_1_0', 'meaning_1_2', 'grammar_1_2', 'meaning_1_1', 'grammar_1_1']
 --> Looking up gold labels from row index 24 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_1': [4, 5, 2], 'grammar_0_1': [2, 3, 2], 'meaning_0_5': [5.0, 5.0, 5.0], 'grammar_0_5': [5.0, 5.0, 5.0], 'meaning_0_2': [2, 4, 1], 'grammar_0_2': [1, 3, 2], 'meaning_0_3': [3.0, 4.0, 3.0], 'grammar_0_3': [2.0, 3.0, 2.0], 'meaning_0_4': [5.0, 5.0, 5.0], 'grammar_0_4': [2.0, 2.0, 4.0], 'meaning_0_0': [5, 4, 4], 'grammar_0_0': [4, 5, 3], 'meaning_1_3': [5.0, 5.0, 5.0], 'grammar_1_3': [5.0, 5.0, 5.0], 'meaning_1_4': [2.0, 4.0, 2.0], 'grammar_1_4': [1.0, 2.0, 1.0], 'meaning_1_5': [4.0, 5.0, 5.0], 'grammar_1_5': [5.0, 5.0, 5.0], 'meaning_1_0': [5, 5, 4], 'grammar_1_0': [5, 5, 5], 'meaning_1_2': [2, 4, 1], 'grammar_1_2': [1, 2, 1], 'meaning_1_1': [2, 3, 1], 'grammar_1_1': [1, 2, 1]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', '5')
We are going to select this select `meaning_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', '5')
We are going to select this select `grammar_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', '5')
We are going to select this select `meaning_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_select('grammar_0_5', '5')
We are going to select this select `grammar_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', '3')
We are going to select this select `meaning_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', '5')
We are going to select this select `grammar_0_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', '3')
We are going to select this select `meaning_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', '3')
We are going to select this select `grammar_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', '4')
We are going to select this select `meaning_0_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', '5')
We are going to select this select `grammar_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', 'blank')
We are going to select this select `meaning_0_0` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', '5')
We are going to select this select `grammar_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_3
Executing one action: self.actions.modify_select('meaning_1_3', '3')
We are going to select this select `meaning_1_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_3
Executing one action: self.actions.modify_select('grammar_1_3', '3')
We are going to select this select `grammar_1_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_4
Executing one action: self.actions.modify_select('meaning_1_4', '4')
We are going to select this select `meaning_1_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_4
Executing one action: self.actions.modify_select('grammar_1_4', '5')
We are going to select this select `grammar_1_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_5
Executing one action: self.actions.modify_select('meaning_1_5', '3')
We are going to select this select `meaning_1_5` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_5
Executing one action: self.actions.modify_select('grammar_1_5', '5')
We are going to select this select `grammar_1_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_0
Executing one action: self.actions.modify_select('meaning_1_0', '3')
We are going to select this select `meaning_1_0` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_0
Executing one action: self.actions.modify_select('grammar_1_0', '5')
We are going to select this select `grammar_1_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_2
Executing one action: self.actions.modify_select('meaning_1_2', '3')
We are going to select this select `meaning_1_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_2
Executing one action: self.actions.modify_select('grammar_1_2', '5')
We are going to select this select `grammar_1_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_1
Executing one action: self.actions.modify_select('meaning_1_1', '3')
We are going to select this select `meaning_1_1` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_1
Executing one action: self.actions.modify_select('grammar_1_1', '5')
We are going to select this select `grammar_1_1` with value `5`
input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 5, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2, 3, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 5.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 5.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2, 4, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[1, 3, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 4.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2.0, 3.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 5.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2.0, 2.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 4, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 5, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 5.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 5.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2.0, 4.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 5.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 5.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 5, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2, 4, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2, 3, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.20833333333333334
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 18616 <-> row_number: 21
 --> inputs: ['meaning_0_2', 'grammar_0_2', 'meaning_0_3', 'grammar_0_3', 'meaning_0_4', 'grammar_0_4', 'meaning_0_1', 'grammar_0_1', 'meaning_0_0', 'grammar_0_0', 'meaning_0_5', 'grammar_0_5', 'meaning_1_1', 'grammar_1_1', 'meaning_1_4', 'grammar_1_4', 'meaning_1_5', 'grammar_1_5', 'meaning_1_0', 'grammar_1_0', 'meaning_1_3', 'grammar_1_3', 'meaning_1_2', 'grammar_1_2']
 --> Looking up gold labels from row index 21 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_2': [4, 5, 3], 'grammar_0_2': [3, 4, 1], 'meaning_0_3': [3.0, 5.0, 2.0], 'grammar_0_3': [2.0, 5.0, 2.0], 'meaning_0_4': [3.0, 3.0, 2.0], 'grammar_0_4': [2.0, 1.0, 1.0], 'meaning_0_1': [4, 4, 2], 'grammar_0_1': [2, 1, 1], 'meaning_0_0': [4, 3, 1], 'grammar_0_0': [3, 1, 1], 'meaning_0_5': [2.0, 4.0, 2.0], 'grammar_0_5': [2.0, 5.0, 5.0], 'meaning_1_1': [4, 3, 3], 'grammar_1_1': [4, 1, 4], 'meaning_1_4': [4.0, 2.0, 3.0], 'grammar_1_4': [4.0, 1.0, 2.0], 'meaning_1_5': [4.0, 4.0, 5.0], 'grammar_1_5': [5.0, 4.0, 5.0], 'meaning_1_0': [5, 5, 5], 'grammar_1_0': [5, 5, 5], 'meaning_1_3': [3.0, 1.0, 1.0], 'grammar_1_3': [2.0, 2.0, 4.0], 'meaning_1_2': [4, 4, 2], 'grammar_1_2': [2, 3, 1]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', 'identical')
Failed to execute an action self.actions.modify_select('meaning_0_2', 'identical'), error: Input value `identical` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', '3')
We are going to select this select `grammar_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', '3')
We are going to select this select `meaning_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', '3')
We are going to select this select `grammar_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', '4')
We are going to select this select `meaning_0_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', '5')
We are going to select this select `grammar_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', 'blank')
We are going to select this select `meaning_0_1` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', '5')
We are going to select this select `grammar_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', '5')
We are going to select this select `grammar_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', '3')
We are going to select this select `meaning_0_5` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_select('grammar_0_5', '5')
We are going to select this select `grammar_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_1
Executing one action: self.actions.modify_select('meaning_1_1', '3')
We are going to select this select `meaning_1_1` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_1
Executing one action: self.actions.modify_select('grammar_1_1', '5')
We are going to select this select `grammar_1_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_4
Executing one action: self.actions.modify_select('meaning_1_4', '4')
We are going to select this select `meaning_1_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_4
Executing one action: self.actions.modify_select('grammar_1_4', '5')
We are going to select this select `grammar_1_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_5
Executing one action: self.actions.modify_select('meaning_1_5', '5')
We are going to select this select `meaning_1_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_5
Executing one action: self.actions.modify_select('grammar_1_5', '5')
We are going to select this select `grammar_1_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_0
Executing one action: self.actions.modify_select('meaning_1_0', 'blank')
We are going to select this select `meaning_1_0` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_0
Executing one action: self.actions.modify_select('grammar_1_0', '5')
We are going to select this select `grammar_1_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_3
Executing one action: self.actions.modify_select('meaning_1_3', '3')
We are going to select this select `meaning_1_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_3
Executing one action: self.actions.modify_select('grammar_1_3', '3')
We are going to select this select `grammar_1_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_2
Executing one action: self.actions.modify_select('meaning_1_2', '3')
We are going to select this select `meaning_1_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_2
Executing one action: self.actions.modify_select('grammar_1_2', '5')
We are going to select this select `grammar_1_2` with value `5`
input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 5, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3, 4, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 5.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2.0, 5.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 3.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 4, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 3, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2.0, 4.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2.0, 5.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 1, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 2.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 4.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 4.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 5, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2.0, 2.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 4, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2, 3, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.2916666666666667
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 18640 <-> row_number: 45
Could not find input field with name `grammar_0_4`
Could not find input field with name `meaning_0_4`
 --> inputs: ['meaning_0_3', 'grammar_0_3', 'meaning_0_0', 'grammar_0_0', 'meaning_0_5', 'grammar_0_5', 'meaning_0_1', 'grammar_0_1', 'meaning_0_2', 'grammar_0_2', 'meaning_1_4', 'grammar_1_4', 'meaning_1_0', 'grammar_1_0', 'meaning_1_1', 'grammar_1_1', 'meaning_1_2', 'grammar_1_2', 'meaning_1_5', 'grammar_1_5', 'meaning_1_3', 'grammar_1_3']
 --> Looking up gold labels from row index 45 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_3': [3.0, 3.0, 4.0], 'grammar_0_3': [3.0, 4.0, 3.0], 'meaning_0_0': [5, 5, 5], 'grammar_0_0': [5, 5, 5], 'meaning_0_5': [2.0, 3.0, 3.0], 'grammar_0_5': [5.0, 5.0, 5.0], 'meaning_0_1': [3, 3, 4], 'grammar_0_1': [2, 3, 2], 'meaning_0_2': [5, 4, 5], 'grammar_0_2': [5, 4, 5], 'meaning_1_4': [2.0, 4.0, 3.0], 'grammar_1_4': [1.0, 4.0, 4.0], 'meaning_1_0': [4, 4, 3], 'grammar_1_0': [3, 3, 3], 'meaning_1_1': [1, 3, 2], 'grammar_1_1': [1, 5, 2], 'meaning_1_2': [1, 5, 1], 'grammar_1_2': [1, 4, 2], 'meaning_1_5': [5.0, 3.0, 5.0], 'grammar_1_5': [5.0, 5.0, 5.0], 'meaning_1_3': [4.0, 5.0, 5.0], 'grammar_1_3': [4.0, 5.0, 3.0]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', '3')
We are going to select this select `meaning_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', '3')
We are going to select this select `grammar_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', 'blank')
We are going to select this select `meaning_0_0` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', '5')
We are going to select this select `grammar_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', '5')
We are going to select this select `meaning_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_select('grammar_0_5', '5')
We are going to select this select `grammar_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', '3')
We are going to select this select `meaning_0_1` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', '4')
We are going to select this select `grammar_0_1` with value `4`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', '3')
We are going to select this select `meaning_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', '3')
We are going to select this select `grammar_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_4
Executing one action: self.actions.modify_select('meaning_1_4', '4')
We are going to select this select `meaning_1_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_4
Executing one action: self.actions.modify_select('grammar_1_4', '5')
We are going to select this select `grammar_1_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_0
Executing one action: self.actions.modify_select('meaning_1_0', '5')
We are going to select this select `meaning_1_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_0
Executing one action: self.actions.modify_select('grammar_1_0', '5')
We are going to select this select `grammar_1_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_1
Executing one action: self.actions.modify_select('meaning_1_1', 'blank')
We are going to select this select `meaning_1_1` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_1
Executing one action: self.actions.modify_select('grammar_1_1', '3')
We are going to select this select `grammar_1_1` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_2
Executing one action: self.actions.modify_select('meaning_1_2', '5')
We are going to select this select `meaning_1_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_2
Executing one action: self.actions.modify_select('grammar_1_2', '5')
We are going to select this select `grammar_1_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_5
Executing one action: self.actions.modify_select('meaning_1_5', '5')
We are going to select this select `meaning_1_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_5
Executing one action: self.actions.modify_select('grammar_1_5', '5')
We are going to select this select `grammar_1_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_3
Executing one action: self.actions.modify_select('meaning_1_3', '3')
We are going to select this select `meaning_1_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_3
Executing one action: self.actions.modify_select('grammar_1_3', '3')
We are going to select this select `grammar_1_3` with value `3`
input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 3.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 4.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 5, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2.0, 3.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 5.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3, 3, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2, 3, 2]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 4, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 4, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2.0, 4.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[1.0, 4.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 4, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[1, 3, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[1, 5, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[1, 5, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[1, 4, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 3.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 5.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 5.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 5.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.3181818181818182
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0]}
instance_id: 18598 <-> row_number: 3
 --> inputs: ['meaning_0_4', 'grammar_0_4', 'meaning_0_3', 'grammar_0_3', 'meaning_0_5', 'grammar_0_5', 'meaning_0_2', 'grammar_0_2', 'meaning_0_1', 'grammar_0_1', 'meaning_0_0', 'grammar_0_0', 'meaning_1_4', 'grammar_1_4', 'meaning_1_3', 'grammar_1_3', 'meaning_1_0', 'grammar_1_0', 'meaning_1_5', 'grammar_1_5', 'meaning_1_2', 'grammar_1_2', 'meaning_1_1', 'grammar_1_1']
 --> Looking up gold labels from row index 3 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_4': [3.0, 4.0, 4.0], 'grammar_0_4': [2.0, 2.0, 4.0], 'meaning_0_3': [4.0, 4.0, 4.0], 'grammar_0_3': [3.0, 5.0, 5.0], 'meaning_0_5': [4.0, 4.0, 5.0], 'grammar_0_5': [5.0, 5.0, 5.0], 'meaning_0_2': [5, 5, 4], 'grammar_0_2': [5, 5, 4], 'meaning_0_1': [3, 3, 3], 'grammar_0_1': [2, 4, 3], 'meaning_0_0': [4, 4, 4], 'grammar_0_0': [3, 5, 4], 'meaning_1_4': [4.0, 4.0, 3.0], 'grammar_1_4': [2.0, 3.0, 3.0], 'meaning_1_3': [3.0, 3.0, 3.0], 'grammar_1_3': [5.0, 4.0, 4.0], 'meaning_1_0': [4, 4, 3], 'grammar_1_0': [3, 5, 3], 'meaning_1_5': [3.0, 4.0, 4.0], 'grammar_1_5': [5.0, 4.0, 5.0], 'meaning_1_2': [5, 5, 5], 'grammar_1_2': [5, 5, 4], 'meaning_1_1': [4, 4, 4], 'grammar_1_1': [2, 4, 4]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', '4')
We are going to select this select `meaning_0_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', '5')
We are going to select this select `grammar_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', 'moderate differences')
Failed to execute an action self.actions.modify_select('meaning_0_3', 'moderate differences'), error: Input value `moderate differences` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', '3')
We are going to select this select `grammar_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', '3')
We are going to select this select `meaning_0_5` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_select('grammar_0_5', '5')
We are going to select this select `grammar_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', '3')
We are going to select this select `meaning_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', '3')
We are going to select this select `grammar_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', '3')
We are going to select this select `meaning_0_1` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', '5')
We are going to select this select `grammar_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', 'blank')
We are going to select this select `meaning_0_0` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', '5')
We are going to select this select `grammar_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_4
Executing one action: self.actions.modify_select('meaning_1_4', 'nan')
Failed to execute an action self.actions.modify_select('meaning_1_4', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_4
Executing one action: self.actions.modify_select('grammar_1_4', '5')
We are going to select this select `grammar_1_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_3
Executing one action: self.actions.modify_select('meaning_1_3', 'identical')
Failed to execute an action self.actions.modify_select('meaning_1_3', 'identical'), error: Input value `identical` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_3
Executing one action: self.actions.modify_select('grammar_1_3', '3')
We are going to select this select `grammar_1_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_0
Executing one action: self.actions.modify_select('meaning_1_0', '5')
We are going to select this select `meaning_1_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_0
Executing one action: self.actions.modify_select('grammar_1_0', '5')
We are going to select this select `grammar_1_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_5
Executing one action: self.actions.modify_select('meaning_1_5', '5')
We are going to select this select `meaning_1_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_5
Executing one action: self.actions.modify_select('grammar_1_5', '3')
We are going to select this select `grammar_1_5` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_2
Executing one action: self.actions.modify_select('meaning_1_2', '3')
We are going to select this select `meaning_1_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_2
Executing one action: self.actions.modify_select('grammar_1_2', '5')
We are going to select this select `grammar_1_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_1
Executing one action: self.actions.modify_select('meaning_1_1', '3')
We are going to select this select `meaning_1_1` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_1
Executing one action: self.actions.modify_select('grammar_1_1', '5')
We are going to select this select `grammar_1_1` with value `5`
input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 4.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2.0, 2.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 4.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 5.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 4.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 5.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 5, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 5, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2, 4, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 4, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3, 5, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 4.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2.0, 3.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 3.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 4.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 4, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3, 5, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 4.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 4.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 5, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 5, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 4, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2, 4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.16666666666666666
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 18599 <-> row_number: 4
 --> inputs: ['meaning_0_4', 'grammar_0_4', 'meaning_0_5', 'grammar_0_5', 'meaning_0_2', 'grammar_0_2', 'meaning_0_1', 'grammar_0_1', 'meaning_0_0', 'grammar_0_0', 'meaning_0_3', 'grammar_0_3', 'meaning_1_4', 'grammar_1_4', 'meaning_1_3', 'grammar_1_3', 'meaning_1_2', 'grammar_1_2', 'meaning_1_5', 'grammar_1_5', 'meaning_1_0', 'grammar_1_0', 'meaning_1_1', 'grammar_1_1']
 --> Looking up gold labels from row index 4 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_4': [2.0, 5.0, 3.0], 'grammar_0_4': [5.0, 5.0, 5.0], 'meaning_0_5': [4.0, 4.0, 3.0], 'grammar_0_5': [3.0, 5.0, 5.0], 'meaning_0_2': [4, 4, 4], 'grammar_0_2': [4, 5, 5], 'meaning_0_1': [4, 1, 3], 'grammar_0_1': [5, 3, 1], 'meaning_0_0': [4, 3, 3], 'grammar_0_0': [4, 5, 4], 'meaning_0_3': [2.0, 5.0, 3.0], 'grammar_0_3': [4.0, 5.0, 4.0], 'meaning_1_4': [3.0, 4.0, 3.0], 'grammar_1_4': [4.0, 2.0, 4.0], 'meaning_1_3': [4.0, 3.0, 3.0], 'grammar_1_3': [4.0, 3.0, 2.0], 'meaning_1_2': [4, 4, 4], 'grammar_1_2': [4, 2, 4], 'meaning_1_5': [4.0, 5.0, 4.0], 'grammar_1_5': [4.0, 5.0, 5.0], 'meaning_1_0': [4, 1, 4], 'grammar_1_0': [4, 2, 2], 'meaning_1_1': [5, 3, 4], 'grammar_1_1': [4, 2, 4]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', '4')
We are going to select this select `meaning_0_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', '5')
We are going to select this select `grammar_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', '5')
We are going to select this select `meaning_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_select('grammar_0_5', '5')
We are going to select this select `grammar_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', '3')
We are going to select this select `meaning_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', '5')
We are going to select this select `grammar_0_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', '5')
We are going to select this select `meaning_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', '5')
We are going to select this select `grammar_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', '5')
We are going to select this select `grammar_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', '3')
We are going to select this select `meaning_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', '3')
We are going to select this select `grammar_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_4
Executing one action: self.actions.modify_select('meaning_1_4', '4')
We are going to select this select `meaning_1_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_4
Executing one action: self.actions.modify_select('grammar_1_4', '5')
We are going to select this select `grammar_1_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_3
Executing one action: self.actions.modify_select('meaning_1_3', '3')
We are going to select this select `meaning_1_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_3
Executing one action: self.actions.modify_select('grammar_1_3', '5')
We are going to select this select `grammar_1_3` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_2
Executing one action: self.actions.modify_select('meaning_1_2', '3')
We are going to select this select `meaning_1_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_2
Executing one action: self.actions.modify_select('grammar_1_2', '5')
We are going to select this select `grammar_1_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_5
Executing one action: self.actions.modify_select('meaning_1_5', '5')
We are going to select this select `meaning_1_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_5
Executing one action: self.actions.modify_select('grammar_1_5', '5')
We are going to select this select `grammar_1_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_0
Executing one action: self.actions.modify_select('meaning_1_0', '3')
We are going to select this select `meaning_1_0` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_0
Executing one action: self.actions.modify_select('grammar_1_0', '5')
We are going to select this select `grammar_1_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_1
Executing one action: self.actions.modify_select('meaning_1_1', '3')
We are going to select this select `meaning_1_1` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_1
Executing one action: self.actions.modify_select('grammar_1_1', '5')
We are going to select this select `grammar_1_1` with value `5`
input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2.0, 5.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 5.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 4.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 5.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 4, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 1, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 3, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 5, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2.0, 5.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 5.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 4.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 2.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 3.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 3.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 4, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 2, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 5.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 5.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 1, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 3, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 2, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 18606 <-> row_number: 11
 --> inputs: ['meaning_0_4', 'grammar_0_4', 'meaning_0_5', 'grammar_0_5', 'meaning_0_3', 'grammar_0_3', 'meaning_0_2', 'grammar_0_2', 'meaning_0_1', 'grammar_0_1', 'meaning_0_0', 'grammar_0_0', 'meaning_1_4', 'grammar_1_4', 'meaning_1_5', 'grammar_1_5', 'meaning_1_0', 'grammar_1_0', 'meaning_1_2', 'grammar_1_2', 'meaning_1_1', 'grammar_1_1', 'meaning_1_3', 'grammar_1_3']
 --> Looking up gold labels from row index 11 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_4': [5.0, 4.0, 4.0], 'grammar_0_4': [5.0, 4.0, 5.0], 'meaning_0_5': [3.0, 3.0, 4.0], 'grammar_0_5': [5.0, 4.0, 5.0], 'meaning_0_3': [3.0, 2.0, 3.0], 'grammar_0_3': [3.0, 5.0, 4.0], 'meaning_0_2': [3, 4, 4], 'grammar_0_2': [3, 4, 3], 'meaning_0_1': [2, 4, 4], 'grammar_0_1': [1, 3, 2], 'meaning_0_0': [4, 4, 5], 'grammar_0_0': [5, 5, 3], 'meaning_1_4': [5.0, 4.0, 5.0], 'grammar_1_4': [2.0, 4.0, 2.0], 'meaning_1_5': [3.0, 4.0, 2.0], 'grammar_1_5': [4.0, 4.0, 4.0], 'meaning_1_0': [3, 3, 4], 'grammar_1_0': [2, 3, 2], 'meaning_1_2': [5, 3, 5], 'grammar_1_2': [3, 4, 2], 'meaning_1_1': [4, 4, 5], 'grammar_1_1': [1, 3, 2], 'meaning_1_3': [2.0, 3.0, 3.0], 'grammar_1_3': [1.0, 3.0, 1.0]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', '4')
We are going to select this select `meaning_0_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', '5')
We are going to select this select `grammar_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', '3')
We are going to select this select `meaning_0_5` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_select('grammar_0_5', '5')
We are going to select this select `grammar_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', '3')
We are going to select this select `meaning_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', '3')
We are going to select this select `grammar_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', '5')
We are going to select this select `meaning_0_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', '3')
We are going to select this select `grammar_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', 'blank')
We are going to select this select `meaning_0_1` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', '5')
We are going to select this select `grammar_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', 'blank')
We are going to select this select `meaning_0_0` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', '5')
We are going to select this select `grammar_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_4
Executing one action: self.actions.modify_select('meaning_1_4', '4')
We are going to select this select `meaning_1_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_4
Executing one action: self.actions.modify_select('grammar_1_4', '1')
We are going to select this select `grammar_1_4` with value `1`
 - - - - - -  starting a new element: `Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_5
Executing one action: self.actions.modify_select('meaning_1_5', '5')
We are going to select this select `meaning_1_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_5
Executing one action: self.actions.modify_select('grammar_1_5', '5')
We are going to select this select `grammar_1_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_0
Executing one action: self.actions.modify_select('meaning_1_0', '3')
We are going to select this select `meaning_1_0` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_0
Executing one action: self.actions.modify_select('grammar_1_0', '5')
We are going to select this select `grammar_1_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_2
Executing one action: self.actions.modify_select('meaning_1_2', 'blank')
We are going to select this select `meaning_1_2` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_2
Executing one action: self.actions.modify_select('grammar_1_2', '5')
We are going to select this select `grammar_1_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_1
Executing one action: self.actions.modify_select('meaning_1_1', '5')
We are going to select this select `meaning_1_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_1
Executing one action: self.actions.modify_select('grammar_1_1', '5')
We are going to select this select `grammar_1_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_3
Executing one action: self.actions.modify_select('meaning_1_3', 'blank')
We are going to select this select `meaning_1_3` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_3
Executing one action: self.actions.modify_select('grammar_1_3', '3')
We are going to select this select `grammar_1_3` with value `3`
input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 4.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 4.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 3.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 4.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 2.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 5.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3, 4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3, 4, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2, 4, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[1, 3, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 4, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 5, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 4.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2.0, 4.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 4.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 4.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3, 3, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2, 3, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 3, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3, 4, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 4, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[1, 3, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2.0, 3.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[1.0, 3.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.375
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 18626 <-> row_number: 31
 --> inputs: ['meaning_0_3', 'grammar_0_3', 'meaning_0_4', 'grammar_0_4', 'meaning_0_5', 'grammar_0_5', 'meaning_0_0', 'grammar_0_0', 'meaning_0_1', 'grammar_0_1', 'meaning_0_2', 'grammar_0_2', 'meaning_1_0', 'grammar_1_0', 'meaning_1_5', 'grammar_1_5', 'meaning_1_4', 'grammar_1_4', 'meaning_1_3', 'grammar_1_3', 'meaning_1_2', 'grammar_1_2', 'meaning_1_1', 'grammar_1_1']
 --> Looking up gold labels from row index 31 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_3': [5.0, 4.0, 5.0], 'grammar_0_3': [5.0, 4.0, 5.0], 'meaning_0_4': [5.0, 2.0, 5.0], 'grammar_0_4': [3.0, 2.0, 5.0], 'meaning_0_5': [4.0, 1.0, 4.0], 'grammar_0_5': [5.0, 3.0, 5.0], 'meaning_0_0': [5, 5, 5], 'grammar_0_0': [5, 5, 5], 'meaning_0_1': [4, 3, 5], 'grammar_0_1': [5, 4, 5], 'meaning_0_2': [5, 5, 3], 'grammar_0_2': [5, 5, 5], 'meaning_1_0': [1, 2, 2], 'grammar_1_0': [1, 2, 3], 'meaning_1_5': [5.0, 3.0, 4.0], 'grammar_1_5': [5.0, 3.0, 2.0], 'meaning_1_4': [1.0, 2.0, 4.0], 'grammar_1_4': [1.0, 1.0, 3.0], 'meaning_1_3': [5.0, 1.0, 3.0], 'grammar_1_3': [2.0, 1.0, 3.0], 'meaning_1_2': [2, 1, 2], 'grammar_1_2': [5, 3, 1], 'meaning_1_1': [2, 2, 3], 'grammar_1_1': [1, 1, 5]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', '3')
We are going to select this select `meaning_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', '3')
We are going to select this select `grammar_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', '4')
We are going to select this select `meaning_0_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', '5')
We are going to select this select `grammar_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', '5')
We are going to select this select `meaning_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_select('grammar_0_5', '5')
We are going to select this select `grammar_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', '5')
We are going to select this select `grammar_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', 'nan')
Failed to execute an action self.actions.modify_select('meaning_0_1', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', '3')
We are going to select this select `grammar_0_1` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', '3')
We are going to select this select `meaning_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', '3')
We are going to select this select `grammar_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_0
Executing one action: self.actions.modify_select('meaning_1_0', '3')
We are going to select this select `meaning_1_0` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_0
Executing one action: self.actions.modify_select('grammar_1_0', '5')
We are going to select this select `grammar_1_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_5
Executing one action: self.actions.modify_select('meaning_1_5', 'identical')
Failed to execute an action self.actions.modify_select('meaning_1_5', 'identical'), error: Input value `identical` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_5
Executing one action: self.actions.modify_select('grammar_1_5', '5')
We are going to select this select `grammar_1_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_4
Executing one action: self.actions.modify_select('meaning_1_4', '4')
We are going to select this select `meaning_1_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_4
Executing one action: self.actions.modify_select('grammar_1_4', '5')
We are going to select this select `grammar_1_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_3
Executing one action: self.actions.modify_select('meaning_1_3', '3')
We are going to select this select `meaning_1_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_3
Executing one action: self.actions.modify_select('grammar_1_3', '3')
We are going to select this select `grammar_1_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_2
Executing one action: self.actions.modify_select('meaning_1_2', '3')
We are going to select this select `meaning_1_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_2
Executing one action: self.actions.modify_select('grammar_1_2', '5')
We are going to select this select `grammar_1_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_1
Executing one action: self.actions.modify_select('meaning_1_1', '3')
We are going to select this select `meaning_1_1` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_1
Executing one action: self.actions.modify_select('grammar_1_1', '5')
We are going to select this select `grammar_1_1` with value `5`
input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 4.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 4.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 2.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 2.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 1.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 3.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 3, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 4, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 5, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 5, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[1, 2, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 3.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 3.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[1.0, 2.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[1.0, 1.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 1.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2.0, 1.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 3, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2, 2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[1, 1, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.20833333333333334
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 18613 <-> row_number: 18
 --> inputs: ['meaning_0_2', 'grammar_0_2', 'meaning_0_0', 'grammar_0_0', 'meaning_0_5', 'grammar_0_5', 'meaning_0_1', 'grammar_0_1', 'meaning_0_4', 'grammar_0_4', 'meaning_0_3', 'grammar_0_3', 'meaning_1_2', 'grammar_1_2', 'meaning_1_0', 'grammar_1_0', 'meaning_1_5', 'grammar_1_5', 'meaning_1_1', 'grammar_1_1', 'meaning_1_3', 'grammar_1_3', 'meaning_1_4', 'grammar_1_4']
 --> Looking up gold labels from row index 18 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_2': [4, 4, 5], 'grammar_0_2': [3, 3, 5], 'meaning_0_0': [4, 4, 2], 'grammar_0_0': [2, 4, 2], 'meaning_0_5': [4.0, 5.0, 5.0], 'grammar_0_5': [2.0, 4.0, 3.0], 'meaning_0_1': [4, 5, 3], 'grammar_0_1': [2, 2, 2], 'meaning_0_4': [3.0, 4.0, 3.0], 'grammar_0_4': [2.0, 4.0, 2.0], 'meaning_0_3': [4.0, 3.0, 2.0], 'grammar_0_3': [1.0, 5.0, 3.0], 'meaning_1_2': [4, 4, 4], 'grammar_1_2': [3, 4, 4], 'meaning_1_0': [5, 4, 5], 'grammar_1_0': [5, 4, 5], 'meaning_1_5': [4.0, 3.0, 3.0], 'grammar_1_5': [5.0, 5.0, 5.0], 'meaning_1_1': [3, 3, 3], 'grammar_1_1': [1, 4, 1], 'meaning_1_3': [2.0, 4.0, 3.0], 'grammar_1_3': [5.0, 4.0, 5.0], 'meaning_1_4': [5.0, 4.0, 5.0], 'grammar_1_4': [5.0, 4.0, 4.0]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', '3')
We are going to select this select `meaning_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', '3')
We are going to select this select `grammar_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', '5')
We are going to select this select `grammar_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', '4')
We are going to select this select `meaning_0_5` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_select('grammar_0_5', '5')
We are going to select this select `grammar_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', '3')
We are going to select this select `meaning_0_1` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', '5')
We are going to select this select `grammar_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', '3')
We are going to select this select `meaning_0_4` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', '5')
We are going to select this select `grammar_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', '3')
We are going to select this select `meaning_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', '3')
We are going to select this select `grammar_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_2
Executing one action: self.actions.modify_select('meaning_1_2', '3')
We are going to select this select `meaning_1_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_2
Executing one action: self.actions.modify_select('grammar_1_2', '5')
We are going to select this select `grammar_1_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_0
Executing one action: self.actions.modify_select('meaning_1_0', '3')
We are going to select this select `meaning_1_0` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_0
Executing one action: self.actions.modify_select('grammar_1_0', '5')
We are going to select this select `grammar_1_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_5
Executing one action: self.actions.modify_select('meaning_1_5', '3')
We are going to select this select `meaning_1_5` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_5
Executing one action: self.actions.modify_select('grammar_1_5', '5')
We are going to select this select `grammar_1_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_1
Executing one action: self.actions.modify_select('meaning_1_1', '3')
We are going to select this select `meaning_1_1` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_1
Executing one action: self.actions.modify_select('grammar_1_1', '5')
We are going to select this select `grammar_1_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_3
Executing one action: self.actions.modify_select('meaning_1_3', '3')
We are going to select this select `meaning_1_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_3
Executing one action: self.actions.modify_select('grammar_1_3', '3')
We are going to select this select `grammar_1_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_4
Executing one action: self.actions.modify_select('meaning_1_4', '4')
We are going to select this select `meaning_1_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_4
Executing one action: self.actions.modify_select('grammar_1_4', '5')
We are going to select this select `grammar_1_4` with value `5`
input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 4, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3, 3, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 4, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2, 4, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 5.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2.0, 4.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 5, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 4.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2.0, 4.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 3.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[1.0, 5.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 4, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3, 4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 4, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 4, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 3.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 5.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[1, 4, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2.0, 4.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 4.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 4.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 4.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 18617 <-> row_number: 22
 --> inputs: ['meaning_0_5', 'grammar_0_5', 'meaning_0_4', 'grammar_0_4', 'meaning_0_3', 'grammar_0_3', 'meaning_0_2', 'grammar_0_2', 'meaning_0_1', 'grammar_0_1', 'meaning_0_0', 'grammar_0_0', 'meaning_1_1', 'grammar_1_1', 'meaning_1_5', 'grammar_1_5', 'meaning_1_0', 'grammar_1_0', 'meaning_1_4', 'grammar_1_4', 'meaning_1_3', 'grammar_1_3', 'meaning_1_2', 'grammar_1_2']
 --> Looking up gold labels from row index 22 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_5': [4.0, 4.0], 'grammar_0_5': [5.0, 5.0], 'meaning_0_4': [5.0, 5.0], 'grammar_0_4': [3.0, 3.0], 'meaning_0_3': [5.0, 5.0], 'grammar_0_3': [5.0, 5.0], 'meaning_0_2': [3, 3], 'grammar_0_2': [3, 3], 'meaning_0_1': [3, 3], 'grammar_0_1': [3, 4], 'meaning_0_0': [4, 4], 'grammar_0_0': [5, 5], 'meaning_1_1': [3, 4], 'grammar_1_1': [3, 2], 'meaning_1_5': [5.0, 5.0], 'grammar_1_5': [5.0, 5.0], 'meaning_1_0': [5, 5], 'grammar_1_0': [5, 5], 'meaning_1_4': [3.0, 3.0], 'grammar_1_4': [3.0, 2.0], 'meaning_1_3': [4.0, 4.0], 'grammar_1_3': [3.0, 3.0], 'meaning_1_2': [5, 5], 'grammar_1_2': [5, 5]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', '3')
We are going to select this select `meaning_0_5` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_select('grammar_0_5', '5')
We are going to select this select `grammar_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', '4')
We are going to select this select `meaning_0_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', '5')
We are going to select this select `grammar_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', '3')
We are going to select this select `meaning_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', '3')
We are going to select this select `grammar_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', '3')
We are going to select this select `meaning_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', '3')
We are going to select this select `grammar_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', '5')
We are going to select this select `meaning_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', '5')
We are going to select this select `grammar_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', 'blank')
We are going to select this select `meaning_0_0` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', '5')
We are going to select this select `grammar_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_1
Executing one action: self.actions.modify_select('meaning_1_1', '3')
We are going to select this select `meaning_1_1` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_1
Executing one action: self.actions.modify_select('grammar_1_1', '5')
We are going to select this select `grammar_1_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_5
Executing one action: self.actions.modify_select('meaning_1_5', '3')
We are going to select this select `meaning_1_5` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_5
Executing one action: self.actions.modify_select('grammar_1_5', '5')
We are going to select this select `grammar_1_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_0
Executing one action: self.actions.modify_select('meaning_1_0', '3')
We are going to select this select `meaning_1_0` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_0
Executing one action: self.actions.modify_select('grammar_1_0', '5')
We are going to select this select `grammar_1_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_4
Executing one action: self.actions.modify_select('meaning_1_4', '4')
We are going to select this select `meaning_1_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_4
Executing one action: self.actions.modify_select('grammar_1_4', '5')
We are going to select this select `grammar_1_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_3
Executing one action: self.actions.modify_select('meaning_1_3', 'moderate differences')
Failed to execute an action self.actions.modify_select('meaning_1_3', 'moderate differences'), error: Input value `moderate differences` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_3
Executing one action: self.actions.modify_select('grammar_1_3', '5')
We are going to select this select `grammar_1_3` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_2
Executing one action: self.actions.modify_select('meaning_1_2', '3')
We are going to select this select `meaning_1_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_2
Executing one action: self.actions.modify_select('grammar_1_2', '5')
We are going to select this select `grammar_1_2` with value `5`
input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.3333333333333333
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]}
instance_id: 18621 <-> row_number: 26
 --> inputs: ['meaning_0_0', 'grammar_0_0', 'meaning_0_5', 'grammar_0_5', 'meaning_0_1', 'grammar_0_1', 'meaning_0_4', 'grammar_0_4', 'meaning_0_2', 'grammar_0_2', 'meaning_0_3', 'grammar_0_3', 'meaning_1_4', 'grammar_1_4', 'meaning_1_1', 'grammar_1_1', 'meaning_1_5', 'grammar_1_5', 'meaning_1_2', 'grammar_1_2', 'meaning_1_0', 'grammar_1_0', 'meaning_1_3', 'grammar_1_3']
 --> Looking up gold labels from row index 26 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_0': [4, 4, 4], 'grammar_0_0': [4, 4, 4], 'meaning_0_5': [4.0, 3.0, 3.0], 'grammar_0_5': [5.0, 4.0, 4.0], 'meaning_0_1': [4, 2, 3], 'grammar_0_1': [3, 2, 2], 'meaning_0_4': [4.0, 4.0, 4.0], 'grammar_0_4': [3.0, 1.0, 2.0], 'meaning_0_2': [4, 5, 5], 'grammar_0_2': [4, 4, 2], 'meaning_0_3': [4.0, 4.0, 2.0], 'grammar_0_3': [5.0, 2.0, 3.0], 'meaning_1_4': [4.0, 1.0, 2.0], 'grammar_1_4': [2.0, 3.0, 2.0], 'meaning_1_1': [4, 1, 3], 'grammar_1_1': [3, 2, 2], 'meaning_1_5': [4.0, 4.0, 2.0], 'grammar_1_5': [3.0, 5.0, 3.0], 'meaning_1_2': [4, 2, 4], 'grammar_1_2': [4, 2, 3], 'meaning_1_0': [4, 1, 3], 'grammar_1_0': [2, 2, 2], 'meaning_1_3': [4.0, 1.0, 2.0], 'grammar_1_3': [3.0, 4.0, 4.0]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', 'blank')
We are going to select this select `meaning_0_0` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', '5')
We are going to select this select `grammar_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', '5')
We are going to select this select `meaning_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_select('grammar_0_5', '5')
We are going to select this select `grammar_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', '3')
We are going to select this select `meaning_0_1` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', '5')
We are going to select this select `grammar_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', '4')
We are going to select this select `meaning_0_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', '5')
We are going to select this select `grammar_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', '4')
We are going to select this select `meaning_0_2` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', '5')
We are going to select this select `grammar_0_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', '3')
We are going to select this select `meaning_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', '3')
We are going to select this select `grammar_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_4
Executing one action: self.actions.modify_select('meaning_1_4', '4')
We are going to select this select `meaning_1_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_4
Executing one action: self.actions.modify_select('grammar_1_4', '5')
We are going to select this select `grammar_1_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_1
Executing one action: self.actions.modify_select('meaning_1_1', '3')
We are going to select this select `meaning_1_1` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_1
Executing one action: self.actions.modify_select('grammar_1_1', '5')
We are going to select this select `grammar_1_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_5
Executing one action: self.actions.modify_select('meaning_1_5', '5')
We are going to select this select `meaning_1_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_5
Executing one action: self.actions.modify_select('grammar_1_5', '5')
We are going to select this select `grammar_1_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_2
Executing one action: self.actions.modify_select('meaning_1_2', '3')
We are going to select this select `meaning_1_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_2
Executing one action: self.actions.modify_select('grammar_1_2', '5')
We are going to select this select `grammar_1_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_0
Executing one action: self.actions.modify_select('meaning_1_0', '3')
We are going to select this select `meaning_1_0` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_0
Executing one action: self.actions.modify_select('grammar_1_0', '5')
We are going to select this select `grammar_1_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_3
Executing one action: self.actions.modify_select('meaning_1_3', 'moderate differences')
Failed to execute an action self.actions.modify_select('meaning_1_3', 'moderate differences'), error: Input value `moderate differences` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_3
Executing one action: self.actions.modify_select('grammar_1_3', '3')
We are going to select this select `grammar_1_3` with value `3`
input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 4, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 3.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 4.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 4.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 5, 5]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 4, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 4.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 2.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2.0, 3.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 1, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 4.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 5.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 2, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 2, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 1, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 4.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.08333333333333333
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 18609 <-> row_number: 14
 --> inputs: ['meaning_0_2', 'grammar_0_2', 'meaning_0_3', 'grammar_0_3', 'meaning_0_4', 'grammar_0_4', 'meaning_0_1', 'grammar_0_1', 'meaning_0_0', 'grammar_0_0', 'meaning_0_5', 'grammar_0_5', 'meaning_1_1', 'grammar_1_1', 'meaning_1_4', 'grammar_1_4', 'meaning_1_3', 'grammar_1_3', 'meaning_1_2', 'grammar_1_2', 'meaning_1_0', 'grammar_1_0', 'meaning_1_5', 'grammar_1_5']
 --> Looking up gold labels from row index 14 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_2': [4, 3, 3], 'grammar_0_2': [3, 2, 2], 'meaning_0_3': [4.0, 3.0, 1.0], 'grammar_0_3': [4.0, 4.0, 1.0], 'meaning_0_4': [4.0, 3.0, 4.0], 'grammar_0_4': [5.0, 2.0, 2.0], 'meaning_0_1': [4, 2, 4], 'grammar_0_1': [2, 2, 2], 'meaning_0_0': [4, 4, 5], 'grammar_0_0': [4, 5, 4], 'meaning_0_5': [4.0, 5.0, 5.0], 'grammar_0_5': [5.0, 5.0, 5.0], 'meaning_1_1': [3, 3, 1], 'grammar_1_1': [2, 2, 2], 'meaning_1_4': [5.0, 5.0, 3.0], 'grammar_1_4': [5.0, 2.0, 2.0], 'meaning_1_3': [5.0, 5.0, 5.0], 'grammar_1_3': [5.0, 4.0, 5.0], 'meaning_1_2': [4, 3, 2], 'grammar_1_2': [2, 2, 1], 'meaning_1_0': [4, 4, 4], 'grammar_1_0': [2, 4, 2], 'meaning_1_5': [4.0, 3.0, 4.0], 'grammar_1_5': [5.0, 5.0, 5.0]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', '3')
We are going to select this select `meaning_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', '3')
We are going to select this select `grammar_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', '3')
We are going to select this select `meaning_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', '3')
We are going to select this select `grammar_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', '4')
We are going to select this select `meaning_0_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', '5')
We are going to select this select `grammar_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', '5')
We are going to select this select `meaning_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', '5')
We are going to select this select `grammar_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', '5')
We are going to select this select `grammar_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', 'identical')
Failed to execute an action self.actions.modify_select('meaning_0_5', 'identical'), error: Input value `identical` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_select('grammar_0_5', '5')
We are going to select this select `grammar_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_1
Executing one action: self.actions.modify_select('meaning_1_1', 'blank')
We are going to select this select `meaning_1_1` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_1
Executing one action: self.actions.modify_select('grammar_1_1', '5')
We are going to select this select `grammar_1_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_4
Executing one action: self.actions.modify_select('meaning_1_4', '4')
We are going to select this select `meaning_1_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_4
Executing one action: self.actions.modify_select('grammar_1_4', '5')
We are going to select this select `grammar_1_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_3
Executing one action: self.actions.modify_select('meaning_1_3', 'moderate differences')
Failed to execute an action self.actions.modify_select('meaning_1_3', 'moderate differences'), error: Input value `moderate differences` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_3
Executing one action: self.actions.modify_select('grammar_1_3', '3')
We are going to select this select `grammar_1_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_2
Executing one action: self.actions.modify_select('meaning_1_2', '3')
We are going to select this select `meaning_1_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_2
Executing one action: self.actions.modify_select('grammar_1_2', '3')
We are going to select this select `grammar_1_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_0
Executing one action: self.actions.modify_select('meaning_1_0', 'blank')
We are going to select this select `meaning_1_0` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_0
Executing one action: self.actions.modify_select('grammar_1_0', '5')
We are going to select this select `grammar_1_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_5
Executing one action: self.actions.modify_select('meaning_1_5', '5')
We are going to select this select `meaning_1_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_5
Executing one action: self.actions.modify_select('grammar_1_5', '5')
We are going to select this select `grammar_1_5` with value `5`
input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 3.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 4.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 3.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 2, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 4, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 5, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 5.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 5.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3, 3, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 5.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 5.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 4.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 4, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2, 4, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 3.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 5.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.16666666666666666
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]}
instance_id: 18623 <-> row_number: 28
Could not find input field with name `grammar_1_4`
Could not find input field with name `meaning_1_4`
 --> inputs: ['meaning_0_4', 'grammar_0_4', 'meaning_0_2', 'grammar_0_2', 'meaning_0_3', 'grammar_0_3', 'meaning_0_1', 'grammar_0_1', 'meaning_0_5', 'grammar_0_5', 'meaning_0_0', 'grammar_0_0', 'meaning_1_5', 'grammar_1_5', 'meaning_1_0', 'grammar_1_0', 'meaning_1_2', 'grammar_1_2', 'meaning_1_1', 'grammar_1_1', 'meaning_1_3', 'grammar_1_3']
 --> Looking up gold labels from row index 28 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_4': [4.0, 4.0, 2.0], 'grammar_0_4': [2.0, 5.0, 2.0], 'meaning_0_2': [4, 3, 3], 'grammar_0_2': [3, 4, 2], 'meaning_0_3': [5.0, 4.0, 5.0], 'grammar_0_3': [5.0, 5.0, 5.0], 'meaning_0_1': [1, 3, 2], 'grammar_0_1': [1, 5, 2], 'meaning_0_5': [4.0, 5.0, 4.0], 'grammar_0_5': [4.0, 4.0, 4.0], 'meaning_0_0': [5, 5, 3], 'grammar_0_0': [2, 4, 2], 'meaning_1_5': [4.0, 4.0, 3.0], 'grammar_1_5': [3.0, 5.0, 4.0], 'meaning_1_0': [5, 3, 5], 'grammar_1_0': [5, 4, 4], 'meaning_1_2': [5, 5, 3], 'grammar_1_2': [2, 5, 2], 'meaning_1_1': [4, 4, 1], 'grammar_1_1': [1, 5, 2], 'meaning_1_3': [5.0, 4.0, 5.0], 'grammar_1_3': [5.0, 4.0, 5.0]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', '4')
We are going to select this select `meaning_0_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', '5')
We are going to select this select `grammar_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', '5')
We are going to select this select `meaning_0_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', '5')
We are going to select this select `grammar_0_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', '3')
We are going to select this select `meaning_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', '3')
We are going to select this select `grammar_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', '3')
We are going to select this select `meaning_0_1` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', '5')
We are going to select this select `grammar_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', '3')
We are going to select this select `meaning_0_5` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_select('grammar_0_5', '5')
We are going to select this select `grammar_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', 'blank')
We are going to select this select `meaning_0_0` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', '5')
We are going to select this select `grammar_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_5
Executing one action: self.actions.modify_select('meaning_1_5', 'identical')
Failed to execute an action self.actions.modify_select('meaning_1_5', 'identical'), error: Input value `identical` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_5
Executing one action: self.actions.modify_select('grammar_1_5', '5')
We are going to select this select `grammar_1_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_0
Executing one action: self.actions.modify_select('meaning_1_0', 'blank')
We are going to select this select `meaning_1_0` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_0
Executing one action: self.actions.modify_select('grammar_1_0', '5')
We are going to select this select `grammar_1_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_2
Executing one action: self.actions.modify_select('meaning_1_2', '3')
We are going to select this select `meaning_1_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_2
Executing one action: self.actions.modify_select('grammar_1_2', '5')
We are going to select this select `grammar_1_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_1
Executing one action: self.actions.modify_select('meaning_1_1', 'nan')
Failed to execute an action self.actions.modify_select('meaning_1_1', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_1
Executing one action: self.actions.modify_select('grammar_1_1', '5')
We are going to select this select `grammar_1_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_3
Executing one action: self.actions.modify_select('meaning_1_3', '3')
We are going to select this select `meaning_1_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_3
Executing one action: self.actions.modify_select('grammar_1_3', '3')
We are going to select this select `grammar_1_3` with value `3`
input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 4.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2.0, 5.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3, 4, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 4.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 5.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[1, 3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[1, 5, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 5.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 4.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 5, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2, 4, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 4.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 5.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 3, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 5, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2, 5, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 4, 1]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[1, 5, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 4.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 4.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.045454545454545456
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 18631 <-> row_number: 36
 --> inputs: ['meaning_0_2', 'grammar_0_2', 'meaning_0_1', 'grammar_0_1', 'meaning_0_3', 'grammar_0_3', 'meaning_0_5', 'grammar_0_5', 'meaning_0_0', 'grammar_0_0', 'meaning_0_4', 'grammar_0_4', 'meaning_1_5', 'grammar_1_5', 'meaning_1_1', 'grammar_1_1', 'meaning_1_2', 'grammar_1_2', 'meaning_1_3', 'grammar_1_3', 'meaning_1_0', 'grammar_1_0', 'meaning_1_4', 'grammar_1_4']
 --> Looking up gold labels from row index 36 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_2': [2, 4, 2], 'grammar_0_2': [1, 5, 2], 'meaning_0_1': [1, 4, 1], 'grammar_0_1': [1, 4, 1], 'meaning_0_3': [5.0, 4.0, 5.0], 'grammar_0_3': [5.0, 4.0, 5.0], 'meaning_0_5': [4.0, 4.0, 5.0], 'grammar_0_5': [3.0, 4.0, 5.0], 'meaning_0_0': [5, 5, 4], 'grammar_0_0': [4, 4, 3], 'meaning_0_4': [4.0, 2.0, 3.0], 'grammar_0_4': [2.0, 4.0, 2.0], 'meaning_1_5': [4.0, 4.0, 2.0], 'grammar_1_5': [3.0, 4.0, 5.0], 'meaning_1_1': [2, 5, 1], 'grammar_1_1': [1, 4, 1], 'meaning_1_2': [4, 4, 2], 'grammar_1_2': [3, 4, 2], 'meaning_1_3': [3.0, 4.0, 2.0], 'grammar_1_3': [3.0, 4.0, 5.0], 'meaning_1_0': [3, 4, 4], 'grammar_1_0': [2, 5, 2], 'meaning_1_4': [3.0, 3.0, 4.0], 'grammar_1_4': [3.0, 4.0, 3.0]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', '3')
We are going to select this select `meaning_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', '3')
We are going to select this select `grammar_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', '5')
We are going to select this select `meaning_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', '5')
We are going to select this select `grammar_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', '3')
We are going to select this select `meaning_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', '3')
We are going to select this select `grammar_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', '3')
We are going to select this select `meaning_0_5` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_select('grammar_0_5', '5')
We are going to select this select `grammar_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', '5')
We are going to select this select `grammar_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', '4')
We are going to select this select `meaning_0_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', '5')
We are going to select this select `grammar_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_5
Executing one action: self.actions.modify_select('meaning_1_5', '5')
We are going to select this select `meaning_1_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_5
Executing one action: self.actions.modify_select('grammar_1_5', '5')
We are going to select this select `grammar_1_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_1
Executing one action: self.actions.modify_select('meaning_1_1', '3')
We are going to select this select `meaning_1_1` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_1
Executing one action: self.actions.modify_select('grammar_1_1', '4')
We are going to select this select `grammar_1_1` with value `4`
 - - - - - -  starting a new element: `Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_2
Executing one action: self.actions.modify_select('meaning_1_2', 'nan')
Failed to execute an action self.actions.modify_select('meaning_1_2', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_2
Executing one action: self.actions.modify_select('grammar_1_2', '5')
We are going to select this select `grammar_1_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_3
Executing one action: self.actions.modify_select('meaning_1_3', '3')
We are going to select this select `meaning_1_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_3
Executing one action: self.actions.modify_select('grammar_1_3', 'blank')
We are going to select this select `grammar_1_3` with value `blank`
 - - - - - -  starting a new element: `Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_0
Executing one action: self.actions.modify_select('meaning_1_0', '3')
We are going to select this select `meaning_1_0` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_0
Executing one action: self.actions.modify_select('grammar_1_0', '5')
We are going to select this select `grammar_1_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_4
Executing one action: self.actions.modify_select('meaning_1_4', '3')
We are going to select this select `meaning_1_4` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_4
Executing one action: self.actions.modify_select('grammar_1_4', '5')
We are going to select this select `grammar_1_4` with value `5`
input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2, 4, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[1, 5, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[1, 4, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[1, 4, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 4.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 4.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 4.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 4.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 5, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 4, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 2.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2.0, 4.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 4.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 4.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2, 5, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[1, 4, 1]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 4, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3, 4, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 4.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 4.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3, 4, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2, 5, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 3.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 4.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.16666666666666666
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0]}
instance_id: 18644 <-> row_number: 49
 --> inputs: ['meaning_0_3', 'grammar_0_3', 'meaning_0_0', 'grammar_0_0', 'meaning_0_5', 'grammar_0_5', 'meaning_0_1', 'grammar_0_1', 'meaning_0_4', 'grammar_0_4', 'meaning_0_2', 'grammar_0_2', 'meaning_1_1', 'grammar_1_1', 'meaning_1_5', 'grammar_1_5', 'meaning_1_2', 'grammar_1_2', 'meaning_1_4', 'grammar_1_4', 'meaning_1_0', 'grammar_1_0', 'meaning_1_3', 'grammar_1_3']
 --> Looking up gold labels from row index 49 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_3': [4.0, 4.0, 5.0], 'grammar_0_3': [4.0, 5.0, 5.0], 'meaning_0_0': [5, 4, 5], 'grammar_0_0': [4, 5, 5], 'meaning_0_5': [1.0, 4.0, 2.0], 'grammar_0_5': [5.0, 5.0, 4.0], 'meaning_0_1': [2, 4, 4], 'grammar_0_1': [2, 3, 2], 'meaning_0_4': [3.0, 4.0, 4.0], 'grammar_0_4': [3.0, 5.0, 5.0], 'meaning_0_2': [3, 4, 4], 'grammar_0_2': [3, 3, 3], 'meaning_1_1': [3, 4, 4], 'grammar_1_1': [3, 5, 3], 'meaning_1_5': [3.0, 4.0, 4.0], 'grammar_1_5': [3.0, 5.0, 4.0], 'meaning_1_2': [2, 4, 4], 'grammar_1_2': [2, 2, 3], 'meaning_1_4': [4.0, 4.0, 3.0], 'grammar_1_4': [5.0, 4.0, 3.0], 'meaning_1_0': [3, 4, 4], 'grammar_1_0': [4, 5, 3], 'meaning_1_3': [4.0, 4.0, 4.0], 'grammar_1_3': [5.0, 3.0, 2.0]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', '3')
We are going to select this select `meaning_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', '3')
We are going to select this select `grammar_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', '3')
We are going to select this select `meaning_0_0` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', '5')
We are going to select this select `grammar_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', '3')
We are going to select this select `meaning_0_5` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_select('grammar_0_5', '3')
We are going to select this select `grammar_0_5` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', '5')
We are going to select this select `meaning_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', '3')
We are going to select this select `grammar_0_1` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', '4')
We are going to select this select `meaning_0_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', '5')
We are going to select this select `grammar_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', '3')
We are going to select this select `meaning_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', '5')
We are going to select this select `grammar_0_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_1
Executing one action: self.actions.modify_select('meaning_1_1', '3')
We are going to select this select `meaning_1_1` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_1
Executing one action: self.actions.modify_select('grammar_1_1', 'perfect')
Failed to execute an action self.actions.modify_select('grammar_1_1', 'perfect'), error: Input value `perfect` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_5
Executing one action: self.actions.modify_select('meaning_1_5', '5')
We are going to select this select `meaning_1_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_5
Executing one action: self.actions.modify_select('grammar_1_5', '5')
We are going to select this select `grammar_1_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_2
Executing one action: self.actions.modify_select('meaning_1_2', '3')
We are going to select this select `meaning_1_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_2
Executing one action: self.actions.modify_select('grammar_1_2', '5')
We are going to select this select `grammar_1_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_4
Executing one action: self.actions.modify_select('meaning_1_4', '4')
We are going to select this select `meaning_1_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_4
Executing one action: self.actions.modify_select('grammar_1_4', '5')
We are going to select this select `grammar_1_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_0
Executing one action: self.actions.modify_select('meaning_1_0', '3')
We are going to select this select `meaning_1_0` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_0
Executing one action: self.actions.modify_select('grammar_1_0', '5')
We are going to select this select `grammar_1_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_3
Executing one action: self.actions.modify_select('meaning_1_3', '3')
We are going to select this select `meaning_1_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_3
Executing one action: self.actions.modify_select('grammar_1_3', '3')
We are going to select this select `grammar_1_3` with value `3`
input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 4.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 5.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 4, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[1.0, 4.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 5.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2, 4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2, 3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 4.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 5.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3, 4, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3, 4, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3, 5, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 4.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 5.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2, 4, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2, 2, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 4.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 4.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3, 4, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 5, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 4.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 3.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.20833333333333334
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 18610 <-> row_number: 15
 --> inputs: ['meaning_0_0', 'grammar_0_0', 'meaning_0_1', 'grammar_0_1', 'meaning_0_2', 'grammar_0_2', 'meaning_0_3', 'grammar_0_3', 'meaning_0_4', 'grammar_0_4', 'meaning_0_5', 'grammar_0_5', 'meaning_1_4', 'grammar_1_4', 'meaning_1_1', 'grammar_1_1', 'meaning_1_5', 'grammar_1_5', 'meaning_1_0', 'grammar_1_0', 'meaning_1_2', 'grammar_1_2', 'meaning_1_3', 'grammar_1_3']
 --> Looking up gold labels from row index 15 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_0': [5, 5, 4], 'grammar_0_0': [5, 5, 4], 'meaning_0_1': [4, 1, 4], 'grammar_0_1': [3, 1, 3], 'meaning_0_2': [4, 4, 3], 'grammar_0_2': [3, 3, 3], 'meaning_0_3': [5.0, 4.0, 4.0], 'grammar_0_3': [5.0, 4.0, 5.0], 'meaning_0_4': [3.0, 4.0, 5.0], 'grammar_0_4': [4.0, 4.0, 5.0], 'meaning_0_5': [2.0, 5.0, 4.0], 'grammar_0_5': [5.0, 5.0, 4.0], 'meaning_1_4': [4.0, 4.0, 4.0], 'grammar_1_4': [5.0, 3.0, 4.0], 'meaning_1_1': [3, 3, 3], 'grammar_1_1': [2, 2, 5], 'meaning_1_5': [4.0, 5.0, 4.0], 'grammar_1_5': [5.0, 5.0, 4.0], 'meaning_1_0': [3, 3, 4], 'grammar_1_0': [2, 2, 5], 'meaning_1_2': [4, 3, 5], 'grammar_1_2': [2, 4, 5], 'meaning_1_3': [4.0, 2.0, 4.0], 'grammar_1_3': [2.0, 2.0, 3.0]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', '5')
We are going to select this select `grammar_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', '3')
We are going to select this select `meaning_0_1` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', '5')
We are going to select this select `grammar_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', '3')
We are going to select this select `meaning_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', '5')
We are going to select this select `grammar_0_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', '2')
We are going to select this select `meaning_0_3` with value `2`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', '3')
We are going to select this select `grammar_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', '4')
We are going to select this select `meaning_0_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', '5')
We are going to select this select `grammar_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', '5')
We are going to select this select `meaning_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_select('grammar_0_5', '5')
We are going to select this select `grammar_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_4
Executing one action: self.actions.modify_select('meaning_1_4', '4')
We are going to select this select `meaning_1_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_4
Executing one action: self.actions.modify_select('grammar_1_4', '5')
We are going to select this select `grammar_1_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_1
Executing one action: self.actions.modify_select('meaning_1_1', '5')
We are going to select this select `meaning_1_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_1
Executing one action: self.actions.modify_select('grammar_1_1', '5')
We are going to select this select `grammar_1_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_5
Executing one action: self.actions.modify_select('meaning_1_5', '3')
We are going to select this select `meaning_1_5` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_5
Executing one action: self.actions.modify_select('grammar_1_5', '5')
We are going to select this select `grammar_1_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_0
Executing one action: self.actions.modify_select('meaning_1_0', '5')
We are going to select this select `meaning_1_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_0
Executing one action: self.actions.modify_select('grammar_1_0', '5')
We are going to select this select `grammar_1_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_2
Executing one action: self.actions.modify_select('meaning_1_2', '3')
We are going to select this select `meaning_1_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_2
Executing one action: self.actions.modify_select('grammar_1_2', '5')
We are going to select this select `grammar_1_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_3
Executing one action: self.actions.modify_select('meaning_1_3', '3')
We are going to select this select `meaning_1_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_3
Executing one action: self.actions.modify_select('grammar_1_3', '3')
We are going to select this select `grammar_1_3` with value `3`
input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 5, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 5, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 1, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3, 1, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 4, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 4.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 4.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 4.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 4.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2.0, 5.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 5.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 4.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 3.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2, 2, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 5.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 5.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3, 3, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2, 2, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 3, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2, 4, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 2.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2.0, 2.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 18636 <-> row_number: 41
 --> inputs: ['meaning_0_3', 'grammar_0_3', 'meaning_0_2', 'grammar_0_2', 'meaning_0_4', 'grammar_0_4', 'meaning_0_5', 'grammar_0_5', 'meaning_0_1', 'grammar_0_1', 'meaning_0_0', 'grammar_0_0', 'meaning_1_2', 'grammar_1_2', 'meaning_1_4', 'grammar_1_4', 'meaning_1_3', 'grammar_1_3', 'meaning_1_5', 'grammar_1_5', 'meaning_1_1', 'grammar_1_1', 'meaning_1_0', 'grammar_1_0']
 --> Looking up gold labels from row index 41 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_3': [5.0, 5.0, 5.0], 'grammar_0_3': [5.0, 5.0, 5.0], 'meaning_0_2': [4, 4, 4], 'grammar_0_2': [5, 5, 5], 'meaning_0_4': [4.0, 4.0, 4.0], 'grammar_0_4': [5.0, 3.0, 3.0], 'meaning_0_5': [4.0, 4.0, 4.0], 'grammar_0_5': [5.0, 5.0, 5.0], 'meaning_0_1': [2, 3, 3], 'grammar_0_1': [3, 2, 4], 'meaning_0_0': [4, 4, 4], 'grammar_0_0': [2, 4, 3], 'meaning_1_2': [4, 4, 4], 'grammar_1_2': [3, 3, 2], 'meaning_1_4': [4.0, 3.0, 3.0], 'grammar_1_4': [2.0, 2.0, 1.0], 'meaning_1_3': [4.0, 5.0, 5.0], 'grammar_1_3': [3.0, 3.0, 5.0], 'meaning_1_5': [5.0, 3.0, 5.0], 'grammar_1_5': [4.0, 5.0, 5.0], 'meaning_1_1': [4, 2, 2], 'grammar_1_1': [2, 2, 1], 'meaning_1_0': [3, 4, 3], 'grammar_1_0': [4, 5, 3]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', 'blank')
We are going to select this select `meaning_0_3` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', '3')
We are going to select this select `grammar_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', '3')
We are going to select this select `meaning_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', '4')
We are going to select this select `grammar_0_2` with value `4`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', '4')
We are going to select this select `meaning_0_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', '5')
We are going to select this select `grammar_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', '3')
We are going to select this select `meaning_0_5` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_select('grammar_0_5', '5')
We are going to select this select `grammar_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', 'nan')
Failed to execute an action self.actions.modify_select('meaning_0_1', 'nan'), error: Input value `nan` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', '3')
We are going to select this select `grammar_0_1` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', 'blank')
We are going to select this select `meaning_0_0` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', '5')
We are going to select this select `grammar_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_2
Executing one action: self.actions.modify_select('meaning_1_2', 'identical')
Failed to execute an action self.actions.modify_select('meaning_1_2', 'identical'), error: Input value `identical` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_2
Executing one action: self.actions.modify_select('grammar_1_2', '5')
We are going to select this select `grammar_1_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_4
Executing one action: self.actions.modify_select('meaning_1_4', '4')
We are going to select this select `meaning_1_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_4
Executing one action: self.actions.modify_select('grammar_1_4', '5')
We are going to select this select `grammar_1_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_3
Executing one action: self.actions.modify_select('meaning_1_3', '3')
We are going to select this select `meaning_1_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_3
Executing one action: self.actions.modify_select('grammar_1_3', '3')
We are going to select this select `grammar_1_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_5
Executing one action: self.actions.modify_select('meaning_1_5', '5')
We are going to select this select `meaning_1_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_5
Executing one action: self.actions.modify_select('grammar_1_5', '5')
We are going to select this select `grammar_1_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_1
Executing one action: self.actions.modify_select('meaning_1_1', 'blank')
We are going to select this select `meaning_1_1` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_1
Executing one action: self.actions.modify_select('grammar_1_1', '5')
We are going to select this select `grammar_1_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_0
Executing one action: self.actions.modify_select('meaning_1_0', 'blank')
We are going to select this select `meaning_1_0` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_0
Executing one action: self.actions.modify_select('grammar_1_0', '5')
We are going to select this select `grammar_1_0` with value `5`
input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 5.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 5.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 4, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 5, 5]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 4.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 3.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 4.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 5.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3, 2, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 4, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2, 4, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 4, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3, 3, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 3.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 5.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 3.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 3.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 5.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3, 4, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 5, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 18603 <-> row_number: 8
 --> inputs: ['meaning_0_1', 'grammar_0_1', 'meaning_0_0', 'grammar_0_0', 'meaning_0_4', 'grammar_0_4', 'meaning_0_2', 'grammar_0_2', 'meaning_0_3', 'grammar_0_3', 'meaning_0_5', 'grammar_0_5', 'meaning_1_1', 'grammar_1_1', 'meaning_1_3', 'grammar_1_3', 'meaning_1_0', 'grammar_1_0', 'meaning_1_5', 'grammar_1_5', 'meaning_1_2', 'grammar_1_2', 'meaning_1_4', 'grammar_1_4']
 --> Looking up gold labels from row index 8 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_1': [5, 1, 1], 'grammar_0_1': [4, 2, 2], 'meaning_0_0': [4, 4, 4], 'grammar_0_0': [5, 5, 3], 'meaning_0_4': [3.0, 2.0, 2.0], 'grammar_0_4': [4.0, 2.0, 2.0], 'meaning_0_2': [4, 1, 1], 'grammar_0_2': [4, 2, 2], 'meaning_0_3': [4.0, 4.0, 3.0], 'grammar_0_3': [3.0, 2.0, 2.0], 'meaning_0_5': [3.0, 3.0, 3.0], 'grammar_0_5': [4.0, 4.0, 4.0], 'meaning_1_1': [5, 4, 3], 'grammar_1_1': [5, 2, 2], 'meaning_1_3': [2.0, 5.0, 5.0], 'grammar_1_3': [4.0, 5.0, 4.0], 'meaning_1_0': [4, 2, 3], 'grammar_1_0': [4, 2, 2], 'meaning_1_5': [3.0, 3.0, 4.0], 'grammar_1_5': [4.0, 3.0, 4.0], 'meaning_1_2': [2, 4, 4], 'grammar_1_2': [5, 3, 3], 'meaning_1_4': [4.0, 3.0, 4.0], 'grammar_1_4': [3.0, 2.0, 4.0]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', '3')
We are going to select this select `meaning_0_1` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', '5')
We are going to select this select `grammar_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', 'blank')
We are going to select this select `meaning_0_0` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', '5')
We are going to select this select `grammar_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', '4')
We are going to select this select `meaning_0_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', '5')
We are going to select this select `grammar_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', '3')
We are going to select this select `meaning_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', '5')
We are going to select this select `grammar_0_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', '3')
We are going to select this select `meaning_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', '3')
We are going to select this select `grammar_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', 'identical')
Failed to execute an action self.actions.modify_select('meaning_0_5', 'identical'), error: Input value `identical` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_select('grammar_0_5', '5')
We are going to select this select `grammar_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_1
Executing one action: self.actions.modify_select('meaning_1_1', '3')
We are going to select this select `meaning_1_1` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_1
Executing one action: self.actions.modify_select('grammar_1_1', '5')
We are going to select this select `grammar_1_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_3
Executing one action: self.actions.modify_select('meaning_1_3', '3')
We are going to select this select `meaning_1_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_3
Executing one action: self.actions.modify_select('grammar_1_3', '3')
We are going to select this select `grammar_1_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_0
Executing one action: self.actions.modify_select('meaning_1_0', '3')
We are going to select this select `meaning_1_0` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_0
Executing one action: self.actions.modify_select('grammar_1_0', '5')
We are going to select this select `grammar_1_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_5
Executing one action: self.actions.modify_select('meaning_1_5', 'identical')
Failed to execute an action self.actions.modify_select('meaning_1_5', 'identical'), error: Input value `identical` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_5
Executing one action: self.actions.modify_select('grammar_1_5', '5')
We are going to select this select `grammar_1_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_2
Executing one action: self.actions.modify_select('meaning_1_2', '3')
We are going to select this select `meaning_1_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_2
Executing one action: self.actions.modify_select('grammar_1_2', '5')
We are going to select this select `grammar_1_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_4
Executing one action: self.actions.modify_select('meaning_1_4', 'minor differences')
Failed to execute an action self.actions.modify_select('meaning_1_4', 'minor differences'), error: Input value `minor differences` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_4
Executing one action: self.actions.modify_select('grammar_1_4', '5')
We are going to select this select `grammar_1_4` with value `5`
input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 4, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 5, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 4.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 3.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 4.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 4, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2.0, 5.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 5.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 3.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 3.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2, 4, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 3.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 2.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.041666666666666664
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 18643 <-> row_number: 48
 --> inputs: ['meaning_0_2', 'grammar_0_2', 'meaning_0_1', 'grammar_0_1', 'meaning_0_5', 'grammar_0_5', 'meaning_0_0', 'grammar_0_0', 'meaning_0_4', 'grammar_0_4', 'meaning_0_3', 'grammar_0_3', 'meaning_1_5', 'grammar_1_5', 'meaning_1_3', 'grammar_1_3', 'meaning_1_1', 'grammar_1_1', 'meaning_1_0', 'grammar_1_0', 'meaning_1_2', 'grammar_1_2', 'meaning_1_4', 'grammar_1_4']
 --> Looking up gold labels from row index 48 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_2': [3, 3, 3], 'grammar_0_2': [3, 2, 3], 'meaning_0_1': [5, 2, 3], 'grammar_0_1': [5, 1, 4], 'meaning_0_5': [4.0, 1.0, 2.0], 'grammar_0_5': [5.0, 3.0, 2.0], 'meaning_0_0': [4, 3, 4], 'grammar_0_0': [4, 2, 3], 'meaning_0_4': [4.0, 1.0, 3.0], 'grammar_0_4': [4.0, 1.0, 1.0], 'meaning_0_3': [4.0, 4.0, 2.0], 'grammar_0_3': [4.0, 2.0, 1.0], 'meaning_1_5': [4.0, 4.0, 4.0], 'grammar_1_5': [3.0, 4.0, 5.0], 'meaning_1_3': [4.0, 3.0, 4.0], 'grammar_1_3': [4.0, 2.0, 4.0], 'meaning_1_1': [3, 3, 4], 'grammar_1_1': [4, 3, 3], 'meaning_1_0': [4, 3, 1], 'grammar_1_0': [4, 2, 4], 'meaning_1_2': [5, 5, 5], 'grammar_1_2': [5, 5, 5], 'meaning_1_4': [5.0, 2.0, 3.0], 'grammar_1_4': [4.0, 1.0, 1.0]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', '3')
We are going to select this select `meaning_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', '3')
We are going to select this select `grammar_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', '3')
We are going to select this select `meaning_0_1` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', '5')
We are going to select this select `grammar_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', '5')
We are going to select this select `meaning_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_select('grammar_0_5', '5')
We are going to select this select `grammar_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', '3')
We are going to select this select `meaning_0_0` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', '5')
We are going to select this select `grammar_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', '4')
We are going to select this select `meaning_0_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', '5')
We are going to select this select `grammar_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', '3')
We are going to select this select `meaning_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', '3')
We are going to select this select `grammar_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_5
Executing one action: self.actions.modify_select('meaning_1_5', '5')
We are going to select this select `meaning_1_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_5
Executing one action: self.actions.modify_select('grammar_1_5', '5')
We are going to select this select `grammar_1_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_3
Executing one action: self.actions.modify_select('meaning_1_3', '3')
We are going to select this select `meaning_1_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_3
Executing one action: self.actions.modify_select('grammar_1_3', '3')
We are going to select this select `grammar_1_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_1
Executing one action: self.actions.modify_select('meaning_1_1', '3')
We are going to select this select `meaning_1_1` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_1
Executing one action: self.actions.modify_select('grammar_1_1', '5')
We are going to select this select `grammar_1_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_0
Executing one action: self.actions.modify_select('meaning_1_0', '3')
We are going to select this select `meaning_1_0` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_0
Executing one action: self.actions.modify_select('grammar_1_0', '5')
We are going to select this select `grammar_1_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_2
Executing one action: self.actions.modify_select('meaning_1_2', '3')
We are going to select this select `meaning_1_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_2
Executing one action: self.actions.modify_select('grammar_1_2', '5')
We are going to select this select `grammar_1_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_4
Executing one action: self.actions.modify_select('meaning_1_4', '4')
We are going to select this select `meaning_1_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_4
Executing one action: self.actions.modify_select('grammar_1_4', '5')
We are going to select this select `grammar_1_4` with value `5`
input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3, 2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 1, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 3.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 3, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 2, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 1.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 4.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 4.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 4.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 3.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 2.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3, 3, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 3, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 2, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 5, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 2.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.2916666666666667
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 18634 <-> row_number: 39
 --> inputs: ['meaning_0_0', 'grammar_0_0', 'meaning_0_1', 'grammar_0_1', 'meaning_0_2', 'grammar_0_2', 'meaning_0_3', 'grammar_0_3', 'meaning_0_4', 'grammar_0_4', 'meaning_0_5', 'grammar_0_5', 'meaning_1_0', 'grammar_1_0', 'meaning_1_1', 'grammar_1_1', 'meaning_1_3', 'grammar_1_3', 'meaning_1_2', 'grammar_1_2', 'meaning_1_4', 'grammar_1_4', 'meaning_1_5', 'grammar_1_5']
 --> Looking up gold labels from row index 39 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_0': [5, 5, 5], 'grammar_0_0': [5, 5, 5], 'meaning_0_1': [1, 4, 2], 'grammar_0_1': [2, 2, 1], 'meaning_0_2': [2, 4, 2], 'grammar_0_2': [2, 2, 2], 'meaning_0_3': [3.0, 4.0, 5.0], 'grammar_0_3': [4.0, 2.0, 5.0], 'meaning_0_4': [2.0, 4.0, 4.0], 'grammar_0_4': [2.0, 3.0, 4.0], 'meaning_0_5': [2.0, 4.0, 3.0], 'grammar_0_5': [3.0, 3.0, 5.0], 'meaning_1_0': [5, 5, 5], 'grammar_1_0': [5, 5, 5], 'meaning_1_1': [4, 4, 4], 'grammar_1_1': [3, 2, 3], 'meaning_1_3': [5.0, 5.0, 5.0], 'grammar_1_3': [5.0, 5.0, 5.0], 'meaning_1_2': [4, 4, 4], 'grammar_1_2': [4, 3, 5], 'meaning_1_4': [2.0, 4.0, 3.0], 'grammar_1_4': [2.0, 2.0, 2.0], 'meaning_1_5': [1.0, 4.0, 4.0], 'grammar_1_5': [5.0, 4.0, 5.0]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', '5')
We are going to select this select `grammar_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', 'blank')
We are going to select this select `meaning_0_1` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', '5')
We are going to select this select `grammar_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', '4')
We are going to select this select `meaning_0_2` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', '3')
We are going to select this select `grammar_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', '3')
We are going to select this select `meaning_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', '3')
We are going to select this select `grammar_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', '4')
We are going to select this select `meaning_0_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', '5')
We are going to select this select `grammar_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', '5')
We are going to select this select `meaning_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_select('grammar_0_5', '5')
We are going to select this select `grammar_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_0
Executing one action: self.actions.modify_select('meaning_1_0', '3')
We are going to select this select `meaning_1_0` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_0
Executing one action: self.actions.modify_select('grammar_1_0', '5')
We are going to select this select `grammar_1_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_1
Executing one action: self.actions.modify_select('meaning_1_1', '3')
We are going to select this select `meaning_1_1` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_1
Executing one action: self.actions.modify_select('grammar_1_1', '5')
We are going to select this select `grammar_1_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_3
Executing one action: self.actions.modify_select('meaning_1_3', '3')
We are going to select this select `meaning_1_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_3
Executing one action: self.actions.modify_select('grammar_1_3', '3')
We are going to select this select `grammar_1_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_2
Executing one action: self.actions.modify_select('meaning_1_2', '3')
We are going to select this select `meaning_1_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_2
Executing one action: self.actions.modify_select('grammar_1_2', '5')
We are going to select this select `grammar_1_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_4
Executing one action: self.actions.modify_select('meaning_1_4', 'minor differences')
Failed to execute an action self.actions.modify_select('meaning_1_4', 'minor differences'), error: Input value `minor differences` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_4
Executing one action: self.actions.modify_select('grammar_1_4', '4')
We are going to select this select `grammar_1_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: meaning_1_5
Executing one action: self.actions.modify_select('meaning_1_5', '5')
We are going to select this select `meaning_1_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)` - - - - - -  
input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)
about to try executing one action, on the following input: grammar_1_5
Executing one action: self.actions.modify_select('grammar_1_5', '5')
We are going to select this select `grammar_1_5` with value `5`
input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`)
 visible : ['5']
 visible_values : ['5']
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[1, 4, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2, 4, 2]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 4.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4.0, 2.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2.0, 4.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2.0, 3.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2.0, 4.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3.0, 3.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 5, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_0`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5, 5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_1_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 4, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_1`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[3, 2, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 5.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_3`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 5.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 4, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_2`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[4, 3, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2.0, 4.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_4`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_1_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[1.0, 4.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_1_5`, type=`select`, task=`Simplicity HIT`) ------- 
----> answers: `[5.0, 4.0, 5.0]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]}
 = = = = = = = = = = = = starting new task: `Step 3 Creating Answers Given Questions 23` = = = = = = = = = = = = 
First instance id: 34735
instance_id: 34743 <-> row_number: 8
Could not find input field with name `correctoptions-16`
Could not find input field with name `correctoptions-17`
Could not find input field with name `correctoptions-18`
Could not find input field with name `correctoptions-19`
Could not find input field with name `correctoptions-20`
Could not find input field with name `correctoptions-21`
Could not find input field with name `correctoptions-22`
Could not find input field with name `incorrectoptions-16`
Could not find input field with name `incorrectoptions-17`
Could not find input field with name `incorrectoptions-18`
Could not find input field with name `incorrectoptions-19`
Could not find input field with name `incorrectoptions-20`
Could not find input field with name `incorrectoptions-21`
Could not find input field with name `incorrectoptions-22`
 --> inputs: ['correctoptions-0', 'incorrectoptions-0', 'correctoptions-1', 'incorrectoptions-1', 'correctoptions-2', 'incorrectoptions-2', 'correctoptions-3', 'incorrectoptions-3', 'correctoptions-4', 'incorrectoptions-4', 'correctoptions-5', 'incorrectoptions-5', 'correctoptions-6', 'incorrectoptions-6', 'correctoptions-7', 'incorrectoptions-7', 'correctoptions-8', 'incorrectoptions-8', 'correctoptions-9', 'incorrectoptions-9', 'correctoptions-10', 'incorrectoptions-10', 'correctoptions-11', 'incorrectoptions-11', 'correctoptions-12', 'incorrectoptions-12', 'correctoptions-13', 'incorrectoptions-13', 'correctoptions-14', 'incorrectoptions-14', 'correctoptions-15', 'incorrectoptions-15', 'hiddenName']
 --> Looking up gold labels from row index 8 of `input.csv` (unique inputs). 
 --> input labels: {'correctoptions-0': ['bad question', 'Binalshibh and Atta'], 'incorrectoptions-0': ['bad question', 'airspace at 9:10'], 'correctoptions-1': ['bad question', "Compare Binalshibh's"], 'incorrectoptions-1': ['bad question', 'ordered'], 'correctoptions-2': ['bad question', 'California'], 'incorrectoptions-2': ['bad question', 'target that triggered'], 'correctoptions-3': ['Madria convention center', 'Binalshibh when'], 'incorrectoptions-3': ['Madrid convention center', 'searching'], 'correctoptions-4': ["Spain's Canary Islands // Canary Islands", 'notified'], 'incorrectoptions-4': ["Spain's Barcelona", 'secret service'], 'correctoptions-5': ['154', 'take place'], 'incorrectoptions-5': ['104// 134', 'which times'], 'correctoptions-6': ['Spanish airline crash // plane crish', 'e passed between'], 'incorrectoptions-6': ['Helicopter crash // road crash', 'officials'], 'correctoptions-7': ['Yes', 'proclaimed that'], 'incorrectoptions-7': ['No', 'highest duty'], 'correctoptions-8': ["The aircraft, bound for Spain's Canary Islands, managed to rise only slightly before coming down quickly to the right of the runway, its tail section hitting the ground first, just off the asphalt", 'became a close'], 'incorrectoptions-8': ['While landing the aircraft', 'celebrates'], 'correctoptions-9': ['Yes', 'identified'], 'incorrectoptions-9': ['No', 'extremist outlook'], 'correctoptions-10': ['in delivering the wrong remains to the family in question and  officials called to tell them about the error and asked for the return of urn 104 //', 'Barnett'], 'incorrectoptions-10': ['While identifying the remains of the victim, it was resolved by correctly identifying the victim', 'Muslim was'], 'correctoptions-11': ['Madria convention center', 'Hellfire'], 'incorrectoptions-11': ['Madria hospital.', 'vowing'], 'correctoptions-12': ['104', 'Binalshibh'], 'incorrectoptions-12': ['134', 'first stay'], 'correctoptions-13': ['Pilar Gonzalez Ferreira', 'Hadley expect'], 'incorrectoptions-13': ['Ramos Sanchez', 'Predator to'], 'correctoptions-14': ['No', 'CIA not'], 'incorrectoptions-14': ['Yes', 'Ramzi Binalshibh'], 'correctoptions-15': ['No', "Binalshibh's"], 'incorrectoptions-15': ['Yes', 'years'], 'hiddenName': ['{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-0
Executing one action: self.actions.modify_text('correctoptions-0', 'Madrid convention center//Madrid conference center')
Add text `Madrid convention center//Madrid conference center` to this text input: <input type="text" name="correctoptions-0">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-0
Executing one action: self.actions.modify_text('incorrectoptions-0', 'Madrid conference center // A Madrid hospital')
Add text `Madrid conference center // A Madrid hospital` to this text input: <input type="text" name="incorrectoptions-0">
 - - - - - -  starting a new element: `Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-1
Executing one action: self.actions.modify_text('correctoptions-1', 'Border security improvements//Technology upgrades')
self.actions.modify_text('incorrectoptions-1', 'Educational reforms//Healthcare improvements')
Add text `Border security improvements//Technology upgrades` to this text input: <input type="text" name="correctoptions-1">
Add text `Educational reforms//Healthcare improvements` to this text input: <input type="text" name="incorrectoptions-1">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-1
Executing one action: self.actions.modify_text('incorrectoptions-1', 'Madrid convention center // Spanish Canary Islands // 134 // urn 104')
Add text `Madrid convention center // Spanish Canary Islands // 134 // urn 104` to this text input: <input type="text" name="incorrectoptions-1" value="Educational reforms//Healthcare improvements">
 - - - - - -  starting a new element: `Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-2
Executing one action: self.actions.modify_text('correctoptions-2', 'Madrid convention center // A convention center in Madrid')
Add text `Madrid convention center // A convention center in Madrid` to this text input: <input type="text" name="correctoptions-2">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-2
Executing one action: self.actions.modify_text('incorrectoptions-2', 'Not very hot // Far below 100 F')
Add text `Not very hot // Far below 100 F` to this text input: <input type="text" name="incorrectoptions-2">
 - - - - - -  starting a new element: `Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-3
Executing one action: self.actions.modify_text('correctoptions-3', 'Madrid convention center')
self.actions.modify_text('incorrectoptions-3', 'Madrid airport//Local community hall//School auditorium')
Add text `Madrid convention center` to this text input: <input type="text" name="correctoptions-3">
Add text `Madrid airport//Local community hall//School auditorium` to this text input: <input type="text" name="incorrectoptions-3">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-3
Executing one action: self.actions.modify_text('incorrectoptions-3', 'A Madrid hospital // Canary Islands Convention Centre')
Add text `A Madrid hospital // Canary Islands Convention Centre` to this text input: <input type="text" name="incorrectoptions-3" value="Madrid airport//Local community hall//School auditorium">
 - - - - - -  starting a new element: `Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-4
Executing one action: self.actions.modify_text('correctoptions-4', 'Spain\'s Canary Islands')
self.actions.modify_text('incorrectoptions-4', 'Madrid // Barcelona // Las Palmas')
Add text `Spain's Canary Islands` to this text input: <input type="text" name="correctoptions-4">
Add text `Madrid // Barcelona // Las Palmas` to this text input: <input type="text" name="incorrectoptions-4">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-4
Executing one action: self.actions.modify_text('incorrectoptions-4', 'Madrid Mainland // Barcelona // Tenerife')
Add text `Madrid Mainland // Barcelona // Tenerife` to this text input: <input type="text" name="incorrectoptions-4" value="Madrid // Barcelona // Las Palmas">
 - - - - - -  starting a new element: `Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-5
Executing one action: self.actions.modify_text('correctoptions-5', '154')
self.actions.modify_text('incorrectoptions-5', 'More than 200//Less than 100//Exactly 123')
Add text `154` to this text input: <input type="text" name="correctoptions-5">
Add text `More than 200//Less than 100//Exactly 123` to this text input: <input type="text" name="incorrectoptions-5">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-5
Executing one action: self.actions.modify_text('incorrectoptions-5', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-6
Executing one action: self.actions.modify_text('correctoptions-6', 'In a plane crash')
Add text `In a plane crash` to this text input: <input type="text" name="correctoptions-6">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-6
Executing one action: self.actions.modify_text('incorrectoptions-6', 'In a car accident // Due to natural causes // From a disease')
Add text `In a car accident // Due to natural causes // From a disease` to this text input: <input type="text" name="incorrectoptions-6">
 - - - - - -  starting a new element: `Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-7
Executing one action: self.actions.modify_text('correctoptions-7', 'Yes // Definitely // Without a doubt')
self.actions.modify_text('incorrectoptions-7', 'No // Not really // Hard to say')
Add text `Yes // Definitely // Without a doubt` to this text input: <input type="text" name="correctoptions-7">
Add text `No // Not really // Hard to say` to this text input: <input type="text" name="incorrectoptions-7">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-7
Executing one action: self.actions.modify_text('incorrectoptions-7', 'Yes // Immediately after takeoff // Due to turbulence')
Add text `Yes // Immediately after takeoff // Due to turbulence` to this text input: <input type="text" name="incorrectoptions-7" value="No // Not really // Hard to say">
 - - - - - -  starting a new element: `Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-8
Executing one action: self.actions.modify_text('correctoptions-8', 'The aircraft failed to ascend properly and crashed right off the runway//The plane skidded and bounced before exploding')
Add text `The aircraft failed to ascend properly and crashed right off the runway//The plane skidded and bounced before exploding` to this text input: <input type="text" name="correctoptions-8">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-8
Executing one action: self.actions.modify_text('incorrectoptions-8', 'Due to pilot error // Mechanical failure // Bad weather conditions')
Add text `Due to pilot error // Mechanical failure // Bad weather conditions` to this text input: <input type="text" name="incorrectoptions-8">
 - - - - - -  starting a new element: `Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-9
Executing one action: self.actions.modify_text('correctoptions-9', 'No')
self.actions.modify_text('incorrectoptions-9', 'Yes')
Add text `No` to this text input: <input type="text" name="correctoptions-9">
Add text `Yes` to this text input: <input type="text" name="incorrectoptions-9">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-9
Executing one action: self.actions.modify_text('incorrectoptions-9', 'Correct urn delivery//Proper identification of remains//Successful transfer at first attempt')
Add text `Correct urn delivery//Proper identification of remains//Successful transfer at first attempt` to this text input: <input type="text" name="incorrectoptions-9" value="Yes">
 - - - - - -  starting a new element: `Input(name=`correctoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-10
Executing one action: self.actions.modify_text('correctoptions-10', 'The error originated from delivering the wrong remains, resolved by exchanging urn 104 for urn 134')
self.actions.modify_text('incorrectoptions-10', 'The mixup happened during the DNA identification process//The family was given an unnamed urn initially//No resolution was provided, the error remains')
Add text `The error originated from delivering the wrong remains, resolved by exchanging urn 104 for urn 134` to this text input: <input type="text" name="correctoptions-10">
Add text `The mixup happened during the DNA identification process//The family was given an unnamed urn initially//No resolution was provided, the error remains` to this text input: <input type="text" name="incorrectoptions-10">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-10
Executing one action: self.actions.modify_text('incorrectoptions-10', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`correctoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-11
Executing one action: self.actions.modify_text('correctoptions-11', 'Madrid convention center')
self.actions.modify_text('incorrectoptions-11', 'Madrid airport // Spanish Canary Islands // Pilar Gonzalez’s home')
Add text `Madrid convention center` to this text input: <input type="text" name="correctoptions-11">
Add text `Madrid airport // Spanish Canary Islands // Pilar Gonzalez’s home` to this text input: <input type="text" name="incorrectoptions-11">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-11
Executing one action: self.actions.modify_text('incorrectoptions-11', 'Madria convention center // A Madrid hospital // The Spanish airport')
Add text `Madria convention center // A Madrid hospital // The Spanish airport` to this text input: <input type="text" name="incorrectoptions-11" value="Madrid airport // Spanish Canary Islands // Pilar Gonzalez’s home">
 - - - - - -  starting a new element: `Input(name=`correctoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-12
Executing one action: self.actions.modify_text('correctoptions-12', '104')
Add text `104` to this text input: <input type="text" name="correctoptions-12">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-12
Executing one action: self.actions.modify_text('incorrectoptions-12', '102 // 105 // 120')
Add text `102 // 105 // 120` to this text input: <input type="text" name="incorrectoptions-12">
 - - - - - -  starting a new element: `Input(name=`correctoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-13
Executing one action: self.actions.modify_text('correctoptions-13', 'The relatives of Pilar Gonzalez Ferreira')
self.actions.modify_text('incorrectoptions-13', 'The relatives of another victim//The relatives of the pilot//The relatives of an unidentified passenger')
Add text `The relatives of Pilar Gonzalez Ferreira` to this text input: <input type="text" name="correctoptions-13">
Add text `The relatives of another victim//The relatives of the pilot//The relatives of an unidentified passenger` to this text input: <input type="text" name="incorrectoptions-13">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-13
Executing one action: self.actions.modify_text('incorrectoptions-13', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`correctoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-14
Executing one action: self.actions.modify_text('correctoptions-14', 'Yes')
self.actions.modify_text('incorrectoptions-14', 'No')
Add text `Yes` to this text input: <input type="text" name="correctoptions-14">
Add text `No` to this text input: <input type="text" name="incorrectoptions-14">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-14
Executing one action: self.actions.modify_text('incorrectoptions-14', 'Yes // No // Maybe')
Add text `Yes // No // Maybe` to this text input: <input type="text" name="incorrectoptions-14" value="No">
 - - - - - -  starting a new element: `Input(name=`correctoptions-15`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-15`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-15
Executing one action: self.actions.modify_text('correctoptions-15', 'No')
self.actions.modify_text('incorrectoptions-15', 'Yes')
Add text `No` to this text input: <input type="text" name="correctoptions-15">
Add text `Yes` to this text input: <input type="text" name="incorrectoptions-15">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-15`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-15`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-15
Executing one action: self.actions.modify_text('incorrectoptions-15', 'Yes, in urn 104 // No, in urn 134')
Add text `Yes, in urn 104 // No, in urn 134` to this text input: <input type="text" name="incorrectoptions-15" value="Yes">
 - - - - - -  starting a new element: `Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
Skipping element `hiddenName` since it is not visible.
input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Madrid convention center//Madrid conference center']
 visible_values : ['Madrid convention center//Madrid conference center']
input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Madrid conference center // A Madrid hospital']
 visible_values : ['Madrid conference center // A Madrid hospital']
input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Border security improvements//Technology upgrades']
 visible_values : ['Border security improvements//Technology upgrades']
input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Madrid convention center // Spanish Canary Islands // 134 // urn 104']
 visible_values : ['Madrid convention center // Spanish Canary Islands // 134 // urn 104']
input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Madrid convention center // A convention center in Madrid']
 visible_values : ['Madrid convention center // A convention center in Madrid']
input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Not very hot // Far below 100 F']
 visible_values : ['Not very hot // Far below 100 F']
input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Madrid convention center']
 visible_values : ['Madrid convention center']
input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['A Madrid hospital // Canary Islands Convention Centre']
 visible_values : ['A Madrid hospital // Canary Islands Convention Centre']
input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ["Spain's Canary Islands"]
 visible_values : ["Spain's Canary Islands"]
input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Madrid Mainland // Barcelona // Tenerife']
 visible_values : ['Madrid Mainland // Barcelona // Tenerife']
input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['154']
 visible_values : ['154']
input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['More than 200//Less than 100//Exactly 123']
 visible_values : ['More than 200//Less than 100//Exactly 123']
input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['In a plane crash']
 visible_values : ['In a plane crash']
input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['In a car accident // Due to natural causes // From a disease']
 visible_values : ['In a car accident // Due to natural causes // From a disease']
input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Yes // Definitely // Without a doubt']
 visible_values : ['Yes // Definitely // Without a doubt']
input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Yes // Immediately after takeoff // Due to turbulence']
 visible_values : ['Yes // Immediately after takeoff // Due to turbulence']
input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['The aircraft failed to ascend properly and crashed right off the runway//The plane skidded and bounced before exploding']
 visible_values : ['The aircraft failed to ascend properly and crashed right off the runway//The plane skidded and bounced before exploding']
input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Due to pilot error // Mechanical failure // Bad weather conditions']
 visible_values : ['Due to pilot error // Mechanical failure // Bad weather conditions']
input: Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Correct urn delivery//Proper identification of remains//Successful transfer at first attempt']
 visible_values : ['Correct urn delivery//Proper identification of remains//Successful transfer at first attempt']
input: Input(name=`correctoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['The error originated from delivering the wrong remains, resolved by exchanging urn 104 for urn 134']
 visible_values : ['The error originated from delivering the wrong remains, resolved by exchanging urn 104 for urn 134']
input: Input(name=`incorrectoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['The mixup happened during the DNA identification process//The family was given an unnamed urn initially//No resolution was provided, the error remains']
 visible_values : ['The mixup happened during the DNA identification process//The family was given an unnamed urn initially//No resolution was provided, the error remains']
input: Input(name=`correctoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Madrid convention center']
 visible_values : ['Madrid convention center']
input: Input(name=`incorrectoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Madria convention center // A Madrid hospital // The Spanish airport']
 visible_values : ['Madria convention center // A Madrid hospital // The Spanish airport']
input: Input(name=`correctoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['104']
 visible_values : ['104']
input: Input(name=`incorrectoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['102 // 105 // 120']
 visible_values : ['102 // 105 // 120']
input: Input(name=`correctoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['The relatives of Pilar Gonzalez Ferreira']
 visible_values : ['The relatives of Pilar Gonzalez Ferreira']
input: Input(name=`incorrectoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['The relatives of another victim//The relatives of the pilot//The relatives of an unidentified passenger']
 visible_values : ['The relatives of another victim//The relatives of the pilot//The relatives of an unidentified passenger']
input: Input(name=`correctoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`incorrectoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Yes // No // Maybe']
 visible_values : ['Yes // No // Maybe']
input: Input(name=`correctoptions-15`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`incorrectoptions-15`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Yes, in urn 104 // No, in urn 134']
 visible_values : ['Yes, in urn 104 // No, in urn 134']
input: Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : [None]
 visible_values : [None]
 ------- evaluating input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['bad question', 'Binalshibh and Atta']`
----> answers: `['Binalshibh and Atta', 'bad question']` - type: `<class 'list'>`
----> baseline_answer: `Madrid convention center//Madrid conference center` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['bad question', 'airspace at 9:10']`
----> answers: `['bad question', 'airspace at 9:10']` - type: `<class 'list'>`
----> baseline_answer: `Madrid conference center // A Madrid hospital` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['bad question', "Compare Binalshibh's"]`
----> answers: `['bad question', "Compare Binalshibh's"]` - type: `<class 'list'>`
----> baseline_answer: `Border security improvements//Technology upgrades` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['bad question', 'ordered']`
----> answers: `['ordered', 'bad question']` - type: `<class 'list'>`
----> baseline_answer: `Madrid convention center // Spanish Canary Islands // 134 // urn 104` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['bad question', 'California']`
----> answers: `['California', 'bad question']` - type: `<class 'list'>`
----> baseline_answer: `Madrid convention center // A convention center in Madrid` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['bad question', 'target that triggered']`
----> answers: `['bad question', 'target that triggered']` - type: `<class 'list'>`
----> baseline_answer: `Not very hot // Far below 100 F` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Madria convention center', 'Binalshibh when']`
----> answers: `['Madria convention center', 'Binalshibh when']` - type: `<class 'list'>`
----> baseline_answer: `Madrid convention center` - type: `<class 'str'>`
 --> scores:  0.6666666666666666
----> per-field score: 0.6666666666666666
 ------- evaluating input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Madrid convention center', 'searching']`
----> answers: `['searching', 'Madrid convention center']` - type: `<class 'list'>`
----> baseline_answer: `A Madrid hospital // Canary Islands Convention Centre` - type: `<class 'str'>`
 --> scores:  0.4
----> per-field score: 0.4
 ------- evaluating input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `["Spain's Canary Islands // Canary Islands", 'notified']`
----> answers: `["Spain's Canary Islands // Canary Islands", 'notified']` - type: `<class 'list'>`
----> baseline_answer: `Spain's Canary Islands` - type: `<class 'str'>`
 --> scores:  0.8
----> per-field score: 0.8
 ------- evaluating input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `["Spain's Barcelona", 'secret service']`
----> answers: `['secret service', "Spain's Barcelona"]` - type: `<class 'list'>`
----> baseline_answer: `Madrid Mainland // Barcelona // Tenerife` - type: `<class 'str'>`
 --> scores:  0.28571428571428575
----> per-field score: 0.28571428571428575
 ------- evaluating input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['154', 'take place']`
----> answers: `['154', 'take place']` - type: `<class 'list'>`
----> baseline_answer: `154` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['104// 134', 'which times']`
----> answers: `['104// 134', 'which times']` - type: `<class 'list'>`
----> baseline_answer: `More than 200//Less than 100//Exactly 123` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Spanish airline crash // plane crish', 'e passed between']`
----> answers: `['e passed between', 'Spanish airline crash // plane crish']` - type: `<class 'list'>`
----> baseline_answer: `In a plane crash` - type: `<class 'str'>`
 --> scores:  0.22222222222222224
----> per-field score: 0.22222222222222224
 ------- evaluating input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Helicopter crash // road crash', 'officials']`
----> answers: `['officials', 'Helicopter crash // road crash']` - type: `<class 'list'>`
----> baseline_answer: `In a car accident // Due to natural causes // From a disease` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Yes', 'proclaimed that']`
----> answers: `['Yes', 'proclaimed that']` - type: `<class 'list'>`
----> baseline_answer: `Yes // Definitely // Without a doubt` - type: `<class 'str'>`
 --> scores:  0.33333333333333337
----> per-field score: 0.33333333333333337
 ------- evaluating input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['No', 'highest duty']`
----> answers: `['No', 'highest duty']` - type: `<class 'list'>`
----> baseline_answer: `Yes // Immediately after takeoff // Due to turbulence` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `["The aircraft, bound for Spain's Canary Islands, managed to rise only slightly before coming down quickly to the right of the runway, its tail section hitting the ground first, just off the asphalt", 'became a close']`
----> answers: `['became a close', "The aircraft, bound for Spain's Canary Islands, managed to rise only slightly before coming down quickly to the right of the runway, its tail section hitting the ground first, just off the asphalt"]` - type: `<class 'list'>`
----> baseline_answer: `The aircraft failed to ascend properly and crashed right off the runway//The plane skidded and bounced before exploding` - type: `<class 'str'>`
 --> scores:  0.2641509433962264
----> per-field score: 0.2641509433962264
 ------- evaluating input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['While landing the aircraft', 'celebrates']`
----> answers: `['While landing the aircraft', 'celebrates']` - type: `<class 'list'>`
----> baseline_answer: `Due to pilot error // Mechanical failure // Bad weather conditions` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Yes', 'identified']`
----> answers: `['Yes', 'identified']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['No', 'extremist outlook']`
----> answers: `['extremist outlook', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Correct urn delivery//Proper identification of remains//Successful transfer at first attempt` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['in delivering the wrong remains to the family in question and  officials called to tell them about the error and asked for the return of urn 104 //', 'Barnett']`
----> answers: `['Barnett', 'in delivering the wrong remains to the family in question and  officials called to tell them about the error and asked for the return of urn 104 //']` - type: `<class 'list'>`
----> baseline_answer: `The error originated from delivering the wrong remains, resolved by exchanging urn 104 for urn 134` - type: `<class 'str'>`
 --> scores:  0.27906976744186046
----> per-field score: 0.27906976744186046
 ------- evaluating input: Input(name=`incorrectoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['While identifying the remains of the victim, it was resolved by correctly identifying the victim', 'Muslim was']`
----> answers: `['While identifying the remains of the victim, it was resolved by correctly identifying the victim', 'Muslim was']` - type: `<class 'list'>`
----> baseline_answer: `The mixup happened during the DNA identification process//The family was given an unnamed urn initially//No resolution was provided, the error remains` - type: `<class 'str'>`
 --> scores:  0.2105263157894737
----> per-field score: 0.2105263157894737
 ------- evaluating input: Input(name=`correctoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Madria convention center', 'Hellfire']`
----> answers: `['Madria convention center', 'Hellfire']` - type: `<class 'list'>`
----> baseline_answer: `Madrid convention center` - type: `<class 'str'>`
 --> scores:  0.6666666666666666
----> per-field score: 0.6666666666666666
 ------- evaluating input: Input(name=`incorrectoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Madria hospital.', 'vowing']`
----> answers: `['vowing', 'Madria hospital.']` - type: `<class 'list'>`
----> baseline_answer: `Madria convention center // A Madrid hospital // The Spanish airport` - type: `<class 'str'>`
 --> scores:  0.3636363636363636
----> per-field score: 0.3636363636363636
 ------- evaluating input: Input(name=`correctoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['104', 'Binalshibh']`
----> answers: `['Binalshibh', '104']` - type: `<class 'list'>`
----> baseline_answer: `104` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['134', 'first stay']`
----> answers: `['first stay', '134']` - type: `<class 'list'>`
----> baseline_answer: `102 // 105 // 120` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Pilar Gonzalez Ferreira', 'Hadley expect']`
----> answers: `['Pilar Gonzalez Ferreira', 'Hadley expect']` - type: `<class 'list'>`
----> baseline_answer: `The relatives of Pilar Gonzalez Ferreira` - type: `<class 'str'>`
 --> scores:  0.6666666666666666
----> per-field score: 0.6666666666666666
 ------- evaluating input: Input(name=`incorrectoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Ramos Sanchez', 'Predator to']`
----> answers: `['Predator to', 'Ramos Sanchez']` - type: `<class 'list'>`
----> baseline_answer: `The relatives of another victim//The relatives of the pilot//The relatives of an unidentified passenger` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['No', 'CIA not']`
----> answers: `['No', 'CIA not']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`incorrectoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Yes', 'Ramzi Binalshibh']`
----> answers: `['Yes', 'Ramzi Binalshibh']` - type: `<class 'list'>`
----> baseline_answer: `Yes // No // Maybe` - type: `<class 'str'>`
 --> scores:  0.5
----> per-field score: 0.5
 ------- evaluating input: Input(name=`correctoptions-15`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['No', "Binalshibh's"]`
----> answers: `["Binalshibh's", 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-15`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Yes', 'years']`
----> answers: `['Yes', 'years']` - type: `<class 'list'>`
----> baseline_answer: `Yes, in urn 104 // No, in urn 134` - type: `<class 'str'>`
 --> scores:  0.2222222222222222
----> per-field score: 0.2222222222222222
 ------- evaluating input: Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
Skipping element `hiddenName` since it is not visible.
 --> Per-instance overall score: 0.2775273579298746
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6666666666666666, 0.4, 0.8, 0.28571428571428575, 1.0, 0.0, 0.22222222222222224, 0.0, 0.33333333333333337, 0.0, 0.2641509433962264, 0.0, 0.0, 0.0, 0.27906976744186046, 0.2105263157894737, 0.6666666666666666, 0.3636363636363636, 1.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.5, 1.0, 0.2222222222222222]}
instance_id: 34756 <-> row_number: 21
Could not find input field with name `correctoptions-10`
Could not find input field with name `correctoptions-11`
Could not find input field with name `correctoptions-12`
Could not find input field with name `correctoptions-13`
Could not find input field with name `correctoptions-14`
Could not find input field with name `correctoptions-15`
Could not find input field with name `correctoptions-16`
Could not find input field with name `correctoptions-17`
Could not find input field with name `correctoptions-18`
Could not find input field with name `correctoptions-19`
Could not find input field with name `correctoptions-20`
Could not find input field with name `correctoptions-21`
Could not find input field with name `correctoptions-22`
Could not find input field with name `correctoptions-8`
Could not find input field with name `correctoptions-9`
Could not find input field with name `incorrectoptions-10`
Could not find input field with name `incorrectoptions-11`
Could not find input field with name `incorrectoptions-12`
Could not find input field with name `incorrectoptions-13`
Could not find input field with name `incorrectoptions-14`
Could not find input field with name `incorrectoptions-15`
Could not find input field with name `incorrectoptions-16`
Could not find input field with name `incorrectoptions-17`
Could not find input field with name `incorrectoptions-18`
Could not find input field with name `incorrectoptions-19`
Could not find input field with name `incorrectoptions-20`
Could not find input field with name `incorrectoptions-21`
Could not find input field with name `incorrectoptions-22`
Could not find input field with name `incorrectoptions-8`
Could not find input field with name `incorrectoptions-9`
 --> inputs: ['correctoptions-0', 'incorrectoptions-0', 'correctoptions-1', 'incorrectoptions-1', 'correctoptions-2', 'incorrectoptions-2', 'correctoptions-3', 'incorrectoptions-3', 'correctoptions-4', 'incorrectoptions-4', 'correctoptions-5', 'incorrectoptions-5', 'correctoptions-6', 'incorrectoptions-6', 'correctoptions-7', 'incorrectoptions-7', 'hiddenName']
 --> Looking up gold labels from row index 21 of `input.csv` (unique inputs). 
 --> input labels: {'correctoptions-0': ['Yes', 'Bin Ladin'], 'incorrectoptions-0': ['No', 'airspace at 9:10'], 'correctoptions-1': ['District attorney', 'Command Center'], 'incorrectoptions-1': ['Judge', 'e Predator need'], 'correctoptions-2': ['No', 'California'], 'incorrectoptions-2': ['Yes', 'went to Germany'], 'correctoptions-3': ['Die-Cutter', 'Binalshibh when'], 'incorrectoptions-3': ['Judge', 'considered'], 'correctoptions-4': ['Yes', 'Bin Ladin'], 'incorrectoptions-4': ['No', 'secret service'], 'correctoptions-5': ['Yes', 'During the second'], 'incorrectoptions-5': ['No', 'harm'], 'correctoptions-6': ['Die-Cutter', 'influenced'], 'incorrectoptions-6': ['Judge', 'Barnett'], 'correctoptions-7': ['Andrew', 'punishment'], 'incorrectoptions-7': ['Thorndike', 'highest duty'], 'hiddenName': ['{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-0
Executing one action: self.actions.modify_text('correctoptions-0', 'Yes')
Add text `Yes` to this text input: <input type="text" name="correctoptions-0">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-0
Executing one action: self.actions.modify_text('incorrectoptions-0', 'Yes, she only said terrible things // Yes, she remained silent // No, she made some critical comments')
Add text `Yes, she only said terrible things // Yes, she remained silent // No, she made some critical comments` to this text input: <input type="text" name="incorrectoptions-0">
 - - - - - -  starting a new element: `Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-1
Executing one action: self.actions.modify_text('correctoptions-1', 'The probation officer // Mrs. Austin')
Add text `The probation officer // Mrs. Austin` to this text input: <input type="text" name="correctoptions-1">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-1
Executing one action: self.actions.modify_text('incorrectoptions-1', 'The judge // Mr. Thorndike // The probation officer')
Add text `The judge // Mr. Thorndike // The probation officer` to this text input: <input type="text" name="incorrectoptions-1">
 - - - - - -  starting a new element: `Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-2
Executing one action: self.actions.modify_text('correctoptions-2', 'No // Not directly')
self.actions.modify_text('incorrectoptions-2', 'Yes // Directly // Through an intermediary')
Add text `No // Not directly` to this text input: <input type="text" name="correctoptions-2">
Add text `Yes // Directly // Through an intermediary` to this text input: <input type="text" name="incorrectoptions-2">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-2
Executing one action: self.actions.modify_text('incorrectoptions-2', 'Yes // No // Maybe // Not mentioned')
Add text `Yes // No // Maybe // Not mentioned` to this text input: <input type="text" name="incorrectoptions-2" value="Yes // Directly // Through an intermediary">
 - - - - - -  starting a new element: `Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-3
Executing one action: self.actions.modify_text('correctoptions-3', 'die-cutter')
self.actions.modify_text('incorrectoptions-3', 'blacksmith // woodworker // mason')
Add text `die-cutter` to this text input: <input type="text" name="correctoptions-3">
Add text `blacksmith // woodworker // mason` to this text input: <input type="text" name="incorrectoptions-3">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-3
Executing one action: self.actions.modify_text('incorrectoptions-3', 'Carpenter // Doctor // Teacher')
Add text `Carpenter // Doctor // Teacher` to this text input: <input type="text" name="incorrectoptions-3" value="blacksmith // woodworker // mason">
 - - - - - -  starting a new element: `Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-4
Executing one action: self.actions.modify_text('correctoptions-4', 'Yes')
self.actions.modify_text('incorrectoptions-4', 'No // Not Sure')
Add text `Yes` to this text input: <input type="text" name="correctoptions-4">
Add text `No // Not Sure` to this text input: <input type="text" name="incorrectoptions-4">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-4
Executing one action: self.actions.modify_text('incorrectoptions-4', 'No // He was terrible // She wanted a divorce')
Add text `No // He was terrible // She wanted a divorce` to this text input: <input type="text" name="incorrectoptions-4" value="No // Not Sure">
 - - - - - -  starting a new element: `Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-5
Executing one action: self.actions.modify_text('correctoptions-5', 'Indeed she would // Yes')
self.actions.modify_text('incorrectoptions-5', 'No, she would not // She was unsure')
Add text `Indeed she would // Yes` to this text input: <input type="text" name="correctoptions-5">
Add text `No, she would not // She was unsure` to this text input: <input type="text" name="incorrectoptions-5">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-5
Executing one action: self.actions.modify_text('incorrectoptions-5', 'Yes // No doubt // Absolutely // Definitely')
Add text `Yes // No doubt // Absolutely // Definitely` to this text input: <input type="text" name="incorrectoptions-5" value="No, she would not // She was unsure">
 - - - - - -  starting a new element: `Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-6
Executing one action: self.actions.modify_text('correctoptions-6', 'nan')
self.actions.modify_text('incorrectoptions-6', 'nan')
Since the input value is `nan`, we are not going to modify the text.
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-6
Executing one action: self.actions.modify_text('incorrectoptions-6', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-7
Executing one action: self.actions.modify_text('correctoptions-7', 'Spear')
self.actions.modify_text('incorrectoptions-7', 'Andrews // Thorndike // Austin')
Add text `Spear` to this text input: <input type="text" name="correctoptions-7">
Add text `Andrews // Thorndike // Austin` to this text input: <input type="text" name="incorrectoptions-7">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-7
Executing one action: self.actions.modify_text('incorrectoptions-7', 'Susan // Mary // Jessica')
Add text `Susan // Mary // Jessica` to this text input: <input type="text" name="incorrectoptions-7" value="Andrews // Thorndike // Austin">
 - - - - - -  starting a new element: `Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
Skipping element `hiddenName` since it is not visible.
input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Yes, she only said terrible things // Yes, she remained silent // No, she made some critical comments']
 visible_values : ['Yes, she only said terrible things // Yes, she remained silent // No, she made some critical comments']
input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['The probation officer // Mrs. Austin']
 visible_values : ['The probation officer // Mrs. Austin']
input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['The judge // Mr. Thorndike // The probation officer']
 visible_values : ['The judge // Mr. Thorndike // The probation officer']
input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['No // Not directly']
 visible_values : ['No // Not directly']
input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Yes // No // Maybe // Not mentioned']
 visible_values : ['Yes // No // Maybe // Not mentioned']
input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['die-cutter']
 visible_values : ['die-cutter']
input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Carpenter // Doctor // Teacher']
 visible_values : ['Carpenter // Doctor // Teacher']
input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['No // He was terrible // She wanted a divorce']
 visible_values : ['No // He was terrible // She wanted a divorce']
input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Indeed she would // Yes']
 visible_values : ['Indeed she would // Yes']
input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Yes // No doubt // Absolutely // Definitely']
 visible_values : ['Yes // No doubt // Absolutely // Definitely']
input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : [None]
 visible_values : [None]
input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : [None]
 visible_values : [None]
input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Spear']
 visible_values : ['Spear']
input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Susan // Mary // Jessica']
 visible_values : ['Susan // Mary // Jessica']
input: Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : [None]
 visible_values : [None]
 ------- evaluating input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Yes', 'Bin Ladin']`
----> answers: `['Yes', 'Bin Ladin']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['No', 'airspace at 9:10']`
----> answers: `['No', 'airspace at 9:10']` - type: `<class 'list'>`
----> baseline_answer: `Yes, she only said terrible things // Yes, she remained silent // No, she made some critical comments` - type: `<class 'str'>`
 --> scores:  0.11764705882352941
----> per-field score: 0.11764705882352941
 ------- evaluating input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['District attorney', 'Command Center']`
----> answers: `['District attorney', 'Command Center']` - type: `<class 'list'>`
----> baseline_answer: `The probation officer // Mrs. Austin` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Judge', 'e Predator need']`
----> answers: `['Judge', 'e Predator need']` - type: `<class 'list'>`
----> baseline_answer: `The judge // Mr. Thorndike // The probation officer` - type: `<class 'str'>`
 --> scores:  0.25
----> per-field score: 0.25
 ------- evaluating input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['No', 'California']`
----> answers: `['California', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No // Not directly` - type: `<class 'str'>`
 --> scores:  0.5
----> per-field score: 0.5
 ------- evaluating input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Yes', 'went to Germany']`
----> answers: `['Yes', 'went to Germany']` - type: `<class 'list'>`
----> baseline_answer: `Yes // No // Maybe // Not mentioned` - type: `<class 'str'>`
 --> scores:  0.33333333333333337
----> per-field score: 0.33333333333333337
 ------- evaluating input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Die-Cutter', 'Binalshibh when']`
----> answers: `['Binalshibh when', 'Die-Cutter']` - type: `<class 'list'>`
----> baseline_answer: `die-cutter` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Judge', 'considered']`
----> answers: `['Judge', 'considered']` - type: `<class 'list'>`
----> baseline_answer: `Carpenter // Doctor // Teacher` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Yes', 'Bin Ladin']`
----> answers: `['Yes', 'Bin Ladin']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['No', 'secret service']`
----> answers: `['No', 'secret service']` - type: `<class 'list'>`
----> baseline_answer: `No // He was terrible // She wanted a divorce` - type: `<class 'str'>`
 --> scores:  0.2222222222222222
----> per-field score: 0.2222222222222222
 ------- evaluating input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Yes', 'During the second']`
----> answers: `['Yes', 'During the second']` - type: `<class 'list'>`
----> baseline_answer: `Indeed she would // Yes` - type: `<class 'str'>`
 --> scores:  0.4
----> per-field score: 0.4
 ------- evaluating input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['No', 'harm']`
----> answers: `['harm', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes // No doubt // Absolutely // Definitely` - type: `<class 'str'>`
 --> scores:  0.33333333333333337
----> per-field score: 0.33333333333333337
 ------- evaluating input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Die-Cutter', 'influenced']`
----> answers: `['influenced', 'Die-Cutter']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Judge', 'Barnett']`
----> answers: `['Barnett', 'Judge']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Andrew', 'punishment']`
----> answers: `['punishment', 'Andrew']` - type: `<class 'list'>`
----> baseline_answer: `Spear` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Thorndike', 'highest duty']`
----> answers: `['highest duty', 'Thorndike']` - type: `<class 'list'>`
----> baseline_answer: `Susan // Mary // Jessica` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
Skipping element `hiddenName` since it is not visible.
 --> Per-instance overall score: 0.32228349673202616
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6666666666666666, 0.4, 0.8, 0.28571428571428575, 1.0, 0.0, 0.22222222222222224, 0.0, 0.33333333333333337, 0.0, 0.2641509433962264, 0.0, 0.0, 0.0, 0.27906976744186046, 0.2105263157894737, 0.6666666666666666, 0.3636363636363636, 1.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.5, 1.0, 0.2222222222222222, 1.0, 0.11764705882352941, 0.0, 0.25, 0.5, 0.33333333333333337, 1.0, 0.0, 1.0, 0.2222222222222222, 0.4, 0.33333333333333337, 0.0, 0.0, 0.0, 0.0]}
instance_id: 34836 <-> row_number: 101
Could not find input field with name `correctoptions-12`
Could not find input field with name `correctoptions-13`
Could not find input field with name `correctoptions-14`
Could not find input field with name `correctoptions-15`
Could not find input field with name `correctoptions-16`
Could not find input field with name `correctoptions-17`
Could not find input field with name `correctoptions-18`
Could not find input field with name `correctoptions-19`
Could not find input field with name `correctoptions-20`
Could not find input field with name `correctoptions-21`
Could not find input field with name `correctoptions-22`
Could not find input field with name `incorrectoptions-12`
Could not find input field with name `incorrectoptions-13`
Could not find input field with name `incorrectoptions-14`
Could not find input field with name `incorrectoptions-15`
Could not find input field with name `incorrectoptions-16`
Could not find input field with name `incorrectoptions-17`
Could not find input field with name `incorrectoptions-18`
Could not find input field with name `incorrectoptions-19`
Could not find input field with name `incorrectoptions-20`
Could not find input field with name `incorrectoptions-21`
Could not find input field with name `incorrectoptions-22`
 --> inputs: ['correctoptions-0', 'incorrectoptions-0', 'correctoptions-1', 'incorrectoptions-1', 'correctoptions-2', 'incorrectoptions-2', 'correctoptions-3', 'incorrectoptions-3', 'correctoptions-4', 'incorrectoptions-4', 'correctoptions-5', 'incorrectoptions-5', 'correctoptions-6', 'incorrectoptions-6', 'correctoptions-7', 'incorrectoptions-7', 'correctoptions-8', 'incorrectoptions-8', 'correctoptions-9', 'incorrectoptions-9', 'correctoptions-10', 'incorrectoptions-10', 'correctoptions-11', 'incorrectoptions-11', 'hiddenName']
 --> Looking up gold labels from row index 101 of `input.csv` (unique inputs). 
 --> input labels: {'correctoptions-0': ['6 and no', "Washington Center's"], 'incorrectoptions-0': ['6 and yes//4 and no//4 and yes', 'airspace at 9:10'], 'correctoptions-1': ['US Government', 'Command Center'], 'incorrectoptions-1': ['British Government//French Government', 'ordered'], 'correctoptions-2': ['1870', 'Reagan National Airport'], 'incorrectoptions-2': ['1888//1957', 'went to Germany'], 'correctoptions-3': ['Alexander Hamilton', 'Government'], 'incorrectoptions-3': ['John Trumbull//George Washington', 'considered'], 'correctoptions-4': ['Giuseppe Ceracchi and John Trumbull', 'Bin Ladin'], 'incorrectoptions-4': ['John Trumbull and Pablo Picasso//Giuseppe Ceracchi and Jackson Pollock', 'President'], 'correctoptions-5': ['John Trumbull', 'problem'], 'incorrectoptions-5': ['Jackson Pollock//Giuseppe Ceracchi', 'government'], 'correctoptions-6': ['Alexander Hamilton', 'influenced'], 'incorrectoptions-6': ['John Trumbull//George Washington', 'officials'], 'correctoptions-7': ['Currency and Stamps', 'punishment'], 'incorrectoptions-7': ['Stamps but not currency//Currency but not stamps', 'highest duty'], 'correctoptions-8': ['He has been featured on a number of stamps', 'supported'], 'incorrectoptions-8': ['He was the first person to be on a stamp//Under his leadership, stamps were first used', 'mistakes besides'], 'correctoptions-9': ['$10', 'concern'], 'incorrectoptions-9': ['$2//$20//$50', 'Predator'], 'correctoptions-10': ['Giuseppe Ceracchi and John Trumbull', 'Barnett'], 'incorrectoptions-10': ['John Trumbull and Pablo Picasso//Giuseppe Ceracchi and Jackson Pollock', 'vowing'], 'correctoptions-11': ['1870', 'Hellfire'], 'incorrectoptions-11': ['1790//1956', 'Who that'], 'hiddenName': ['{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-0
Executing one action: self.actions.modify_text('correctoptions-0', '6 // No, no one else has been on as many bills as Hamilton')
Add text `6 // No, no one else has been on as many bills as Hamilton` to this text input: <input type="text" name="correctoptions-0">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-0
Executing one action: self.actions.modify_text('incorrectoptions-0', '5 // $25 // $500')
Add text `5 // $25 // $500` to this text input: <input type="text" name="incorrectoptions-0">
 - - - - - -  starting a new element: `Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-1
Executing one action: self.actions.modify_text('correctoptions-1', 'Bills // Postage // Savings Bond')
Add text `Bills // Postage // Savings Bond` to this text input: <input type="text" name="correctoptions-1">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-1
Executing one action: self.actions.modify_text('incorrectoptions-1', 'Postage stamps only // $5 and $10 bills only // Series EE Savings Bond')
Add text `Postage stamps only // $5 and $10 bills only // Series EE Savings Bond` to this text input: <input type="text" name="incorrectoptions-1">
 - - - - - -  starting a new element: `Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-2
Executing one action: self.actions.modify_text('correctoptions-2', '1870')
Add text `1870` to this text input: <input type="text" name="correctoptions-2">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-2
Executing one action: self.actions.modify_text('incorrectoptions-2', '1870 // Series EE Savings Bond // $500 bill')
Add text `1870 // Series EE Savings Bond // $500 bill` to this text input: <input type="text" name="incorrectoptions-2">
 - - - - - -  starting a new element: `Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-3
Executing one action: self.actions.modify_text('correctoptions-3', 'Alexander Hamilton')
self.actions.modify_text('incorrectoptions-3', 'Abraham Lincoln // George Washington // Thomas Jefferson')
Add text `Alexander Hamilton` to this text input: <input type="text" name="correctoptions-3">
Add text `Abraham Lincoln // George Washington // Thomas Jefferson` to this text input: <input type="text" name="incorrectoptions-3">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-3
Executing one action: self.actions.modify_text('incorrectoptions-3', 'Benjamin Franklin // George Washington // None')
Add text `Benjamin Franklin // George Washington // None` to this text input: <input type="text" name="incorrectoptions-3" value="Abraham Lincoln // George Washington // Thomas Jefferson">
 - - - - - -  starting a new element: `Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-4
Executing one action: self.actions.modify_text('correctoptions-4', 'John Trumbull // Giuseppe Ceracchi')
self.actions.modify_text('incorrectoptions-4', 'Pablo Picasso // Vincent Van Gogh')
Add text `John Trumbull // Giuseppe Ceracchi` to this text input: <input type="text" name="correctoptions-4">
Add text `Pablo Picasso // Vincent Van Gogh` to this text input: <input type="text" name="incorrectoptions-4">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-4
Executing one action: self.actions.modify_text('incorrectoptions-4', 'John Trumbull and Giuseppe Ceracchi // Pablo Picasso and Leonardo da Vinci // Vincent van Gogh and Michelangelo')
Add text `John Trumbull and Giuseppe Ceracchi // Pablo Picasso and Leonardo da Vinci // Vincent van Gogh and Michelangelo` to this text input: <input type="text" name="incorrectoptions-4" value="Pablo Picasso // Vincent Van Gogh">
 - - - - - -  starting a new element: `Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-5
Executing one action: self.actions.modify_text('correctoptions-5', 'John Trumbull')
Add text `John Trumbull` to this text input: <input type="text" name="correctoptions-5">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-5
Executing one action: self.actions.modify_text('incorrectoptions-5', 'Thomas Jefferson // Andrew Jackson // Benjamin Franklin')
Add text `Thomas Jefferson // Andrew Jackson // Benjamin Franklin` to this text input: <input type="text" name="incorrectoptions-5">
 - - - - - -  starting a new element: `Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-6
Executing one action: self.actions.modify_text('correctoptions-6', 'Alexander Hamilton')
Add text `Alexander Hamilton` to this text input: <input type="text" name="correctoptions-6">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-6
Executing one action: self.actions.modify_text('incorrectoptions-6', 'Thomas Jefferson // Benjamin Franklin // Ulysses S. Grant')
Add text `Thomas Jefferson // Benjamin Franklin // Ulysses S. Grant` to this text input: <input type="text" name="incorrectoptions-6">
 - - - - - -  starting a new element: `Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-7
Executing one action: self.actions.modify_text('correctoptions-7', 'US currency bills // US postage stamps')
Add text `US currency bills // US postage stamps` to this text input: <input type="text" name="correctoptions-7">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-7
Executing one action: self.actions.modify_text('incorrectoptions-7', 'The $5 bill // A commemorative 3-cent stamp // Series EE Savings Bond')
Add text `The $5 bill // A commemorative 3-cent stamp // Series EE Savings Bond` to this text input: <input type="text" name="incorrectoptions-7">
 - - - - - -  starting a new element: `Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-8
Executing one action: self.actions.modify_text('correctoptions-8', 'Featured on postage stamps as the face and commemorated through special editions // On the $500 Series EE Savings Bond and various denominations of US currency including the $10 bill')
self.actions.modify_text('incorrectoptions-8', 'Sculpted the original face of Mount Rushmore // Invented the first US postage stamp adhesive formula // Has a musical written about his life that won a Grammy Award')
Add text `Featured on postage stamps as the face and commemorated through special editions // On the $500 Series EE Savings Bond and various denominations of US currency including the $10 bill` to this text input: <input type="text" name="correctoptions-8">
Add text `Sculpted the original face of Mount Rushmore // Invented the first US postage stamp adhesive formula // Has a musical written about his life that won a Grammy Award` to this text input: <input type="text" name="incorrectoptions-8">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-8
Executing one action: self.actions.modify_text('incorrectoptions-8', 'Featured as a drawing subject by modern artists // As a postage stamp collector')
Add text `Featured as a drawing subject by modern artists // As a postage stamp collector` to this text input: <input type="text" name="incorrectoptions-8" value="Sculpted the original face of Mount Rushmore // Invented the first US postage stamp adhesive formula // Has a musical written about his life that won a Grammy Award">
 - - - - - -  starting a new element: `Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-9
Executing one action: self.actions.modify_text('correctoptions-9', 'The $10 bill')
self.actions.modify_text('incorrectoptions-9', 'The $1 bill // The $100 bill // The penny')
Add text `The $10 bill` to this text input: <input type="text" name="correctoptions-9">
Add text `The $1 bill // The $100 bill // The penny` to this text input: <input type="text" name="incorrectoptions-9">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-9
Executing one action: self.actions.modify_text('incorrectoptions-9', '1-dollar bill // 20-dollar bill // 100-dollar bill')
Add text `1-dollar bill // 20-dollar bill // 100-dollar bill` to this text input: <input type="text" name="incorrectoptions-9" value="The $1 bill // The $100 bill // The penny">
 - - - - - -  starting a new element: `Input(name=`correctoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-10
Executing one action: self.actions.modify_text('correctoptions-10', 'John Trumbull // Giuseppe Ceracchi')
self.actions.modify_text('incorrectoptions-10', 'Pablo Picasso // Leonardo da Vinci')
Add text `John Trumbull // Giuseppe Ceracchi` to this text input: <input type="text" name="correctoptions-10">
Add text `Pablo Picasso // Leonardo da Vinci` to this text input: <input type="text" name="incorrectoptions-10">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-10
Executing one action: self.actions.modify_text('incorrectoptions-10', 'Leonardo da Vinci//Pablo Picasso//Vincent van Gogh')
Add text `Leonardo da Vinci//Pablo Picasso//Vincent van Gogh` to this text input: <input type="text" name="incorrectoptions-10" value="Pablo Picasso // Leonardo da Vinci">
 - - - - - -  starting a new element: `Input(name=`correctoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-11
Executing one action: self.actions.modify_text('correctoptions-11', 'Since the 1870s')
self.actions.modify_text('incorrectoptions-11', 'In the 18th century // After 2000 // During the colonial era')
Add text `Since the 1870s` to this text input: <input type="text" name="correctoptions-11">
Add text `In the 18th century // After 2000 // During the colonial era` to this text input: <input type="text" name="incorrectoptions-11">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-11
Executing one action: self.actions.modify_text('incorrectoptions-11', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
Skipping element `hiddenName` since it is not visible.
input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['6 // No, no one else has been on as many bills as Hamilton']
 visible_values : ['6 // No, no one else has been on as many bills as Hamilton']
input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['5 // $25 // $500']
 visible_values : ['5 // $25 // $500']
input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Bills // Postage // Savings Bond']
 visible_values : ['Bills // Postage // Savings Bond']
input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Postage stamps only // $5 and $10 bills only // Series EE Savings Bond']
 visible_values : ['Postage stamps only // $5 and $10 bills only // Series EE Savings Bond']
input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['1870']
 visible_values : ['1870']
input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['1870 // Series EE Savings Bond // $500 bill']
 visible_values : ['1870 // Series EE Savings Bond // $500 bill']
input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Alexander Hamilton']
 visible_values : ['Alexander Hamilton']
input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Benjamin Franklin // George Washington // None']
 visible_values : ['Benjamin Franklin // George Washington // None']
input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['John Trumbull // Giuseppe Ceracchi']
 visible_values : ['John Trumbull // Giuseppe Ceracchi']
input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['John Trumbull and Giuseppe Ceracchi // Pablo Picasso and Leonardo da Vinci // Vincent van Gogh and Michelangelo']
 visible_values : ['John Trumbull and Giuseppe Ceracchi // Pablo Picasso and Leonardo da Vinci // Vincent van Gogh and Michelangelo']
input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['John Trumbull']
 visible_values : ['John Trumbull']
input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Thomas Jefferson // Andrew Jackson // Benjamin Franklin']
 visible_values : ['Thomas Jefferson // Andrew Jackson // Benjamin Franklin']
input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Alexander Hamilton']
 visible_values : ['Alexander Hamilton']
input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Thomas Jefferson // Benjamin Franklin // Ulysses S. Grant']
 visible_values : ['Thomas Jefferson // Benjamin Franklin // Ulysses S. Grant']
input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['US currency bills // US postage stamps']
 visible_values : ['US currency bills // US postage stamps']
input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['The $5 bill // A commemorative 3-cent stamp // Series EE Savings Bond']
 visible_values : ['The $5 bill // A commemorative 3-cent stamp // Series EE Savings Bond']
input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Featured on postage stamps as the face and commemorated through special editions // On the $500 Series EE Savings Bond and various denominations of US currency including the $10 bill']
 visible_values : ['Featured on postage stamps as the face and commemorated through special editions // On the $500 Series EE Savings Bond and various denominations of US currency including the $10 bill']
input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Featured as a drawing subject by modern artists // As a postage stamp collector']
 visible_values : ['Featured as a drawing subject by modern artists // As a postage stamp collector']
input: Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['The $10 bill']
 visible_values : ['The $10 bill']
input: Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['1-dollar bill // 20-dollar bill // 100-dollar bill']
 visible_values : ['1-dollar bill // 20-dollar bill // 100-dollar bill']
input: Input(name=`correctoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['John Trumbull // Giuseppe Ceracchi']
 visible_values : ['John Trumbull // Giuseppe Ceracchi']
input: Input(name=`incorrectoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Leonardo da Vinci//Pablo Picasso//Vincent van Gogh']
 visible_values : ['Leonardo da Vinci//Pablo Picasso//Vincent van Gogh']
input: Input(name=`correctoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Since the 1870s']
 visible_values : ['Since the 1870s']
input: Input(name=`incorrectoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['In the 18th century // After 2000 // During the colonial era']
 visible_values : ['In the 18th century // After 2000 // During the colonial era']
input: Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : [None]
 visible_values : [None]
 ------- evaluating input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['6 and no', "Washington Center's"]`
----> answers: `["Washington Center's", '6 and no']` - type: `<class 'list'>`
----> baseline_answer: `6 // No, no one else has been on as many bills as Hamilton` - type: `<class 'str'>`
 --> scores:  0.25
----> per-field score: 0.25
 ------- evaluating input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['6 and yes//4 and no//4 and yes', 'airspace at 9:10']`
----> answers: `['6 and yes//4 and no//4 and yes', 'airspace at 9:10']` - type: `<class 'list'>`
----> baseline_answer: `5 // $25 // $500` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['US Government', 'Command Center']`
----> answers: `['US Government', 'Command Center']` - type: `<class 'list'>`
----> baseline_answer: `Bills // Postage // Savings Bond` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['British Government//French Government', 'ordered']`
----> answers: `['ordered', 'British Government//French Government']` - type: `<class 'list'>`
----> baseline_answer: `Postage stamps only // $5 and $10 bills only // Series EE Savings Bond` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['1870', 'Reagan National Airport']`
----> answers: `['1870', 'Reagan National Airport']` - type: `<class 'list'>`
----> baseline_answer: `1870` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['1888//1957', 'went to Germany']`
----> answers: `['went to Germany', '1888//1957']` - type: `<class 'list'>`
----> baseline_answer: `1870 // Series EE Savings Bond // $500 bill` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Alexander Hamilton', 'Government']`
----> answers: `['Government', 'Alexander Hamilton']` - type: `<class 'list'>`
----> baseline_answer: `Alexander Hamilton` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['John Trumbull//George Washington', 'considered']`
----> answers: `['John Trumbull//George Washington', 'considered']` - type: `<class 'list'>`
----> baseline_answer: `Benjamin Franklin // George Washington // None` - type: `<class 'str'>`
 --> scores:  0.4444444444444445
----> per-field score: 0.4444444444444445
 ------- evaluating input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Giuseppe Ceracchi and John Trumbull', 'Bin Ladin']`
----> answers: `['Giuseppe Ceracchi and John Trumbull', 'Bin Ladin']` - type: `<class 'list'>`
----> baseline_answer: `John Trumbull // Giuseppe Ceracchi` - type: `<class 'str'>`
 --> scores:  0.4444444444444445
----> per-field score: 0.4444444444444445
 ------- evaluating input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['John Trumbull and Pablo Picasso//Giuseppe Ceracchi and Jackson Pollock', 'President']`
----> answers: `['President', 'John Trumbull and Pablo Picasso//Giuseppe Ceracchi and Jackson Pollock']` - type: `<class 'list'>`
----> baseline_answer: `John Trumbull and Giuseppe Ceracchi // Pablo Picasso and Leonardo da Vinci // Vincent van Gogh and Michelangelo` - type: `<class 'str'>`
 --> scores:  0.4615384615384615
----> per-field score: 0.4615384615384615
 ------- evaluating input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['John Trumbull', 'problem']`
----> answers: `['John Trumbull', 'problem']` - type: `<class 'list'>`
----> baseline_answer: `John Trumbull` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Jackson Pollock//Giuseppe Ceracchi', 'government']`
----> answers: `['Jackson Pollock//Giuseppe Ceracchi', 'government']` - type: `<class 'list'>`
----> baseline_answer: `Thomas Jefferson // Andrew Jackson // Benjamin Franklin` - type: `<class 'str'>`
 --> scores:  0.2
----> per-field score: 0.2
 ------- evaluating input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Alexander Hamilton', 'influenced']`
----> answers: `['influenced', 'Alexander Hamilton']` - type: `<class 'list'>`
----> baseline_answer: `Alexander Hamilton` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['John Trumbull//George Washington', 'officials']`
----> answers: `['officials', 'John Trumbull//George Washington']` - type: `<class 'list'>`
----> baseline_answer: `Thomas Jefferson // Benjamin Franklin // Ulysses S. Grant` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Currency and Stamps', 'punishment']`
----> answers: `['punishment', 'Currency and Stamps']` - type: `<class 'list'>`
----> baseline_answer: `US currency bills // US postage stamps` - type: `<class 'str'>`
 --> scores:  0.4444444444444444
----> per-field score: 0.4444444444444444
 ------- evaluating input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Stamps but not currency//Currency but not stamps', 'highest duty']`
----> answers: `['Stamps but not currency//Currency but not stamps', 'highest duty']` - type: `<class 'list'>`
----> baseline_answer: `The $5 bill // A commemorative 3-cent stamp // Series EE Savings Bond` - type: `<class 'str'>`
 --> scores:  0.1
----> per-field score: 0.1
 ------- evaluating input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['He has been featured on a number of stamps', 'supported']`
----> answers: `['supported', 'He has been featured on a number of stamps']` - type: `<class 'list'>`
----> baseline_answer: `Featured on postage stamps as the face and commemorated through special editions // On the $500 Series EE Savings Bond and various denominations of US currency including the $10 bill` - type: `<class 'str'>`
 --> scores:  0.15789473684210528
----> per-field score: 0.15789473684210528
 ------- evaluating input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['He was the first person to be on a stamp//Under his leadership, stamps were first used', 'mistakes besides']`
----> answers: `['mistakes besides', 'He was the first person to be on a stamp//Under his leadership, stamps were first used']` - type: `<class 'list'>`
----> baseline_answer: `Featured as a drawing subject by modern artists // As a postage stamp collector` - type: `<class 'str'>`
 --> scores:  0.13333333333333333
----> per-field score: 0.13333333333333333
 ------- evaluating input: Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['$10', 'concern']`
----> answers: `['$10', 'concern']` - type: `<class 'list'>`
----> baseline_answer: `The $10 bill` - type: `<class 'str'>`
 --> scores:  0.5
----> per-field score: 0.5
 ------- evaluating input: Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['$2//$20//$50', 'Predator']`
----> answers: `['Predator', '$2//$20//$50']` - type: `<class 'list'>`
----> baseline_answer: `1-dollar bill // 20-dollar bill // 100-dollar bill` - type: `<class 'str'>`
 --> scores:  0.16666666666666666
----> per-field score: 0.16666666666666666
 ------- evaluating input: Input(name=`correctoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Giuseppe Ceracchi and John Trumbull', 'Barnett']`
----> answers: `['Barnett', 'Giuseppe Ceracchi and John Trumbull']` - type: `<class 'list'>`
----> baseline_answer: `John Trumbull // Giuseppe Ceracchi` - type: `<class 'str'>`
 --> scores:  0.4444444444444445
----> per-field score: 0.4444444444444445
 ------- evaluating input: Input(name=`incorrectoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['John Trumbull and Pablo Picasso//Giuseppe Ceracchi and Jackson Pollock', 'vowing']`
----> answers: `['vowing', 'John Trumbull and Pablo Picasso//Giuseppe Ceracchi and Jackson Pollock']` - type: `<class 'list'>`
----> baseline_answer: `Leonardo da Vinci//Pablo Picasso//Vincent van Gogh` - type: `<class 'str'>`
 --> scores:  0.22222222222222224
----> per-field score: 0.22222222222222224
 ------- evaluating input: Input(name=`correctoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['1870', 'Hellfire']`
----> answers: `['1870', 'Hellfire']` - type: `<class 'list'>`
----> baseline_answer: `Since the 1870s` - type: `<class 'str'>`
 --> scores:  0.5
----> per-field score: 0.5
 ------- evaluating input: Input(name=`incorrectoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['1790//1956', 'Who that']`
----> answers: `['1790//1956', 'Who that']` - type: `<class 'list'>`
----> baseline_answer: `In the 18th century // After 2000 // During the colonial era` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
Skipping element `hiddenName` since it is not visible.
 --> Per-instance overall score: 0.35289304993252363
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6666666666666666, 0.4, 0.8, 0.28571428571428575, 1.0, 0.0, 0.22222222222222224, 0.0, 0.33333333333333337, 0.0, 0.2641509433962264, 0.0, 0.0, 0.0, 0.27906976744186046, 0.2105263157894737, 0.6666666666666666, 0.3636363636363636, 1.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.5, 1.0, 0.2222222222222222, 1.0, 0.11764705882352941, 0.0, 0.25, 0.5, 0.33333333333333337, 1.0, 0.0, 1.0, 0.2222222222222222, 0.4, 0.33333333333333337, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.4444444444444445, 0.4444444444444445, 0.4615384615384615, 1.0, 0.2, 1.0, 0.0, 0.4444444444444444, 0.1, 0.15789473684210528, 0.13333333333333333, 0.5, 0.16666666666666666, 0.4444444444444445, 0.22222222222222224, 0.5, 0.0]}
instance_id: 34802 <-> row_number: 67
Could not find input field with name `correctoptions-10`
Could not find input field with name `correctoptions-11`
Could not find input field with name `correctoptions-12`
Could not find input field with name `correctoptions-13`
Could not find input field with name `correctoptions-14`
Could not find input field with name `correctoptions-15`
Could not find input field with name `correctoptions-16`
Could not find input field with name `correctoptions-17`
Could not find input field with name `correctoptions-18`
Could not find input field with name `correctoptions-19`
Could not find input field with name `correctoptions-20`
Could not find input field with name `correctoptions-21`
Could not find input field with name `correctoptions-22`
Could not find input field with name `correctoptions-9`
Could not find input field with name `incorrectoptions-10`
Could not find input field with name `incorrectoptions-11`
Could not find input field with name `incorrectoptions-12`
Could not find input field with name `incorrectoptions-13`
Could not find input field with name `incorrectoptions-14`
Could not find input field with name `incorrectoptions-15`
Could not find input field with name `incorrectoptions-16`
Could not find input field with name `incorrectoptions-17`
Could not find input field with name `incorrectoptions-18`
Could not find input field with name `incorrectoptions-19`
Could not find input field with name `incorrectoptions-20`
Could not find input field with name `incorrectoptions-21`
Could not find input field with name `incorrectoptions-22`
Could not find input field with name `incorrectoptions-9`
 --> inputs: ['correctoptions-0', 'incorrectoptions-0', 'correctoptions-1', 'incorrectoptions-1', 'correctoptions-2', 'incorrectoptions-2', 'correctoptions-3', 'incorrectoptions-3', 'correctoptions-4', 'incorrectoptions-4', 'correctoptions-5', 'incorrectoptions-5', 'correctoptions-6', 'incorrectoptions-6', 'correctoptions-7', 'incorrectoptions-7', 'correctoptions-8', 'incorrectoptions-8', 'hiddenName']
 --> Looking up gold labels from row index 67 of `input.csv` (unique inputs). 
 --> input labels: {'correctoptions-0': ['Guns // bombs // torpedoes // Selenites', 'Binalshibh and Atta'], 'incorrectoptions-0': ['Caves // bull', 'Qaida when'], 'correctoptions-1': ['They had to charge', 'Command Center'], 'incorrectoptions-1': ['They should run away', 'ordered'], 'correctoptions-2': ['Mooncalf herds', 'Reagan National Airport'], 'incorrectoptions-2': ['Bulls', 'went to Germany'], 'correctoptions-3': ['Up the cavern', 'Government'], 'incorrectoptions-3': ['Down the cave', 'searching'], 'correctoptions-4': ['Above // Above the cavern', 'Binalshibh use'], 'incorrectoptions-4': ['Beneath // below the cavern', 'President'], 'correctoptions-5': ['Danger beneath and the Selenites // Weapons under them and charging Selinites', 'concern'], 'incorrectoptions-5': ['Herd of bulls // Danger above // Selenites', 'government'], 'correctoptions-6': ['Selenites', 'e passed between'], 'incorrectoptions-6': ['Bulls', 'officials'], 'correctoptions-7': ['Butchers // Selenites', 'proclaimed that'], 'incorrectoptions-7': ['Bulls // Guns', 'highest duty'], 'correctoptions-8': ['Selenites', 'America 77 flying'], 'incorrectoptions-8': ['Bulls // Butchers', 'mistakes besides'], 'hiddenName': ['{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-0
Executing one action: self.actions.modify_text('correctoptions-0', 'Selenites with long spears // Indecisive scattered forms of the Selenites')
Add text `Selenites with long spears // Indecisive scattered forms of the Selenites` to this text input: <input type="text" name="correctoptions-0">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-0
Executing one action: self.actions.modify_text('incorrectoptions-0', 'Selenites up the cave // Selenites with spears // Mooncalf herds')
Add text `Selenites up the cave // Selenites with spears // Mooncalf herds` to this text input: <input type="text" name="incorrectoptions-0">
 - - - - - -  starting a new element: `Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-1
Executing one action: self.actions.modify_text('correctoptions-1', 'The need to make a decision//Selenites approaching')
Add text `The need to make a decision//Selenites approaching` to this text input: <input type="text" name="correctoptions-1">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-1
Executing one action: self.actions.modify_text('incorrectoptions-1', 'Selenites with short spears // A clear path // No one')
Add text `Selenites with short spears // A clear path // No one` to this text input: <input type="text" name="incorrectoptions-1">
 - - - - - -  starting a new element: `Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-2
Executing one action: self.actions.modify_text('correctoptions-2', 'shorter and thicker than mooncalf herds')
self.actions.modify_text('incorrectoptions-2', 'taller and slimmer than mooncalf herds // same size as mooncalf herds')
Add text `shorter and thicker than mooncalf herds` to this text input: <input type="text" name="correctoptions-2">
Add text `taller and slimmer than mooncalf herds // same size as mooncalf herds` to this text input: <input type="text" name="incorrectoptions-2">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-2
Executing one action: self.actions.modify_text('incorrectoptions-2', 'Selenites with no weapons // Selenites wielding swords')
Add text `Selenites with no weapons // Selenites wielding swords` to this text input: <input type="text" name="incorrectoptions-2" value="taller and slimmer than mooncalf herds // same size as mooncalf herds">
 - - - - - -  starting a new element: `Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-3
Executing one action: self.actions.modify_text('correctoptions-3', 'Up the cavern // Up the slope')
self.actions.modify_text('incorrectoptions-3', 'Through the mooncalf herds // Down the cave')
Add text `Up the cavern // Up the slope` to this text input: <input type="text" name="correctoptions-3">
Add text `Through the mooncalf herds // Down the cave` to this text input: <input type="text" name="incorrectoptions-3">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-3
Executing one action: self.actions.modify_text('incorrectoptions-3', 'Towards the cleft // Near the mooncalf herds // Just behind the speaker')
Add text `Towards the cleft // Near the mooncalf herds // Just behind the speaker` to this text input: <input type="text" name="incorrectoptions-3" value="Through the mooncalf herds // Down the cave">
 - - - - - -  starting a new element: `Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-4
Executing one action: self.actions.modify_text('correctoptions-4', 'Behind them // Charging down the cavern towards them')
self.actions.modify_text('incorrectoptions-4', 'In front of them // Waiting beside the escape route')
Add text `Behind them // Charging down the cavern towards them` to this text input: <input type="text" name="correctoptions-4">
Add text `In front of them // Waiting beside the escape route` to this text input: <input type="text" name="incorrectoptions-4">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-4
Executing one action: self.actions.modify_text('incorrectoptions-4', 'Above the narrator//Next to the narrator//Far from the narrator')
Add text `Above the narrator//Next to the narrator//Far from the narrator` to this text input: <input type="text" name="incorrectoptions-4" value="In front of them // Waiting beside the escape route">
 - - - - - -  starting a new element: `Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-5
Executing one action: self.actions.modify_text('correctoptions-5', 'To prevent being trapped by enemies behind them // To avoid Selenites getting reinforced')
self.actions.modify_text('incorrectoptions-5', 'Because they were scared // To find a hidden treasure')
Add text `To prevent being trapped by enemies behind them // To avoid Selenites getting reinforced` to this text input: <input type="text" name="correctoptions-5">
Add text `Because they were scared // To find a hidden treasure` to this text input: <input type="text" name="incorrectoptions-5">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-5
Executing one action: self.actions.modify_text('incorrectoptions-5', 'Selenites had welcoming gestures//The cave was empty//Selenites offered them a guided tour')
Add text `Selenites had welcoming gestures//The cave was empty//Selenites offered them a guided tour` to this text input: <input type="text" name="incorrectoptions-5" value="Because they were scared // To find a hidden treasure">
 - - - - - -  starting a new element: `Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-6
Executing one action: self.actions.modify_text('correctoptions-6', 'Selenites with long spears')
self.actions.modify_text('incorrectoptions-6', 'mooncalf herds // nobody // moon rocks')
Add text `Selenites with long spears` to this text input: <input type="text" name="correctoptions-6">
Add text `mooncalf herds // nobody // moon rocks` to this text input: <input type="text" name="incorrectoptions-6">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-6
Executing one action: self.actions.modify_text('incorrectoptions-6', 'Selenites with short spears // Mooncalf herds // The narrator and their companions')
Add text `Selenites with short spears // Mooncalf herds // The narrator and their companions` to this text input: <input type="text" name="incorrectoptions-6" value="mooncalf herds // nobody // moon rocks">
 - - - - - -  starting a new element: `Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-7
Executing one action: self.actions.modify_text('correctoptions-7', 'Selenites')
self.actions.modify_text('incorrectoptions-7', 'mooncalf herds // humans // animals')
Add text `Selenites` to this text input: <input type="text" name="correctoptions-7">
Add text `mooncalf herds // humans // animals` to this text input: <input type="text" name="incorrectoptions-7">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-7
Executing one action: self.actions.modify_text('incorrectoptions-7', 'Mooncalf herds // Human beings // Large animals // Aliens')
Add text `Mooncalf herds // Human beings // Large animals // Aliens` to this text input: <input type="text" name="incorrectoptions-7" value="mooncalf herds // humans // animals">
 - - - - - -  starting a new element: `Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-8
Executing one action: self.actions.modify_text('correctoptions-8', 'Selenites')
self.actions.modify_text('incorrectoptions-8', 'Humans // Mooncalf herds // Animals with long spears')
Add text `Selenites` to this text input: <input type="text" name="correctoptions-8">
Add text `Humans // Mooncalf herds // Animals with long spears` to this text input: <input type="text" name="incorrectoptions-8">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-8
Executing one action: self.actions.modify_text('incorrectoptions-8', 'Selenites with little axes // Mooncalf herds // Tom and his cousin // Carrots')
Add text `Selenites with little axes // Mooncalf herds // Tom and his cousin // Carrots` to this text input: <input type="text" name="incorrectoptions-8" value="Humans // Mooncalf herds // Animals with long spears">
 - - - - - -  starting a new element: `Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
Skipping element `hiddenName` since it is not visible.
input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Selenites with long spears // Indecisive scattered forms of the Selenites']
 visible_values : ['Selenites with long spears // Indecisive scattered forms of the Selenites']
input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Selenites up the cave // Selenites with spears // Mooncalf herds']
 visible_values : ['Selenites up the cave // Selenites with spears // Mooncalf herds']
input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['The need to make a decision//Selenites approaching']
 visible_values : ['The need to make a decision//Selenites approaching']
input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Selenites with short spears // A clear path // No one']
 visible_values : ['Selenites with short spears // A clear path // No one']
input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['shorter and thicker than mooncalf herds']
 visible_values : ['shorter and thicker than mooncalf herds']
input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Selenites with no weapons // Selenites wielding swords']
 visible_values : ['Selenites with no weapons // Selenites wielding swords']
input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Up the cavern // Up the slope']
 visible_values : ['Up the cavern // Up the slope']
input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Towards the cleft // Near the mooncalf herds // Just behind the speaker']
 visible_values : ['Towards the cleft // Near the mooncalf herds // Just behind the speaker']
input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Behind them // Charging down the cavern towards them']
 visible_values : ['Behind them // Charging down the cavern towards them']
input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Above the narrator//Next to the narrator//Far from the narrator']
 visible_values : ['Above the narrator//Next to the narrator//Far from the narrator']
input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['To prevent being trapped by enemies behind them // To avoid Selenites getting reinforced']
 visible_values : ['To prevent being trapped by enemies behind them // To avoid Selenites getting reinforced']
input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Selenites had welcoming gestures//The cave was empty//Selenites offered them a guided tour']
 visible_values : ['Selenites had welcoming gestures//The cave was empty//Selenites offered them a guided tour']
input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Selenites with long spears']
 visible_values : ['Selenites with long spears']
input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Selenites with short spears // Mooncalf herds // The narrator and their companions']
 visible_values : ['Selenites with short spears // Mooncalf herds // The narrator and their companions']
input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Selenites']
 visible_values : ['Selenites']
input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Mooncalf herds // Human beings // Large animals // Aliens']
 visible_values : ['Mooncalf herds // Human beings // Large animals // Aliens']
input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Selenites']
 visible_values : ['Selenites']
input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Selenites with little axes // Mooncalf herds // Tom and his cousin // Carrots']
 visible_values : ['Selenites with little axes // Mooncalf herds // Tom and his cousin // Carrots']
input: Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : [None]
 visible_values : [None]
 ------- evaluating input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Guns // bombs // torpedoes // Selenites', 'Binalshibh and Atta']`
----> answers: `['Binalshibh and Atta', 'Guns // bombs // torpedoes // Selenites']` - type: `<class 'list'>`
----> baseline_answer: `Selenites with long spears // Indecisive scattered forms of the Selenites` - type: `<class 'str'>`
 --> scores:  0.14285714285714288
----> per-field score: 0.14285714285714288
 ------- evaluating input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Caves // bull', 'Qaida when']`
----> answers: `['Caves // bull', 'Qaida when']` - type: `<class 'list'>`
----> baseline_answer: `Selenites up the cave // Selenites with spears // Mooncalf herds` - type: `<class 'str'>`
 --> scores:  0.1818181818181818
----> per-field score: 0.1818181818181818
 ------- evaluating input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['They had to charge', 'Command Center']`
----> answers: `['They had to charge', 'Command Center']` - type: `<class 'list'>`
----> baseline_answer: `The need to make a decision//Selenites approaching` - type: `<class 'str'>`
 --> scores:  0.16666666666666666
----> per-field score: 0.16666666666666666
 ------- evaluating input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['They should run away', 'ordered']`
----> answers: `['ordered', 'They should run away']` - type: `<class 'list'>`
----> baseline_answer: `Selenites with short spears // A clear path // No one` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Mooncalf herds', 'Reagan National Airport']`
----> answers: `['Mooncalf herds', 'Reagan National Airport']` - type: `<class 'list'>`
----> baseline_answer: `shorter and thicker than mooncalf herds` - type: `<class 'str'>`
 --> scores:  0.5
----> per-field score: 0.5
 ------- evaluating input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Bulls', 'went to Germany']`
----> answers: `['went to Germany', 'Bulls']` - type: `<class 'list'>`
----> baseline_answer: `Selenites with no weapons // Selenites wielding swords` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Up the cavern', 'Government']`
----> answers: `['Government', 'Up the cavern']` - type: `<class 'list'>`
----> baseline_answer: `Up the cavern // Up the slope` - type: `<class 'str'>`
 --> scores:  0.6666666666666666
----> per-field score: 0.6666666666666666
 ------- evaluating input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Down the cave', 'searching']`
----> answers: `['searching', 'Down the cave']` - type: `<class 'list'>`
----> baseline_answer: `Towards the cleft // Near the mooncalf herds // Just behind the speaker` - type: `<class 'str'>`
 --> scores:  0.14285714285714288
----> per-field score: 0.14285714285714288
 ------- evaluating input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Above // Above the cavern', 'Binalshibh use']`
----> answers: `['Above // Above the cavern', 'Binalshibh use']` - type: `<class 'list'>`
----> baseline_answer: `Behind them // Charging down the cavern towards them` - type: `<class 'str'>`
 --> scores:  0.3333333333333333
----> per-field score: 0.3333333333333333
 ------- evaluating input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Beneath // below the cavern', 'President']`
----> answers: `['Beneath // below the cavern', 'President']` - type: `<class 'list'>`
----> baseline_answer: `Above the narrator//Next to the narrator//Far from the narrator` - type: `<class 'str'>`
 --> scores:  0.13333333333333333
----> per-field score: 0.13333333333333333
 ------- evaluating input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Danger beneath and the Selenites // Weapons under them and charging Selinites', 'concern']`
----> answers: `['concern', 'Danger beneath and the Selenites // Weapons under them and charging Selinites']` - type: `<class 'list'>`
----> baseline_answer: `To prevent being trapped by enemies behind them // To avoid Selenites getting reinforced` - type: `<class 'str'>`
 --> scores:  0.08333333333333334
----> per-field score: 0.08333333333333334
 ------- evaluating input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Herd of bulls // Danger above // Selenites', 'government']`
----> answers: `['Herd of bulls // Danger above // Selenites', 'government']` - type: `<class 'list'>`
----> baseline_answer: `Selenites had welcoming gestures//The cave was empty//Selenites offered them a guided tour` - type: `<class 'str'>`
 --> scores:  0.1
----> per-field score: 0.1
 ------- evaluating input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Selenites', 'e passed between']`
----> answers: `['e passed between', 'Selenites']` - type: `<class 'list'>`
----> baseline_answer: `Selenites with long spears` - type: `<class 'str'>`
 --> scores:  0.4
----> per-field score: 0.4
 ------- evaluating input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Bulls', 'officials']`
----> answers: `['officials', 'Bulls']` - type: `<class 'list'>`
----> baseline_answer: `Selenites with short spears // Mooncalf herds // The narrator and their companions` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Butchers // Selenites', 'proclaimed that']`
----> answers: `['proclaimed that', 'Butchers // Selenites']` - type: `<class 'list'>`
----> baseline_answer: `Selenites` - type: `<class 'str'>`
 --> scores:  0.6666666666666666
----> per-field score: 0.6666666666666666
 ------- evaluating input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Bulls // Guns', 'highest duty']`
----> answers: `['highest duty', 'Bulls // Guns']` - type: `<class 'list'>`
----> baseline_answer: `Mooncalf herds // Human beings // Large animals // Aliens` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Selenites', 'America 77 flying']`
----> answers: `['Selenites', 'America 77 flying']` - type: `<class 'list'>`
----> baseline_answer: `Selenites` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Bulls // Butchers', 'mistakes besides']`
----> answers: `['mistakes besides', 'Bulls // Butchers']` - type: `<class 'list'>`
----> baseline_answer: `Selenites with little axes // Mooncalf herds // Tom and his cousin // Carrots` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
Skipping element `hiddenName` since it is not visible.
 --> Per-instance overall score: 0.25097402597402596
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6666666666666666, 0.4, 0.8, 0.28571428571428575, 1.0, 0.0, 0.22222222222222224, 0.0, 0.33333333333333337, 0.0, 0.2641509433962264, 0.0, 0.0, 0.0, 0.27906976744186046, 0.2105263157894737, 0.6666666666666666, 0.3636363636363636, 1.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.5, 1.0, 0.2222222222222222, 1.0, 0.11764705882352941, 0.0, 0.25, 0.5, 0.33333333333333337, 1.0, 0.0, 1.0, 0.2222222222222222, 0.4, 0.33333333333333337, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.4444444444444445, 0.4444444444444445, 0.4615384615384615, 1.0, 0.2, 1.0, 0.0, 0.4444444444444444, 0.1, 0.15789473684210528, 0.13333333333333333, 0.5, 0.16666666666666666, 0.4444444444444445, 0.22222222222222224, 0.5, 0.0, 0.14285714285714288, 0.1818181818181818, 0.16666666666666666, 0.0, 0.5, 0.0, 0.6666666666666666, 0.14285714285714288, 0.3333333333333333, 0.13333333333333333, 0.08333333333333334, 0.1, 0.4, 0.0, 0.6666666666666666, 0.0, 1.0, 0.0]}
instance_id: 34777 <-> row_number: 42
Could not find input field with name `correctoptions-21`
Could not find input field with name `correctoptions-22`
Could not find input field with name `incorrectoptions-21`
Could not find input field with name `incorrectoptions-22`
 --> inputs: ['correctoptions-0', 'incorrectoptions-0', 'correctoptions-1', 'incorrectoptions-1', 'correctoptions-2', 'incorrectoptions-2', 'correctoptions-3', 'incorrectoptions-3', 'correctoptions-4', 'incorrectoptions-4', 'correctoptions-5', 'incorrectoptions-5', 'correctoptions-6', 'incorrectoptions-6', 'correctoptions-7', 'incorrectoptions-7', 'correctoptions-8', 'incorrectoptions-8', 'correctoptions-9', 'incorrectoptions-9', 'correctoptions-10', 'incorrectoptions-10', 'correctoptions-11', 'incorrectoptions-11', 'correctoptions-12', 'incorrectoptions-12', 'correctoptions-13', 'incorrectoptions-13', 'correctoptions-14', 'incorrectoptions-14', 'correctoptions-15', 'incorrectoptions-15', 'correctoptions-16', 'incorrectoptions-16', 'correctoptions-17', 'incorrectoptions-17', 'correctoptions-18', 'incorrectoptions-18', 'correctoptions-19', 'incorrectoptions-19', 'correctoptions-20', 'incorrectoptions-20', 'hiddenName']
 --> Looking up gold labels from row index 42 of `input.csv` (unique inputs). 
 --> input labels: {'correctoptions-0': ['his parents had promised to take him to the beach that day', 'Binalshibh and Atta'], 'incorrectoptions-0': ['because there was no school on Sunday // he was free to spend all day with his parents // he was excited about making sandwiches', 'airspace at 9:10'], 'correctoptions-1': ['three, one each', "Compare Binalshibh's"], 'incorrectoptions-1': ['six, two each // five, one for Sam and two for Mom and Dad // four, cause only Dad will need two sandwiches', 'concerned'], 'correctoptions-2': ['because they only needed three - one for each of them', 'Binalshibh from'], 'incorrectoptions-2': ["because he didn't want to make sandwiches anymore, he wanted to go to the beach // because he didn't want a sandwich for himself // because he didn't like the sandwiches", 'terrorist'], 'correctoptions-3': ['a pail and a shovel from his grandma', 'Binalshibh when'], 'incorrectoptions-3': ['books // his sister // chocolate', 'expelled from'], 'correctoptions-4': ['the big hand on the clock pointing to 10 and the little pointing to 12', 'Binalshibh use'], 'incorrectoptions-4': ['the fourth sandwich // the little hand on the clock pointing to 12 and the big to 10 // both hands on the clock pointing to 12', 'President'], 'correctoptions-5': ['he was going to the beach', 'During the second'], 'incorrectoptions-5': ['he was hungry and wanted sandwiches // he liked looking at the clock // his mother had made an extra sandwich by mistake', 'which times'], 'correctoptions-6': ['a pail and shovel from his grandma', 'e passed between'], 'incorrectoptions-6': ['his grandma // the clock // the fourth sandwich', 'officials'], 'correctoptions-7': ['started preparing a fourth sandwich', 'punishment'], 'incorrectoptions-7': ['wiggled in her seat // waited for the clock hands to get to their places // ate a sandwich', 'the safety'], 'correctoptions-8': ['he was about to go to the beach with his parents', 'became a close'], 'incorrectoptions-8': ['he was about to make sandwiches with his parents // he was going to buy a pail and shovel with his grandma // he was going to spend the day at home with his parents and his grandma', 'mistakes besides'], 'correctoptions-9': ['he wiggled in his seat', 'concern'], 'incorrectoptions-9': ['he ate three sandwiches // he gave his grandma a pail and shovel // he started making a fourth sandwich by mistake', 'Predator'], 'correctoptions-10': ['he was super excited, with his pail and shovel', 'highest duty'], 'incorrectoptions-10': ["he didn't really like the beach, but at least he'd try out his pail and shovel // he was super excited, and he was going to take his grandma with // he didn't want to go, but was super excited about the sandwiches", 'Muslim was'], 'correctoptions-11': ['they left at noon, and took three sandwiches with them', 'Hellfire'], 'incorrectoptions-11': ['they left at ten, and took three sandwiches with them // they left at noon, and took four sandwiches with them // they left at ten and took four sandwiches with them', 'Who that'], 'correctoptions-12': ['they needed and made three sandwiches, but his mom started making a fourth one', 'Binalshibh'], 'incorrectoptions-12': ['they needed four sandwiches, and his mom made four // they needed four sandwiches but his mom made three // they needed and took three sandwiches, but his mom secretly ate the fourth one', 'first stay'], 'correctoptions-13': ['to the beach', 'occupations'], 'incorrectoptions-13': ["to school // to breakfast // to his grandma's", 'Predator to'], 'correctoptions-14': ['four', 'CIA not'], 'incorrectoptions-14': ['three / five / two', 'Ramzi Binalshibh'], 'correctoptions-15': ['a pail and shovel', "Binalshibh's"], 'incorrectoptions-15': ['his grandma // four sandwiches // his toys', 'going'], 'correctoptions-16': ['he was super excited', 'feeling'], 'incorrectoptions-16': ['he was uninterested // he was hungry // he was angry', 'towards'], 'correctoptions-17': ['he was counting the sandwiches his mom made', 'sandwiches'], 'incorrectoptions-17': ['he was eating the sandwiches his mom made // he stared at the clock as his mom made sandwiches // he made the sandwiches as his mom counted', 'game'], 'correctoptions-18': ['we have three sandwiches and that makes one sandwich for each of us', 'made'], 'incorrectoptions-18': ["let's make a game of it // let's count as we make the sandwiches! // you're right Sam!", "Sam's"], 'correctoptions-19': ['Sunday, a day at the beach', 'Bregna'], 'incorrectoptions-19': ['Sunday, a day for sandwiches // Saturday, a day at the beach // Saturday, a day for sandwiches', 'after'], 'correctoptions-20': ["he explained why they didn't need another sandwich", 'destroying'], 'incorrectoptions-20': ["he was wiggling in his seat // he ate all the sandwiches // he didn't want to go to the beach anymore", 'caused'], 'hiddenName': ['{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-0
Executing one action: self.actions.modify_text('correctoptions-0', 'Because he was going to the beach with his family')
Add text `Because he was going to the beach with his family` to this text input: <input type="text" name="correctoptions-0">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-0
Executing one action: self.actions.modify_text('incorrectoptions-0', 'Sam went to the zoo instead // It was a rainy day // Sam was bored at home')
Add text `Sam went to the zoo instead // It was a rainy day // Sam was bored at home` to this text input: <input type="text" name="incorrectoptions-0">
 - - - - - -  starting a new element: `Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-1
Executing one action: self.actions.modify_text('correctoptions-1', '3')
Add text `3` to this text input: <input type="text" name="correctoptions-1">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-1
Executing one action: self.actions.modify_text('incorrectoptions-1', 'Two sandwiches // Four sandwiches // Five sandwiches')
Add text `Two sandwiches // Four sandwiches // Five sandwiches` to this text input: <input type="text" name="incorrectoptions-1">
 - - - - - -  starting a new element: `Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-2
Executing one action: self.actions.modify_text('correctoptions-2', 'Because they had already made enough for each person.//Because there were already three sandwiches made, one for each.')
Add text `Because they had already made enough for each person.//Because there were already three sandwiches made, one for each.` to this text input: <input type="text" name="correctoptions-2">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-2
Executing one action: self.actions.modify_text('incorrectoptions-2', 'He was a race car enthusiast.')
Add text `He was a race car enthusiast.` to this text input: <input type="text" name="incorrectoptions-2">
 - - - - - -  starting a new element: `Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-3
Executing one action: self.actions.modify_text('correctoptions-3', 'A pail and shovel')
Add text `A pail and shovel` to this text input: <input type="text" name="correctoptions-3">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-3
Executing one action: self.actions.modify_text('incorrectoptions-3', 'A pair of sunglasses // A beach towel // A novel to read')
Add text `A pair of sunglasses // A beach towel // A novel to read` to this text input: <input type="text" name="incorrectoptions-3">
 - - - - - -  starting a new element: `Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-4
Executing one action: self.actions.modify_text('correctoptions-4', 'When the big hand was on the 10 and the small hand was on the 12')
self.actions.modify_text('incorrectoptions-4', 'At noon // When the clock struck twelve // Half past one')
Add text `When the big hand was on the 10 and the small hand was on the 12` to this text input: <input type="text" name="correctoptions-4">
Add text `At noon // When the clock struck twelve // Half past one` to this text input: <input type="text" name="incorrectoptions-4">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-4
Executing one action: self.actions.modify_text('incorrectoptions-4', '10 o'clock in the evening // When the sun is at its peak // Midnight')
Failed to execute an action self.actions.modify_text('incorrectoptions-4', '10 o'clock in the evening // When the sun is at its peak // Midnight'), error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-5
Executing one action: self.actions.modify_text('correctoptions-5', 'Because he was going to the beach')
Add text `Because he was going to the beach` to this text input: <input type="text" name="correctoptions-5">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-5
Executing one action: self.actions.modify_text('incorrectoptions-5', 'Going to a theme park//His birthday//Receiving a gift')
Add text `Going to a theme park//His birthday//Receiving a gift` to this text input: <input type="text" name="incorrectoptions-5">
 - - - - - -  starting a new element: `Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-6
Executing one action: self.actions.modify_text('correctoptions-6', 'a pail and shovel')
self.actions.modify_text('incorrectoptions-6', 'a beach ball // a surfboard // sunscreen')
Add text `a pail and shovel` to this text input: <input type="text" name="correctoptions-6">
Add text `a beach ball // a surfboard // sunscreen` to this text input: <input type="text" name="incorrectoptions-6">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-6
Executing one action: self.actions.modify_text('incorrectoptions-6', 'A beach ball // Sunscreen // A surfboard')
Add text `A beach ball // Sunscreen // A surfboard` to this text input: <input type="text" name="incorrectoptions-6" value="a beach ball // a surfboard // sunscreen">
 - - - - - -  starting a new element: `Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-7
Executing one action: self.actions.modify_text('correctoptions-7', 'Making an extra sandwich')
self.actions.modify_text('incorrectoptions-7', 'Forgetting the sandwiches//Packing too many towels//Leaving without Sam')
Add text `Making an extra sandwich` to this text input: <input type="text" name="correctoptions-7">
Add text `Forgetting the sandwiches//Packing too many towels//Leaving without Sam` to this text input: <input type="text" name="incorrectoptions-7">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-7
Executing one action: self.actions.modify_text('incorrectoptions-7', 'She forgot to add an ingredient//They made too many sandwiches//Sam wanted to make the sandwiches alone')
Add text `She forgot to add an ingredient//They made too many sandwiches//Sam wanted to make the sandwiches alone` to this text input: <input type="text" name="incorrectoptions-7" value="Forgetting the sandwiches//Packing too many towels//Leaving without Sam">
 - - - - - -  starting a new element: `Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-8
Executing one action: self.actions.modify_text('correctoptions-8', 'Because he was going to the beach // Because of the beach trip planned for that day')
self.actions.modify_text('incorrectoptions-8', 'Because it was raining // Because he had to go to school')
Add text `Because he was going to the beach // Because of the beach trip planned for that day` to this text input: <input type="text" name="correctoptions-8">
Add text `Because it was raining // Because he had to go to school` to this text input: <input type="text" name="incorrectoptions-8">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-8
Executing one action: self.actions.modify_text('incorrectoptions-8', 'He was going to work // He disliked Sundays // He had homework due')
Add text `He was going to work // He disliked Sundays // He had homework due` to this text input: <input type="text" name="incorrectoptions-8" value="Because it was raining // Because he had to go to school">
 - - - - - -  starting a new element: `Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-9
Executing one action: self.actions.modify_text('correctoptions-9', 'Because it was the day his family promised to take him to the beach.')
self.actions.modify_text('incorrectoptions-9', 'Because he was going to get ice cream // Because it was his birthday')
Add text `Because it was the day his family promised to take him to the beach.` to this text input: <input type="text" name="correctoptions-9">
Add text `Because he was going to get ice cream // Because it was his birthday` to this text input: <input type="text" name="incorrectoptions-9">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-9
Executing one action: self.actions.modify_text('incorrectoptions-9', 'They were going to the park // Sam showed it by sleeping in // It was a Saturday')
Add text `They were going to the park // Sam showed it by sleeping in // It was a Saturday` to this text input: <input type="text" name="incorrectoptions-9" value="Because he was going to get ice cream // Because it was his birthday">
 - - - - - -  starting a new element: `Input(name=`correctoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-10
Executing one action: self.actions.modify_text('correctoptions-10', 'Sam was excited because he was going to the beach with his pail and shovel.')
Add text `Sam was excited because he was going to the beach with his pail and shovel.` to this text input: <input type="text" name="correctoptions-10">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-10
Executing one action: self.actions.modify_text('incorrectoptions-10', 'Sam takes his skateboard // Sam packs his winter coat // Sam brings a snowboard')
Add text `Sam takes his skateboard // Sam packs his winter coat // Sam brings a snowboard` to this text input: <input type="text" name="incorrectoptions-10">
 - - - - - -  starting a new element: `Input(name=`correctoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-11
Executing one action: self.actions.modify_text('correctoptions-11', '10:00 AM // Some sandwiches and a pail and shovel for the beach')
self.actions.modify_text('incorrectoptions-11', '8:00 PM // Only a pail and shovel for the beach // Five sandwiches and two pails')
Add text `10:00 AM // Some sandwiches and a pail and shovel for the beach` to this text input: <input type="text" name="correctoptions-11">
Add text `8:00 PM // Only a pail and shovel for the beach // Five sandwiches and two pails` to this text input: <input type="text" name="incorrectoptions-11">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-11
Executing one action: self.actions.modify_text('incorrectoptions-11', '6:45 // Four peanut butter and jelly sandwiches // Two turkey sandwiches')
Add text `6:45 // Four peanut butter and jelly sandwiches // Two turkey sandwiches` to this text input: <input type="text" name="incorrectoptions-11" value="8:00 PM // Only a pail and shovel for the beach // Five sandwiches and two pails">
 - - - - - -  starting a new element: `Input(name=`correctoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-12
Executing one action: self.actions.modify_text('correctoptions-12', '3 // three')
self.actions.modify_text('incorrectoptions-12', '4 // 2')
Add text `3 // three` to this text input: <input type="text" name="correctoptions-12">
Add text `4 // 2` to this text input: <input type="text" name="incorrectoptions-12">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-12
Executing one action: self.actions.modify_text('incorrectoptions-12', 'Four // Two // Six')
Add text `Four // Two // Six` to this text input: <input type="text" name="incorrectoptions-12" value="4 // 2">
 - - - - - -  starting a new element: `Input(name=`correctoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-13
Executing one action: self.actions.modify_text('correctoptions-13', 'The beach')
self.actions.modify_text('incorrectoptions-13', 'The grocery store//The amusement park//School')
Add text `The beach` to this text input: <input type="text" name="correctoptions-13">
Add text `The grocery store//The amusement park//School` to this text input: <input type="text" name="incorrectoptions-13">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-13
Executing one action: self.actions.modify_text('incorrectoptions-13', 'At the playground // At a friend's house // At school')
Failed to execute an action self.actions.modify_text('incorrectoptions-13', 'At the playground // At a friend's house // At school'), error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`correctoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-14
Executing one action: self.actions.modify_text('correctoptions-14', '4')
Add text `4` to this text input: <input type="text" name="correctoptions-14">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-14
Executing one action: self.actions.modify_text('incorrectoptions-14', '5 // 2 // 6')
Add text `5 // 2 // 6` to this text input: <input type="text" name="incorrectoptions-14">
 - - - - - -  starting a new element: `Input(name=`correctoptions-15`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-15`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-15
Executing one action: self.actions.modify_text('correctoptions-15', 'A pail and shovel')
Add text `A pail and shovel` to this text input: <input type="text" name="correctoptions-15">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-15`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-15`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-15
Executing one action: self.actions.modify_text('incorrectoptions-15', 'A toy car // A book about dolphins // A swimsuit')
Add text `A toy car // A book about dolphins // A swimsuit` to this text input: <input type="text" name="incorrectoptions-15">
 - - - - - -  starting a new element: `Input(name=`correctoptions-16`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-16`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-16
Executing one action: self.actions.modify_text('correctoptions-16', 'Excited for the beach day')
self.actions.modify_text('incorrectoptions-16', 'Scared of water//Thrilled for school//Eager for bedtime')
Add text `Excited for the beach day` to this text input: <input type="text" name="correctoptions-16">
Add text `Scared of water//Thrilled for school//Eager for bedtime` to this text input: <input type="text" name="incorrectoptions-16">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-16`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-16`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-16
Executing one action: self.actions.modify_text('incorrectoptions-16', 'He forgot it was beach day//He was looking forward to going to school//He misplaced his pail and shovel')
Add text `He forgot it was beach day//He was looking forward to going to school//He misplaced his pail and shovel` to this text input: <input type="text" name="incorrectoptions-16" value="Scared of water//Thrilled for school//Eager for bedtime">
 - - - - - -  starting a new element: `Input(name=`correctoptions-17`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-17`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-17
Executing one action: self.actions.modify_text('correctoptions-17', 'Counting together // Making three sandwiches // Helping with the sandwiches')
self.actions.modify_text('incorrectoptions-17', 'Playing a video game // Going to the beach early // Making a sandcastle')
Add text `Counting together // Making three sandwiches // Helping with the sandwiches` to this text input: <input type="text" name="correctoptions-17">
Add text `Playing a video game // Going to the beach early // Making a sandcastle` to this text input: <input type="text" name="incorrectoptions-17">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-17`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-17`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-17
Executing one action: self.actions.modify_text('incorrectoptions-17', 'Counting backwards from five//Putting them in alphabetical order//Choosing the largest sandwich')
Add text `Counting backwards from five//Putting them in alphabetical order//Choosing the largest sandwich` to this text input: <input type="text" name="incorrectoptions-17" value="Playing a video game // Going to the beach early // Making a sandcastle">
 - - - - - -  starting a new element: `Input(name=`correctoptions-18`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-18`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-18
Executing one action: self.actions.modify_text('correctoptions-18', '"Mom, we already have three sandwiches."')
self.actions.modify_text('incorrectoptions-18', '"Mom, can I have a sandwich now?" // "Let's make one more for grandma." // "I want to make the sandwiches instead."')
Failed to execute an action self.actions.modify_text('correctoptions-18', '"Mom, we already have three sandwiches."')
self.actions.modify_text('incorrectoptions-18', '"Mom, can I have a sandwich now?" // "Let's make one more for grandma." // "I want to make the sandwiches instead."'), error: unterminated string literal (detected at line 2) (<string>, line 2)
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-18`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-18`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-18
Executing one action: self.actions.modify_text('incorrectoptions-18', 'Sam gazed at the ocean // Sam found a treasure chest // Sam saw a dolphin leap from the water')
Add text `Sam gazed at the ocean // Sam found a treasure chest // Sam saw a dolphin leap from the water` to this text input: <input type="text" name="incorrectoptions-18">
 - - - - - -  starting a new element: `Input(name=`correctoptions-19`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-19`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-19
Executing one action: self.actions.modify_text('correctoptions-19', 'Beach day')
self.actions.modify_text('incorrectoptions-19', 'Snow day // School day // Rainy day')
Add text `Beach day` to this text input: <input type="text" name="correctoptions-19">
Add text `Snow day // School day // Rainy day` to this text input: <input type="text" name="incorrectoptions-19">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-19`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-19`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-19
Executing one action: self.actions.modify_text('incorrectoptions-19', 'A rainy day // A snowy day // A cold day')
Add text `A rainy day // A snowy day // A cold day` to this text input: <input type="text" name="incorrectoptions-19" value="Snow day // School day // Rainy day">
 - - - - - -  starting a new element: `Input(name=`correctoptions-20`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-20`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-20
Executing one action: self.actions.modify_text('correctoptions-20', 'Being silly and making one too many sandwiches')
self.actions.modify_text('incorrectoptions-20', 'Being serious about the trip//Forgetting the beach towels//Not knowing how to count')
Add text `Being silly and making one too many sandwiches` to this text input: <input type="text" name="correctoptions-20">
Add text `Being serious about the trip//Forgetting the beach towels//Not knowing how to count` to this text input: <input type="text" name="incorrectoptions-20">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-20`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-20`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-20
Executing one action: self.actions.modify_text('incorrectoptions-20', 'He thought he was too grown up for hugs// He pointed out they had left the beach umbrella at home')
Add text `He thought he was too grown up for hugs// He pointed out they had left the beach umbrella at home` to this text input: <input type="text" name="incorrectoptions-20" value="Being serious about the trip//Forgetting the beach towels//Not knowing how to count">
 - - - - - -  starting a new element: `Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
Skipping element `hiddenName` since it is not visible.
input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Because he was going to the beach with his family']
 visible_values : ['Because he was going to the beach with his family']
input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Sam went to the zoo instead // It was a rainy day // Sam was bored at home']
 visible_values : ['Sam went to the zoo instead // It was a rainy day // Sam was bored at home']
input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Two sandwiches // Four sandwiches // Five sandwiches']
 visible_values : ['Two sandwiches // Four sandwiches // Five sandwiches']
input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Because they had already made enough for each person.//Because there were already three sandwiches made, one for each.']
 visible_values : ['Because they had already made enough for each person.//Because there were already three sandwiches made, one for each.']
input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['He was a race car enthusiast.']
 visible_values : ['He was a race car enthusiast.']
input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['A pail and shovel']
 visible_values : ['A pail and shovel']
input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['A pair of sunglasses // A beach towel // A novel to read']
 visible_values : ['A pair of sunglasses // A beach towel // A novel to read']
input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['When the big hand was on the 10 and the small hand was on the 12']
 visible_values : ['When the big hand was on the 10 and the small hand was on the 12']
input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['At noon // When the clock struck twelve // Half past one']
 visible_values : ['At noon // When the clock struck twelve // Half past one']
input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Because he was going to the beach']
 visible_values : ['Because he was going to the beach']
input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Going to a theme park//His birthday//Receiving a gift']
 visible_values : ['Going to a theme park//His birthday//Receiving a gift']
input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['a pail and shovel']
 visible_values : ['a pail and shovel']
input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['A beach ball // Sunscreen // A surfboard']
 visible_values : ['A beach ball // Sunscreen // A surfboard']
input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Making an extra sandwich']
 visible_values : ['Making an extra sandwich']
input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['She forgot to add an ingredient//They made too many sandwiches//Sam wanted to make the sandwiches alone']
 visible_values : ['She forgot to add an ingredient//They made too many sandwiches//Sam wanted to make the sandwiches alone']
input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Because he was going to the beach // Because of the beach trip planned for that day']
 visible_values : ['Because he was going to the beach // Because of the beach trip planned for that day']
input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['He was going to work // He disliked Sundays // He had homework due']
 visible_values : ['He was going to work // He disliked Sundays // He had homework due']
input: Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Because it was the day his family promised to take him to the beach.']
 visible_values : ['Because it was the day his family promised to take him to the beach.']
input: Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['They were going to the park // Sam showed it by sleeping in // It was a Saturday']
 visible_values : ['They were going to the park // Sam showed it by sleeping in // It was a Saturday']
input: Input(name=`correctoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Sam was excited because he was going to the beach with his pail and shovel.']
 visible_values : ['Sam was excited because he was going to the beach with his pail and shovel.']
input: Input(name=`incorrectoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Sam takes his skateboard // Sam packs his winter coat // Sam brings a snowboard']
 visible_values : ['Sam takes his skateboard // Sam packs his winter coat // Sam brings a snowboard']
input: Input(name=`correctoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['10:00 AM // Some sandwiches and a pail and shovel for the beach']
 visible_values : ['10:00 AM // Some sandwiches and a pail and shovel for the beach']
input: Input(name=`incorrectoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['6:45 // Four peanut butter and jelly sandwiches // Two turkey sandwiches']
 visible_values : ['6:45 // Four peanut butter and jelly sandwiches // Two turkey sandwiches']
input: Input(name=`correctoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['3 // three']
 visible_values : ['3 // three']
input: Input(name=`incorrectoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Four // Two // Six']
 visible_values : ['Four // Two // Six']
input: Input(name=`correctoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['The beach']
 visible_values : ['The beach']
input: Input(name=`incorrectoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['The grocery store//The amusement park//School']
 visible_values : ['The grocery store//The amusement park//School']
input: Input(name=`correctoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`incorrectoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['5 // 2 // 6']
 visible_values : ['5 // 2 // 6']
input: Input(name=`correctoptions-15`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['A pail and shovel']
 visible_values : ['A pail and shovel']
input: Input(name=`incorrectoptions-15`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['A toy car // A book about dolphins // A swimsuit']
 visible_values : ['A toy car // A book about dolphins // A swimsuit']
input: Input(name=`correctoptions-16`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Excited for the beach day']
 visible_values : ['Excited for the beach day']
input: Input(name=`incorrectoptions-16`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['He forgot it was beach day//He was looking forward to going to school//He misplaced his pail and shovel']
 visible_values : ['He forgot it was beach day//He was looking forward to going to school//He misplaced his pail and shovel']
input: Input(name=`correctoptions-17`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Counting together // Making three sandwiches // Helping with the sandwiches']
 visible_values : ['Counting together // Making three sandwiches // Helping with the sandwiches']
input: Input(name=`incorrectoptions-17`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Counting backwards from five//Putting them in alphabetical order//Choosing the largest sandwich']
 visible_values : ['Counting backwards from five//Putting them in alphabetical order//Choosing the largest sandwich']
input: Input(name=`correctoptions-18`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : [None]
 visible_values : [None]
input: Input(name=`incorrectoptions-18`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Sam gazed at the ocean // Sam found a treasure chest // Sam saw a dolphin leap from the water']
 visible_values : ['Sam gazed at the ocean // Sam found a treasure chest // Sam saw a dolphin leap from the water']
input: Input(name=`correctoptions-19`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Beach day']
 visible_values : ['Beach day']
input: Input(name=`incorrectoptions-19`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['A rainy day // A snowy day // A cold day']
 visible_values : ['A rainy day // A snowy day // A cold day']
input: Input(name=`correctoptions-20`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Being silly and making one too many sandwiches']
 visible_values : ['Being silly and making one too many sandwiches']
input: Input(name=`incorrectoptions-20`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['He thought he was too grown up for hugs// He pointed out they had left the beach umbrella at home']
 visible_values : ['He thought he was too grown up for hugs// He pointed out they had left the beach umbrella at home']
input: Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : [None]
 visible_values : [None]
 ------- evaluating input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['his parents had promised to take him to the beach that day', 'Binalshibh and Atta']`
----> answers: `['his parents had promised to take him to the beach that day', 'Binalshibh and Atta']` - type: `<class 'list'>`
----> baseline_answer: `Because he was going to the beach with his family` - type: `<class 'str'>`
 --> scores:  0.2727272727272727
----> per-field score: 0.2727272727272727
 ------- evaluating input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['because there was no school on Sunday // he was free to spend all day with his parents // he was excited about making sandwiches', 'airspace at 9:10']`
----> answers: `['because there was no school on Sunday // he was free to spend all day with his parents // he was excited about making sandwiches', 'airspace at 9:10']` - type: `<class 'list'>`
----> baseline_answer: `Sam went to the zoo instead // It was a rainy day // Sam was bored at home` - type: `<class 'str'>`
 --> scores:  0.15384615384615383
----> per-field score: 0.15384615384615383
 ------- evaluating input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['three, one each', "Compare Binalshibh's"]`
----> answers: `['three, one each', "Compare Binalshibh's"]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['six, two each // five, one for Sam and two for Mom and Dad // four, cause only Dad will need two sandwiches', 'concerned']`
----> answers: `['concerned', 'six, two each // five, one for Sam and two for Mom and Dad // four, cause only Dad will need two sandwiches']` - type: `<class 'list'>`
----> baseline_answer: `Two sandwiches // Four sandwiches // Five sandwiches` - type: `<class 'str'>`
 --> scores:  0.22222222222222224
----> per-field score: 0.22222222222222224
 ------- evaluating input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['because they only needed three - one for each of them', 'Binalshibh from']`
----> answers: `['because they only needed three - one for each of them', 'Binalshibh from']` - type: `<class 'list'>`
----> baseline_answer: `Because they had already made enough for each person.//Because there were already three sandwiches made, one for each.` - type: `<class 'str'>`
 --> scores:  0.41379310344827586
----> per-field score: 0.41379310344827586
 ------- evaluating input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `["because he didn't want to make sandwiches anymore, he wanted to go to the beach // because he didn't want a sandwich for himself // because he didn't like the sandwiches", 'terrorist']`
----> answers: `['terrorist', "because he didn't want to make sandwiches anymore, he wanted to go to the beach // because he didn't want a sandwich for himself // because he didn't like the sandwiches"]` - type: `<class 'list'>`
----> baseline_answer: `He was a race car enthusiast.` - type: `<class 'str'>`
 --> scores:  0.10526315789473684
----> per-field score: 0.10526315789473684
 ------- evaluating input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['a pail and a shovel from his grandma', 'Binalshibh when']`
----> answers: `['a pail and a shovel from his grandma', 'Binalshibh when']` - type: `<class 'list'>`
----> baseline_answer: `A pail and shovel` - type: `<class 'str'>`
 --> scores:  0.6666666666666666
----> per-field score: 0.6666666666666666
 ------- evaluating input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['books // his sister // chocolate', 'expelled from']`
----> answers: `['books // his sister // chocolate', 'expelled from']` - type: `<class 'list'>`
----> baseline_answer: `A pair of sunglasses // A beach towel // A novel to read` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['the big hand on the clock pointing to 10 and the little pointing to 12', 'Binalshibh use']`
----> answers: `['Binalshibh use', 'the big hand on the clock pointing to 10 and the little pointing to 12']` - type: `<class 'list'>`
----> baseline_answer: `When the big hand was on the 10 and the small hand was on the 12` - type: `<class 'str'>`
 --> scores:  0.5806451612903225
----> per-field score: 0.5806451612903225
 ------- evaluating input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['the fourth sandwich // the little hand on the clock pointing to 12 and the big to 10 // both hands on the clock pointing to 12', 'President']`
----> answers: `['President', 'the fourth sandwich // the little hand on the clock pointing to 12 and the big to 10 // both hands on the clock pointing to 12']` - type: `<class 'list'>`
----> baseline_answer: `At noon // When the clock struck twelve // Half past one` - type: `<class 'str'>`
 --> scores:  0.11428571428571428
----> per-field score: 0.11428571428571428
 ------- evaluating input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['he was going to the beach', 'During the second']`
----> answers: `['During the second', 'he was going to the beach']` - type: `<class 'list'>`
----> baseline_answer: `Because he was going to the beach` - type: `<class 'str'>`
 --> scores:  0.923076923076923
----> per-field score: 0.923076923076923
 ------- evaluating input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['he was hungry and wanted sandwiches // he liked looking at the clock // his mother had made an extra sandwich by mistake', 'which times']`
----> answers: `['which times', 'he was hungry and wanted sandwiches // he liked looking at the clock // his mother had made an extra sandwich by mistake']` - type: `<class 'list'>`
----> baseline_answer: `Going to a theme park//His birthday//Receiving a gift` - type: `<class 'str'>`
 --> scores:  0.06451612903225806
----> per-field score: 0.06451612903225806
 ------- evaluating input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['a pail and shovel from his grandma', 'e passed between']`
----> answers: `['e passed between', 'a pail and shovel from his grandma']` - type: `<class 'list'>`
----> baseline_answer: `a pail and shovel` - type: `<class 'str'>`
 --> scores:  0.7272727272727273
----> per-field score: 0.7272727272727273
 ------- evaluating input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['his grandma // the clock // the fourth sandwich', 'officials']`
----> answers: `['officials', 'his grandma // the clock // the fourth sandwich']` - type: `<class 'list'>`
----> baseline_answer: `A beach ball // Sunscreen // A surfboard` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['started preparing a fourth sandwich', 'punishment']`
----> answers: `['punishment', 'started preparing a fourth sandwich']` - type: `<class 'list'>`
----> baseline_answer: `Making an extra sandwich` - type: `<class 'str'>`
 --> scores:  0.22222222222222224
----> per-field score: 0.22222222222222224
 ------- evaluating input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['wiggled in her seat // waited for the clock hands to get to their places // ate a sandwich', 'the safety']`
----> answers: `['wiggled in her seat // waited for the clock hands to get to their places // ate a sandwich', 'the safety']` - type: `<class 'list'>`
----> baseline_answer: `She forgot to add an ingredient//They made too many sandwiches//Sam wanted to make the sandwiches alone` - type: `<class 'str'>`
 --> scores:  0.17142857142857143
----> per-field score: 0.17142857142857143
 ------- evaluating input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['he was about to go to the beach with his parents', 'became a close']`
----> answers: `['became a close', 'he was about to go to the beach with his parents']` - type: `<class 'list'>`
----> baseline_answer: `Because he was going to the beach // Because of the beach trip planned for that day` - type: `<class 'str'>`
 --> scores:  0.4444444444444444
----> per-field score: 0.4444444444444444
 ------- evaluating input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['he was about to make sandwiches with his parents // he was going to buy a pail and shovel with his grandma // he was going to spend the day at home with his parents and his grandma', 'mistakes besides']`
----> answers: `['he was about to make sandwiches with his parents // he was going to buy a pail and shovel with his grandma // he was going to spend the day at home with his parents and his grandma', 'mistakes besides']` - type: `<class 'list'>`
----> baseline_answer: `He was going to work // He disliked Sundays // He had homework due` - type: `<class 'str'>`
 --> scores:  0.20833333333333334
----> per-field score: 0.20833333333333334
 ------- evaluating input: Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['he wiggled in his seat', 'concern']`
----> answers: `['concern', 'he wiggled in his seat']` - type: `<class 'list'>`
----> baseline_answer: `Because it was the day his family promised to take him to the beach.` - type: `<class 'str'>`
 --> scores:  0.10526315789473682
----> per-field score: 0.10526315789473682
 ------- evaluating input: Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['he ate three sandwiches // he gave his grandma a pail and shovel // he started making a fourth sandwich by mistake', 'Predator']`
----> answers: `['Predator', 'he ate three sandwiches // he gave his grandma a pail and shovel // he started making a fourth sandwich by mistake']` - type: `<class 'list'>`
----> baseline_answer: `They were going to the park // Sam showed it by sleeping in // It was a Saturday` - type: `<class 'str'>`
 --> scores:  0.05555555555555556
----> per-field score: 0.05555555555555556
 ------- evaluating input: Input(name=`correctoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['he was super excited, with his pail and shovel', 'highest duty']`
----> answers: `['he was super excited, with his pail and shovel', 'highest duty']` - type: `<class 'list'>`
----> baseline_answer: `Sam was excited because he was going to the beach with his pail and shovel.` - type: `<class 'str'>`
 --> scores:  0.5833333333333334
----> per-field score: 0.5833333333333334
 ------- evaluating input: Input(name=`incorrectoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `["he didn't really like the beach, but at least he'd try out his pail and shovel // he was super excited, and he was going to take his grandma with // he didn't want to go, but was super excited about the sandwiches", 'Muslim was']`
----> answers: `['Muslim was', "he didn't really like the beach, but at least he'd try out his pail and shovel // he was super excited, and he was going to take his grandma with // he didn't want to go, but was super excited about the sandwiches"]` - type: `<class 'list'>`
----> baseline_answer: `Sam takes his skateboard // Sam packs his winter coat // Sam brings a snowboard` - type: `<class 'str'>`
 --> scores:  0.07017543859649122
----> per-field score: 0.07017543859649122
 ------- evaluating input: Input(name=`correctoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['they left at noon, and took three sandwiches with them', 'Hellfire']`
----> answers: `['they left at noon, and took three sandwiches with them', 'Hellfire']` - type: `<class 'list'>`
----> baseline_answer: `10:00 AM // Some sandwiches and a pail and shovel for the beach` - type: `<class 'str'>`
 --> scores:  0.08695652173913043
----> per-field score: 0.08695652173913043
 ------- evaluating input: Input(name=`incorrectoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['they left at ten, and took three sandwiches with them // they left at noon, and took four sandwiches with them // they left at ten and took four sandwiches with them', 'Who that']`
----> answers: `['Who that', 'they left at ten, and took three sandwiches with them // they left at noon, and took four sandwiches with them // they left at ten and took four sandwiches with them']` - type: `<class 'list'>`
----> baseline_answer: `6:45 // Four peanut butter and jelly sandwiches // Two turkey sandwiches` - type: `<class 'str'>`
 --> scores:  0.14634146341463417
----> per-field score: 0.14634146341463417
 ------- evaluating input: Input(name=`correctoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['they needed and made three sandwiches, but his mom started making a fourth one', 'Binalshibh']`
----> answers: `['they needed and made three sandwiches, but his mom started making a fourth one', 'Binalshibh']` - type: `<class 'list'>`
----> baseline_answer: `3 // three` - type: `<class 'str'>`
 --> scores:  0.125
----> per-field score: 0.125
 ------- evaluating input: Input(name=`incorrectoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['they needed four sandwiches, and his mom made four // they needed four sandwiches but his mom made three // they needed and took three sandwiches, but his mom secretly ate the fourth one', 'first stay']`
----> answers: `['first stay', 'they needed four sandwiches, and his mom made four // they needed four sandwiches but his mom made three // they needed and took three sandwiches, but his mom secretly ate the fourth one']` - type: `<class 'list'>`
----> baseline_answer: `Four // Two // Six` - type: `<class 'str'>`
 --> scores:  0.05714285714285714
----> per-field score: 0.05714285714285714
 ------- evaluating input: Input(name=`correctoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['to the beach', 'occupations']`
----> answers: `['occupations', 'to the beach']` - type: `<class 'list'>`
----> baseline_answer: `The beach` - type: `<class 'str'>`
 --> scores:  0.8
----> per-field score: 0.8
 ------- evaluating input: Input(name=`incorrectoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `["to school // to breakfast // to his grandma's", 'Predator to']`
----> answers: `['Predator to', "to school // to breakfast // to his grandma's"]` - type: `<class 'list'>`
----> baseline_answer: `The grocery store//The amusement park//School` - type: `<class 'str'>`
 --> scores:  0.13333333333333333
----> per-field score: 0.13333333333333333
 ------- evaluating input: Input(name=`correctoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['four', 'CIA not']`
----> answers: `['four', 'CIA not']` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`incorrectoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['three / five / two', 'Ramzi Binalshibh']`
----> answers: `['three / five / two', 'Ramzi Binalshibh']` - type: `<class 'list'>`
----> baseline_answer: `5 // 2 // 6` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-15`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['a pail and shovel', "Binalshibh's"]`
----> answers: `["Binalshibh's", 'a pail and shovel']` - type: `<class 'list'>`
----> baseline_answer: `A pail and shovel` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-15`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['his grandma // four sandwiches // his toys', 'going']`
----> answers: `['his grandma // four sandwiches // his toys', 'going']` - type: `<class 'list'>`
----> baseline_answer: `A toy car // A book about dolphins // A swimsuit` - type: `<class 'str'>`
 --> scores:  0.13333333333333333
----> per-field score: 0.13333333333333333
 ------- evaluating input: Input(name=`correctoptions-16`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['he was super excited', 'feeling']`
----> answers: `['feeling', 'he was super excited']` - type: `<class 'list'>`
----> baseline_answer: `Excited for the beach day` - type: `<class 'str'>`
 --> scores:  0.22222222222222224
----> per-field score: 0.22222222222222224
 ------- evaluating input: Input(name=`incorrectoptions-16`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['he was uninterested // he was hungry // he was angry', 'towards']`
----> answers: `['towards', 'he was uninterested // he was hungry // he was angry']` - type: `<class 'list'>`
----> baseline_answer: `He forgot it was beach day//He was looking forward to going to school//He misplaced his pail and shovel` - type: `<class 'str'>`
 --> scores:  0.3448275862068966
----> per-field score: 0.3448275862068966
 ------- evaluating input: Input(name=`correctoptions-17`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['he was counting the sandwiches his mom made', 'sandwiches']`
----> answers: `['he was counting the sandwiches his mom made', 'sandwiches']` - type: `<class 'list'>`
----> baseline_answer: `Counting together // Making three sandwiches // Helping with the sandwiches` - type: `<class 'str'>`
 --> scores:  0.35294117647058826
----> per-field score: 0.35294117647058826
 ------- evaluating input: Input(name=`incorrectoptions-17`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['he was eating the sandwiches his mom made // he stared at the clock as his mom made sandwiches // he made the sandwiches as his mom counted', 'game']`
----> answers: `['game', 'he was eating the sandwiches his mom made // he stared at the clock as his mom made sandwiches // he made the sandwiches as his mom counted']` - type: `<class 'list'>`
----> baseline_answer: `Counting backwards from five//Putting them in alphabetical order//Choosing the largest sandwich` - type: `<class 'str'>`
 --> scores:  0.10256410256410257
----> per-field score: 0.10256410256410257
 ------- evaluating input: Input(name=`correctoptions-18`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['we have three sandwiches and that makes one sandwich for each of us', 'made']`
----> answers: `['made', 'we have three sandwiches and that makes one sandwich for each of us']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`incorrectoptions-18`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `["let's make a game of it // let's count as we make the sandwiches! // you're right Sam!", "Sam's"]`
----> answers: `["let's make a game of it // let's count as we make the sandwiches! // you're right Sam!", "Sam's"]` - type: `<class 'list'>`
----> baseline_answer: `Sam gazed at the ocean // Sam found a treasure chest // Sam saw a dolphin leap from the water` - type: `<class 'str'>`
 --> scores:  0.10810810810810811
----> per-field score: 0.10810810810810811
 ------- evaluating input: Input(name=`correctoptions-19`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Sunday, a day at the beach', 'Bregna']`
----> answers: `['Bregna', 'Sunday, a day at the beach']` - type: `<class 'list'>`
----> baseline_answer: `Beach day` - type: `<class 'str'>`
 --> scores:  0.25
----> per-field score: 0.25
 ------- evaluating input: Input(name=`incorrectoptions-19`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Sunday, a day for sandwiches // Saturday, a day at the beach // Saturday, a day for sandwiches', 'after']`
----> answers: `['Sunday, a day for sandwiches // Saturday, a day at the beach // Saturday, a day for sandwiches', 'after']` - type: `<class 'list'>`
----> baseline_answer: `A rainy day // A snowy day // A cold day` - type: `<class 'str'>`
 --> scores:  0.4800000000000001
----> per-field score: 0.4800000000000001
 ------- evaluating input: Input(name=`correctoptions-20`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `["he explained why they didn't need another sandwich", 'destroying']`
----> answers: `['destroying', "he explained why they didn't need another sandwich"]` - type: `<class 'list'>`
----> baseline_answer: `Being silly and making one too many sandwiches` - type: `<class 'str'>`
 --> scores:  0.11764705882352941
----> per-field score: 0.11764705882352941
 ------- evaluating input: Input(name=`incorrectoptions-20`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `["he was wiggling in his seat // he ate all the sandwiches // he didn't want to go to the beach anymore", 'caused']`
----> answers: `['caused', "he was wiggling in his seat // he ate all the sandwiches // he didn't want to go to the beach anymore"]` - type: `<class 'list'>`
----> baseline_answer: `He thought he was too grown up for hugs// He pointed out they had left the beach umbrella at home` - type: `<class 'str'>`
 --> scores:  0.24390243902439024
----> per-field score: 0.24390243902439024
 ------- evaluating input: Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
Skipping element `hiddenName` since it is not visible.
 --> Per-instance overall score: 0.25736646407035924
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6666666666666666, 0.4, 0.8, 0.28571428571428575, 1.0, 0.0, 0.22222222222222224, 0.0, 0.33333333333333337, 0.0, 0.2641509433962264, 0.0, 0.0, 0.0, 0.27906976744186046, 0.2105263157894737, 0.6666666666666666, 0.3636363636363636, 1.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.5, 1.0, 0.2222222222222222, 1.0, 0.11764705882352941, 0.0, 0.25, 0.5, 0.33333333333333337, 1.0, 0.0, 1.0, 0.2222222222222222, 0.4, 0.33333333333333337, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.4444444444444445, 0.4444444444444445, 0.4615384615384615, 1.0, 0.2, 1.0, 0.0, 0.4444444444444444, 0.1, 0.15789473684210528, 0.13333333333333333, 0.5, 0.16666666666666666, 0.4444444444444445, 0.22222222222222224, 0.5, 0.0, 0.14285714285714288, 0.1818181818181818, 0.16666666666666666, 0.0, 0.5, 0.0, 0.6666666666666666, 0.14285714285714288, 0.3333333333333333, 0.13333333333333333, 0.08333333333333334, 0.1, 0.4, 0.0, 0.6666666666666666, 0.0, 1.0, 0.0, 0.2727272727272727, 0.15384615384615383, 0.0, 0.22222222222222224, 0.41379310344827586, 0.10526315789473684, 0.6666666666666666, 0.0, 0.5806451612903225, 0.11428571428571428, 0.923076923076923, 0.06451612903225806, 0.7272727272727273, 0.0, 0.22222222222222224, 0.17142857142857143, 0.4444444444444444, 0.20833333333333334, 0.10526315789473682, 0.05555555555555556, 0.5833333333333334, 0.07017543859649122, 0.08695652173913043, 0.14634146341463417, 0.125, 0.05714285714285714, 0.8, 0.13333333333333333, 0.0, 0.0, 1.0, 0.13333333333333333, 0.22222222222222224, 0.3448275862068966, 0.35294117647058826, 0.10256410256410257, 0.0, 0.10810810810810811, 0.25, 0.4800000000000001, 0.11764705882352941, 0.24390243902439024]}
instance_id: 34817 <-> row_number: 82
Could not find input field with name `correctoptions-10`
Could not find input field with name `correctoptions-11`
Could not find input field with name `correctoptions-12`
Could not find input field with name `correctoptions-13`
Could not find input field with name `correctoptions-14`
Could not find input field with name `correctoptions-15`
Could not find input field with name `correctoptions-16`
Could not find input field with name `correctoptions-17`
Could not find input field with name `correctoptions-18`
Could not find input field with name `correctoptions-19`
Could not find input field with name `correctoptions-20`
Could not find input field with name `correctoptions-21`
Could not find input field with name `correctoptions-22`
Could not find input field with name `incorrectoptions-10`
Could not find input field with name `incorrectoptions-11`
Could not find input field with name `incorrectoptions-12`
Could not find input field with name `incorrectoptions-13`
Could not find input field with name `incorrectoptions-14`
Could not find input field with name `incorrectoptions-15`
Could not find input field with name `incorrectoptions-16`
Could not find input field with name `incorrectoptions-17`
Could not find input field with name `incorrectoptions-18`
Could not find input field with name `incorrectoptions-19`
Could not find input field with name `incorrectoptions-20`
Could not find input field with name `incorrectoptions-21`
Could not find input field with name `incorrectoptions-22`
 --> inputs: ['correctoptions-0', 'incorrectoptions-0', 'correctoptions-1', 'incorrectoptions-1', 'correctoptions-2', 'incorrectoptions-2', 'correctoptions-3', 'incorrectoptions-3', 'correctoptions-4', 'incorrectoptions-4', 'correctoptions-5', 'incorrectoptions-5', 'correctoptions-6', 'incorrectoptions-6', 'correctoptions-7', 'incorrectoptions-7', 'correctoptions-8', 'incorrectoptions-8', 'correctoptions-9', 'incorrectoptions-9', 'hiddenName']
 --> Looking up gold labels from row index 82 of `input.csv` (unique inputs). 
 --> input labels: {'correctoptions-0': ['Einstein', 'Bin Ladin'], 'incorrectoptions-0': ['David Ben-Gurion', 'airspace at 9:10'], 'correctoptions-1': ['deeply moved', 'Command Center'], 'incorrectoptions-1': ['happy', 'concerned'], 'correctoptions-2': ['raised funds', 'California'], 'incorrectoptions-2': ['sold the land', 'terrorist'], 'correctoptions-3': ['President of Israel', 'American 77'], 'incorrectoptions-3': ['University Chairman', 'considered'], 'correctoptions-4': ['David Ben-Gurion', 'Bin Ladin'], 'incorrectoptions-4': ['Carlebach', 'leave Yemen'], 'correctoptions-5': ['Einstein', 'take place'], 'incorrectoptions-5': ['David Ben-Gurion', 'lived in Germany'], 'correctoptions-6': ['President of Israel (not accepted)', 'influenced'], 'incorrectoptions-6': ['Dean of college', 'Atta first met and when'], 'correctoptions-7': ['biochemist, president of world Zionist organization', 'punishment'], 'incorrectoptions-7': ['president of Israel', 'the safety'], 'correctoptions-8': ['Institutes of agricultrure, chemistry, and mcrobiology', 'became a close'], 'incorrectoptions-8': ['raised money', 'mistakes besides'], 'correctoptions-9': ['exploration of the country', 'identified'], 'incorrectoptions-9': ['raising money', 'realize'], 'hiddenName': ['{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-0
Executing one action: self.actions.modify_text('correctoptions-0', 'Albert Einstein')
Add text `Albert Einstein` to this text input: <input type="text" name="correctoptions-0">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-0
Executing one action: self.actions.modify_text('incorrectoptions-0', 'Chaim Weizmann // Abba Eban // David Ben-Gurion')
Add text `Chaim Weizmann // Abba Eban // David Ben-Gurion` to this text input: <input type="text" name="incorrectoptions-0">
 - - - - - -  starting a new element: `Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-1
Executing one action: self.actions.modify_text('correctoptions-1', 'deeply moved//saddened and ashamed')
self.actions.modify_text('incorrectoptions-1', 'utterly joyous//completely indifferent')
Add text `deeply moved//saddened and ashamed` to this text input: <input type="text" name="correctoptions-1">
Add text `utterly joyous//completely indifferent` to this text input: <input type="text" name="incorrectoptions-1">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-1
Executing one action: self.actions.modify_text('incorrectoptions-1', 'Overwhelmed with joy//Felt indifferent//Regretted his entire career')
Add text `Overwhelmed with joy//Felt indifferent//Regretted his entire career` to this text input: <input type="text" name="incorrectoptions-1" value="utterly joyous//completely indifferent">
 - - - - - -  starting a new element: `Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-2
Executing one action: self.actions.modify_text('correctoptions-2', 'By fundraising and advising on initial programs // Through his involvement in fundraising and suggesting initial academic programs')
self.actions.modify_text('incorrectoptions-2', 'By teaching the first class // Creating its first science laboratory')
Add text `By fundraising and advising on initial programs // Through his involvement in fundraising and suggesting initial academic programs` to this text input: <input type="text" name="correctoptions-2">
Add text `By teaching the first class // Creating its first science laboratory` to this text input: <input type="text" name="incorrectoptions-2">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-2
Executing one action: self.actions.modify_text('incorrectoptions-2', 'Raised funds individually // Contributed as a student // Offered scientific advice')
Add text `Raised funds individually // Contributed as a student // Offered scientific advice` to this text input: <input type="text" name="incorrectoptions-2" value="By teaching the first class // Creating its first science laboratory">
 - - - - - -  starting a new element: `Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-3
Executing one action: self.actions.modify_text('correctoptions-3', 'Einstein')
self.actions.modify_text('incorrectoptions-3', 'Chaim Weizmann // David Ben-Gurion // Abba Eban')
Add text `Einstein` to this text input: <input type="text" name="correctoptions-3">
Add text `Chaim Weizmann // David Ben-Gurion // Abba Eban` to this text input: <input type="text" name="incorrectoptions-3">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-3
Executing one action: self.actions.modify_text('incorrectoptions-3', 'Prime Minister of the United Kingdom // University Dean // Mayor of Jerusalem')
Add text `Prime Minister of the United Kingdom // University Dean // Mayor of Jerusalem` to this text input: <input type="text" name="incorrectoptions-3" value="Chaim Weizmann // David Ben-Gurion // Abba Eban">
 - - - - - -  starting a new element: `Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-4
Executing one action: self.actions.modify_text('correctoptions-4', 'Abba Eban')
self.actions.modify_text('incorrectoptions-4', 'Chaim Weizmann//David Ben-Gurion//Ezriel Carlebach')
Add text `Abba Eban` to this text input: <input type="text" name="correctoptions-4">
Add text `Chaim Weizmann//David Ben-Gurion//Ezriel Carlebach` to this text input: <input type="text" name="incorrectoptions-4">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-4
Executing one action: self.actions.modify_text('incorrectoptions-4', 'Benjamin Franklin // Nikola Tesla // Isaac Newton')
Add text `Benjamin Franklin // Nikola Tesla // Isaac Newton` to this text input: <input type="text" name="incorrectoptions-4" value="Chaim Weizmann//David Ben-Gurion//Ezriel Carlebach">
 - - - - - -  starting a new element: `Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-5
Executing one action: self.actions.modify_text('correctoptions-5', 'Albert Einstein')
self.actions.modify_text('incorrectoptions-5', 'David Ben-Gurion // Chaim Weizmann // Abba Eban')
Add text `Albert Einstein` to this text input: <input type="text" name="correctoptions-5">
Add text `David Ben-Gurion // Chaim Weizmann // Abba Eban` to this text input: <input type="text" name="incorrectoptions-5">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-5
Executing one action: self.actions.modify_text('incorrectoptions-5', 'Marie Curie//Thomas Edison//Nikola Tesla')
Add text `Marie Curie//Thomas Edison//Nikola Tesla` to this text input: <input type="text" name="incorrectoptions-5" value="David Ben-Gurion // Chaim Weizmann // Abba Eban">
 - - - - - -  starting a new element: `Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-6
Executing one action: self.actions.modify_text('correctoptions-6', 'Einstein')
self.actions.modify_text('incorrectoptions-6', 'Chaim Weizmann // David Ben-Gurion // Abba Eban')
Add text `Einstein` to this text input: <input type="text" name="correctoptions-6">
Add text `Chaim Weizmann // David Ben-Gurion // Abba Eban` to this text input: <input type="text" name="incorrectoptions-6">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-6
Executing one action: self.actions.modify_text('incorrectoptions-6', 'Prime Minister // University President // Mayor of Jerusalem')
Add text `Prime Minister // University President // Mayor of Jerusalem` to this text input: <input type="text" name="incorrectoptions-6" value="Chaim Weizmann // David Ben-Gurion // Abba Eban">
 - - - - - -  starting a new element: `Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-7
Executing one action: self.actions.modify_text('correctoptions-7', 'President of Israel // Head of the World Zionist Organization')
self.actions.modify_text('incorrectoptions-7', 'Prime Minister of Israel // Chief Rabbi of Jerusalem')
Add text `President of Israel // Head of the World Zionist Organization` to this text input: <input type="text" name="correctoptions-7">
Add text `Prime Minister of Israel // Chief Rabbi of Jerusalem` to this text input: <input type="text" name="incorrectoptions-7">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-7
Executing one action: self.actions.modify_text('incorrectoptions-7', 'Prime Minister // University Dean // Head of Zionist Organization')
Add text `Prime Minister // University Dean // Head of Zionist Organization` to this text input: <input type="text" name="incorrectoptions-7" value="Prime Minister of Israel // Chief Rabbi of Jerusalem">
 - - - - - -  starting a new element: `Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-8
Executing one action: self.actions.modify_text('correctoptions-8', 'Helping with fund-raising // Advise on initial programs // Suggesting the establishment of specific institutes')
self.actions.modify_text('incorrectoptions-8', 'Teaching courses at the university // Designing the university logo // Direct involvement in construction')
Add text `Helping with fund-raising // Advise on initial programs // Suggesting the establishment of specific institutes` to this text input: <input type="text" name="correctoptions-8">
Add text `Teaching courses at the university // Designing the university logo // Direct involvement in construction` to this text input: <input type="text" name="incorrectoptions-8">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-8
Executing one action: self.actions.modify_text('incorrectoptions-8', 'Initiating a sports program // Adding a music department // Establishing a law school')
Add text `Initiating a sports program // Adding a music department // Establishing a law school` to this text input: <input type="text" name="incorrectoptions-8" value="Teaching courses at the university // Designing the university logo // Direct involvement in construction">
 - - - - - -  starting a new element: `Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-9
Executing one action: self.actions.modify_text('correctoptions-9', 'Settling undeveloped land through Agriculture // Addressing malaria and other epidemics // Promoting Oriental Studies for scientific exploration')
self.actions.modify_text('incorrectoptions-9', 'Establishing a sports team // Opening a new hospital // Creating a space research institute')
Add text `Settling undeveloped land through Agriculture // Addressing malaria and other epidemics // Promoting Oriental Studies for scientific exploration` to this text input: <input type="text" name="correctoptions-9">
Add text `Establishing a sports team // Opening a new hospital // Creating a space research institute` to this text input: <input type="text" name="incorrectoptions-9">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-9
Executing one action: self.actions.modify_text('incorrectoptions-9', 'Fighting tuberculosis // Establishing a theatre arts program // Building a new sports complex')
Add text `Fighting tuberculosis // Establishing a theatre arts program // Building a new sports complex` to this text input: <input type="text" name="incorrectoptions-9" value="Establishing a sports team // Opening a new hospital // Creating a space research institute">
 - - - - - -  starting a new element: `Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
Skipping element `hiddenName` since it is not visible.
input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Albert Einstein']
 visible_values : ['Albert Einstein']
input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Chaim Weizmann // Abba Eban // David Ben-Gurion']
 visible_values : ['Chaim Weizmann // Abba Eban // David Ben-Gurion']
input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['deeply moved//saddened and ashamed']
 visible_values : ['deeply moved//saddened and ashamed']
input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Overwhelmed with joy//Felt indifferent//Regretted his entire career']
 visible_values : ['Overwhelmed with joy//Felt indifferent//Regretted his entire career']
input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['By fundraising and advising on initial programs // Through his involvement in fundraising and suggesting initial academic programs']
 visible_values : ['By fundraising and advising on initial programs // Through his involvement in fundraising and suggesting initial academic programs']
input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Raised funds individually // Contributed as a student // Offered scientific advice']
 visible_values : ['Raised funds individually // Contributed as a student // Offered scientific advice']
input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Einstein']
 visible_values : ['Einstein']
input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Prime Minister of the United Kingdom // University Dean // Mayor of Jerusalem']
 visible_values : ['Prime Minister of the United Kingdom // University Dean // Mayor of Jerusalem']
input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Abba Eban']
 visible_values : ['Abba Eban']
input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Benjamin Franklin // Nikola Tesla // Isaac Newton']
 visible_values : ['Benjamin Franklin // Nikola Tesla // Isaac Newton']
input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Albert Einstein']
 visible_values : ['Albert Einstein']
input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Marie Curie//Thomas Edison//Nikola Tesla']
 visible_values : ['Marie Curie//Thomas Edison//Nikola Tesla']
input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Einstein']
 visible_values : ['Einstein']
input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Prime Minister // University President // Mayor of Jerusalem']
 visible_values : ['Prime Minister // University President // Mayor of Jerusalem']
input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['President of Israel // Head of the World Zionist Organization']
 visible_values : ['President of Israel // Head of the World Zionist Organization']
input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Prime Minister // University Dean // Head of Zionist Organization']
 visible_values : ['Prime Minister // University Dean // Head of Zionist Organization']
input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Helping with fund-raising // Advise on initial programs // Suggesting the establishment of specific institutes']
 visible_values : ['Helping with fund-raising // Advise on initial programs // Suggesting the establishment of specific institutes']
input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Initiating a sports program // Adding a music department // Establishing a law school']
 visible_values : ['Initiating a sports program // Adding a music department // Establishing a law school']
input: Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Settling undeveloped land through Agriculture // Addressing malaria and other epidemics // Promoting Oriental Studies for scientific exploration']
 visible_values : ['Settling undeveloped land through Agriculture // Addressing malaria and other epidemics // Promoting Oriental Studies for scientific exploration']
input: Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Fighting tuberculosis // Establishing a theatre arts program // Building a new sports complex']
 visible_values : ['Fighting tuberculosis // Establishing a theatre arts program // Building a new sports complex']
input: Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : [None]
 visible_values : [None]
 ------- evaluating input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Einstein', 'Bin Ladin']`
----> answers: `['Einstein', 'Bin Ladin']` - type: `<class 'list'>`
----> baseline_answer: `Albert Einstein` - type: `<class 'str'>`
 --> scores:  0.6666666666666666
----> per-field score: 0.6666666666666666
 ------- evaluating input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['David Ben-Gurion', 'airspace at 9:10']`
----> answers: `['airspace at 9:10', 'David Ben-Gurion']` - type: `<class 'list'>`
----> baseline_answer: `Chaim Weizmann // Abba Eban // David Ben-Gurion` - type: `<class 'str'>`
 --> scores:  0.6
----> per-field score: 0.6
 ------- evaluating input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['deeply moved', 'Command Center']`
----> answers: `['deeply moved', 'Command Center']` - type: `<class 'list'>`
----> baseline_answer: `deeply moved//saddened and ashamed` - type: `<class 'str'>`
 --> scores:  0.5714285714285715
----> per-field score: 0.5714285714285715
 ------- evaluating input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['happy', 'concerned']`
----> answers: `['concerned', 'happy']` - type: `<class 'list'>`
----> baseline_answer: `Overwhelmed with joy//Felt indifferent//Regretted his entire career` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['raised funds', 'California']`
----> answers: `['California', 'raised funds']` - type: `<class 'list'>`
----> baseline_answer: `By fundraising and advising on initial programs // Through his involvement in fundraising and suggesting initial academic programs` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['sold the land', 'terrorist']`
----> answers: `['terrorist', 'sold the land']` - type: `<class 'list'>`
----> baseline_answer: `Raised funds individually // Contributed as a student // Offered scientific advice` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['President of Israel', 'American 77']`
----> answers: `['American 77', 'President of Israel']` - type: `<class 'list'>`
----> baseline_answer: `Einstein` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['University Chairman', 'considered']`
----> answers: `['considered', 'University Chairman']` - type: `<class 'list'>`
----> baseline_answer: `Prime Minister of the United Kingdom // University Dean // Mayor of Jerusalem` - type: `<class 'str'>`
 --> scores:  0.15384615384615385
----> per-field score: 0.15384615384615385
 ------- evaluating input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['David Ben-Gurion', 'Bin Ladin']`
----> answers: `['Bin Ladin', 'David Ben-Gurion']` - type: `<class 'list'>`
----> baseline_answer: `Abba Eban` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Carlebach', 'leave Yemen']`
----> answers: `['leave Yemen', 'Carlebach']` - type: `<class 'list'>`
----> baseline_answer: `Benjamin Franklin // Nikola Tesla // Isaac Newton` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Einstein', 'take place']`
----> answers: `['Einstein', 'take place']` - type: `<class 'list'>`
----> baseline_answer: `Albert Einstein` - type: `<class 'str'>`
 --> scores:  0.6666666666666666
----> per-field score: 0.6666666666666666
 ------- evaluating input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['David Ben-Gurion', 'lived in Germany']`
----> answers: `['lived in Germany', 'David Ben-Gurion']` - type: `<class 'list'>`
----> baseline_answer: `Marie Curie//Thomas Edison//Nikola Tesla` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['President of Israel (not accepted)', 'influenced']`
----> answers: `['President of Israel (not accepted)', 'influenced']` - type: `<class 'list'>`
----> baseline_answer: `Einstein` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Dean of college', 'Atta first met and when']`
----> answers: `['Atta first met and when', 'Dean of college']` - type: `<class 'list'>`
----> baseline_answer: `Prime Minister // University President // Mayor of Jerusalem` - type: `<class 'str'>`
 --> scores:  0.2
----> per-field score: 0.2
 ------- evaluating input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['biochemist, president of world Zionist organization', 'punishment']`
----> answers: `['punishment', 'biochemist, president of world Zionist organization']` - type: `<class 'list'>`
----> baseline_answer: `President of Israel // Head of the World Zionist Organization` - type: `<class 'str'>`
 --> scores:  0.6666666666666667
----> per-field score: 0.6666666666666667
 ------- evaluating input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['president of Israel', 'the safety']`
----> answers: `['the safety', 'president of Israel']` - type: `<class 'list'>`
----> baseline_answer: `Prime Minister // University Dean // Head of Zionist Organization` - type: `<class 'str'>`
 --> scores:  0.18181818181818182
----> per-field score: 0.18181818181818182
 ------- evaluating input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Institutes of agricultrure, chemistry, and mcrobiology', 'became a close']`
----> answers: `['Institutes of agricultrure, chemistry, and mcrobiology', 'became a close']` - type: `<class 'list'>`
----> baseline_answer: `Helping with fund-raising // Advise on initial programs // Suggesting the establishment of specific institutes` - type: `<class 'str'>`
 --> scores:  0.1
----> per-field score: 0.1
 ------- evaluating input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['raised money', 'mistakes besides']`
----> answers: `['raised money', 'mistakes besides']` - type: `<class 'list'>`
----> baseline_answer: `Initiating a sports program // Adding a music department // Establishing a law school` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['exploration of the country', 'identified']`
----> answers: `['identified', 'exploration of the country']` - type: `<class 'list'>`
----> baseline_answer: `Settling undeveloped land through Agriculture // Addressing malaria and other epidemics // Promoting Oriental Studies for scientific exploration` - type: `<class 'str'>`
 --> scores:  0.1
----> per-field score: 0.1
 ------- evaluating input: Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['raising money', 'realize']`
----> answers: `['realize', 'raising money']` - type: `<class 'list'>`
----> baseline_answer: `Fighting tuberculosis // Establishing a theatre arts program // Building a new sports complex` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
Skipping element `hiddenName` since it is not visible.
 --> Per-instance overall score: 0.19535464535464536
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6666666666666666, 0.4, 0.8, 0.28571428571428575, 1.0, 0.0, 0.22222222222222224, 0.0, 0.33333333333333337, 0.0, 0.2641509433962264, 0.0, 0.0, 0.0, 0.27906976744186046, 0.2105263157894737, 0.6666666666666666, 0.3636363636363636, 1.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.5, 1.0, 0.2222222222222222, 1.0, 0.11764705882352941, 0.0, 0.25, 0.5, 0.33333333333333337, 1.0, 0.0, 1.0, 0.2222222222222222, 0.4, 0.33333333333333337, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.4444444444444445, 0.4444444444444445, 0.4615384615384615, 1.0, 0.2, 1.0, 0.0, 0.4444444444444444, 0.1, 0.15789473684210528, 0.13333333333333333, 0.5, 0.16666666666666666, 0.4444444444444445, 0.22222222222222224, 0.5, 0.0, 0.14285714285714288, 0.1818181818181818, 0.16666666666666666, 0.0, 0.5, 0.0, 0.6666666666666666, 0.14285714285714288, 0.3333333333333333, 0.13333333333333333, 0.08333333333333334, 0.1, 0.4, 0.0, 0.6666666666666666, 0.0, 1.0, 0.0, 0.2727272727272727, 0.15384615384615383, 0.0, 0.22222222222222224, 0.41379310344827586, 0.10526315789473684, 0.6666666666666666, 0.0, 0.5806451612903225, 0.11428571428571428, 0.923076923076923, 0.06451612903225806, 0.7272727272727273, 0.0, 0.22222222222222224, 0.17142857142857143, 0.4444444444444444, 0.20833333333333334, 0.10526315789473682, 0.05555555555555556, 0.5833333333333334, 0.07017543859649122, 0.08695652173913043, 0.14634146341463417, 0.125, 0.05714285714285714, 0.8, 0.13333333333333333, 0.0, 0.0, 1.0, 0.13333333333333333, 0.22222222222222224, 0.3448275862068966, 0.35294117647058826, 0.10256410256410257, 0.0, 0.10810810810810811, 0.25, 0.4800000000000001, 0.11764705882352941, 0.24390243902439024, 0.6666666666666666, 0.6, 0.5714285714285715, 0.0, 0.0, 0.0, 0.0, 0.15384615384615385, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.2, 0.6666666666666667, 0.18181818181818182, 0.1, 0.0, 0.1, 0.0]}
instance_id: 34746 <-> row_number: 11
Could not find input field with name `correctoptions-10`
Could not find input field with name `correctoptions-11`
Could not find input field with name `correctoptions-12`
Could not find input field with name `correctoptions-13`
Could not find input field with name `correctoptions-14`
Could not find input field with name `correctoptions-15`
Could not find input field with name `correctoptions-16`
Could not find input field with name `correctoptions-17`
Could not find input field with name `correctoptions-18`
Could not find input field with name `correctoptions-19`
Could not find input field with name `correctoptions-20`
Could not find input field with name `correctoptions-21`
Could not find input field with name `correctoptions-22`
Could not find input field with name `correctoptions-9`
Could not find input field with name `incorrectoptions-10`
Could not find input field with name `incorrectoptions-11`
Could not find input field with name `incorrectoptions-12`
Could not find input field with name `incorrectoptions-13`
Could not find input field with name `incorrectoptions-14`
Could not find input field with name `incorrectoptions-15`
Could not find input field with name `incorrectoptions-16`
Could not find input field with name `incorrectoptions-17`
Could not find input field with name `incorrectoptions-18`
Could not find input field with name `incorrectoptions-19`
Could not find input field with name `incorrectoptions-20`
Could not find input field with name `incorrectoptions-21`
Could not find input field with name `incorrectoptions-22`
Could not find input field with name `incorrectoptions-9`
 --> inputs: ['correctoptions-0', 'incorrectoptions-0', 'correctoptions-1', 'incorrectoptions-1', 'correctoptions-2', 'incorrectoptions-2', 'correctoptions-3', 'incorrectoptions-3', 'correctoptions-4', 'incorrectoptions-4', 'correctoptions-5', 'incorrectoptions-5', 'correctoptions-6', 'incorrectoptions-6', 'correctoptions-7', 'incorrectoptions-7', 'correctoptions-8', 'incorrectoptions-8', 'hiddenName']
 --> Looking up gold labels from row index 11 of `input.csv` (unique inputs). 
 --> input labels: {'correctoptions-0': ['The Shehri brothers', 'Shehhi brothers//Atta'], 'incorrectoptions-0': ['Shehhi', 'Hijackers//Boston'], 'correctoptions-1': ['Suqami, Wail al Shehri, and Waleed al Shehri, Atta and Omari', 'Atta//Omari//Suqami//Shehhi brothers'], 'incorrectoptions-1': ['The Shehri brothers, Atta, and Khalid al Mihdhar and Majed Moqed', 'X-ray machine//Washington'], 'correctoptions-2': ['seats 8D, 8G, and 10B as well as Wail in 2A, Waleed in 2B', '8D//8G//10B//2A/2B'], 'incorrectoptions-2': ['2A, 2B, 6C, 9C, 9D', '7:31//7:40'], 'correctoptions-3': ['Khalid al Mihdhar and Majed Moqed', 'Khalid al Mihdhar//Majed Moqed'], 'incorrectoptions-3': ['The Shehri brothers', 'Hamza al Ghamdi//Ahmed al Ghamdi'], 'correctoptions-4': ['American 11', 'American 11'], 'incorrectoptions-4': ['American 77', 'American 77/Flight 77'], 'correctoptions-5': ['x ray machine, hand wand procedure, and metal detector', 'Walk through metal detector//hand wand//X-ray machine'], 'incorrectoptions-5': ['Bomb detector, metal detector, x ray machine', 'handgun//alarm'], 'correctoptions-6': ['Hijacking', 'hijacking'], 'incorrectoptions-6': ['killing', 'business trip'], 'correctoptions-7': ['7:40', '7:40'], 'incorrectoptions-7': ['8:00', '7:23/7:28'], 'correctoptions-8': ['seats 8D, 8G, and 10B as well as Wail in 2A, Waleed in 2B', '8D//8G//10B//2A/2B'], 'incorrectoptions-8': ['2A, 2B, 6C, 9C, 9D', '6C//9C//9D'], 'hiddenName': ['{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-0
Executing one action: self.actions.modify_text('correctoptions-0', 'Atta, Omari, and Suqami // Wail al Shehri and Waleed al Shehri')
Add text `Atta, Omari, and Suqami // Wail al Shehri and Waleed al Shehri` to this text input: <input type="text" name="correctoptions-0">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-0
Executing one action: self.actions.modify_text('incorrectoptions-0', 'Tom's older cousin // Art Museum of Chicago')
Failed to execute an action self.actions.modify_text('incorrectoptions-0', 'Tom's older cousin // Art Museum of Chicago'), error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-1
Executing one action: self.actions.modify_text('correctoptions-1', 'Atta, Omari, Suqami, Wail al Shehri, Waleed al Shehri')
Add text `Atta, Omari, Suqami, Wail al Shehri, Waleed al Shehri` to this text input: <input type="text" name="correctoptions-1">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-1
Executing one action: self.actions.modify_text('incorrectoptions-1', 'Tom // Jerry // Alex')
Add text `Tom // Jerry // Alex` to this text input: <input type="text" name="incorrectoptions-1">
 - - - - - -  starting a new element: `Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-2
Executing one action: self.actions.modify_text('correctoptions-2', 'Atta, Omari, Suqami, Wail al Shehri, Waleed al Shehri')
self.actions.modify_text('incorrectoptions-2', 'Khalid al Mihdhar, Majed Moqed, Hani Hanjour, Nawaf al Hazmi, Salem al Hazmi')
Add text `Atta, Omari, Suqami, Wail al Shehri, Waleed al Shehri` to this text input: <input type="text" name="correctoptions-2">
Add text `Khalid al Mihdhar, Majed Moqed, Hani Hanjour, Nawaf al Hazmi, Salem al Hazmi` to this text input: <input type="text" name="incorrectoptions-2">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-2
Executing one action: self.actions.modify_text('incorrectoptions-2', '8G // 2A // 9D // 6C')
Add text `8G // 2A // 9D // 6C` to this text input: <input type="text" name="incorrectoptions-2" value="Khalid al Mihdhar, Majed Moqed, Hani Hanjour, Nawaf al Hazmi, Salem al Hazmi">
 - - - - - -  starting a new element: `Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-3
Executing one action: self.actions.modify_text('correctoptions-3', 'Khalid al Mihdhar // Majed Moqed')
self.actions.modify_text('incorrectoptions-3', 'Hani Hanjour // Nawaf al Hazmi // Salem al Hazmi')
Add text `Khalid al Mihdhar // Majed Moqed` to this text input: <input type="text" name="correctoptions-3">
Add text `Hani Hanjour // Nawaf al Hazmi // Salem al Hazmi` to this text input: <input type="text" name="incorrectoptions-3">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-3
Executing one action: self.actions.modify_text('incorrectoptions-3', 'Atta and Omari // Nawaf al Hazmi // Khalid al Mihdhar and Majed Moqed')
Add text `Atta and Omari // Nawaf al Hazmi // Khalid al Mihdhar and Majed Moqed` to this text input: <input type="text" name="incorrectoptions-3" value="Hani Hanjour // Nawaf al Hazmi // Salem al Hazmi">
 - - - - - -  starting a new element: `Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-4
Executing one action: self.actions.modify_text('correctoptions-4', 'American 11')
self.actions.modify_text('incorrectoptions-4', 'United 175 // American 77 // Flight 93')
Add text `American 11` to this text input: <input type="text" name="correctoptions-4">
Add text `United 175 // American 77 // Flight 93` to this text input: <input type="text" name="incorrectoptions-4">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-4
Executing one action: self.actions.modify_text('incorrectoptions-4', 'United 175 // American 77 // Delta 89')
Add text `United 175 // American 77 // Delta 89` to this text input: <input type="text" name="incorrectoptions-4" value="United 175 // American 77 // Flight 93">
 - - - - - -  starting a new element: `Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-5
Executing one action: self.actions.modify_text('correctoptions-5', 'Walk-through metal detector//Hand wand//X-ray machine')
self.actions.modify_text('incorrectoptions-5', 'Full-body scanner//Thermal imaging camera//Biometric recognition system')
Add text `Walk-through metal detector//Hand wand//X-ray machine` to this text input: <input type="text" name="correctoptions-5">
Add text `Full-body scanner//Thermal imaging camera//Biometric recognition system` to this text input: <input type="text" name="incorrectoptions-5">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-5
Executing one action: self.actions.modify_text('incorrectoptions-5', 'Metal detectors//X-ray machines//Hand wands')
Add text `Metal detectors//X-ray machines//Hand wands` to this text input: <input type="text" name="incorrectoptions-5" value="Full-body scanner//Thermal imaging camera//Biometric recognition system">
 - - - - - -  starting a new element: `Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-6
Executing one action: self.actions.modify_text('correctoptions-6', 'Atta//Omari')
self.actions.modify_text('incorrectoptions-6', 'Suqami//Banihammad//Shehri')
Add text `Atta//Omari` to this text input: <input type="text" name="correctoptions-6">
Add text `Suqami//Banihammad//Shehri` to this text input: <input type="text" name="incorrectoptions-6">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-6
Executing one action: self.actions.modify_text('incorrectoptions-6', 'Booking a leisure tour // Attending a flight safety seminar')
Add text `Booking a leisure tour // Attending a flight safety seminar` to this text input: <input type="text" name="incorrectoptions-6" value="Suqami//Banihammad//Shehri">
 - - - - - -  starting a new element: `Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-7
Executing one action: self.actions.modify_text('correctoptions-7', '7:40')
self.actions.modify_text('incorrectoptions-7', '7:50 // 8:00 // 7:30')
Add text `7:40` to this text input: <input type="text" name="correctoptions-7">
Add text `7:50 // 8:00 // 7:30` to this text input: <input type="text" name="incorrectoptions-7">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-7
Executing one action: self.actions.modify_text('incorrectoptions-7', '7:45 // 7:50 // 7:35')
Add text `7:45 // 7:50 // 7:35` to this text input: <input type="text" name="incorrectoptions-7" value="7:50 // 8:00 // 7:30">
 - - - - - -  starting a new element: `Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-8
Executing one action: self.actions.modify_text('correctoptions-8', '8D // 8G // 10B // 2A // 2B')
self.actions.modify_text('incorrectoptions-8', '3C // 3D // 5A // 5B // 7C')
Add text `8D // 8G // 10B // 2A // 2B` to this text input: <input type="text" name="correctoptions-8">
Add text `3C // 3D // 5A // 5B // 7C` to this text input: <input type="text" name="incorrectoptions-8">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-8
Executing one action: self.actions.modify_text('incorrectoptions-8', '8C // 10A // 2C // 2D // 9E')
Add text `8C // 10A // 2C // 2D // 9E` to this text input: <input type="text" name="incorrectoptions-8" value="3C // 3D // 5A // 5B // 7C">
 - - - - - -  starting a new element: `Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
Skipping element `hiddenName` since it is not visible.
input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Atta, Omari, and Suqami // Wail al Shehri and Waleed al Shehri']
 visible_values : ['Atta, Omari, and Suqami // Wail al Shehri and Waleed al Shehri']
input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : [None]
 visible_values : [None]
input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Atta, Omari, Suqami, Wail al Shehri, Waleed al Shehri']
 visible_values : ['Atta, Omari, Suqami, Wail al Shehri, Waleed al Shehri']
input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Tom // Jerry // Alex']
 visible_values : ['Tom // Jerry // Alex']
input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Atta, Omari, Suqami, Wail al Shehri, Waleed al Shehri']
 visible_values : ['Atta, Omari, Suqami, Wail al Shehri, Waleed al Shehri']
input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['8G // 2A // 9D // 6C']
 visible_values : ['8G // 2A // 9D // 6C']
input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Khalid al Mihdhar // Majed Moqed']
 visible_values : ['Khalid al Mihdhar // Majed Moqed']
input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Atta and Omari // Nawaf al Hazmi // Khalid al Mihdhar and Majed Moqed']
 visible_values : ['Atta and Omari // Nawaf al Hazmi // Khalid al Mihdhar and Majed Moqed']
input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['American 11']
 visible_values : ['American 11']
input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['United 175 // American 77 // Delta 89']
 visible_values : ['United 175 // American 77 // Delta 89']
input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Walk-through metal detector//Hand wand//X-ray machine']
 visible_values : ['Walk-through metal detector//Hand wand//X-ray machine']
input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Metal detectors//X-ray machines//Hand wands']
 visible_values : ['Metal detectors//X-ray machines//Hand wands']
input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Atta//Omari']
 visible_values : ['Atta//Omari']
input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Booking a leisure tour // Attending a flight safety seminar']
 visible_values : ['Booking a leisure tour // Attending a flight safety seminar']
input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['7:40']
 visible_values : ['7:40']
input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['7:45 // 7:50 // 7:35']
 visible_values : ['7:45 // 7:50 // 7:35']
input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['8D // 8G // 10B // 2A // 2B']
 visible_values : ['8D // 8G // 10B // 2A // 2B']
input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['8C // 10A // 2C // 2D // 9E']
 visible_values : ['8C // 10A // 2C // 2D // 9E']
input: Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : [None]
 visible_values : [None]
 ------- evaluating input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['The Shehri brothers', 'Shehhi brothers//Atta']`
----> answers: `['The Shehri brothers', 'Shehhi brothers//Atta']` - type: `<class 'list'>`
----> baseline_answer: `Atta, Omari, and Suqami // Wail al Shehri and Waleed al Shehri` - type: `<class 'str'>`
 --> scores:  0.14285714285714288
----> per-field score: 0.14285714285714288
 ------- evaluating input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Shehhi', 'Hijackers//Boston']`
----> answers: `['Hijackers//Boston', 'Shehhi']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Suqami, Wail al Shehri, and Waleed al Shehri, Atta and Omari', 'Atta//Omari//Suqami//Shehhi brothers']`
----> answers: `['Suqami, Wail al Shehri, and Waleed al Shehri, Atta and Omari', 'Atta//Omari//Suqami//Shehhi brothers']` - type: `<class 'list'>`
----> baseline_answer: `Atta, Omari, Suqami, Wail al Shehri, Waleed al Shehri` - type: `<class 'str'>`
 --> scores:  0.7000000000000001
----> per-field score: 0.7000000000000001
 ------- evaluating input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['The Shehri brothers, Atta, and Khalid al Mihdhar and Majed Moqed', 'X-ray machine//Washington']`
----> answers: `['The Shehri brothers, Atta, and Khalid al Mihdhar and Majed Moqed', 'X-ray machine//Washington']` - type: `<class 'list'>`
----> baseline_answer: `Tom // Jerry // Alex` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['seats 8D, 8G, and 10B as well as Wail in 2A, Waleed in 2B', '8D//8G//10B//2A/2B']`
----> answers: `['8D//8G//10B//2A/2B', 'seats 8D, 8G, and 10B as well as Wail in 2A, Waleed in 2B']` - type: `<class 'list'>`
----> baseline_answer: `Atta, Omari, Suqami, Wail al Shehri, Waleed al Shehri` - type: `<class 'str'>`
 --> scores:  0.17391304347826086
----> per-field score: 0.17391304347826086
 ------- evaluating input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['2A, 2B, 6C, 9C, 9D', '7:31//7:40']`
----> answers: `['2A, 2B, 6C, 9C, 9D', '7:31//7:40']` - type: `<class 'list'>`
----> baseline_answer: `8G // 2A // 9D // 6C` - type: `<class 'str'>`
 --> scores:  0.4444444444444445
----> per-field score: 0.4444444444444445
 ------- evaluating input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Khalid al Mihdhar and Majed Moqed', 'Khalid al Mihdhar//Majed Moqed']`
----> answers: `['Khalid al Mihdhar//Majed Moqed', 'Khalid al Mihdhar and Majed Moqed']` - type: `<class 'list'>`
----> baseline_answer: `Khalid al Mihdhar // Majed Moqed` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['The Shehri brothers', 'Hamza al Ghamdi//Ahmed al Ghamdi']`
----> answers: `['The Shehri brothers', 'Hamza al Ghamdi//Ahmed al Ghamdi']` - type: `<class 'list'>`
----> baseline_answer: `Atta and Omari // Nawaf al Hazmi // Khalid al Mihdhar and Majed Moqed` - type: `<class 'str'>`
 --> scores:  0.2222222222222222
----> per-field score: 0.2222222222222222
 ------- evaluating input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['American 11', 'American 11']`
----> answers: `['American 11']` - type: `<class 'list'>`
----> baseline_answer: `American 11` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['American 77', 'American 77/Flight 77']`
----> answers: `['American 77/Flight 77', 'American 77']` - type: `<class 'list'>`
----> baseline_answer: `United 175 // American 77 // Delta 89` - type: `<class 'str'>`
 --> scores:  0.5
----> per-field score: 0.5
 ------- evaluating input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['x ray machine, hand wand procedure, and metal detector', 'Walk through metal detector//hand wand//X-ray machine']`
----> answers: `['x ray machine, hand wand procedure, and metal detector', 'Walk through metal detector//hand wand//X-ray machine']` - type: `<class 'list'>`
----> baseline_answer: `Walk-through metal detector//Hand wand//X-ray machine` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Bomb detector, metal detector, x ray machine', 'handgun//alarm']`
----> answers: `['Bomb detector, metal detector, x ray machine', 'handgun//alarm']` - type: `<class 'list'>`
----> baseline_answer: `Metal detectors//X-ray machines//Hand wands` - type: `<class 'str'>`
 --> scores:  0.7142857142857143
----> per-field score: 0.7142857142857143
 ------- evaluating input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Hijacking', 'hijacking']`
----> answers: `['hijacking', 'Hijacking']` - type: `<class 'list'>`
----> baseline_answer: `Atta//Omari` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['killing', 'business trip']`
----> answers: `['business trip', 'killing']` - type: `<class 'list'>`
----> baseline_answer: `Booking a leisure tour // Attending a flight safety seminar` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['7:40', '7:40']`
----> answers: `['7:40']` - type: `<class 'list'>`
----> baseline_answer: `7:40` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['8:00', '7:23/7:28']`
----> answers: `['7:23/7:28', '8:00']` - type: `<class 'list'>`
----> baseline_answer: `7:45 // 7:50 // 7:35` - type: `<class 'str'>`
 --> scores:  0.4
----> per-field score: 0.4
 ------- evaluating input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['seats 8D, 8G, and 10B as well as Wail in 2A, Waleed in 2B', '8D//8G//10B//2A/2B']`
----> answers: `['8D//8G//10B//2A/2B', 'seats 8D, 8G, and 10B as well as Wail in 2A, Waleed in 2B']` - type: `<class 'list'>`
----> baseline_answer: `8D // 8G // 10B // 2A // 2B` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['2A, 2B, 6C, 9C, 9D', '6C//9C//9D']`
----> answers: `['2A, 2B, 6C, 9C, 9D', '6C//9C//9D']` - type: `<class 'list'>`
----> baseline_answer: `8C // 10A // 2C // 2D // 9E` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
Skipping element `hiddenName` since it is not visible.
 --> Per-instance overall score: 0.4609845870715436
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6666666666666666, 0.4, 0.8, 0.28571428571428575, 1.0, 0.0, 0.22222222222222224, 0.0, 0.33333333333333337, 0.0, 0.2641509433962264, 0.0, 0.0, 0.0, 0.27906976744186046, 0.2105263157894737, 0.6666666666666666, 0.3636363636363636, 1.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.5, 1.0, 0.2222222222222222, 1.0, 0.11764705882352941, 0.0, 0.25, 0.5, 0.33333333333333337, 1.0, 0.0, 1.0, 0.2222222222222222, 0.4, 0.33333333333333337, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.4444444444444445, 0.4444444444444445, 0.4615384615384615, 1.0, 0.2, 1.0, 0.0, 0.4444444444444444, 0.1, 0.15789473684210528, 0.13333333333333333, 0.5, 0.16666666666666666, 0.4444444444444445, 0.22222222222222224, 0.5, 0.0, 0.14285714285714288, 0.1818181818181818, 0.16666666666666666, 0.0, 0.5, 0.0, 0.6666666666666666, 0.14285714285714288, 0.3333333333333333, 0.13333333333333333, 0.08333333333333334, 0.1, 0.4, 0.0, 0.6666666666666666, 0.0, 1.0, 0.0, 0.2727272727272727, 0.15384615384615383, 0.0, 0.22222222222222224, 0.41379310344827586, 0.10526315789473684, 0.6666666666666666, 0.0, 0.5806451612903225, 0.11428571428571428, 0.923076923076923, 0.06451612903225806, 0.7272727272727273, 0.0, 0.22222222222222224, 0.17142857142857143, 0.4444444444444444, 0.20833333333333334, 0.10526315789473682, 0.05555555555555556, 0.5833333333333334, 0.07017543859649122, 0.08695652173913043, 0.14634146341463417, 0.125, 0.05714285714285714, 0.8, 0.13333333333333333, 0.0, 0.0, 1.0, 0.13333333333333333, 0.22222222222222224, 0.3448275862068966, 0.35294117647058826, 0.10256410256410257, 0.0, 0.10810810810810811, 0.25, 0.4800000000000001, 0.11764705882352941, 0.24390243902439024, 0.6666666666666666, 0.6, 0.5714285714285715, 0.0, 0.0, 0.0, 0.0, 0.15384615384615385, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.2, 0.6666666666666667, 0.18181818181818182, 0.1, 0.0, 0.1, 0.0, 0.14285714285714288, 0.0, 0.7000000000000001, 0.0, 0.17391304347826086, 0.4444444444444445, 1.0, 0.2222222222222222, 1.0, 0.5, 1.0, 0.7142857142857143, 0.0, 0.0, 1.0, 0.4, 1.0, 0.0]}
instance_id: 34782 <-> row_number: 47
Could not find input field with name `correctoptions-14`
Could not find input field with name `correctoptions-15`
Could not find input field with name `correctoptions-16`
Could not find input field with name `correctoptions-17`
Could not find input field with name `correctoptions-18`
Could not find input field with name `correctoptions-19`
Could not find input field with name `correctoptions-20`
Could not find input field with name `correctoptions-21`
Could not find input field with name `correctoptions-22`
Could not find input field with name `incorrectoptions-14`
Could not find input field with name `incorrectoptions-15`
Could not find input field with name `incorrectoptions-16`
Could not find input field with name `incorrectoptions-17`
Could not find input field with name `incorrectoptions-18`
Could not find input field with name `incorrectoptions-19`
Could not find input field with name `incorrectoptions-20`
Could not find input field with name `incorrectoptions-21`
Could not find input field with name `incorrectoptions-22`
 --> inputs: ['correctoptions-0', 'incorrectoptions-0', 'correctoptions-1', 'incorrectoptions-1', 'correctoptions-2', 'incorrectoptions-2', 'correctoptions-3', 'incorrectoptions-3', 'correctoptions-4', 'incorrectoptions-4', 'correctoptions-5', 'incorrectoptions-5', 'correctoptions-6', 'incorrectoptions-6', 'correctoptions-7', 'incorrectoptions-7', 'correctoptions-8', 'incorrectoptions-8', 'correctoptions-9', 'incorrectoptions-9', 'correctoptions-10', 'incorrectoptions-10', 'correctoptions-11', 'incorrectoptions-11', 'correctoptions-12', 'incorrectoptions-12', 'correctoptions-13', 'incorrectoptions-13', 'hiddenName']
 --> Looking up gold labels from row index 47 of `input.csv` (unique inputs). 
 --> input labels: {'correctoptions-0': ['The princess lived in a high tower she was not allowed to leave', 'Bin Ladin'], 'incorrectoptions-0': ['The princess lived in a palace // The princess lived in a castle with her father', 'airspace at 9:10'], 'correctoptions-1': ['The running man named John', "Compare Binalshibh's"], 'incorrectoptions-1': ['Her mean mother // Her father', "Atta's personalities."], 'correctoptions-2': ['Because the princess told her about her captivity', 'Reagan National Airport'], 'incorrectoptions-2': ['Because he was ordered to do so by the Queen // Because he wanted a reward', 'target that triggered'], 'correctoptions-3': ['Climbing up to the top of a tree', 'Binalshibh when'], 'incorrectoptions-3': ["After looking it up in a map // After climbing on John's shoulders", 'considered'], 'correctoptions-4': ['Because her mean mother did not allowed her to leave the tower she escaped climbing out the window', 'Binalshibh use'], 'incorrectoptions-4': ['Because she was bored in her castle she went out through the drawbridge // Because she needed to find a cure she climbed down the south wall', 'President'], 'correctoptions-5': ['His name was John and he was running', 'take place'], 'incorrectoptions-5': ['His name was Joss and he was sailing // His name was Sean and he was working', 'lived in Germany'], 'correctoptions-6': ['What was she doing in the middle of a forest, and she replied that she ran away from her mean mother', 'e passed between'], 'incorrectoptions-6': ['What did she plan to do and she replied that she wanted to visit the Queen // He asked her if she wanted to stay for dinner and she accepted', 'Atta first met and when'], 'correctoptions-7': ['Not far away from the castle they want to go, it took them days lost in the forest to find out', 'punishment'], 'incorrectoptions-7': ['They are in the border of the kingdom after a month journey // They are far from the castle after several weeks of journey through the forest', 'the safety'], 'correctoptions-8': ['The princess, her mother and John', 'became a close'], 'incorrectoptions-8': ['The princess, the King and the Queen // John and the Queen', 'friend of Binalshibh'], 'correctoptions-9': ['A mountain', 'concern'], 'incorrectoptions-9': ['A river // The seashore', 'Predator'], 'correctoptions-10': ['John', 'highest duty'], 'incorrectoptions-10': ['The king // The hunter', 'Muslim was'], 'correctoptions-11': ['Getting lost // They realize that they are lost and have no way of finding where to go', 'highest honor'], 'incorrectoptions-11': ['A giant mean bear // An impassable cliff', 'warhead'], 'correctoptions-12': ['By climbing on top of a tree', 'Binalshibh'], 'incorrectoptions-12': ["By using John's spyglass // By climbing on John's shoulders", 'CIA management'], 'correctoptions-13': ['After running away from the high tower she lived in // After escaping the tower and her mother and wandering out a good days', 'occupations'], 'incorrectoptions-13': ["After navigating the river with a boat // After following John's footprints", 'activities that'], 'hiddenName': ['{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-0
Executing one action: self.actions.modify_text('correctoptions-0', 'in the forest // at a place with no electric poles but some caves')
self.actions.modify_text('incorrectoptions-0', 'in her tower // at her mother’s house')
Add text `in the forest // at a place with no electric poles but some caves` to this text input: <input type="text" name="correctoptions-0">
Add text `in her tower // at her mother’s house` to this text input: <input type="text" name="incorrectoptions-0">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-0
Executing one action: self.actions.modify_text('incorrectoptions-0', 'In a castle surrounded by trees // In a modern city // On a distant island')
Add text `In a castle surrounded by trees // In a modern city // On a distant island` to this text input: <input type="text" name="incorrectoptions-0" value="in her tower // at her mother’s house">
 - - - - - -  starting a new element: `Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-1
Executing one action: self.actions.modify_text('correctoptions-1', 'John')
Add text `John` to this text input: <input type="text" name="correctoptions-1">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-1
Executing one action: self.actions.modify_text('incorrectoptions-1', 'The princess met a wise old woman // A talking frog guided her // She found her way alone')
Add text `The princess met a wise old woman // A talking frog guided her // She found her way alone` to this text input: <input type="text" name="incorrectoptions-1">
 - - - - - -  starting a new element: `Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-2
Executing one action: self.actions.modify_text('correctoptions-2', 'Because he thought she may be the missing princess.')
self.actions.modify_text('incorrectoptions-2', 'For a reward // Because he was lost too // To start a new adventure')
Add text `Because he thought she may be the missing princess.` to this text input: <input type="text" name="correctoptions-2">
Add text `For a reward // Because he was lost too // To start a new adventure` to this text input: <input type="text" name="incorrectoptions-2">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-2
Executing one action: self.actions.modify_text('incorrectoptions-2', 'Tom's older cousin // Art Museum of Chicago')
Failed to execute an action self.actions.modify_text('incorrectoptions-2', 'Tom's older cousin // Art Museum of Chicago'), error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-3
Executing one action: self.actions.modify_text('correctoptions-3', 'From the top of a tree')
self.actions.modify_text('incorrectoptions-3', 'Inside a dark cave // Through a telescope // At the entrance of the forest')
Add text `From the top of a tree` to this text input: <input type="text" name="correctoptions-3">
Add text `Inside a dark cave // Through a telescope // At the entrance of the forest` to this text input: <input type="text" name="incorrectoptions-3">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-3
Executing one action: self.actions.modify_text('incorrectoptions-3', 'In the woods nearby//Next to an ocean//Inside a dream')
Add text `In the woods nearby//Next to an ocean//Inside a dream` to this text input: <input type="text" name="incorrectoptions-3" value="Inside a dark cave // Through a telescope // At the entrance of the forest">
 - - - - - -  starting a new element: `Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-4
Executing one action: self.actions.modify_text('correctoptions-4', 'She escaped when her mother was sleeping//She climbed down the tower and ran into the forest')
self.actions.modify_text('incorrectoptions-4', 'She used a magic spell to teleport//She convinced her mother to let her go')
Add text `She escaped when her mother was sleeping//She climbed down the tower and ran into the forest` to this text input: <input type="text" name="correctoptions-4">
Add text `She used a magic spell to teleport//She convinced her mother to let her go` to this text input: <input type="text" name="incorrectoptions-4">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-4
Executing one action: self.actions.modify_text('incorrectoptions-4', 'In a small village just outside the kingdom // Inside a dark cave filled with goblins // At the top of an impossibly high mountain')
Add text `In a small village just outside the kingdom // Inside a dark cave filled with goblins // At the top of an impossibly high mountain` to this text input: <input type="text" name="incorrectoptions-4" value="She used a magic spell to teleport//She convinced her mother to let her go">
 - - - - - -  starting a new element: `Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-5
Executing one action: self.actions.modify_text('correctoptions-5', 'John')
Add text `John` to this text input: <input type="text" name="correctoptions-5">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-5
Executing one action: self.actions.modify_text('incorrectoptions-5', 'A local baker // A rabbit')
Add text `A local baker // A rabbit` to this text input: <input type="text" name="incorrectoptions-5">
 - - - - - -  starting a new element: `Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-6
Executing one action: self.actions.modify_text('correctoptions-6', 'John//The young man')
Add text `John//The young man` to this text input: <input type="text" name="correctoptions-6">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-6
Executing one action: self.actions.modify_text('incorrectoptions-6', 'He was searching for something // He was hunting')
Add text `He was searching for something // He was hunting` to this text input: <input type="text" name="incorrectoptions-6">
 - - - - - -  starting a new element: `Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-7
Executing one action: self.actions.modify_text('correctoptions-7', 'In the forest after several days // Near a mountain after climbing a tree to spot the castle')
self.actions.modify_text('incorrectoptions-7', 'In a village immediately // At the beach without any delay')
Add text `In the forest after several days // Near a mountain after climbing a tree to spot the castle` to this text input: <input type="text" name="correctoptions-7">
Add text `In a village immediately // At the beach without any delay` to this text input: <input type="text" name="incorrectoptions-7">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-7
Executing one action: self.actions.modify_text('incorrectoptions-7', 'In a vast desert//Within a day')
Add text `In a vast desert//Within a day` to this text input: <input type="text" name="incorrectoptions-7" value="In a village immediately // At the beach without any delay">
 - - - - - -  starting a new element: `Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-8
Executing one action: self.actions.modify_text('correctoptions-8', 'John and the princess')
self.actions.modify_text('incorrectoptions-8', 'The princess and a dragon//John and a wizard')
Add text `John and the princess` to this text input: <input type="text" name="correctoptions-8">
Add text `The princess and a dragon//John and a wizard` to this text input: <input type="text" name="incorrectoptions-8">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-8
Executing one action: self.actions.modify_text('incorrectoptions-8', 'A handsome prince // A dragon // An old wizard')
Add text `A handsome prince // A dragon // An old wizard` to this text input: <input type="text" name="incorrectoptions-8" value="The princess and a dragon//John and a wizard">
 - - - - - -  starting a new element: `Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-9
Executing one action: self.actions.modify_text('correctoptions-9', 'near a mountain')
self.actions.modify_text('incorrectoptions-9', 'next to a lake//in a bustling city//on a small island')
Add text `near a mountain` to this text input: <input type="text" name="correctoptions-9">
Add text `next to a lake//in a bustling city//on a small island` to this text input: <input type="text" name="incorrectoptions-9">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-9
Executing one action: self.actions.modify_text('incorrectoptions-9', 'A big city//A vast desert//Under the sea')
Add text `A big city//A vast desert//Under the sea` to this text input: <input type="text" name="incorrectoptions-9" value="next to a lake//in a bustling city//on a small island">
 - - - - - -  starting a new element: `Input(name=`correctoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-10
Executing one action: self.actions.modify_text('correctoptions-10', 'John')
Add text `John` to this text input: <input type="text" name="correctoptions-10">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-10
Executing one action: self.actions.modify_text('incorrectoptions-10', 'A dragon // A local baker // Her real mother')
Add text `A dragon // A local baker // Her real mother` to this text input: <input type="text" name="incorrectoptions-10">
 - - - - - -  starting a new element: `Input(name=`correctoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-11
Executing one action: self.actions.modify_text('correctoptions-11', 'Getting lost in the forest')
self.actions.modify_text('incorrectoptions-11', 'Finding a hidden treasure // Encountering a talking animal')
Add text `Getting lost in the forest` to this text input: <input type="text" name="correctoptions-11">
Add text `Finding a hidden treasure // Encountering a talking animal` to this text input: <input type="text" name="incorrectoptions-11">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-11
Executing one action: self.actions.modify_text('incorrectoptions-11', 'Getting trapped in a cave // Lost in an endless meadow')
Add text `Getting trapped in a cave // Lost in an endless meadow` to this text input: <input type="text" name="incorrectoptions-11" value="Finding a hidden treasure // Encountering a talking animal">
 - - - - - -  starting a new element: `Input(name=`correctoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-12
Executing one action: self.actions.modify_text('correctoptions-12', 'By climbing to the top of a tree')
self.actions.modify_text('incorrectoptions-12', 'She checked a map//John told her the direction//She guessed the location')
Add text `By climbing to the top of a tree` to this text input: <input type="text" name="correctoptions-12">
Add text `She checked a map//John told her the direction//She guessed the location` to this text input: <input type="text" name="incorrectoptions-12">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-12
Executing one action: self.actions.modify_text('incorrectoptions-12', 'By looking around // By asking a bird // Because she dreamed about it')
Add text `By looking around // By asking a bird // Because she dreamed about it` to this text input: <input type="text" name="incorrectoptions-12" value="She checked a map//John told her the direction//She guessed the location">
 - - - - - -  starting a new element: `Input(name=`correctoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-13
Executing one action: self.actions.modify_text('correctoptions-13', 'In the forest')
self.actions.modify_text('incorrectoptions-13', 'In a castle//At her home//In a city')
Add text `In the forest` to this text input: <input type="text" name="correctoptions-13">
Add text `In a castle//At her home//In a city` to this text input: <input type="text" name="incorrectoptions-13">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-13
Executing one action: self.actions.modify_text('incorrectoptions-13', 'She followed a mapped trail//She was led by a talking bird//She followed the North Star')
Add text `She followed a mapped trail//She was led by a talking bird//She followed the North Star` to this text input: <input type="text" name="incorrectoptions-13" value="In a castle//At her home//In a city">
 - - - - - -  starting a new element: `Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
Skipping element `hiddenName` since it is not visible.
input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['in the forest // at a place with no electric poles but some caves']
 visible_values : ['in the forest // at a place with no electric poles but some caves']
input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['In a castle surrounded by trees // In a modern city // On a distant island']
 visible_values : ['In a castle surrounded by trees // In a modern city // On a distant island']
input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['John']
 visible_values : ['John']
input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['The princess met a wise old woman // A talking frog guided her // She found her way alone']
 visible_values : ['The princess met a wise old woman // A talking frog guided her // She found her way alone']
input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Because he thought she may be the missing princess.']
 visible_values : ['Because he thought she may be the missing princess.']
input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['For a reward // Because he was lost too // To start a new adventure']
 visible_values : ['For a reward // Because he was lost too // To start a new adventure']
input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['From the top of a tree']
 visible_values : ['From the top of a tree']
input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['In the woods nearby//Next to an ocean//Inside a dream']
 visible_values : ['In the woods nearby//Next to an ocean//Inside a dream']
input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['She escaped when her mother was sleeping//She climbed down the tower and ran into the forest']
 visible_values : ['She escaped when her mother was sleeping//She climbed down the tower and ran into the forest']
input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['In a small village just outside the kingdom // Inside a dark cave filled with goblins // At the top of an impossibly high mountain']
 visible_values : ['In a small village just outside the kingdom // Inside a dark cave filled with goblins // At the top of an impossibly high mountain']
input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['John']
 visible_values : ['John']
input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['A local baker // A rabbit']
 visible_values : ['A local baker // A rabbit']
input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['John//The young man']
 visible_values : ['John//The young man']
input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['He was searching for something // He was hunting']
 visible_values : ['He was searching for something // He was hunting']
input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['In the forest after several days // Near a mountain after climbing a tree to spot the castle']
 visible_values : ['In the forest after several days // Near a mountain after climbing a tree to spot the castle']
input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['In a vast desert//Within a day']
 visible_values : ['In a vast desert//Within a day']
input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['John and the princess']
 visible_values : ['John and the princess']
input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['A handsome prince // A dragon // An old wizard']
 visible_values : ['A handsome prince // A dragon // An old wizard']
input: Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['near a mountain']
 visible_values : ['near a mountain']
input: Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['A big city//A vast desert//Under the sea']
 visible_values : ['A big city//A vast desert//Under the sea']
input: Input(name=`correctoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['John']
 visible_values : ['John']
input: Input(name=`incorrectoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['A dragon // A local baker // Her real mother']
 visible_values : ['A dragon // A local baker // Her real mother']
input: Input(name=`correctoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Getting lost in the forest']
 visible_values : ['Getting lost in the forest']
input: Input(name=`incorrectoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Getting trapped in a cave // Lost in an endless meadow']
 visible_values : ['Getting trapped in a cave // Lost in an endless meadow']
input: Input(name=`correctoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['By climbing to the top of a tree']
 visible_values : ['By climbing to the top of a tree']
input: Input(name=`incorrectoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['By looking around // By asking a bird // Because she dreamed about it']
 visible_values : ['By looking around // By asking a bird // Because she dreamed about it']
input: Input(name=`correctoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['In the forest']
 visible_values : ['In the forest']
input: Input(name=`incorrectoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['She followed a mapped trail//She was led by a talking bird//She followed the North Star']
 visible_values : ['She followed a mapped trail//She was led by a talking bird//She followed the North Star']
input: Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : [None]
 visible_values : [None]
 ------- evaluating input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['The princess lived in a high tower she was not allowed to leave', 'Bin Ladin']`
----> answers: `['The princess lived in a high tower she was not allowed to leave', 'Bin Ladin']` - type: `<class 'list'>`
----> baseline_answer: `in the forest // at a place with no electric poles but some caves` - type: `<class 'str'>`
 --> scores:  0.15384615384615385
----> per-field score: 0.15384615384615385
 ------- evaluating input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['The princess lived in a palace // The princess lived in a castle with her father', 'airspace at 9:10']`
----> answers: `['The princess lived in a palace // The princess lived in a castle with her father', 'airspace at 9:10']` - type: `<class 'list'>`
----> baseline_answer: `In a castle surrounded by trees // In a modern city // On a distant island` - type: `<class 'str'>`
 --> scores:  0.2758620689655172
----> per-field score: 0.2758620689655172
 ------- evaluating input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['The running man named John', "Compare Binalshibh's"]`
----> answers: `["Compare Binalshibh's", 'The running man named John']` - type: `<class 'list'>`
----> baseline_answer: `John` - type: `<class 'str'>`
 --> scores:  0.33333333333333337
----> per-field score: 0.33333333333333337
 ------- evaluating input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Her mean mother // Her father', "Atta's personalities."]`
----> answers: `["Atta's personalities.", 'Her mean mother // Her father']` - type: `<class 'list'>`
----> baseline_answer: `The princess met a wise old woman // A talking frog guided her // She found her way alone` - type: `<class 'str'>`
 --> scores:  0.1818181818181818
----> per-field score: 0.1818181818181818
 ------- evaluating input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Because the princess told her about her captivity', 'Reagan National Airport']`
----> answers: `['Because the princess told her about her captivity', 'Reagan National Airport']` - type: `<class 'list'>`
----> baseline_answer: `Because he thought she may be the missing princess.` - type: `<class 'str'>`
 --> scores:  0.35294117647058826
----> per-field score: 0.35294117647058826
 ------- evaluating input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Because he was ordered to do so by the Queen // Because he wanted a reward', 'target that triggered']`
----> answers: `['Because he was ordered to do so by the Queen // Because he wanted a reward', 'target that triggered']` - type: `<class 'list'>`
----> baseline_answer: `For a reward // Because he was lost too // To start a new adventure` - type: `<class 'str'>`
 --> scores:  0.3571428571428571
----> per-field score: 0.3571428571428571
 ------- evaluating input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Climbing up to the top of a tree', 'Binalshibh when']`
----> answers: `['Climbing up to the top of a tree', 'Binalshibh when']` - type: `<class 'list'>`
----> baseline_answer: `From the top of a tree` - type: `<class 'str'>`
 --> scores:  0.7142857142857143
----> per-field score: 0.7142857142857143
 ------- evaluating input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `["After looking it up in a map // After climbing on John's shoulders", 'considered']`
----> answers: `["After looking it up in a map // After climbing on John's shoulders", 'considered']` - type: `<class 'list'>`
----> baseline_answer: `In the woods nearby//Next to an ocean//Inside a dream` - type: `<class 'str'>`
 --> scores:  0.16666666666666669
----> per-field score: 0.16666666666666669
 ------- evaluating input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Because her mean mother did not allowed her to leave the tower she escaped climbing out the window', 'Binalshibh use']`
----> answers: `['Binalshibh use', 'Because her mean mother did not allowed her to leave the tower she escaped climbing out the window']` - type: `<class 'list'>`
----> baseline_answer: `She escaped when her mother was sleeping//She climbed down the tower and ran into the forest` - type: `<class 'str'>`
 --> scores:  0.28571428571428575
----> per-field score: 0.28571428571428575
 ------- evaluating input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Because she was bored in her castle she went out through the drawbridge // Because she needed to find a cure she climbed down the south wall', 'President']`
----> answers: `['Because she was bored in her castle she went out through the drawbridge // Because she needed to find a cure she climbed down the south wall', 'President']` - type: `<class 'list'>`
----> baseline_answer: `In a small village just outside the kingdom // Inside a dark cave filled with goblins // At the top of an impossibly high mountain` - type: `<class 'str'>`
 --> scores:  0.16326530612244897
----> per-field score: 0.16326530612244897
 ------- evaluating input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['His name was John and he was running', 'take place']`
----> answers: `['take place', 'His name was John and he was running']` - type: `<class 'list'>`
----> baseline_answer: `John` - type: `<class 'str'>`
 --> scores:  0.2222222222222222
----> per-field score: 0.2222222222222222
 ------- evaluating input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['His name was Joss and he was sailing // His name was Sean and he was working', 'lived in Germany']`
----> answers: `['His name was Joss and he was sailing // His name was Sean and he was working', 'lived in Germany']` - type: `<class 'list'>`
----> baseline_answer: `A local baker // A rabbit` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['What was she doing in the middle of a forest, and she replied that she ran away from her mean mother', 'e passed between']`
----> answers: `['e passed between', 'What was she doing in the middle of a forest, and she replied that she ran away from her mean mother']` - type: `<class 'list'>`
----> baseline_answer: `John//The young man` - type: `<class 'str'>`
 --> scores:  0.08
----> per-field score: 0.08
 ------- evaluating input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['What did she plan to do and she replied that she wanted to visit the Queen // He asked her if she wanted to stay for dinner and she accepted', 'Atta first met and when']`
----> answers: `['Atta first met and when', 'What did she plan to do and she replied that she wanted to visit the Queen // He asked her if she wanted to stay for dinner and she accepted']` - type: `<class 'list'>`
----> baseline_answer: `He was searching for something // He was hunting` - type: `<class 'str'>`
 --> scores:  0.1081081081081081
----> per-field score: 0.1081081081081081
 ------- evaluating input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Not far away from the castle they want to go, it took them days lost in the forest to find out', 'punishment']`
----> answers: `['punishment', 'Not far away from the castle they want to go, it took them days lost in the forest to find out']` - type: `<class 'list'>`
----> baseline_answer: `In the forest after several days // Near a mountain after climbing a tree to spot the castle` - type: `<class 'str'>`
 --> scores:  0.21052631578947367
----> per-field score: 0.21052631578947367
 ------- evaluating input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['They are in the border of the kingdom after a month journey // They are far from the castle after several weeks of journey through the forest', 'the safety']`
----> answers: `['They are in the border of the kingdom after a month journey // They are far from the castle after several weeks of journey through the forest', 'the safety']` - type: `<class 'list'>`
----> baseline_answer: `In a vast desert//Within a day` - type: `<class 'str'>`
 --> scores:  0.12121212121212123
----> per-field score: 0.12121212121212123
 ------- evaluating input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['The princess, her mother and John', 'became a close']`
----> answers: `['became a close', 'The princess, her mother and John']` - type: `<class 'list'>`
----> baseline_answer: `John and the princess` - type: `<class 'str'>`
 --> scores:  0.4
----> per-field score: 0.4
 ------- evaluating input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['The princess, the King and the Queen // John and the Queen', 'friend of Binalshibh']`
----> answers: `['The princess, the King and the Queen // John and the Queen', 'friend of Binalshibh']` - type: `<class 'list'>`
----> baseline_answer: `A handsome prince // A dragon // An old wizard` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['A mountain', 'concern']`
----> answers: `['concern', 'A mountain']` - type: `<class 'list'>`
----> baseline_answer: `near a mountain` - type: `<class 'str'>`
 --> scores:  0.8
----> per-field score: 0.8
 ------- evaluating input: Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['A river // The seashore', 'Predator']`
----> answers: `['A river // The seashore', 'Predator']` - type: `<class 'list'>`
----> baseline_answer: `A big city//A vast desert//Under the sea` - type: `<class 'str'>`
 --> scores:  0.30769230769230765
----> per-field score: 0.30769230769230765
 ------- evaluating input: Input(name=`correctoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['John', 'highest duty']`
----> answers: `['highest duty', 'John']` - type: `<class 'list'>`
----> baseline_answer: `John` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['The king // The hunter', 'Muslim was']`
----> answers: `['Muslim was', 'The king // The hunter']` - type: `<class 'list'>`
----> baseline_answer: `A dragon // A local baker // Her real mother` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Getting lost // They realize that they are lost and have no way of finding where to go', 'highest honor']`
----> answers: `['highest honor', 'Getting lost // They realize that they are lost and have no way of finding where to go']` - type: `<class 'list'>`
----> baseline_answer: `Getting lost in the forest` - type: `<class 'str'>`
 --> scores:  0.1818181818181818
----> per-field score: 0.1818181818181818
 ------- evaluating input: Input(name=`incorrectoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['A giant mean bear // An impassable cliff', 'warhead']`
----> answers: `['A giant mean bear // An impassable cliff', 'warhead']` - type: `<class 'list'>`
----> baseline_answer: `Getting trapped in a cave // Lost in an endless meadow` - type: `<class 'str'>`
 --> scores:  0.23529411764705882
----> per-field score: 0.23529411764705882
 ------- evaluating input: Input(name=`correctoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['By climbing on top of a tree', 'Binalshibh']`
----> answers: `['Binalshibh', 'By climbing on top of a tree']` - type: `<class 'list'>`
----> baseline_answer: `By climbing to the top of a tree` - type: `<class 'str'>`
 --> scores:  0.7999999999999999
----> per-field score: 0.7999999999999999
 ------- evaluating input: Input(name=`incorrectoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `["By using John's spyglass // By climbing on John's shoulders", 'CIA management']`
----> answers: `['CIA management', "By using John's spyglass // By climbing on John's shoulders"]` - type: `<class 'list'>`
----> baseline_answer: `By looking around // By asking a bird // Because she dreamed about it` - type: `<class 'str'>`
 --> scores:  0.17391304347826086
----> per-field score: 0.17391304347826086
 ------- evaluating input: Input(name=`correctoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['After running away from the high tower she lived in // After escaping the tower and her mother and wandering out a good days', 'occupations']`
----> answers: `['occupations', 'After running away from the high tower she lived in // After escaping the tower and her mother and wandering out a good days']` - type: `<class 'list'>`
----> baseline_answer: `In the forest` - type: `<class 'str'>`
 --> scores:  0.15384615384615383
----> per-field score: 0.15384615384615383
 ------- evaluating input: Input(name=`incorrectoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `["After navigating the river with a boat // After following John's footprints", 'activities that']`
----> answers: `["After navigating the river with a boat // After following John's footprints", 'activities that']` - type: `<class 'list'>`
----> baseline_answer: `She followed a mapped trail//She was led by a talking bird//She followed the North Star` - type: `<class 'str'>`
 --> scores:  0.13793103448275862
----> per-field score: 0.13793103448275862
 ------- evaluating input: Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
Skipping element `hiddenName` since it is not visible.
 --> Per-instance overall score: 0.2827656910950855
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6666666666666666, 0.4, 0.8, 0.28571428571428575, 1.0, 0.0, 0.22222222222222224, 0.0, 0.33333333333333337, 0.0, 0.2641509433962264, 0.0, 0.0, 0.0, 0.27906976744186046, 0.2105263157894737, 0.6666666666666666, 0.3636363636363636, 1.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.5, 1.0, 0.2222222222222222, 1.0, 0.11764705882352941, 0.0, 0.25, 0.5, 0.33333333333333337, 1.0, 0.0, 1.0, 0.2222222222222222, 0.4, 0.33333333333333337, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.4444444444444445, 0.4444444444444445, 0.4615384615384615, 1.0, 0.2, 1.0, 0.0, 0.4444444444444444, 0.1, 0.15789473684210528, 0.13333333333333333, 0.5, 0.16666666666666666, 0.4444444444444445, 0.22222222222222224, 0.5, 0.0, 0.14285714285714288, 0.1818181818181818, 0.16666666666666666, 0.0, 0.5, 0.0, 0.6666666666666666, 0.14285714285714288, 0.3333333333333333, 0.13333333333333333, 0.08333333333333334, 0.1, 0.4, 0.0, 0.6666666666666666, 0.0, 1.0, 0.0, 0.2727272727272727, 0.15384615384615383, 0.0, 0.22222222222222224, 0.41379310344827586, 0.10526315789473684, 0.6666666666666666, 0.0, 0.5806451612903225, 0.11428571428571428, 0.923076923076923, 0.06451612903225806, 0.7272727272727273, 0.0, 0.22222222222222224, 0.17142857142857143, 0.4444444444444444, 0.20833333333333334, 0.10526315789473682, 0.05555555555555556, 0.5833333333333334, 0.07017543859649122, 0.08695652173913043, 0.14634146341463417, 0.125, 0.05714285714285714, 0.8, 0.13333333333333333, 0.0, 0.0, 1.0, 0.13333333333333333, 0.22222222222222224, 0.3448275862068966, 0.35294117647058826, 0.10256410256410257, 0.0, 0.10810810810810811, 0.25, 0.4800000000000001, 0.11764705882352941, 0.24390243902439024, 0.6666666666666666, 0.6, 0.5714285714285715, 0.0, 0.0, 0.0, 0.0, 0.15384615384615385, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.2, 0.6666666666666667, 0.18181818181818182, 0.1, 0.0, 0.1, 0.0, 0.14285714285714288, 0.0, 0.7000000000000001, 0.0, 0.17391304347826086, 0.4444444444444445, 1.0, 0.2222222222222222, 1.0, 0.5, 1.0, 0.7142857142857143, 0.0, 0.0, 1.0, 0.4, 1.0, 0.0, 0.15384615384615385, 0.2758620689655172, 0.33333333333333337, 0.1818181818181818, 0.35294117647058826, 0.3571428571428571, 0.7142857142857143, 0.16666666666666669, 0.28571428571428575, 0.16326530612244897, 0.2222222222222222, 0.0, 0.08, 0.1081081081081081, 0.21052631578947367, 0.12121212121212123, 0.4, 0.0, 0.8, 0.30769230769230765, 1.0, 0.0, 0.1818181818181818, 0.23529411764705882, 0.7999999999999999, 0.17391304347826086, 0.15384615384615383, 0.13793103448275862]}
instance_id: 34822 <-> row_number: 87
Could not find input field with name `correctoptions-15`
Could not find input field with name `correctoptions-16`
Could not find input field with name `correctoptions-17`
Could not find input field with name `correctoptions-18`
Could not find input field with name `correctoptions-19`
Could not find input field with name `correctoptions-20`
Could not find input field with name `correctoptions-21`
Could not find input field with name `correctoptions-22`
Could not find input field with name `incorrectoptions-15`
Could not find input field with name `incorrectoptions-16`
Could not find input field with name `incorrectoptions-17`
Could not find input field with name `incorrectoptions-18`
Could not find input field with name `incorrectoptions-19`
Could not find input field with name `incorrectoptions-20`
Could not find input field with name `incorrectoptions-21`
Could not find input field with name `incorrectoptions-22`
 --> inputs: ['correctoptions-0', 'incorrectoptions-0', 'correctoptions-1', 'incorrectoptions-1', 'correctoptions-2', 'incorrectoptions-2', 'correctoptions-3', 'incorrectoptions-3', 'correctoptions-4', 'incorrectoptions-4', 'correctoptions-5', 'incorrectoptions-5', 'correctoptions-6', 'incorrectoptions-6', 'correctoptions-7', 'incorrectoptions-7', 'correctoptions-8', 'incorrectoptions-8', 'correctoptions-9', 'incorrectoptions-9', 'correctoptions-10', 'incorrectoptions-10', 'correctoptions-11', 'incorrectoptions-11', 'correctoptions-12', 'incorrectoptions-12', 'correctoptions-13', 'incorrectoptions-13', 'correctoptions-14', 'incorrectoptions-14', 'hiddenName']
 --> Looking up gold labels from row index 87 of `input.csv` (unique inputs). 
 --> input labels: {'correctoptions-0': ['alexander', 'Alexander'], 'incorrectoptions-0': ['plutarch', 'Aristotle // Antipater // Plutarch'], 'correctoptions-1': ['diodorus', "Diodorus's"], 'incorrectoptions-1': ['alexander', "Plutarch's // Justin's // his own"], 'correctoptions-2': ['veratrum and calicheamicin', 'white hellebore (a plant) or calicheamicin (compound produced by bacteria)'], 'incorrectoptions-2': ['water', 'food // medicine // poison'], 'correctoptions-3': ['june 1 323 bc 11 to 14 days before he died', '11 to 14 days before his death'], 'incorrectoptions-3': ['june 10 323 bc', 'minutes before his death // within a day before his death // the morning of the day he died'], 'correctoptions-4': ['no fever', 'yes'], 'incorrectoptions-4': ['yes fever', "no // Plutarch has never written about Alexander's symptoms // he is unsure"], 'correctoptions-5': ['lollas', 'Macedonian viceroy'], 'incorrectoptions-5': ['alexander', "Alexander's previous wine-pourer // Alexander's tutor // admiral"], 'correctoptions-6': ['poisened', 'it is still unsure, he became ill and died 11-14 days later'], 'incorrectoptions-6': ['in his sleep', "he was poisoned by Antipater's son // he was accidentally poisoned by the water in the river Styx // he touched a plant called white hellebore and died the next day"], 'correctoptions-7': ['Parmenion and Philotas, Antipater purportedly arranged for Alexander to be poisoned by his son Iollas', 'Antipater, his son, and maybe even Aristotle'], 'incorrectoptions-7': ['heracules', "Alexander's common soldiers // Diodorus, Plutarch, Arrian and Justin // Parmenion and Philotas"], 'correctoptions-8': ['yes a plant called white hellebore (Veratrum album', 'probably (but not certainly) not'], 'incorrectoptions-8': ['no they didnt', "yes, they were all well familiar with white hellebore // it's never even been mentioned that they could have known of one // yes, they drew it from the water in the river Styx"], 'correctoptions-9': ['yes he did', 'yes'], 'incorrectoptions-9': ['no he wasnt drinking', 'accounts differ on this question // he was drinking but not wine // he drank wine 14 days before his death, but not after that'], 'correctoptions-10': ['five people', "it's believed it was 2 (Antipater and his son), but some have suggested that Aristotle was part of it too"], 'incorrectoptions-10': ['one person', "hundreds - all of his soldiers // one - Antipater only // one - Iollas (Antipater's son) did it alone"], 'correctoptions-11': ['may 29 or june 1st', '27 or 28 May, 323 BC'], 'incorrectoptions-11': ['june 10th or 11th', '10 or 11 June, 323 BC // some time before 10 June, 323 BC // one could not possibly know the dates of this event'], 'correctoptions-12': ["Plutarch's account had 14 days and a fever and  Diodorus recounts that Alexander was struck with pain for 11 days", 'Plutarch'], 'incorrectoptions-12': ['hercules', 'Diodorus // Arrian // Dr Leo Schep'], 'correctoptions-13': ['Plutarch and Diodorus', 'Diodorus'], 'incorrectoptions-13': ['lollas', 'Plutarch // Aristotle // Dr Leo Schep'], 'correctoptions-14': ['veratrum and calicheamicin', 'white hellebore (veratrum album), because it was known to the Greeks and could cause the symptoms stated in the account of his death'], 'incorrectoptions-14': ['roses', "calicheamicin, because it was present in the river Styx at the time of Alexander's death // white hellebore (veratrum album) because Plutarch mentioned this plant in his account of Alexander's death // an unknown plant that has never been used since"], 'hiddenName': ['{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-0
Executing one action: self.actions.modify_text('correctoptions-0', 'Alexander')
Add text `Alexander` to this text input: <input type="text" name="correctoptions-0">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-0
Executing one action: self.actions.modify_text('incorrectoptions-0', 'Nearchus // Antipater // Veratrum album // Calicheamicin')
Add text `Nearchus // Antipater // Veratrum album // Calicheamicin` to this text input: <input type="text" name="incorrectoptions-0">
 - - - - - -  starting a new element: `Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-1
Executing one action: self.actions.modify_text('correctoptions-1', 'Diodorus')
Add text `Diodorus` to this text input: <input type="text" name="correctoptions-1">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-1
Executing one action: self.actions.modify_text('incorrectoptions-1', 'Diodorus // Plutarch')
Add text `Diodorus // Plutarch` to this text input: <input type="text" name="incorrectoptions-1">
 - - - - - -  starting a new element: `Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-2
Executing one action: self.actions.modify_text('correctoptions-2', 'Veratrum album // Water of river Styx')
Add text `Veratrum album // Water of river Styx` to this text input: <input type="text" name="correctoptions-2">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-2
Executing one action: self.actions.modify_text('incorrectoptions-2', 'Veratrum album // Calicheamicin')
Add text `Veratrum album // Calicheamicin` to this text input: <input type="text" name="incorrectoptions-2">
 - - - - - -  starting a new element: `Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-3
Executing one action: self.actions.modify_text('correctoptions-3', '10 or 11 June 323 BC')

self.actions.modify_text('incorrectoptions-3', 'May 323 BC // April 323 BC // July 323 BC')
Add text `10 or 11 June 323 BC` to this text input: <input type="text" name="correctoptions-3">
Add text `May 323 BC // April 323 BC // July 323 BC` to this text input: <input type="text" name="incorrectoptions-3">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-3
Executing one action: self.actions.modify_text('incorrectoptions-3', 'Around 300 BC // In the 4th century AD // During the battle of Gaugamela // At the age of 20')
Add text `Around 300 BC // In the 4th century AD // During the battle of Gaugamela // At the age of 20` to this text input: <input type="text" name="incorrectoptions-3" value="May 323 BC // April 323 BC // July 323 BC">
 - - - - - -  starting a new element: `Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-4
Executing one action: self.actions.modify_text('correctoptions-4', 'Yes')
Add text `Yes` to this text input: <input type="text" name="correctoptions-4">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-4
Executing one action: self.actions.modify_text('incorrectoptions-4', 'Yes // No // Maybe')
Add text `Yes // No // Maybe` to this text input: <input type="text" name="incorrectoptions-4">
 - - - - - -  starting a new element: `Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-5
Executing one action: self.actions.modify_text('correctoptions-5', 'Iollas')
self.actions.modify_text('incorrectoptions-5', 'Antipater//Olympias//Nearchus//Aristotle')
Add text `Iollas` to this text input: <input type="text" name="correctoptions-5">
Add text `Antipater//Olympias//Nearchus//Aristotle` to this text input: <input type="text" name="incorrectoptions-5">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-5
Executing one action: self.actions.modify_text('incorrectoptions-5', 'Macedonian general // King of Persia // Governor of Babylon')
Add text `Macedonian general // King of Persia // Governor of Babylon` to this text input: <input type="text" name="incorrectoptions-5" value="Antipater//Olympias//Nearchus//Aristotle">
 - - - - - -  starting a new element: `Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-6
Executing one action: self.actions.modify_text('correctoptions-6', 'Veratrum album (white hellebore) // Calicheamicin')
Add text `Veratrum album (white hellebore) // Calicheamicin` to this text input: <input type="text" name="correctoptions-6">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-6
Executing one action: self.actions.modify_text('incorrectoptions-6', 'Food poisoning // Stabbed in battle // Natural causes // Old age')
Add text `Food poisoning // Stabbed in battle // Natural causes // Old age` to this text input: <input type="text" name="incorrectoptions-6">
 - - - - - -  starting a new element: `Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-7
Executing one action: self.actions.modify_text('correctoptions-7', 'Antipater')
self.actions.modify_text('incorrectoptions-7', 'Aristotle // Nearchus // Diodorus')
Add text `Antipater` to this text input: <input type="text" name="correctoptions-7">
Add text `Aristotle // Nearchus // Diodorus` to this text input: <input type="text" name="incorrectoptions-7">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-7
Executing one action: self.actions.modify_text('incorrectoptions-7', 'Olympias//Darius//Hephaestion')
Add text `Olympias//Darius//Hephaestion` to this text input: <input type="text" name="incorrectoptions-7" value="Aristotle // Nearchus // Diodorus">
 - - - - - -  starting a new element: `Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-8
Executing one action: self.actions.modify_text('correctoptions-8', 'Yes')
Add text `Yes` to this text input: <input type="text" name="correctoptions-8">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-8
Executing one action: self.actions.modify_text('incorrectoptions-8', 'Belladonna // Arsenic')
Add text `Belladonna // Arsenic` to this text input: <input type="text" name="incorrectoptions-8">
 - - - - - -  starting a new element: `Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-9
Executing one action: self.actions.modify_text('correctoptions-9', 'Yes')
Add text `Yes` to this text input: <input type="text" name="correctoptions-9">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-9
Executing one action: self.actions.modify_text('incorrectoptions-9', 'Nearchus // Aristotle // 2 weeks before June 323 BC')
Add text `Nearchus // Aristotle // 2 weeks before June 323 BC` to this text input: <input type="text" name="incorrectoptions-9">
 - - - - - -  starting a new element: `Input(name=`correctoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-10
Executing one action: self.actions.modify_text('correctoptions-10', 'Just Antipater//Antipater and Iollas//Aristotle')
self.actions.modify_text('incorrectoptions-10', 'The entire Macedonian army//More than 5 individuals//No one')
Add text `Just Antipater//Antipater and Iollas//Aristotle` to this text input: <input type="text" name="correctoptions-10">
Add text `The entire Macedonian army//More than 5 individuals//No one` to this text input: <input type="text" name="incorrectoptions-10">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-10
Executing one action: self.actions.modify_text('incorrectoptions-10', 'Only Antipater // Only Iollas // Aristotle alone // One servant')
Add text `Only Antipater // Only Iollas // Aristotle alone // One servant` to this text input: <input type="text" name="incorrectoptions-10" value="The entire Macedonian army//More than 5 individuals//No one">
 - - - - - -  starting a new element: `Input(name=`correctoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-11
Executing one action: self.actions.modify_text('correctoptions-11', '10 June 323 BC // 11 June 323 BC')
self.actions.modify_text('incorrectoptions-11', '10 May 323 BC // 1 June 323 BC')
Add text `10 June 323 BC // 11 June 323 BC` to this text input: <input type="text" name="correctoptions-11">
Add text `10 May 323 BC // 1 June 323 BC` to this text input: <input type="text" name="incorrectoptions-11">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-11
Executing one action: self.actions.modify_text('incorrectoptions-11', 'June 10//June 11//July 11//August 10')
Add text `June 10//June 11//July 11//August 10` to this text input: <input type="text" name="incorrectoptions-11" value="10 May 323 BC // 1 June 323 BC">
 - - - - - -  starting a new element: `Input(name=`correctoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-12
Executing one action: self.actions.modify_text('correctoptions-12', 'Plutarch // Diodorus')
self.actions.modify_text('incorrectoptions-12', 'Aristotle // Nearchus')
Add text `Plutarch // Diodorus` to this text input: <input type="text" name="correctoptions-12">
Add text `Aristotle // Nearchus` to this text input: <input type="text" name="incorrectoptions-12">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-12
Executing one action: self.actions.modify_text('incorrectoptions-12', 'Diodorus // Justin // None of the mentioned historians')
Add text `Diodorus // Justin // None of the mentioned historians` to this text input: <input type="text" name="incorrectoptions-12" value="Aristotle // Nearchus">
 - - - - - -  starting a new element: `Input(name=`correctoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-13
Executing one action: self.actions.modify_text('correctoptions-13', 'Plutarch')
self.actions.modify_text('incorrectoptions-13', 'Diodorus // Justin // Arrian')
Add text `Plutarch` to this text input: <input type="text" name="correctoptions-13">
Add text `Diodorus // Justin // Arrian` to this text input: <input type="text" name="incorrectoptions-13">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-13
Executing one action: self.actions.modify_text('incorrectoptions-13', 'Diodorus // Plutarch // Justin')
Add text `Diodorus // Plutarch // Justin` to this text input: <input type="text" name="incorrectoptions-13" value="Diodorus // Justin // Arrian">
 - - - - - -  starting a new element: `Input(name=`correctoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-14
Executing one action: self.actions.modify_text('correctoptions-14', 'Veratrum album')
Add text `Veratrum album` to this text input: <input type="text" name="correctoptions-14">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-14
Executing one action: self.actions.modify_text('incorrectoptions-14', 'Hemlock // Nightshade // Mandrake')
Add text `Hemlock // Nightshade // Mandrake` to this text input: <input type="text" name="incorrectoptions-14">
 - - - - - -  starting a new element: `Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
Skipping element `hiddenName` since it is not visible.
input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Alexander']
 visible_values : ['Alexander']
input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Nearchus // Antipater // Veratrum album // Calicheamicin']
 visible_values : ['Nearchus // Antipater // Veratrum album // Calicheamicin']
input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Diodorus']
 visible_values : ['Diodorus']
input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Diodorus // Plutarch']
 visible_values : ['Diodorus // Plutarch']
input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Veratrum album // Water of river Styx']
 visible_values : ['Veratrum album // Water of river Styx']
input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Veratrum album // Calicheamicin']
 visible_values : ['Veratrum album // Calicheamicin']
input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['10 or 11 June 323 BC']
 visible_values : ['10 or 11 June 323 BC']
input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Around 300 BC // In the 4th century AD // During the battle of Gaugamela // At the age of 20']
 visible_values : ['Around 300 BC // In the 4th century AD // During the battle of Gaugamela // At the age of 20']
input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Yes // No // Maybe']
 visible_values : ['Yes // No // Maybe']
input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Iollas']
 visible_values : ['Iollas']
input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Macedonian general // King of Persia // Governor of Babylon']
 visible_values : ['Macedonian general // King of Persia // Governor of Babylon']
input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Veratrum album (white hellebore) // Calicheamicin']
 visible_values : ['Veratrum album (white hellebore) // Calicheamicin']
input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Food poisoning // Stabbed in battle // Natural causes // Old age']
 visible_values : ['Food poisoning // Stabbed in battle // Natural causes // Old age']
input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Antipater']
 visible_values : ['Antipater']
input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Olympias//Darius//Hephaestion']
 visible_values : ['Olympias//Darius//Hephaestion']
input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Belladonna // Arsenic']
 visible_values : ['Belladonna // Arsenic']
input: Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Nearchus // Aristotle // 2 weeks before June 323 BC']
 visible_values : ['Nearchus // Aristotle // 2 weeks before June 323 BC']
input: Input(name=`correctoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Just Antipater//Antipater and Iollas//Aristotle']
 visible_values : ['Just Antipater//Antipater and Iollas//Aristotle']
input: Input(name=`incorrectoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Only Antipater // Only Iollas // Aristotle alone // One servant']
 visible_values : ['Only Antipater // Only Iollas // Aristotle alone // One servant']
input: Input(name=`correctoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['10 June 323 BC // 11 June 323 BC']
 visible_values : ['10 June 323 BC // 11 June 323 BC']
input: Input(name=`incorrectoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['June 10//June 11//July 11//August 10']
 visible_values : ['June 10//June 11//July 11//August 10']
input: Input(name=`correctoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Plutarch // Diodorus']
 visible_values : ['Plutarch // Diodorus']
input: Input(name=`incorrectoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Diodorus // Justin // None of the mentioned historians']
 visible_values : ['Diodorus // Justin // None of the mentioned historians']
input: Input(name=`correctoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Plutarch']
 visible_values : ['Plutarch']
input: Input(name=`incorrectoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Diodorus // Plutarch // Justin']
 visible_values : ['Diodorus // Plutarch // Justin']
input: Input(name=`correctoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Veratrum album']
 visible_values : ['Veratrum album']
input: Input(name=`incorrectoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Hemlock // Nightshade // Mandrake']
 visible_values : ['Hemlock // Nightshade // Mandrake']
input: Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : [None]
 visible_values : [None]
 ------- evaluating input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['alexander', 'Alexander']`
----> answers: `['Alexander', 'alexander']` - type: `<class 'list'>`
----> baseline_answer: `Alexander` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['plutarch', 'Aristotle // Antipater // Plutarch']`
----> answers: `['plutarch', 'Aristotle // Antipater // Plutarch']` - type: `<class 'list'>`
----> baseline_answer: `Nearchus // Antipater // Veratrum album // Calicheamicin` - type: `<class 'str'>`
 --> scores:  0.25
----> per-field score: 0.25
 ------- evaluating input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['diodorus', "Diodorus's"]`
----> answers: `['diodorus', "Diodorus's"]` - type: `<class 'list'>`
----> baseline_answer: `Diodorus` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['alexander', "Plutarch's // Justin's // his own"]`
----> answers: `["Plutarch's // Justin's // his own", 'alexander']` - type: `<class 'list'>`
----> baseline_answer: `Diodorus // Plutarch` - type: `<class 'str'>`
 --> scores:  0.25
----> per-field score: 0.25
 ------- evaluating input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['veratrum and calicheamicin', 'white hellebore (a plant) or calicheamicin (compound produced by bacteria)']`
----> answers: `['veratrum and calicheamicin', 'white hellebore (a plant) or calicheamicin (compound produced by bacteria)']` - type: `<class 'list'>`
----> baseline_answer: `Veratrum album // Water of river Styx` - type: `<class 'str'>`
 --> scores:  0.2222222222222222
----> per-field score: 0.2222222222222222
 ------- evaluating input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['water', 'food // medicine // poison']`
----> answers: `['food // medicine // poison', 'water']` - type: `<class 'list'>`
----> baseline_answer: `Veratrum album // Calicheamicin` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['june 1 323 bc 11 to 14 days before he died', '11 to 14 days before his death']`
----> answers: `['11 to 14 days before his death', 'june 1 323 bc 11 to 14 days before he died']` - type: `<class 'list'>`
----> baseline_answer: `10 or 11 June 323 BC` - type: `<class 'str'>`
 --> scores:  0.3529411764705882
----> per-field score: 0.3529411764705882
 ------- evaluating input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['june 10 323 bc', 'minutes before his death // within a day before his death // the morning of the day he died']`
----> answers: `['minutes before his death // within a day before his death // the morning of the day he died', 'june 10 323 bc']` - type: `<class 'list'>`
----> baseline_answer: `Around 300 BC // In the 4th century AD // During the battle of Gaugamela // At the age of 20` - type: `<class 'str'>`
 --> scores:  0.17142857142857143
----> per-field score: 0.17142857142857143
 ------- evaluating input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['no fever', 'yes']`
----> answers: `['yes', 'no fever']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['yes fever', "no // Plutarch has never written about Alexander's symptoms // he is unsure"]`
----> answers: `["no // Plutarch has never written about Alexander's symptoms // he is unsure", 'yes fever']` - type: `<class 'list'>`
----> baseline_answer: `Yes // No // Maybe` - type: `<class 'str'>`
 --> scores:  0.4
----> per-field score: 0.4
 ------- evaluating input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['lollas', 'Macedonian viceroy']`
----> answers: `['Macedonian viceroy', 'lollas']` - type: `<class 'list'>`
----> baseline_answer: `Iollas` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['alexander', "Alexander's previous wine-pourer // Alexander's tutor // admiral"]`
----> answers: `["Alexander's previous wine-pourer // Alexander's tutor // admiral", 'alexander']` - type: `<class 'list'>`
----> baseline_answer: `Macedonian general // King of Persia // Governor of Babylon` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['poisened', 'it is still unsure, he became ill and died 11-14 days later']`
----> answers: `['poisened', 'it is still unsure, he became ill and died 11-14 days later']` - type: `<class 'list'>`
----> baseline_answer: `Veratrum album (white hellebore) // Calicheamicin` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['in his sleep', "he was poisoned by Antipater's son // he was accidentally poisoned by the water in the river Styx // he touched a plant called white hellebore and died the next day"]`
----> answers: `['in his sleep', "he was poisoned by Antipater's son // he was accidentally poisoned by the water in the river Styx // he touched a plant called white hellebore and died the next day"]` - type: `<class 'list'>`
----> baseline_answer: `Food poisoning // Stabbed in battle // Natural causes // Old age` - type: `<class 'str'>`
 --> scores:  0.16666666666666666
----> per-field score: 0.16666666666666666
 ------- evaluating input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Parmenion and Philotas, Antipater purportedly arranged for Alexander to be poisoned by his son Iollas', 'Antipater, his son, and maybe even Aristotle']`
----> answers: `['Parmenion and Philotas, Antipater purportedly arranged for Alexander to be poisoned by his son Iollas', 'Antipater, his son, and maybe even Aristotle']` - type: `<class 'list'>`
----> baseline_answer: `Antipater` - type: `<class 'str'>`
 --> scores:  0.25
----> per-field score: 0.25
 ------- evaluating input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['heracules', "Alexander's common soldiers // Diodorus, Plutarch, Arrian and Justin // Parmenion and Philotas"]`
----> answers: `["Alexander's common soldiers // Diodorus, Plutarch, Arrian and Justin // Parmenion and Philotas", 'heracules']` - type: `<class 'list'>`
----> baseline_answer: `Olympias//Darius//Hephaestion` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['yes a plant called white hellebore (Veratrum album', 'probably (but not certainly) not']`
----> answers: `['yes a plant called white hellebore (Veratrum album', 'probably (but not certainly) not']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
 --> scores:  0.2222222222222222
----> per-field score: 0.2222222222222222
 ------- evaluating input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['no they didnt', "yes, they were all well familiar with white hellebore // it's never even been mentioned that they could have known of one // yes, they drew it from the water in the river Styx"]`
----> answers: `["yes, they were all well familiar with white hellebore // it's never even been mentioned that they could have known of one // yes, they drew it from the water in the river Styx", 'no they didnt']` - type: `<class 'list'>`
----> baseline_answer: `Belladonna // Arsenic` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['yes he did', 'yes']`
----> answers: `['yes', 'yes he did']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['no he wasnt drinking', 'accounts differ on this question // he was drinking but not wine // he drank wine 14 days before his death, but not after that']`
----> answers: `['no he wasnt drinking', 'accounts differ on this question // he was drinking but not wine // he drank wine 14 days before his death, but not after that']` - type: `<class 'list'>`
----> baseline_answer: `Nearchus // Aristotle // 2 weeks before June 323 BC` - type: `<class 'str'>`
 --> scores:  0.06451612903225806
----> per-field score: 0.06451612903225806
 ------- evaluating input: Input(name=`correctoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['five people', "it's believed it was 2 (Antipater and his son), but some have suggested that Aristotle was part of it too"]`
----> answers: `["it's believed it was 2 (Antipater and his son), but some have suggested that Aristotle was part of it too", 'five people']` - type: `<class 'list'>`
----> baseline_answer: `Just Antipater//Antipater and Iollas//Aristotle` - type: `<class 'str'>`
 --> scores:  0.22222222222222224
----> per-field score: 0.22222222222222224
 ------- evaluating input: Input(name=`incorrectoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['one person', "hundreds - all of his soldiers // one - Antipater only // one - Iollas (Antipater's son) did it alone"]`
----> answers: `['one person', "hundreds - all of his soldiers // one - Antipater only // one - Iollas (Antipater's son) did it alone"]` - type: `<class 'list'>`
----> baseline_answer: `Only Antipater // Only Iollas // Aristotle alone // One servant` - type: `<class 'str'>`
 --> scores:  0.3333333333333333
----> per-field score: 0.3333333333333333
 ------- evaluating input: Input(name=`correctoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['may 29 or june 1st', '27 or 28 May, 323 BC']`
----> answers: `['27 or 28 May, 323 BC', 'may 29 or june 1st']` - type: `<class 'list'>`
----> baseline_answer: `10 June 323 BC // 11 June 323 BC` - type: `<class 'str'>`
 --> scores:  0.28571428571428575
----> per-field score: 0.28571428571428575
 ------- evaluating input: Input(name=`incorrectoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['june 10th or 11th', '10 or 11 June, 323 BC // some time before 10 June, 323 BC // one could not possibly know the dates of this event']`
----> answers: `['10 or 11 June, 323 BC // some time before 10 June, 323 BC // one could not possibly know the dates of this event', 'june 10th or 11th']` - type: `<class 'list'>`
----> baseline_answer: `June 10//June 11//July 11//August 10` - type: `<class 'str'>`
 --> scores:  0.19354838709677416
----> per-field score: 0.19354838709677416
 ------- evaluating input: Input(name=`correctoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `["Plutarch's account had 14 days and a fever and  Diodorus recounts that Alexander was struck with pain for 11 days", 'Plutarch']`
----> answers: `['Plutarch', "Plutarch's account had 14 days and a fever and  Diodorus recounts that Alexander was struck with pain for 11 days"]` - type: `<class 'list'>`
----> baseline_answer: `Plutarch // Diodorus` - type: `<class 'str'>`
 --> scores:  0.6666666666666666
----> per-field score: 0.6666666666666666
 ------- evaluating input: Input(name=`incorrectoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['hercules', 'Diodorus // Arrian // Dr Leo Schep']`
----> answers: `['hercules', 'Diodorus // Arrian // Dr Leo Schep']` - type: `<class 'list'>`
----> baseline_answer: `Diodorus // Justin // None of the mentioned historians` - type: `<class 'str'>`
 --> scores:  0.16666666666666666
----> per-field score: 0.16666666666666666
 ------- evaluating input: Input(name=`correctoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Plutarch and Diodorus', 'Diodorus']`
----> answers: `['Diodorus', 'Plutarch and Diodorus']` - type: `<class 'list'>`
----> baseline_answer: `Plutarch` - type: `<class 'str'>`
 --> scores:  0.5
----> per-field score: 0.5
 ------- evaluating input: Input(name=`incorrectoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['lollas', 'Plutarch // Aristotle // Dr Leo Schep']`
----> answers: `['Plutarch // Aristotle // Dr Leo Schep', 'lollas']` - type: `<class 'list'>`
----> baseline_answer: `Diodorus // Plutarch // Justin` - type: `<class 'str'>`
 --> scores:  0.25
----> per-field score: 0.25
 ------- evaluating input: Input(name=`correctoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['veratrum and calicheamicin', 'white hellebore (veratrum album), because it was known to the Greeks and could cause the symptoms stated in the account of his death']`
----> answers: `['white hellebore (veratrum album), because it was known to the Greeks and could cause the symptoms stated in the account of his death', 'veratrum and calicheamicin']` - type: `<class 'list'>`
----> baseline_answer: `Veratrum album` - type: `<class 'str'>`
 --> scores:  0.4
----> per-field score: 0.4
 ------- evaluating input: Input(name=`incorrectoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['roses', "calicheamicin, because it was present in the river Styx at the time of Alexander's death // white hellebore (veratrum album) because Plutarch mentioned this plant in his account of Alexander's death // an unknown plant that has never been used since"]`
----> answers: `["calicheamicin, because it was present in the river Styx at the time of Alexander's death // white hellebore (veratrum album) because Plutarch mentioned this plant in his account of Alexander's death // an unknown plant that has never been used since", 'roses']` - type: `<class 'list'>`
----> baseline_answer: `Hemlock // Nightshade // Mandrake` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
Skipping element `hiddenName` since it is not visible.
 --> Per-instance overall score: 0.31227161832474926
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6666666666666666, 0.4, 0.8, 0.28571428571428575, 1.0, 0.0, 0.22222222222222224, 0.0, 0.33333333333333337, 0.0, 0.2641509433962264, 0.0, 0.0, 0.0, 0.27906976744186046, 0.2105263157894737, 0.6666666666666666, 0.3636363636363636, 1.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.5, 1.0, 0.2222222222222222, 1.0, 0.11764705882352941, 0.0, 0.25, 0.5, 0.33333333333333337, 1.0, 0.0, 1.0, 0.2222222222222222, 0.4, 0.33333333333333337, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.4444444444444445, 0.4444444444444445, 0.4615384615384615, 1.0, 0.2, 1.0, 0.0, 0.4444444444444444, 0.1, 0.15789473684210528, 0.13333333333333333, 0.5, 0.16666666666666666, 0.4444444444444445, 0.22222222222222224, 0.5, 0.0, 0.14285714285714288, 0.1818181818181818, 0.16666666666666666, 0.0, 0.5, 0.0, 0.6666666666666666, 0.14285714285714288, 0.3333333333333333, 0.13333333333333333, 0.08333333333333334, 0.1, 0.4, 0.0, 0.6666666666666666, 0.0, 1.0, 0.0, 0.2727272727272727, 0.15384615384615383, 0.0, 0.22222222222222224, 0.41379310344827586, 0.10526315789473684, 0.6666666666666666, 0.0, 0.5806451612903225, 0.11428571428571428, 0.923076923076923, 0.06451612903225806, 0.7272727272727273, 0.0, 0.22222222222222224, 0.17142857142857143, 0.4444444444444444, 0.20833333333333334, 0.10526315789473682, 0.05555555555555556, 0.5833333333333334, 0.07017543859649122, 0.08695652173913043, 0.14634146341463417, 0.125, 0.05714285714285714, 0.8, 0.13333333333333333, 0.0, 0.0, 1.0, 0.13333333333333333, 0.22222222222222224, 0.3448275862068966, 0.35294117647058826, 0.10256410256410257, 0.0, 0.10810810810810811, 0.25, 0.4800000000000001, 0.11764705882352941, 0.24390243902439024, 0.6666666666666666, 0.6, 0.5714285714285715, 0.0, 0.0, 0.0, 0.0, 0.15384615384615385, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.2, 0.6666666666666667, 0.18181818181818182, 0.1, 0.0, 0.1, 0.0, 0.14285714285714288, 0.0, 0.7000000000000001, 0.0, 0.17391304347826086, 0.4444444444444445, 1.0, 0.2222222222222222, 1.0, 0.5, 1.0, 0.7142857142857143, 0.0, 0.0, 1.0, 0.4, 1.0, 0.0, 0.15384615384615385, 0.2758620689655172, 0.33333333333333337, 0.1818181818181818, 0.35294117647058826, 0.3571428571428571, 0.7142857142857143, 0.16666666666666669, 0.28571428571428575, 0.16326530612244897, 0.2222222222222222, 0.0, 0.08, 0.1081081081081081, 0.21052631578947367, 0.12121212121212123, 0.4, 0.0, 0.8, 0.30769230769230765, 1.0, 0.0, 0.1818181818181818, 0.23529411764705882, 0.7999999999999999, 0.17391304347826086, 0.15384615384615383, 0.13793103448275862, 1.0, 0.25, 1.0, 0.25, 0.2222222222222222, 0.0, 0.3529411764705882, 0.17142857142857143, 1.0, 0.4, 0.0, 0.0, 0.0, 0.16666666666666666, 0.25, 0.0, 0.2222222222222222, 0.0, 1.0, 0.06451612903225806, 0.22222222222222224, 0.3333333333333333, 0.28571428571428575, 0.19354838709677416, 0.6666666666666666, 0.16666666666666666, 0.5, 0.25, 0.4, 0.0]}
instance_id: 34823 <-> row_number: 88
Could not find input field with name `correctoptions-13`
Could not find input field with name `correctoptions-14`
Could not find input field with name `correctoptions-15`
Could not find input field with name `correctoptions-16`
Could not find input field with name `correctoptions-17`
Could not find input field with name `correctoptions-18`
Could not find input field with name `correctoptions-19`
Could not find input field with name `correctoptions-20`
Could not find input field with name `correctoptions-21`
Could not find input field with name `correctoptions-22`
Could not find input field with name `incorrectoptions-13`
Could not find input field with name `incorrectoptions-14`
Could not find input field with name `incorrectoptions-15`
Could not find input field with name `incorrectoptions-16`
Could not find input field with name `incorrectoptions-17`
Could not find input field with name `incorrectoptions-18`
Could not find input field with name `incorrectoptions-19`
Could not find input field with name `incorrectoptions-20`
Could not find input field with name `incorrectoptions-21`
Could not find input field with name `incorrectoptions-22`
 --> inputs: ['correctoptions-0', 'incorrectoptions-0', 'correctoptions-1', 'incorrectoptions-1', 'correctoptions-2', 'incorrectoptions-2', 'correctoptions-3', 'incorrectoptions-3', 'correctoptions-4', 'incorrectoptions-4', 'correctoptions-5', 'incorrectoptions-5', 'correctoptions-6', 'incorrectoptions-6', 'correctoptions-7', 'incorrectoptions-7', 'correctoptions-8', 'incorrectoptions-8', 'correctoptions-9', 'incorrectoptions-9', 'correctoptions-10', 'incorrectoptions-10', 'correctoptions-11', 'incorrectoptions-11', 'correctoptions-12', 'incorrectoptions-12', 'hiddenName']
 --> Looking up gold labels from row index 88 of `input.csv` (unique inputs). 
 --> input labels: {'correctoptions-0': ['He was skeptical of the extremes of democracy', 'Bin Ladin'], 'incorrectoptions-0': ['He was excited by it', 'teaching'], 'correctoptions-1': ['Yes, Democracy in America appeared in two volumes between 1835 and 1840', "Compare Binalshibh's"], 'incorrectoptions-1': ['No, they were written afterwards', 'around'], 'correctoptions-2': ['No, he did not', 'Binalshibh from'], 'incorrectoptions-2': ['Yes, he did', 'primary'], 'correctoptions-3': ['Paragraph did not specify', 'community'], 'incorrectoptions-3': ['Yes, they did', 'considered'], 'correctoptions-4': ['Democracy in America', 'notified'], 'incorrectoptions-4': ['Democracy in the World', 'drug'], 'correctoptions-5': ["Louis Napoleon Bonaparte's 2 December 1851 coup", 'concern'], 'incorrectoptions-5': ['He became old', 'lived in Germany'], 'correctoptions-6': ['He advocated parliamentary government, but was skeptical of the extremes of democracy', 'highjacker'], 'incorrectoptions-6': ['He advocated extremes of democracy and worried about parliamentary government', 'Barnett'], 'correctoptions-7': ['{}', 'proclaimed that'], 'incorrectoptions-7': ['{}', 'highest duty'], 'correctoptions-8': ['{}', 'became a close'], 'incorrectoptions-8': ['{}', 'mistakes besides'], 'correctoptions-9': ['{}', 'Patricia'], 'incorrectoptions-9': ['{}', 'Predator'], 'correctoptions-10': ['{}', 'Barnett'], 'incorrectoptions-10': ['{}', 'Muslim was'], 'correctoptions-11': ['{}', 'Hellfire'], 'incorrectoptions-11': ['{}', 'Who that'], 'correctoptions-12': ['{}', 'Binalshibh'], 'incorrectoptions-12': ['{}', 'CIA management'], 'hiddenName': ['{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-0
Executing one action: self.actions.modify_text('correctoptions-0', 'skeptical')
Add text `skeptical` to this text input: <input type="text" name="correctoptions-0">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-0
Executing one action: self.actions.modify_text('incorrectoptions-0', 'Skeptic of democracy // Uninterested in politics')
Add text `Skeptic of democracy // Uninterested in politics` to this text input: <input type="text" name="incorrectoptions-0">
 - - - - - -  starting a new element: `Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-1
Executing one action: self.actions.modify_text('correctoptions-1', 'Yes')
Add text `Yes` to this text input: <input type="text" name="correctoptions-1">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-1
Executing one action: self.actions.modify_text('incorrectoptions-1', 'Yes // No')
Add text `Yes // No` to this text input: <input type="text" name="incorrectoptions-1">
 - - - - - -  starting a new element: `Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-2
Executing one action: self.actions.modify_text('correctoptions-2', 'Yes')
Add text `Yes` to this text input: <input type="text" name="correctoptions-2">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-2
Executing one action: self.actions.modify_text('incorrectoptions-2', 'Yes // No')
Add text `Yes // No` to this text input: <input type="text" name="incorrectoptions-2">
 - - - - - -  starting a new element: `Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-3
Executing one action: self.actions.modify_text('correctoptions-3', 'Skeptical')
self.actions.modify_text('incorrectoptions-3', 'Fully supportive//Indifferent//Unaware')
Add text `Skeptical` to this text input: <input type="text" name="correctoptions-3">
Add text `Fully supportive//Indifferent//Unaware` to this text input: <input type="text" name="incorrectoptions-3">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-3
Executing one action: self.actions.modify_text('incorrectoptions-3', 'He approved of moderate democracy // He disliked all forms of government')
Add text `He approved of moderate democracy // He disliked all forms of government` to this text input: <input type="text" name="incorrectoptions-3" value="Fully supportive//Indifferent//Unaware">
 - - - - - -  starting a new element: `Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-4
Executing one action: self.actions.modify_text('correctoptions-4', 'Democracy in America // The Old Regime and the Revolution')
self.actions.modify_text('incorrectoptions-4', 'The French State Under Louis XIV // Travels in the United States')
Add text `Democracy in America // The Old Regime and the Revolution` to this text input: <input type="text" name="correctoptions-4">
Add text `The French State Under Louis XIV // Travels in the United States` to this text input: <input type="text" name="incorrectoptions-4">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-4
Executing one action: self.actions.modify_text('incorrectoptions-4', 'Democracy in France // The Old Regime in America')
Add text `Democracy in France // The Old Regime in America` to this text input: <input type="text" name="incorrectoptions-4" value="The French State Under Louis XIV // Travels in the United States">
 - - - - - -  starting a new element: `Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-5
Executing one action: self.actions.modify_text('correctoptions-5', 'Louis Napoleon Bonaparte\'s 2 December 1851 coup')
self.actions.modify_text('incorrectoptions-5', 'The July Monarchy // The publishing of The Old Regime and the Revolution // His travels in the United States')
Add text `Louis Napoleon Bonaparte's 2 December 1851 coup` to this text input: <input type="text" name="correctoptions-5">
Add text `The July Monarchy // The publishing of The Old Regime and the Revolution // His travels in the United States` to this text input: <input type="text" name="incorrectoptions-5">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-5
Executing one action: self.actions.modify_text('incorrectoptions-5', 'Death of King Louis XIV // Publication of The Social Contract // The discovery of the New World')
Add text `Death of King Louis XIV // Publication of The Social Contract // The discovery of the New World` to this text input: <input type="text" name="incorrectoptions-5" value="The July Monarchy // The publishing of The Old Regime and the Revolution // His travels in the United States">
 - - - - - -  starting a new element: `Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-6
Executing one action: self.actions.modify_text('correctoptions-6', 'Skeptical of its unrestrained forms')
self.actions.modify_text('incorrectoptions-6', 'Fully supportive without reservation // Indifferent // Opposed to all forms of it')
Add text `Skeptical of its unrestrained forms` to this text input: <input type="text" name="correctoptions-6">
Add text `Fully supportive without reservation // Indifferent // Opposed to all forms of it` to this text input: <input type="text" name="incorrectoptions-6">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-6
Executing one action: self.actions.modify_text('incorrectoptions-6', 'He opposed it completely // He was indifferent // He believed it was perfect')
Add text `He opposed it completely // He was indifferent // He believed it was perfect` to this text input: <input type="text" name="incorrectoptions-6" value="Fully supportive without reservation // Indifferent // Opposed to all forms of it">
 - - - - - -  starting a new element: `Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-7
Executing one action: self.actions.modify_text('correctoptions-7', '46 years old // Skeptical of democracy but not strictly against it')
Add text `46 years old // Skeptical of democracy but not strictly against it` to this text input: <input type="text" name="correctoptions-7">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-7
Executing one action: self.actions.modify_text('incorrectoptions-7', '45 years old // 70 years old // 25 years old')
Add text `45 years old // 70 years old // 25 years old` to this text input: <input type="text" name="incorrectoptions-7">
 - - - - - -  starting a new element: `Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-8
Executing one action: self.actions.modify_text('correctoptions-8', 'The Old Regime and the Revolution')
self.actions.modify_text('incorrectoptions-8', 'Democracy in America // Reflections on the Revolution in France // The Social Contract')
Add text `The Old Regime and the Revolution` to this text input: <input type="text" name="correctoptions-8">
Add text `Democracy in America // Reflections on the Revolution in France // The Social Contract` to this text input: <input type="text" name="incorrectoptions-8">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-8
Executing one action: self.actions.modify_text('incorrectoptions-8', 'Democracy in America was published before the February 1848 Revolution//The Old Regime and the Revolution was published before the February 1848 Revolution')
Add text `Democracy in America was published before the February 1848 Revolution//The Old Regime and the Revolution was published before the February 1848 Revolution` to this text input: <input type="text" name="incorrectoptions-8" value="Democracy in America // Reflections on the Revolution in France // The Social Contract">
 - - - - - -  starting a new element: `Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-9
Executing one action: self.actions.modify_text('correctoptions-9', 'France//United States')
self.actions.modify_text('incorrectoptions-9', 'England//Germany')
Add text `France//United States` to this text input: <input type="text" name="correctoptions-9">
Add text `England//Germany` to this text input: <input type="text" name="incorrectoptions-9">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-9
Executing one action: self.actions.modify_text('incorrectoptions-9', 'France // Germany // The United Kingdom')
Add text `France // Germany // The United Kingdom` to this text input: <input type="text" name="incorrectoptions-9" value="England//Germany">
 - - - - - -  starting a new element: `Input(name=`correctoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-10
Executing one action: self.actions.modify_text('correctoptions-10', 'A French political thinker and historian // The author of Democracy in America and The Old Regime and the Revolution')
self.actions.modify_text('incorrectoptions-10', 'A British novelist // An American president // A French painter')
Add text `A French political thinker and historian // The author of Democracy in America and The Old Regime and the Revolution` to this text input: <input type="text" name="correctoptions-10">
Add text `A British novelist // An American president // A French painter` to this text input: <input type="text" name="incorrectoptions-10">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-10
Executing one action: self.actions.modify_text('incorrectoptions-10', 'A political leader//A historian//A fiction writer')
Add text `A political leader//A historian//A fiction writer` to this text input: <input type="text" name="incorrectoptions-10" value="A British novelist // An American president // A French painter">
 - - - - - -  starting a new element: `Input(name=`correctoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-11
Executing one action: self.actions.modify_text('correctoptions-11', 'An early work of sociology and political science')
self.actions.modify_text('incorrectoptions-11', 'A novel // A collection of poems // A travel guide')
Add text `An early work of sociology and political science` to this text input: <input type="text" name="correctoptions-11">
Add text `A novel // A collection of poems // A travel guide` to this text input: <input type="text" name="incorrectoptions-11">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-11
Executing one action: self.actions.modify_text('incorrectoptions-11', 'A political campaign // A diary')
Add text `A political campaign // A diary` to this text input: <input type="text" name="incorrectoptions-11" value="A novel // A collection of poems // A travel guide">
 - - - - - -  starting a new element: `Input(name=`correctoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-12
Executing one action: self.actions.modify_text('correctoptions-12', '21 years')
Add text `21 years` to this text input: <input type="text" name="correctoptions-12">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-12
Executing one action: self.actions.modify_text('incorrectoptions-12', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
Skipping element `hiddenName` since it is not visible.
input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['skeptical']
 visible_values : ['skeptical']
input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Skeptic of democracy // Uninterested in politics']
 visible_values : ['Skeptic of democracy // Uninterested in politics']
input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Yes // No']
 visible_values : ['Yes // No']
input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Yes // No']
 visible_values : ['Yes // No']
input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Skeptical']
 visible_values : ['Skeptical']
input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['He approved of moderate democracy // He disliked all forms of government']
 visible_values : ['He approved of moderate democracy // He disliked all forms of government']
input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Democracy in America // The Old Regime and the Revolution']
 visible_values : ['Democracy in America // The Old Regime and the Revolution']
input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Democracy in France // The Old Regime in America']
 visible_values : ['Democracy in France // The Old Regime in America']
input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ["Louis Napoleon Bonaparte's 2 December 1851 coup"]
 visible_values : ["Louis Napoleon Bonaparte's 2 December 1851 coup"]
input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Death of King Louis XIV // Publication of The Social Contract // The discovery of the New World']
 visible_values : ['Death of King Louis XIV // Publication of The Social Contract // The discovery of the New World']
input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Skeptical of its unrestrained forms']
 visible_values : ['Skeptical of its unrestrained forms']
input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['He opposed it completely // He was indifferent // He believed it was perfect']
 visible_values : ['He opposed it completely // He was indifferent // He believed it was perfect']
input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['46 years old // Skeptical of democracy but not strictly against it']
 visible_values : ['46 years old // Skeptical of democracy but not strictly against it']
input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['45 years old // 70 years old // 25 years old']
 visible_values : ['45 years old // 70 years old // 25 years old']
input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['The Old Regime and the Revolution']
 visible_values : ['The Old Regime and the Revolution']
input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Democracy in America was published before the February 1848 Revolution//The Old Regime and the Revolution was published before the February 1848 Revolution']
 visible_values : ['Democracy in America was published before the February 1848 Revolution//The Old Regime and the Revolution was published before the February 1848 Revolution']
input: Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['France//United States']
 visible_values : ['France//United States']
input: Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['France // Germany // The United Kingdom']
 visible_values : ['France // Germany // The United Kingdom']
input: Input(name=`correctoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['A French political thinker and historian // The author of Democracy in America and The Old Regime and the Revolution']
 visible_values : ['A French political thinker and historian // The author of Democracy in America and The Old Regime and the Revolution']
input: Input(name=`incorrectoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['A political leader//A historian//A fiction writer']
 visible_values : ['A political leader//A historian//A fiction writer']
input: Input(name=`correctoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['An early work of sociology and political science']
 visible_values : ['An early work of sociology and political science']
input: Input(name=`incorrectoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['A political campaign // A diary']
 visible_values : ['A political campaign // A diary']
input: Input(name=`correctoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['21 years']
 visible_values : ['21 years']
input: Input(name=`incorrectoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : [None]
 visible_values : [None]
input: Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : [None]
 visible_values : [None]
 ------- evaluating input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['He was skeptical of the extremes of democracy', 'Bin Ladin']`
----> answers: `['He was skeptical of the extremes of democracy', 'Bin Ladin']` - type: `<class 'list'>`
----> baseline_answer: `skeptical` - type: `<class 'str'>`
 --> scores:  0.2222222222222222
----> per-field score: 0.2222222222222222
 ------- evaluating input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['He was excited by it', 'teaching']`
----> answers: `['teaching', 'He was excited by it']` - type: `<class 'list'>`
----> baseline_answer: `Skeptic of democracy // Uninterested in politics` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Yes, Democracy in America appeared in two volumes between 1835 and 1840', "Compare Binalshibh's"]`
----> answers: `['Yes, Democracy in America appeared in two volumes between 1835 and 1840', "Compare Binalshibh's"]` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
 --> scores:  0.15384615384615385
----> per-field score: 0.15384615384615385
 ------- evaluating input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['No, they were written afterwards', 'around']`
----> answers: `['No, they were written afterwards', 'around']` - type: `<class 'list'>`
----> baseline_answer: `Yes // No` - type: `<class 'str'>`
 --> scores:  0.28571428571428575
----> per-field score: 0.28571428571428575
 ------- evaluating input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['No, he did not', 'Binalshibh from']`
----> answers: `['Binalshibh from', 'No, he did not']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Yes, he did', 'primary']`
----> answers: `['primary', 'Yes, he did']` - type: `<class 'list'>`
----> baseline_answer: `Yes // No` - type: `<class 'str'>`
 --> scores:  0.4
----> per-field score: 0.4
 ------- evaluating input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Paragraph did not specify', 'community']`
----> answers: `['Paragraph did not specify', 'community']` - type: `<class 'list'>`
----> baseline_answer: `Skeptical` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Yes, they did', 'considered']`
----> answers: `['Yes, they did', 'considered']` - type: `<class 'list'>`
----> baseline_answer: `He approved of moderate democracy // He disliked all forms of government` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Democracy in America', 'notified']`
----> answers: `['Democracy in America', 'notified']` - type: `<class 'list'>`
----> baseline_answer: `Democracy in America // The Old Regime and the Revolution` - type: `<class 'str'>`
 --> scores:  0.5
----> per-field score: 0.5
 ------- evaluating input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Democracy in the World', 'drug']`
----> answers: `['drug', 'Democracy in the World']` - type: `<class 'list'>`
----> baseline_answer: `Democracy in France // The Old Regime in America` - type: `<class 'str'>`
 --> scores:  0.5
----> per-field score: 0.5
 ------- evaluating input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `["Louis Napoleon Bonaparte's 2 December 1851 coup", 'concern']`
----> answers: `['concern', "Louis Napoleon Bonaparte's 2 December 1851 coup"]` - type: `<class 'list'>`
----> baseline_answer: `Louis Napoleon Bonaparte's 2 December 1851 coup` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['He became old', 'lived in Germany']`
----> answers: `['He became old', 'lived in Germany']` - type: `<class 'list'>`
----> baseline_answer: `Death of King Louis XIV // Publication of The Social Contract // The discovery of the New World` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['He advocated parliamentary government, but was skeptical of the extremes of democracy', 'highjacker']`
----> answers: `['highjacker', 'He advocated parliamentary government, but was skeptical of the extremes of democracy']` - type: `<class 'list'>`
----> baseline_answer: `Skeptical of its unrestrained forms` - type: `<class 'str'>`
 --> scores:  0.23529411764705882
----> per-field score: 0.23529411764705882
 ------- evaluating input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['He advocated extremes of democracy and worried about parliamentary government', 'Barnett']`
----> answers: `['Barnett', 'He advocated extremes of democracy and worried about parliamentary government']` - type: `<class 'list'>`
----> baseline_answer: `He opposed it completely // He was indifferent // He believed it was perfect` - type: `<class 'str'>`
 --> scores:  0.0909090909090909
----> per-field score: 0.0909090909090909
 ------- evaluating input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['', 'proclaimed that']`
----> answers: `['', 'proclaimed that']` - type: `<class 'list'>`
----> baseline_answer: `46 years old // Skeptical of democracy but not strictly against it` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['', 'highest duty']`
----> answers: `['', 'highest duty']` - type: `<class 'list'>`
----> baseline_answer: `45 years old // 70 years old // 25 years old` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['', 'became a close']`
----> answers: `['', 'became a close']` - type: `<class 'list'>`
----> baseline_answer: `The Old Regime and the Revolution` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['', 'mistakes besides']`
----> answers: `['', 'mistakes besides']` - type: `<class 'list'>`
----> baseline_answer: `Democracy in America was published before the February 1848 Revolution//The Old Regime and the Revolution was published before the February 1848 Revolution` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['', 'Patricia']`
----> answers: `['', 'Patricia']` - type: `<class 'list'>`
----> baseline_answer: `France//United States` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['', 'Predator']`
----> answers: `['', 'Predator']` - type: `<class 'list'>`
----> baseline_answer: `France // Germany // The United Kingdom` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['', 'Barnett']`
----> answers: `['', 'Barnett']` - type: `<class 'list'>`
----> baseline_answer: `A French political thinker and historian // The author of Democracy in America and The Old Regime and the Revolution` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`incorrectoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['', 'Muslim was']`
----> answers: `['', 'Muslim was']` - type: `<class 'list'>`
----> baseline_answer: `A political leader//A historian//A fiction writer` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['', 'Hellfire']`
----> answers: `['', 'Hellfire']` - type: `<class 'list'>`
----> baseline_answer: `An early work of sociology and political science` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`incorrectoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['', 'Who that']`
----> answers: `['', 'Who that']` - type: `<class 'list'>`
----> baseline_answer: `A political campaign // A diary` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['', 'Binalshibh']`
----> answers: `['', 'Binalshibh']` - type: `<class 'list'>`
----> baseline_answer: `21 years` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`incorrectoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['', 'CIA management']`
----> answers: `['', 'CIA management']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
Skipping element `hiddenName` since it is not visible.
 --> Per-instance overall score: 0.13030714885918507
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6666666666666666, 0.4, 0.8, 0.28571428571428575, 1.0, 0.0, 0.22222222222222224, 0.0, 0.33333333333333337, 0.0, 0.2641509433962264, 0.0, 0.0, 0.0, 0.27906976744186046, 0.2105263157894737, 0.6666666666666666, 0.3636363636363636, 1.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.5, 1.0, 0.2222222222222222, 1.0, 0.11764705882352941, 0.0, 0.25, 0.5, 0.33333333333333337, 1.0, 0.0, 1.0, 0.2222222222222222, 0.4, 0.33333333333333337, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.4444444444444445, 0.4444444444444445, 0.4615384615384615, 1.0, 0.2, 1.0, 0.0, 0.4444444444444444, 0.1, 0.15789473684210528, 0.13333333333333333, 0.5, 0.16666666666666666, 0.4444444444444445, 0.22222222222222224, 0.5, 0.0, 0.14285714285714288, 0.1818181818181818, 0.16666666666666666, 0.0, 0.5, 0.0, 0.6666666666666666, 0.14285714285714288, 0.3333333333333333, 0.13333333333333333, 0.08333333333333334, 0.1, 0.4, 0.0, 0.6666666666666666, 0.0, 1.0, 0.0, 0.2727272727272727, 0.15384615384615383, 0.0, 0.22222222222222224, 0.41379310344827586, 0.10526315789473684, 0.6666666666666666, 0.0, 0.5806451612903225, 0.11428571428571428, 0.923076923076923, 0.06451612903225806, 0.7272727272727273, 0.0, 0.22222222222222224, 0.17142857142857143, 0.4444444444444444, 0.20833333333333334, 0.10526315789473682, 0.05555555555555556, 0.5833333333333334, 0.07017543859649122, 0.08695652173913043, 0.14634146341463417, 0.125, 0.05714285714285714, 0.8, 0.13333333333333333, 0.0, 0.0, 1.0, 0.13333333333333333, 0.22222222222222224, 0.3448275862068966, 0.35294117647058826, 0.10256410256410257, 0.0, 0.10810810810810811, 0.25, 0.4800000000000001, 0.11764705882352941, 0.24390243902439024, 0.6666666666666666, 0.6, 0.5714285714285715, 0.0, 0.0, 0.0, 0.0, 0.15384615384615385, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.2, 0.6666666666666667, 0.18181818181818182, 0.1, 0.0, 0.1, 0.0, 0.14285714285714288, 0.0, 0.7000000000000001, 0.0, 0.17391304347826086, 0.4444444444444445, 1.0, 0.2222222222222222, 1.0, 0.5, 1.0, 0.7142857142857143, 0.0, 0.0, 1.0, 0.4, 1.0, 0.0, 0.15384615384615385, 0.2758620689655172, 0.33333333333333337, 0.1818181818181818, 0.35294117647058826, 0.3571428571428571, 0.7142857142857143, 0.16666666666666669, 0.28571428571428575, 0.16326530612244897, 0.2222222222222222, 0.0, 0.08, 0.1081081081081081, 0.21052631578947367, 0.12121212121212123, 0.4, 0.0, 0.8, 0.30769230769230765, 1.0, 0.0, 0.1818181818181818, 0.23529411764705882, 0.7999999999999999, 0.17391304347826086, 0.15384615384615383, 0.13793103448275862, 1.0, 0.25, 1.0, 0.25, 0.2222222222222222, 0.0, 0.3529411764705882, 0.17142857142857143, 1.0, 0.4, 0.0, 0.0, 0.0, 0.16666666666666666, 0.25, 0.0, 0.2222222222222222, 0.0, 1.0, 0.06451612903225806, 0.22222222222222224, 0.3333333333333333, 0.28571428571428575, 0.19354838709677416, 0.6666666666666666, 0.16666666666666666, 0.5, 0.25, 0.4, 0.0, 0.2222222222222222, 0.0, 0.15384615384615385, 0.28571428571428575, 0.0, 0.4, 0.0, 0.0, 0.5, 0.5, 1.0, 0.0, 0.23529411764705882, 0.0909090909090909, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 34781 <-> row_number: 46
Could not find input field with name `correctoptions-10`
Could not find input field with name `correctoptions-11`
Could not find input field with name `correctoptions-12`
Could not find input field with name `correctoptions-13`
Could not find input field with name `correctoptions-14`
Could not find input field with name `correctoptions-15`
Could not find input field with name `correctoptions-16`
Could not find input field with name `correctoptions-17`
Could not find input field with name `correctoptions-18`
Could not find input field with name `correctoptions-19`
Could not find input field with name `correctoptions-20`
Could not find input field with name `correctoptions-21`
Could not find input field with name `correctoptions-22`
Could not find input field with name `incorrectoptions-10`
Could not find input field with name `incorrectoptions-11`
Could not find input field with name `incorrectoptions-12`
Could not find input field with name `incorrectoptions-13`
Could not find input field with name `incorrectoptions-14`
Could not find input field with name `incorrectoptions-15`
Could not find input field with name `incorrectoptions-16`
Could not find input field with name `incorrectoptions-17`
Could not find input field with name `incorrectoptions-18`
Could not find input field with name `incorrectoptions-19`
Could not find input field with name `incorrectoptions-20`
Could not find input field with name `incorrectoptions-21`
Could not find input field with name `incorrectoptions-22`
 --> inputs: ['correctoptions-0', 'incorrectoptions-0', 'correctoptions-1', 'incorrectoptions-1', 'correctoptions-2', 'incorrectoptions-2', 'correctoptions-3', 'incorrectoptions-3', 'correctoptions-4', 'incorrectoptions-4', 'correctoptions-5', 'incorrectoptions-5', 'correctoptions-6', 'incorrectoptions-6', 'correctoptions-7', 'incorrectoptions-7', 'correctoptions-8', 'incorrectoptions-8', 'correctoptions-9', 'incorrectoptions-9', 'hiddenName']
 --> Looking up gold labels from row index 46 of `input.csv` (unique inputs). 
 --> input labels: {'correctoptions-0': ['Binalshibh and Atta', 'the red ball'], 'incorrectoptions-0': ['teaching', 'the green ball // the purple ball'], 'correctoptions-1': ["Compare Binalshibh's", 'called the blue ball stupid'], 'incorrectoptions-1': ['ordered', "let out the blue ball's air // laughed at the red ball"], 'correctoptions-2': ['Reagan National Airport', 'because the blue ball was scared of the red ball'], 'incorrectoptions-2': ['went to Germany', "because it didn't have any air // because it liked the red ball"], 'correctoptions-3': ['Government', 'the prurple ball'], 'incorrectoptions-3': ['searching', 'the orange ball // the air-less green ball'], 'correctoptions-4': ['Binalshibh use', "because they feared that their air would be taken // because they didn't want to have their air taken away"], 'incorrectoptions-4': ['drug', 'because the red ball told them to be quiet // because the blue ball would be scared'], 'correctoptions-5': ['take place', 'the red ball'], 'incorrectoptions-5': ['which times', 'the green ball // the orange ball'], 'correctoptions-6': ['e passed between', 'because the green ball called the orange ball stupid'], 'incorrectoptions-6': ['Atta first met and when', 'because the red ball told them to // because the pruple ball made them'], 'correctoptions-7': ['aircraft began', 'they were afraid of losing their air'], 'incorrectoptions-7': ['the safety', "they didn't want to hurt anyone's feelings // the orange ball was mean to them"], 'correctoptions-8': ['became a close', 'because the purple ball was mean'], 'incorrectoptions-8': ['friend of Binalshibh', 'because the blue ball needed air // because the green ball asked them to'], 'correctoptions-9': ['identified', 'because it was scared of the red ball'], 'incorrectoptions-9': ['extremist outlook', "because it didn't have any air // becuase it was friends with the purple ball"], 'hiddenName': ['{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-0
Executing one action: self.actions.modify_text('correctoptions-0', 'the red ball')
Add text `the red ball` to this text input: <input type="text" name="correctoptions-0">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-0
Executing one action: self.actions.modify_text('incorrectoptions-0', 'The red ball // The orange ball // The purple ball')
Add text `The red ball // The orange ball // The purple ball` to this text input: <input type="text" name="incorrectoptions-0">
 - - - - - -  starting a new element: `Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-1
Executing one action: self.actions.modify_text('correctoptions-1', 'Told the orange ball that blue ball was stupid // Made fun of the blue ball')
Add text `Told the orange ball that blue ball was stupid // Made fun of the blue ball` to this text input: <input type="text" name="correctoptions-1">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-1
Executing one action: self.actions.modify_text('incorrectoptions-1', 'Told the red ball // Said hello to the orange ball // Went to cry to the red ball')
Add text `Told the red ball // Said hello to the orange ball // Went to cry to the red ball` to this text input: <input type="text" name="incorrectoptions-1">
 - - - - - -  starting a new element: `Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-2
Executing one action: self.actions.modify_text('correctoptions-2', 'Because the blue ball was scared')
Add text `Because the blue ball was scared` to this text input: <input type="text" name="correctoptions-2">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-2
Executing one action: self.actions.modify_text('incorrectoptions-2', 'Because the blue ball rolled away // The green ball thought the blue ball was too slow')
Add text `Because the blue ball rolled away // The green ball thought the blue ball was too slow` to this text input: <input type="text" name="incorrectoptions-2">
 - - - - - -  starting a new element: `Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-3
Executing one action: self.actions.modify_text('correctoptions-3', 'the purple ball')
self.actions.modify_text('incorrectoptions-3', 'the red ball // the orange ball // the blue ball')
Add text `the purple ball` to this text input: <input type="text" name="correctoptions-3">
Add text `the red ball // the orange ball // the blue ball` to this text input: <input type="text" name="incorrectoptions-3">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-3
Executing one action: self.actions.modify_text('incorrectoptions-3', 'The red ball // The green ball // The orange ball')
Add text `The red ball // The green ball // The orange ball` to this text input: <input type="text" name="incorrectoptions-3" value="the red ball // the orange ball // the blue ball">
 - - - - - -  starting a new element: `Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-4
Executing one action: self.actions.modify_text('correctoptions-4', 'Seeing the air-less green ball')
self.actions.modify_text('incorrectoptions-4', 'Fear of the purple ball // The red ball’s speech')
Add text `Seeing the air-less green ball` to this text input: <input type="text" name="correctoptions-4">
Add text `Fear of the purple ball // The red ball’s speech` to this text input: <input type="text" name="incorrectoptions-4">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-4
Executing one action: self.actions.modify_text('incorrectoptions-4', 'They were afraid of making noise // They were afraid of the red ball // They thought bad things were funny')
Add text `They were afraid of making noise // They were afraid of the red ball // They thought bad things were funny` to this text input: <input type="text" name="incorrectoptions-4" value="Fear of the purple ball // The red ball’s speech">
 - - - - - -  starting a new element: `Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-5
Executing one action: self.actions.modify_text('correctoptions-5', 'the red ball')
self.actions.modify_text('incorrectoptions-5', 'the orange ball // the green ball // the purple ball')
Add text `the red ball` to this text input: <input type="text" name="correctoptions-5">
Add text `the orange ball // the green ball // the purple ball` to this text input: <input type="text" name="incorrectoptions-5">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-5
Executing one action: self.actions.modify_text('incorrectoptions-5', 'Red ball // Orange ball // Green ball')
Add text `Red ball // Orange ball // Green ball` to this text input: <input type="text" name="incorrectoptions-5" value="the orange ball // the green ball // the purple ball">
 - - - - - -  starting a new element: `Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-6
Executing one action: self.actions.modify_text('correctoptions-6', 'Because it said mean things // For being rude // For spreading rumors')
self.actions.modify_text('incorrectoptions-6', 'Because it was the wrong color // For no reason // Because it was too round')
Add text `Because it said mean things // For being rude // For spreading rumors` to this text input: <input type="text" name="correctoptions-6">
Add text `Because it was the wrong color // For no reason // Because it was too round` to this text input: <input type="text" name="incorrectoptions-6">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-6
Executing one action: self.actions.modify_text('incorrectoptions-6', 'Because he thought it was funny // Because he was jealous // Because the orange ball said so')
Add text `Because he thought it was funny // Because he was jealous // Because the orange ball said so` to this text input: <input type="text" name="incorrectoptions-6" value="Because it was the wrong color // For no reason // Because it was too round">
 - - - - - -  starting a new element: `Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-7
Executing one action: self.actions.modify_text('correctoptions-7', 'Because they saw what happened to the green ball // Fear of punishment')
self.actions.modify_text('incorrectoptions-7', 'They forgot how to speak // They were all mute by nature // The purple ball had magical powers')
Add text `Because they saw what happened to the green ball // Fear of punishment` to this text input: <input type="text" name="correctoptions-7">
Add text `They forgot how to speak // They were all mute by nature // The purple ball had magical powers` to this text input: <input type="text" name="incorrectoptions-7">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-7
Executing one action: self.actions.modify_text('incorrectoptions-7', 'Because they disliked the green ball // Because of the purple ball // To make snowmen')
Add text `Because they disliked the green ball // Because of the purple ball // To make snowmen` to this text input: <input type="text" name="incorrectoptions-7" value="They forgot how to speak // They were all mute by nature // The purple ball had magical powers">
 - - - - - -  starting a new element: `Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-8
Executing one action: self.actions.modify_text('correctoptions-8', '<Your correct option here>')
self.actions.modify_text('incorrectoptions-8', '<Your incorrect option1>//<Your incorrect option2>//<Your incorrect option3>')
Add text `<Your correct option here>` to this text input: <input type="text" name="correctoptions-8">
Add text `<Your incorrect option1>//<Your incorrect option2>//<Your incorrect option3>` to this text input: <input type="text" name="incorrectoptions-8">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-8
Executing one action: self.actions.modify_text('incorrectoptions-8', 'Because the red ball demanded justice // For being mean and frightful // To restore green ball’s status // They wanted a new leader')
Add text `Because the red ball demanded justice // For being mean and frightful // To restore green ball’s status // They wanted a new leader` to this text input: <input type="text" name="incorrectoptions-8" value="<Your incorrect option1>//<Your incorrect option2>//<Your incorrect option3>">
 - - - - - -  starting a new element: `Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-9
Executing one action: self.actions.modify_text('correctoptions-9', 'Because the blue ball was visibly upset // Because the blue ball cried')
self.actions.modify_text('incorrectoptions-9', 'Because it was a sunny day // Because the red ball told a joke')
Add text `Because the blue ball was visibly upset // Because the blue ball cried` to this text input: <input type="text" name="correctoptions-9">
Add text `Because it was a sunny day // Because the red ball told a joke` to this text input: <input type="text" name="incorrectoptions-9">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-9
Executing one action: self.actions.modify_text('incorrectoptions-9', 'Because blue ball said hello // Because blue ball was too shiny // Because blue ball was rolling too fast')
Add text `Because blue ball said hello // Because blue ball was too shiny // Because blue ball was rolling too fast` to this text input: <input type="text" name="incorrectoptions-9" value="Because it was a sunny day // Because the red ball told a joke">
 - - - - - -  starting a new element: `Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
Skipping element `hiddenName` since it is not visible.
input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['the red ball']
 visible_values : ['the red ball']
input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['The red ball // The orange ball // The purple ball']
 visible_values : ['The red ball // The orange ball // The purple ball']
input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Told the orange ball that blue ball was stupid // Made fun of the blue ball']
 visible_values : ['Told the orange ball that blue ball was stupid // Made fun of the blue ball']
input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Told the red ball // Said hello to the orange ball // Went to cry to the red ball']
 visible_values : ['Told the red ball // Said hello to the orange ball // Went to cry to the red ball']
input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Because the blue ball was scared']
 visible_values : ['Because the blue ball was scared']
input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Because the blue ball rolled away // The green ball thought the blue ball was too slow']
 visible_values : ['Because the blue ball rolled away // The green ball thought the blue ball was too slow']
input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['the purple ball']
 visible_values : ['the purple ball']
input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['The red ball // The green ball // The orange ball']
 visible_values : ['The red ball // The green ball // The orange ball']
input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Seeing the air-less green ball']
 visible_values : ['Seeing the air-less green ball']
input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['They were afraid of making noise // They were afraid of the red ball // They thought bad things were funny']
 visible_values : ['They were afraid of making noise // They were afraid of the red ball // They thought bad things were funny']
input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['the red ball']
 visible_values : ['the red ball']
input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Red ball // Orange ball // Green ball']
 visible_values : ['Red ball // Orange ball // Green ball']
input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Because it said mean things // For being rude // For spreading rumors']
 visible_values : ['Because it said mean things // For being rude // For spreading rumors']
input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Because he thought it was funny // Because he was jealous // Because the orange ball said so']
 visible_values : ['Because he thought it was funny // Because he was jealous // Because the orange ball said so']
input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Because they saw what happened to the green ball // Fear of punishment']
 visible_values : ['Because they saw what happened to the green ball // Fear of punishment']
input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Because they disliked the green ball // Because of the purple ball // To make snowmen']
 visible_values : ['Because they disliked the green ball // Because of the purple ball // To make snowmen']
input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['<Your correct option here>']
 visible_values : ['<Your correct option here>']
input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Because the red ball demanded justice // For being mean and frightful // To restore green ball’s status // They wanted a new leader']
 visible_values : ['Because the red ball demanded justice // For being mean and frightful // To restore green ball’s status // They wanted a new leader']
input: Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Because the blue ball was visibly upset // Because the blue ball cried']
 visible_values : ['Because the blue ball was visibly upset // Because the blue ball cried']
input: Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Because blue ball said hello // Because blue ball was too shiny // Because blue ball was rolling too fast']
 visible_values : ['Because blue ball said hello // Because blue ball was too shiny // Because blue ball was rolling too fast']
input: Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : [None]
 visible_values : [None]
 ------- evaluating input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Binalshibh and Atta', 'the red ball']`
----> answers: `['the red ball', 'Binalshibh and Atta']` - type: `<class 'list'>`
----> baseline_answer: `the red ball` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['teaching', 'the green ball // the purple ball']`
----> answers: `['teaching', 'the green ball // the purple ball']` - type: `<class 'list'>`
----> baseline_answer: `The red ball // The orange ball // The purple ball` - type: `<class 'str'>`
 --> scores:  0.6666666666666667
----> per-field score: 0.6666666666666667
 ------- evaluating input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `["Compare Binalshibh's", 'called the blue ball stupid']`
----> answers: `['called the blue ball stupid', "Compare Binalshibh's"]` - type: `<class 'list'>`
----> baseline_answer: `Told the orange ball that blue ball was stupid // Made fun of the blue ball` - type: `<class 'str'>`
 --> scores:  0.4
----> per-field score: 0.4
 ------- evaluating input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['ordered', "let out the blue ball's air // laughed at the red ball"]`
----> answers: `["let out the blue ball's air // laughed at the red ball", 'ordered']` - type: `<class 'list'>`
----> baseline_answer: `Told the red ball // Said hello to the orange ball // Went to cry to the red ball` - type: `<class 'str'>`
 --> scores:  0.3448275862068966
----> per-field score: 0.3448275862068966
 ------- evaluating input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Reagan National Airport', 'because the blue ball was scared of the red ball']`
----> answers: `['because the blue ball was scared of the red ball', 'Reagan National Airport']` - type: `<class 'list'>`
----> baseline_answer: `Because the blue ball was scared` - type: `<class 'str'>`
 --> scores:  0.7499999999999999
----> per-field score: 0.7499999999999999
 ------- evaluating input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['went to Germany', "because it didn't have any air // because it liked the red ball"]`
----> answers: `['went to Germany', "because it didn't have any air // because it liked the red ball"]` - type: `<class 'list'>`
----> baseline_answer: `Because the blue ball rolled away // The green ball thought the blue ball was too slow` - type: `<class 'str'>`
 --> scores:  0.20689655172413793
----> per-field score: 0.20689655172413793
 ------- evaluating input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Government', 'the prurple ball']`
----> answers: `['Government', 'the prurple ball']` - type: `<class 'list'>`
----> baseline_answer: `the purple ball` - type: `<class 'str'>`
 --> scores:  0.6666666666666666
----> per-field score: 0.6666666666666666
 ------- evaluating input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['searching', 'the orange ball // the air-less green ball']`
----> answers: `['searching', 'the orange ball // the air-less green ball']` - type: `<class 'list'>`
----> baseline_answer: `The red ball // The green ball // The orange ball` - type: `<class 'str'>`
 --> scores:  0.5882352941176471
----> per-field score: 0.5882352941176471
 ------- evaluating input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Binalshibh use', "because they feared that their air would be taken // because they didn't want to have their air taken away"]`
----> answers: `['Binalshibh use', "because they feared that their air would be taken // because they didn't want to have their air taken away"]` - type: `<class 'list'>`
----> baseline_answer: `Seeing the air-less green ball` - type: `<class 'str'>`
 --> scores:  0.07692307692307691
----> per-field score: 0.07692307692307691
 ------- evaluating input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['drug', 'because the red ball told them to be quiet // because the blue ball would be scared']`
----> answers: `['drug', 'because the red ball told them to be quiet // because the blue ball would be scared']` - type: `<class 'list'>`
----> baseline_answer: `They were afraid of making noise // They were afraid of the red ball // They thought bad things were funny` - type: `<class 'str'>`
 --> scores:  0.17142857142857143
----> per-field score: 0.17142857142857143
 ------- evaluating input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['take place', 'the red ball']`
----> answers: `['the red ball', 'take place']` - type: `<class 'list'>`
----> baseline_answer: `the red ball` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['which times', 'the green ball // the orange ball']`
----> answers: `['which times', 'the green ball // the orange ball']` - type: `<class 'list'>`
----> baseline_answer: `Red ball // Orange ball // Green ball` - type: `<class 'str'>`
 --> scores:  0.5
----> per-field score: 0.5
 ------- evaluating input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['e passed between', 'because the green ball called the orange ball stupid']`
----> answers: `['e passed between', 'because the green ball called the orange ball stupid']` - type: `<class 'list'>`
----> baseline_answer: `Because it said mean things // For being rude // For spreading rumors` - type: `<class 'str'>`
 --> scores:  0.09999999999999999
----> per-field score: 0.09999999999999999
 ------- evaluating input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Atta first met and when', 'because the red ball told them to // because the pruple ball made them']`
----> answers: `['Atta first met and when', 'because the red ball told them to // because the pruple ball made them']` - type: `<class 'list'>`
----> baseline_answer: `Because he thought it was funny // Because he was jealous // Because the orange ball said so` - type: `<class 'str'>`
 --> scores:  0.27586206896551724
----> per-field score: 0.27586206896551724
 ------- evaluating input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['aircraft began', 'they were afraid of losing their air']`
----> answers: `['aircraft began', 'they were afraid of losing their air']` - type: `<class 'list'>`
----> baseline_answer: `Because they saw what happened to the green ball // Fear of punishment` - type: `<class 'str'>`
 --> scores:  0.2105263157894737
----> per-field score: 0.2105263157894737
 ------- evaluating input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['the safety', "they didn't want to hurt anyone's feelings // the orange ball was mean to them"]`
----> answers: `["they didn't want to hurt anyone's feelings // the orange ball was mean to them", 'the safety']` - type: `<class 'list'>`
----> baseline_answer: `Because they disliked the green ball // Because of the purple ball // To make snowmen` - type: `<class 'str'>`
 --> scores:  0.26666666666666666
----> per-field score: 0.26666666666666666
 ------- evaluating input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['became a close', 'because the purple ball was mean']`
----> answers: `['became a close', 'because the purple ball was mean']` - type: `<class 'list'>`
----> baseline_answer: `<Your correct option here>` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['friend of Binalshibh', 'because the blue ball needed air // because the green ball asked them to']`
----> answers: `['because the blue ball needed air // because the green ball asked them to', 'friend of Binalshibh']` - type: `<class 'list'>`
----> baseline_answer: `Because the red ball demanded justice // For being mean and frightful // To restore green ball’s status // They wanted a new leader` - type: `<class 'str'>`
 --> scores:  0.2857142857142857
----> per-field score: 0.2857142857142857
 ------- evaluating input: Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['identified', 'because it was scared of the red ball']`
----> answers: `['because it was scared of the red ball', 'identified']` - type: `<class 'list'>`
----> baseline_answer: `Because the blue ball was visibly upset // Because the blue ball cried` - type: `<class 'str'>`
 --> scores:  0.4
----> per-field score: 0.4
 ------- evaluating input: Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['extremist outlook', "because it didn't have any air // becuase it was friends with the purple ball"]`
----> answers: `['extremist outlook', "because it didn't have any air // becuase it was friends with the purple ball"]` - type: `<class 'list'>`
----> baseline_answer: `Because blue ball said hello // Because blue ball was too shiny // Because blue ball was rolling too fast` - type: `<class 'str'>`
 --> scores:  0.1818181818181818
----> per-field score: 0.1818181818181818
 ------- evaluating input: Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
Skipping element `hiddenName` since it is not visible.
 --> Per-instance overall score: 0.4046115966343894
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6666666666666666, 0.4, 0.8, 0.28571428571428575, 1.0, 0.0, 0.22222222222222224, 0.0, 0.33333333333333337, 0.0, 0.2641509433962264, 0.0, 0.0, 0.0, 0.27906976744186046, 0.2105263157894737, 0.6666666666666666, 0.3636363636363636, 1.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.5, 1.0, 0.2222222222222222, 1.0, 0.11764705882352941, 0.0, 0.25, 0.5, 0.33333333333333337, 1.0, 0.0, 1.0, 0.2222222222222222, 0.4, 0.33333333333333337, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.4444444444444445, 0.4444444444444445, 0.4615384615384615, 1.0, 0.2, 1.0, 0.0, 0.4444444444444444, 0.1, 0.15789473684210528, 0.13333333333333333, 0.5, 0.16666666666666666, 0.4444444444444445, 0.22222222222222224, 0.5, 0.0, 0.14285714285714288, 0.1818181818181818, 0.16666666666666666, 0.0, 0.5, 0.0, 0.6666666666666666, 0.14285714285714288, 0.3333333333333333, 0.13333333333333333, 0.08333333333333334, 0.1, 0.4, 0.0, 0.6666666666666666, 0.0, 1.0, 0.0, 0.2727272727272727, 0.15384615384615383, 0.0, 0.22222222222222224, 0.41379310344827586, 0.10526315789473684, 0.6666666666666666, 0.0, 0.5806451612903225, 0.11428571428571428, 0.923076923076923, 0.06451612903225806, 0.7272727272727273, 0.0, 0.22222222222222224, 0.17142857142857143, 0.4444444444444444, 0.20833333333333334, 0.10526315789473682, 0.05555555555555556, 0.5833333333333334, 0.07017543859649122, 0.08695652173913043, 0.14634146341463417, 0.125, 0.05714285714285714, 0.8, 0.13333333333333333, 0.0, 0.0, 1.0, 0.13333333333333333, 0.22222222222222224, 0.3448275862068966, 0.35294117647058826, 0.10256410256410257, 0.0, 0.10810810810810811, 0.25, 0.4800000000000001, 0.11764705882352941, 0.24390243902439024, 0.6666666666666666, 0.6, 0.5714285714285715, 0.0, 0.0, 0.0, 0.0, 0.15384615384615385, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.2, 0.6666666666666667, 0.18181818181818182, 0.1, 0.0, 0.1, 0.0, 0.14285714285714288, 0.0, 0.7000000000000001, 0.0, 0.17391304347826086, 0.4444444444444445, 1.0, 0.2222222222222222, 1.0, 0.5, 1.0, 0.7142857142857143, 0.0, 0.0, 1.0, 0.4, 1.0, 0.0, 0.15384615384615385, 0.2758620689655172, 0.33333333333333337, 0.1818181818181818, 0.35294117647058826, 0.3571428571428571, 0.7142857142857143, 0.16666666666666669, 0.28571428571428575, 0.16326530612244897, 0.2222222222222222, 0.0, 0.08, 0.1081081081081081, 0.21052631578947367, 0.12121212121212123, 0.4, 0.0, 0.8, 0.30769230769230765, 1.0, 0.0, 0.1818181818181818, 0.23529411764705882, 0.7999999999999999, 0.17391304347826086, 0.15384615384615383, 0.13793103448275862, 1.0, 0.25, 1.0, 0.25, 0.2222222222222222, 0.0, 0.3529411764705882, 0.17142857142857143, 1.0, 0.4, 0.0, 0.0, 0.0, 0.16666666666666666, 0.25, 0.0, 0.2222222222222222, 0.0, 1.0, 0.06451612903225806, 0.22222222222222224, 0.3333333333333333, 0.28571428571428575, 0.19354838709677416, 0.6666666666666666, 0.16666666666666666, 0.5, 0.25, 0.4, 0.0, 0.2222222222222222, 0.0, 0.15384615384615385, 0.28571428571428575, 0.0, 0.4, 0.0, 0.0, 0.5, 0.5, 1.0, 0.0, 0.23529411764705882, 0.0909090909090909, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.6666666666666667, 0.4, 0.3448275862068966, 0.7499999999999999, 0.20689655172413793, 0.6666666666666666, 0.5882352941176471, 0.07692307692307691, 0.17142857142857143, 1.0, 0.5, 0.09999999999999999, 0.27586206896551724, 0.2105263157894737, 0.26666666666666666, 0.0, 0.2857142857142857, 0.4, 0.1818181818181818]}
instance_id: 34808 <-> row_number: 73
Could not find input field with name `correctoptions-10`
Could not find input field with name `correctoptions-11`
Could not find input field with name `correctoptions-12`
Could not find input field with name `correctoptions-13`
Could not find input field with name `correctoptions-14`
Could not find input field with name `correctoptions-15`
Could not find input field with name `correctoptions-16`
Could not find input field with name `correctoptions-17`
Could not find input field with name `correctoptions-18`
Could not find input field with name `correctoptions-19`
Could not find input field with name `correctoptions-20`
Could not find input field with name `correctoptions-21`
Could not find input field with name `correctoptions-22`
Could not find input field with name `correctoptions-3`
Could not find input field with name `correctoptions-4`
Could not find input field with name `correctoptions-5`
Could not find input field with name `correctoptions-6`
Could not find input field with name `correctoptions-7`
Could not find input field with name `correctoptions-8`
Could not find input field with name `correctoptions-9`
Could not find input field with name `incorrectoptions-10`
Could not find input field with name `incorrectoptions-11`
Could not find input field with name `incorrectoptions-12`
Could not find input field with name `incorrectoptions-13`
Could not find input field with name `incorrectoptions-14`
Could not find input field with name `incorrectoptions-15`
Could not find input field with name `incorrectoptions-16`
Could not find input field with name `incorrectoptions-17`
Could not find input field with name `incorrectoptions-18`
Could not find input field with name `incorrectoptions-19`
Could not find input field with name `incorrectoptions-20`
Could not find input field with name `incorrectoptions-21`
Could not find input field with name `incorrectoptions-22`
Could not find input field with name `incorrectoptions-3`
Could not find input field with name `incorrectoptions-4`
Could not find input field with name `incorrectoptions-5`
Could not find input field with name `incorrectoptions-6`
Could not find input field with name `incorrectoptions-7`
Could not find input field with name `incorrectoptions-8`
Could not find input field with name `incorrectoptions-9`
 --> inputs: ['correctoptions-0', 'incorrectoptions-0', 'correctoptions-1', 'incorrectoptions-1', 'correctoptions-2', 'incorrectoptions-2', 'hiddenName']
 --> Looking up gold labels from row index 73 of `input.csv` (unique inputs). 
 --> input labels: {'correctoptions-0': ['Venice, Padua, and Mantua', 'Venice // Padua // Mantua'], 'incorrectoptions-0': ['Rome and Florence', 'Nuremburg // the Alps // Mantegna // Rome'], 'correctoptions-1': ['Antonio Pollaiuolo, Mantegna, and Lorenzo di Credi', 'Wolgemut // Shongauer // Antonio Pollaiuolo // Mantegna // Lorenzo di Credi // Bellini'], 'incorrectoptions-1': ['Da Vinci', 'Padua // Mantua // da Vinci // Van Gogh'], 'correctoptions-2': ['Drypoint prints and design woodcuts in', 'watercolors // drypoint // woodcuts'], 'incorrectoptions-2': ['marble sculpting', 'impressionist // pointillism // oil on canvas'], 'hiddenName': ['{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-0
Executing one action: self.actions.modify_text('correctoptions-0', 'Venice // Padua // Mantua')
Add text `Venice // Padua // Mantua` to this text input: <input type="text" name="correctoptions-0">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-0
Executing one action: self.actions.modify_text('incorrectoptions-0', 'Florence // Rome // Berlin')
Add text `Florence // Rome // Berlin` to this text input: <input type="text" name="incorrectoptions-0">
 - - - - - -  starting a new element: `Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-1
Executing one action: self.actions.modify_text('correctoptions-1', 'Giovanni Bellini // Antonio Pollaiuolo // Mantegna // Lorenzo di Credi')
self.actions.modify_text('incorrectoptions-1', 'Leonardo da Vinci // Michelangelo // Raphael')
Add text `Giovanni Bellini // Antonio Pollaiuolo // Mantegna // Lorenzo di Credi` to this text input: <input type="text" name="correctoptions-1">
Add text `Leonardo da Vinci // Michelangelo // Raphael` to this text input: <input type="text" name="incorrectoptions-1">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-1
Executing one action: self.actions.modify_text('incorrectoptions-1', 'Leonardo da Vinci // Michelangelo // Raphael')
Add text `Leonardo da Vinci // Michelangelo // Raphael` to this text input: <input type="text" name="incorrectoptions-1" value="Leonardo da Vinci // Michelangelo // Raphael">
 - - - - - -  starting a new element: `Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-2
Executing one action: self.actions.modify_text('correctoptions-2', 'drypoint // woodcuts')
Add text `drypoint // woodcuts` to this text input: <input type="text" name="correctoptions-2">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-2
Executing one action: self.actions.modify_text('incorrectoptions-2', 'Watercolor landscapes // Sketching')
Add text `Watercolor landscapes // Sketching` to this text input: <input type="text" name="incorrectoptions-2">
 - - - - - -  starting a new element: `Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
Skipping element `hiddenName` since it is not visible.
input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Venice // Padua // Mantua']
 visible_values : ['Venice // Padua // Mantua']
input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Florence // Rome // Berlin']
 visible_values : ['Florence // Rome // Berlin']
input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Giovanni Bellini // Antonio Pollaiuolo // Mantegna // Lorenzo di Credi']
 visible_values : ['Giovanni Bellini // Antonio Pollaiuolo // Mantegna // Lorenzo di Credi']
input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Leonardo da Vinci // Michelangelo // Raphael']
 visible_values : ['Leonardo da Vinci // Michelangelo // Raphael']
input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['drypoint // woodcuts']
 visible_values : ['drypoint // woodcuts']
input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Watercolor landscapes // Sketching']
 visible_values : ['Watercolor landscapes // Sketching']
input: Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : [None]
 visible_values : [None]
 ------- evaluating input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Venice, Padua, and Mantua', 'Venice // Padua // Mantua']`
----> answers: `['Venice, Padua, and Mantua', 'Venice // Padua // Mantua']` - type: `<class 'list'>`
----> baseline_answer: `Venice // Padua // Mantua` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Rome and Florence', 'Nuremburg // the Alps // Mantegna // Rome']`
----> answers: `['Rome and Florence', 'Nuremburg // the Alps // Mantegna // Rome']` - type: `<class 'list'>`
----> baseline_answer: `Florence // Rome // Berlin` - type: `<class 'str'>`
 --> scores:  0.3333333333333333
----> per-field score: 0.3333333333333333
 ------- evaluating input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Antonio Pollaiuolo, Mantegna, and Lorenzo di Credi', 'Wolgemut // Shongauer // Antonio Pollaiuolo // Mantegna // Lorenzo di Credi // Bellini']`
----> answers: `['Antonio Pollaiuolo, Mantegna, and Lorenzo di Credi', 'Wolgemut // Shongauer // Antonio Pollaiuolo // Mantegna // Lorenzo di Credi // Bellini']` - type: `<class 'list'>`
----> baseline_answer: `Giovanni Bellini // Antonio Pollaiuolo // Mantegna // Lorenzo di Credi` - type: `<class 'str'>`
 --> scores:  0.7999999999999999
----> per-field score: 0.7999999999999999
 ------- evaluating input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Da Vinci', 'Padua // Mantua // da Vinci // Van Gogh']`
----> answers: `['Da Vinci', 'Padua // Mantua // da Vinci // Van Gogh']` - type: `<class 'list'>`
----> baseline_answer: `Leonardo da Vinci // Michelangelo // Raphael` - type: `<class 'str'>`
 --> scores:  0.5714285714285715
----> per-field score: 0.5714285714285715
 ------- evaluating input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Drypoint prints and design woodcuts in', 'watercolors // drypoint // woodcuts']`
----> answers: `['Drypoint prints and design woodcuts in', 'watercolors // drypoint // woodcuts']` - type: `<class 'list'>`
----> baseline_answer: `drypoint // woodcuts` - type: `<class 'str'>`
 --> scores:  0.8
----> per-field score: 0.8
 ------- evaluating input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['marble sculpting', 'impressionist // pointillism // oil on canvas']`
----> answers: `['impressionist // pointillism // oil on canvas', 'marble sculpting']` - type: `<class 'list'>`
----> baseline_answer: `Watercolor landscapes // Sketching` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
Skipping element `hiddenName` since it is not visible.
 --> Per-instance overall score: 0.5841269841269842
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6666666666666666, 0.4, 0.8, 0.28571428571428575, 1.0, 0.0, 0.22222222222222224, 0.0, 0.33333333333333337, 0.0, 0.2641509433962264, 0.0, 0.0, 0.0, 0.27906976744186046, 0.2105263157894737, 0.6666666666666666, 0.3636363636363636, 1.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.5, 1.0, 0.2222222222222222, 1.0, 0.11764705882352941, 0.0, 0.25, 0.5, 0.33333333333333337, 1.0, 0.0, 1.0, 0.2222222222222222, 0.4, 0.33333333333333337, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.4444444444444445, 0.4444444444444445, 0.4615384615384615, 1.0, 0.2, 1.0, 0.0, 0.4444444444444444, 0.1, 0.15789473684210528, 0.13333333333333333, 0.5, 0.16666666666666666, 0.4444444444444445, 0.22222222222222224, 0.5, 0.0, 0.14285714285714288, 0.1818181818181818, 0.16666666666666666, 0.0, 0.5, 0.0, 0.6666666666666666, 0.14285714285714288, 0.3333333333333333, 0.13333333333333333, 0.08333333333333334, 0.1, 0.4, 0.0, 0.6666666666666666, 0.0, 1.0, 0.0, 0.2727272727272727, 0.15384615384615383, 0.0, 0.22222222222222224, 0.41379310344827586, 0.10526315789473684, 0.6666666666666666, 0.0, 0.5806451612903225, 0.11428571428571428, 0.923076923076923, 0.06451612903225806, 0.7272727272727273, 0.0, 0.22222222222222224, 0.17142857142857143, 0.4444444444444444, 0.20833333333333334, 0.10526315789473682, 0.05555555555555556, 0.5833333333333334, 0.07017543859649122, 0.08695652173913043, 0.14634146341463417, 0.125, 0.05714285714285714, 0.8, 0.13333333333333333, 0.0, 0.0, 1.0, 0.13333333333333333, 0.22222222222222224, 0.3448275862068966, 0.35294117647058826, 0.10256410256410257, 0.0, 0.10810810810810811, 0.25, 0.4800000000000001, 0.11764705882352941, 0.24390243902439024, 0.6666666666666666, 0.6, 0.5714285714285715, 0.0, 0.0, 0.0, 0.0, 0.15384615384615385, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.2, 0.6666666666666667, 0.18181818181818182, 0.1, 0.0, 0.1, 0.0, 0.14285714285714288, 0.0, 0.7000000000000001, 0.0, 0.17391304347826086, 0.4444444444444445, 1.0, 0.2222222222222222, 1.0, 0.5, 1.0, 0.7142857142857143, 0.0, 0.0, 1.0, 0.4, 1.0, 0.0, 0.15384615384615385, 0.2758620689655172, 0.33333333333333337, 0.1818181818181818, 0.35294117647058826, 0.3571428571428571, 0.7142857142857143, 0.16666666666666669, 0.28571428571428575, 0.16326530612244897, 0.2222222222222222, 0.0, 0.08, 0.1081081081081081, 0.21052631578947367, 0.12121212121212123, 0.4, 0.0, 0.8, 0.30769230769230765, 1.0, 0.0, 0.1818181818181818, 0.23529411764705882, 0.7999999999999999, 0.17391304347826086, 0.15384615384615383, 0.13793103448275862, 1.0, 0.25, 1.0, 0.25, 0.2222222222222222, 0.0, 0.3529411764705882, 0.17142857142857143, 1.0, 0.4, 0.0, 0.0, 0.0, 0.16666666666666666, 0.25, 0.0, 0.2222222222222222, 0.0, 1.0, 0.06451612903225806, 0.22222222222222224, 0.3333333333333333, 0.28571428571428575, 0.19354838709677416, 0.6666666666666666, 0.16666666666666666, 0.5, 0.25, 0.4, 0.0, 0.2222222222222222, 0.0, 0.15384615384615385, 0.28571428571428575, 0.0, 0.4, 0.0, 0.0, 0.5, 0.5, 1.0, 0.0, 0.23529411764705882, 0.0909090909090909, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.6666666666666667, 0.4, 0.3448275862068966, 0.7499999999999999, 0.20689655172413793, 0.6666666666666666, 0.5882352941176471, 0.07692307692307691, 0.17142857142857143, 1.0, 0.5, 0.09999999999999999, 0.27586206896551724, 0.2105263157894737, 0.26666666666666666, 0.0, 0.2857142857142857, 0.4, 0.1818181818181818, 1.0, 0.3333333333333333, 0.7999999999999999, 0.5714285714285715, 0.8, 0.0]}
instance_id: 34824 <-> row_number: 89
Could not find input field with name `correctoptions-16`
Could not find input field with name `correctoptions-17`
Could not find input field with name `correctoptions-18`
Could not find input field with name `correctoptions-19`
Could not find input field with name `correctoptions-20`
Could not find input field with name `correctoptions-21`
Could not find input field with name `correctoptions-22`
Could not find input field with name `incorrectoptions-16`
Could not find input field with name `incorrectoptions-17`
Could not find input field with name `incorrectoptions-18`
Could not find input field with name `incorrectoptions-19`
Could not find input field with name `incorrectoptions-20`
Could not find input field with name `incorrectoptions-21`
Could not find input field with name `incorrectoptions-22`
 --> inputs: ['correctoptions-0', 'incorrectoptions-0', 'correctoptions-1', 'incorrectoptions-1', 'correctoptions-2', 'incorrectoptions-2', 'correctoptions-3', 'incorrectoptions-3', 'correctoptions-4', 'incorrectoptions-4', 'correctoptions-5', 'incorrectoptions-5', 'correctoptions-6', 'incorrectoptions-6', 'correctoptions-7', 'incorrectoptions-7', 'correctoptions-8', 'incorrectoptions-8', 'correctoptions-9', 'incorrectoptions-9', 'correctoptions-10', 'incorrectoptions-10', 'correctoptions-11', 'incorrectoptions-11', 'correctoptions-12', 'incorrectoptions-12', 'correctoptions-13', 'incorrectoptions-13', 'correctoptions-14', 'incorrectoptions-14', 'correctoptions-15', 'incorrectoptions-15', 'hiddenName']
 --> Looking up gold labels from row index 89 of `input.csv` (unique inputs). 
 --> input labels: {'correctoptions-0': ['Sent 2: Liberation of business led to increased foreign investment and industrial development. Sent 3: Finland also got its first railways, separately established under Finnish administration. Sent 4: Finally, the elevation of Finnish from a language of the common people to a national language equal to Swedish', 'Binalshibh and Atta'], 'incorrectoptions-0': ['establishment of its own currency, the markka.', 'Qaida when'], 'correctoptions-1': ['The Good Tsar', "Compare Binalshibh's"], 'incorrectoptions-1': ['Diet of Finland', 'concerned'], 'correctoptions-2': ['Sweden', 'Binalshibh from'], 'incorrectoptions-2': ['Russia', 'went to Germany'], 'correctoptions-3': ['1863', 'Government'], 'incorrectoptions-3': ['Crimean War', 'expelled from'], 'correctoptions-4': ["yes, he initiated several reforms increasing Finland's autonomy from Russia including establishment of its own currency, the markka. and Sent 3: Finland also got its first railways, separately established under Finnish administration.", 'notified'], 'incorrectoptions-4': ['No', 'leave Yemen'], 'correctoptions-5': ['It opened opportunities for a larger proportion of the society.', 'drug'], 'incorrectoptions-5': ['establishment of its own currency, the markka.', 'lived in Germany'], 'correctoptions-6': ["Alexander II re-convened the Diet of Finland and initiated several reforms increasing Finland's autonomy from Russia including establishment of its own currency, the markka.", 'influenced'], 'incorrectoptions-6': ['Encouraging Finnish nationalism and language can also be seen as an attempt to dilute ties with Sweden.', 'Atta first met and when'], 'correctoptions-7': ["by initiating several reforms increasing Finland's autonomy from Russia", 'punishment'], 'incorrectoptions-7': ['Encouraging Finnish nationalism and language', 'students'], 'correctoptions-8': ['Sent 6: These reforms could be seen as results of a genuine belief that reforms were easier to test in an underpopulated, homogeneous country, than in the whole of Russia.', 'America 77 flying'], 'incorrectoptions-8': ['Alexander II is still regarded as "The Good Tsar" in Finland.', 'mistakes besides'], 'correctoptions-9': ['Sent 2: Liberation of business led to increased foreign investment and industrial development.', 'identified'], 'incorrectoptions-9': ['Sent 8: Encouraging Finnish nationalism and language can also be seen as an attempt to dilute ties with Sweden.', 'extremist outlook'], 'correctoptions-10': ['Sent 6: These reforms could be seen as results of a genuine belief that reforms were easier to test in an underpopulated, homogeneous country, than in the whole of Russia.', 'highest duty'], 'incorrectoptions-10': ['Sent 8: Encouraging Finnish nationalism and language can also be seen as an attempt to dilute ties with Sweden.', 'wasIKELL'], 'correctoptions-11': ['Sent 2: Liberation of business led to increased foreign investment and industrial development. Sent 3: Finland also got its first railways, separately established under Finnish administration.', 'highest honor'], 'incorrectoptions-11': ['Alexander II is still regarded as "The Good Tsar" in Finland.', 'Who that'], 'correctoptions-12': ['It opened opportunities for a larger proportion of the society.', 'Binalshibh'], 'incorrectoptions-12': ['Finland also got its first railways, separately established under Finnish administration.', 'first stay'], 'correctoptions-13': ['Sent 2: Liberation of business led to increased foreign investment and industrial development. Sent 3: Finland also got its first railways, separately established under Finnish administration.', 'Hadley expect'], 'incorrectoptions-13': ['Encouraging Finnish nationalism and language can also be seen as an attempt to dilute ties with Sweden.', 'activities that'], 'correctoptions-14': ['Sent 2: Liberation of business led to increased foreign investment and industrial development. Sent 3: Finland also got its first railways, separately established under Finnish administration. Sent 4: Finally, the elevation of Finnish from a language of the common people to a national language equal to Swedish', 'countries'], 'incorrectoptions-14': ['Alexander II is still regarded as "The Good Tsar" in Finland.', 'pay for'], 'correctoptions-15': ['Sent 6: These reforms could be seen as results of a genuine belief that reforms were easier to test in an underpopulated, homogeneous country, than in the whole of Russia. Sent 7: They may also be seen as a reward for the loyalty of its relatively western-oriented population during the Crimean War and during the Polish uprising.', "Binalshibh's"], 'incorrectoptions-15': ['the elevation of Finnish from a language of the common people to a national language equal to Swedish opened opportunities for a larger proportion of the society.', 'friends'], 'hiddenName': ['{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-0
Executing one action: self.actions.modify_text('correctoptions-0', 'As a trial ground for reforms // As a reward for loyalty // As a means to promote Finnish nationalism')
self.actions.modify_text('incorrectoptions-0', 'For economic benefits // To increase military strength // As a preparation for Finland’s independence')
Add text `As a trial ground for reforms // As a reward for loyalty // As a means to promote Finnish nationalism` to this text input: <input type="text" name="correctoptions-0">
Add text `For economic benefits // To increase military strength // As a preparation for Finland’s independence` to this text input: <input type="text" name="incorrectoptions-0">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-0
Executing one action: self.actions.modify_text('incorrectoptions-0', 'As a test location within Russia // For its loyalty during the Crimean War // To promote Swedish influence')
Add text `As a test location within Russia // For its loyalty during the Crimean War // To promote Swedish influence` to this text input: <input type="text" name="incorrectoptions-0" value="For economic benefits // To increase military strength // As a preparation for Finland’s independence">
 - - - - - -  starting a new element: `Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-1
Executing one action: self.actions.modify_text('correctoptions-1', 'The Good Tsar')
Add text `The Good Tsar` to this text input: <input type="text" name="correctoptions-1">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-1
Executing one action: self.actions.modify_text('incorrectoptions-1', 'As "The Bad Tsar"//As an unimportant figure//As a foreign leader')
Add text `As "The Bad Tsar"//As an unimportant figure//As a foreign leader` to this text input: <input type="text" name="incorrectoptions-1">
 - - - - - -  starting a new element: `Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-2
Executing one action: self.actions.modify_text('correctoptions-2', 'Sweden//Swedish')
Add text `Sweden//Swedish` to this text input: <input type="text" name="correctoptions-2">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-2
Executing one action: self.actions.modify_text('incorrectoptions-2', 'Sweden // Denmark // Norway')
Add text `Sweden // Denmark // Norway` to this text input: <input type="text" name="incorrectoptions-2">
 - - - - - -  starting a new element: `Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-3
Executing one action: self.actions.modify_text('correctoptions-3', '1863')
self.actions.modify_text('incorrectoptions-3', '1875 // 1840 // 1901')
Add text `1863` to this text input: <input type="text" name="correctoptions-3">
Add text `1875 // 1840 // 1901` to this text input: <input type="text" name="incorrectoptions-3">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-3
Executing one action: self.actions.modify_text('incorrectoptions-3', '1864 // 1859 // When he was a child')
Add text `1864 // 1859 // When he was a child` to this text input: <input type="text" name="incorrectoptions-3" value="1875 // 1840 // 1901">
 - - - - - -  starting a new element: `Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-4
Executing one action: self.actions.modify_text('correctoptions-4', 'Yes')
self.actions.modify_text('incorrectoptions-4', 'No')
Add text `Yes` to this text input: <input type="text" name="correctoptions-4">
Add text `No` to this text input: <input type="text" name="incorrectoptions-4">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-4
Executing one action: self.actions.modify_text('incorrectoptions-4', 'Yes // No')
Add text `Yes // No` to this text input: <input type="text" name="incorrectoptions-4" value="No">
 - - - - - -  starting a new element: `Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-5
Executing one action: self.actions.modify_text('correctoptions-5', 'As a recognition of Finland's loyal population during conflicts // Elevating Finnish language and nationalist feelings // Testing reforms in a smaller homogeneous setting')
self.actions.modify_text('incorrectoptions-5', 'To limit the power of local Finnish governance // To prepare Finland for a potential merger with Sweden // As a direct reward for military support')
Failed to execute an action self.actions.modify_text('correctoptions-5', 'As a recognition of Finland's loyal population during conflicts // Elevating Finnish language and nationalist feelings // Testing reforms in a smaller homogeneous setting')
self.actions.modify_text('incorrectoptions-5', 'To limit the power of local Finnish governance // To prepare Finland for a potential merger with Sweden // As a direct reward for military support'), error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-5
Executing one action: self.actions.modify_text('incorrectoptions-5', 'Increased ties with Sweden//Larger emphasis on Swedish language//Financial decline')
Add text `Increased ties with Sweden//Larger emphasis on Swedish language//Financial decline` to this text input: <input type="text" name="incorrectoptions-5">
 - - - - - -  starting a new element: `Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-6
Executing one action: self.actions.modify_text('correctoptions-6', 'Establishment of its own currency, the markka // Liberation of business leading to increased foreign investment // Introduction of railways and national elevation of the Finnish language')
self.actions.modify_text('incorrectoptions-6', 'Re-establishment of Swedish as the national language // Banning of foreign investments // Decrease in industrial development')
Add text `Establishment of its own currency, the markka // Liberation of business leading to increased foreign investment // Introduction of railways and national elevation of the Finnish language` to this text input: <input type="text" name="correctoptions-6">
Add text `Re-establishment of Swedish as the national language // Banning of foreign investments // Decrease in industrial development` to this text input: <input type="text" name="incorrectoptions-6">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-6
Executing one action: self.actions.modify_text('incorrectoptions-6', 'As a direct consequence of independence // Due to improved healthcare services // As part of military advancements')
Add text `As a direct consequence of independence // Due to improved healthcare services // As part of military advancements` to this text input: <input type="text" name="incorrectoptions-6" value="Re-establishment of Swedish as the national language // Banning of foreign investments // Decrease in industrial development">
 - - - - - -  starting a new element: `Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-7
Executing one action: self.actions.modify_text('correctoptions-7', 'genuine belief in easier implementation in an underpopulated country // reward for loyalty during the Crimean War // encourage Finnish nationalism to weaken ties with Sweden')
self.actions.modify_text('incorrectoptions-7', 'to gain direct control over Finland // to integrate Finnish culture into Russian society // as a diplomatic move to improve relations with Sweden')
Add text `genuine belief in easier implementation in an underpopulated country // reward for loyalty during the Crimean War // encourage Finnish nationalism to weaken ties with Sweden` to this text input: <input type="text" name="correctoptions-7">
Add text `to gain direct control over Finland // to integrate Finnish culture into Russian society // as a diplomatic move to improve relations with Sweden` to this text input: <input type="text" name="incorrectoptions-7">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-7
Executing one action: self.actions.modify_text('incorrectoptions-7', 'Strengthening economic ties with Sweden//Promoting Russian language over Finnish//Decreasing industrial development')
Add text `Strengthening economic ties with Sweden//Promoting Russian language over Finnish//Decreasing industrial development` to this text input: <input type="text" name="incorrectoptions-7" value="to gain direct control over Finland // to integrate Finnish culture into Russian society // as a diplomatic move to improve relations with Sweden">
 - - - - - -  starting a new element: `Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-8
Executing one action: self.actions.modify_text('correctoptions-8', 'Results of genuine belief in reform effectiveness // Rewards for loyalty during conflicts // Efforts to dilute Swedish ties')
self.actions.modify_text('incorrectoptions-8', 'Attempts to join Sweden // Personal benefit to Alexander II // Reduction of Finnish territory')
Add text `Results of genuine belief in reform effectiveness // Rewards for loyalty during conflicts // Efforts to dilute Swedish ties` to this text input: <input type="text" name="correctoptions-8">
Add text `Attempts to join Sweden // Personal benefit to Alexander II // Reduction of Finnish territory` to this text input: <input type="text" name="incorrectoptions-8">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-8
Executing one action: self.actions.modify_text('incorrectoptions-8', 'As a punishment for unrest//As a method of economic experiment//As a diplomatic gesture to Sweden')
Add text `As a punishment for unrest//As a method of economic experiment//As a diplomatic gesture to Sweden` to this text input: <input type="text" name="incorrectoptions-8" value="Attempts to join Sweden // Personal benefit to Alexander II // Reduction of Finnish territory">
 - - - - - -  starting a new element: `Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-9
Executing one action: self.actions.modify_text('correctoptions-9', 'Establishment of its own currency (markka)//Foreign investments and industrial development//Introduction of railways')
self.actions.modify_text('incorrectoptions-9', 'Introduction of a new government//Mandatory military service for all citizens//Ban on foreign investments')
Add text `Establishment of its own currency (markka)//Foreign investments and industrial development//Introduction of railways` to this text input: <input type="text" name="correctoptions-9">
Add text `Introduction of a new government//Mandatory military service for all citizens//Ban on foreign investments` to this text input: <input type="text" name="incorrectoptions-9">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-9
Executing one action: self.actions.modify_text('incorrectoptions-9', 'Establishment of Finnish as the only currency // First passenger railway completion // Introduction of Swedish as a national language')
Add text `Establishment of Finnish as the only currency // First passenger railway completion // Introduction of Swedish as a national language` to this text input: <input type="text" name="incorrectoptions-9" value="Introduction of a new government//Mandatory military service for all citizens//Ban on foreign investments">
 - - - - - -  starting a new element: `Input(name=`correctoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-10
Executing one action: self.actions.modify_text('correctoptions-10', 'Testing of reforms in a smaller area//Reward for loyalty//Encouragement of Finnish nationalism')
self.actions.modify_text('incorrectoptions-10', 'Direct governance by Russia//Introduction of the Russian language//Total economic independence from Russia')
Add text `Testing of reforms in a smaller area//Reward for loyalty//Encouragement of Finnish nationalism` to this text input: <input type="text" name="correctoptions-10">
Add text `Direct governance by Russia//Introduction of the Russian language//Total economic independence from Russia` to this text input: <input type="text" name="incorrectoptions-10">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-10
Executing one action: self.actions.modify_text('incorrectoptions-10', 'As a test of reforms // Due to Finnish demand for independence // As direct consequences of the Crimean War')
Add text `As a test of reforms // Due to Finnish demand for independence // As direct consequences of the Crimean War` to this text input: <input type="text" name="incorrectoptions-10" value="Direct governance by Russia//Introduction of the Russian language//Total economic independence from Russia">
 - - - - - -  starting a new element: `Input(name=`correctoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-11
Executing one action: self.actions.modify_text('correctoptions-11', 'Establishment of its own currency, the markka // First railways under Finnish administration')
self.actions.modify_text('incorrectoptions-11', 'Introduction of the euro // Establishment of the first Finnish university')
Add text `Establishment of its own currency, the markka // First railways under Finnish administration` to this text input: <input type="text" name="correctoptions-11">
Add text `Introduction of the euro // Establishment of the first Finnish university` to this text input: <input type="text" name="incorrectoptions-11">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-11
Executing one action: self.actions.modify_text('incorrectoptions-11', 'Establishing its own currency // Building the first railway // Increasing foreign investments')
Add text `Establishing its own currency // Building the first railway // Increasing foreign investments` to this text input: <input type="text" name="incorrectoptions-11" value="Introduction of the euro // Establishment of the first Finnish university">
 - - - - - -  starting a new element: `Input(name=`correctoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-12
Executing one action: self.actions.modify_text('correctoptions-12', 'Promoting Finnish national identity // Opening opportunities for a broader community')

self.actions.modify_text('incorrectoptions-12', 'Decreasing educational standards // Weakening military forces')
Add text `Promoting Finnish national identity // Opening opportunities for a broader community` to this text input: <input type="text" name="correctoptions-12">
Add text `Decreasing educational standards // Weakening military forces` to this text input: <input type="text" name="incorrectoptions-12">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-12
Executing one action: self.actions.modify_text('incorrectoptions-12', 'Increased dependence on Sweden//German language adoption//Decline in education')
Add text `Increased dependence on Sweden//German language adoption//Decline in education` to this text input: <input type="text" name="incorrectoptions-12" value="Decreasing educational standards // Weakening military forces">
 - - - - - -  starting a new element: `Input(name=`correctoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-13
Executing one action: self.actions.modify_text('correctoptions-13', 'Railways // Foreign investment')
self.actions.modify_text('incorrectoptions-13', 'Space exploration // Digital currency establishment')
Add text `Railways // Foreign investment` to this text input: <input type="text" name="correctoptions-13">
Add text `Space exploration // Digital currency establishment` to this text input: <input type="text" name="incorrectoptions-13">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-13
Executing one action: self.actions.modify_text('incorrectoptions-13', 'Steam-powered looms // Coal mining')
Add text `Steam-powered looms // Coal mining` to this text input: <input type="text" name="incorrectoptions-13" value="Space exploration // Digital currency establishment">
 - - - - - -  starting a new element: `Input(name=`correctoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-14
Executing one action: self.actions.modify_text('correctoptions-14', 'Establishment of its own currency (markka) // Introduction of railways // Promotion of Finnish as a national language equal to Swedish')
self.actions.modify_text('incorrectoptions-14', 'Introduction of the euro as currency // Ban on Swedish language // Complete independence from Russia')
Add text `Establishment of its own currency (markka) // Introduction of railways // Promotion of Finnish as a national language equal to Swedish` to this text input: <input type="text" name="correctoptions-14">
Add text `Introduction of the euro as currency // Ban on Swedish language // Complete independence from Russia` to this text input: <input type="text" name="incorrectoptions-14">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-14
Executing one action: self.actions.modify_text('incorrectoptions-14', 'Establishment of Swedish as the sole national language//Alexander III initiated the reforms//Autonomy was decreased')
Add text `Establishment of Swedish as the sole national language//Alexander III initiated the reforms//Autonomy was decreased` to this text input: <input type="text" name="incorrectoptions-14" value="Introduction of the euro as currency // Ban on Swedish language // Complete independence from Russia">
 - - - - - -  starting a new element: `Input(name=`correctoptions-15`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-15`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-15
Executing one action: self.actions.modify_text('correctoptions-15', 'Tests in an underpopulated area // Reward for loyalty // Dilute ties with Sweden')
self.actions.modify_text('incorrectoptions-15', 'Promote Russian language // Punishment for disloyalty // Strengthen economic ties with Russia')
Add text `Tests in an underpopulated area // Reward for loyalty // Dilute ties with Sweden` to this text input: <input type="text" name="correctoptions-15">
Add text `Promote Russian language // Punishment for disloyalty // Strengthen economic ties with Russia` to this text input: <input type="text" name="incorrectoptions-15">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-15`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-15`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-15
Executing one action: self.actions.modify_text('incorrectoptions-15', 'As a series of failed attempts // Due to fear of Swedish influence // Because of external pressure from other nations')
Add text `As a series of failed attempts // Due to fear of Swedish influence // Because of external pressure from other nations` to this text input: <input type="text" name="incorrectoptions-15" value="Promote Russian language // Punishment for disloyalty // Strengthen economic ties with Russia">
 - - - - - -  starting a new element: `Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
Skipping element `hiddenName` since it is not visible.
input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['As a trial ground for reforms // As a reward for loyalty // As a means to promote Finnish nationalism']
 visible_values : ['As a trial ground for reforms // As a reward for loyalty // As a means to promote Finnish nationalism']
input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['As a test location within Russia // For its loyalty during the Crimean War // To promote Swedish influence']
 visible_values : ['As a test location within Russia // For its loyalty during the Crimean War // To promote Swedish influence']
input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['The Good Tsar']
 visible_values : ['The Good Tsar']
input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['As "The Bad Tsar"//As an unimportant figure//As a foreign leader']
 visible_values : ['As "The Bad Tsar"//As an unimportant figure//As a foreign leader']
input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Sweden//Swedish']
 visible_values : ['Sweden//Swedish']
input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Sweden // Denmark // Norway']
 visible_values : ['Sweden // Denmark // Norway']
input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['1863']
 visible_values : ['1863']
input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['1864 // 1859 // When he was a child']
 visible_values : ['1864 // 1859 // When he was a child']
input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Yes // No']
 visible_values : ['Yes // No']
input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : [None]
 visible_values : [None]
input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Increased ties with Sweden//Larger emphasis on Swedish language//Financial decline']
 visible_values : ['Increased ties with Sweden//Larger emphasis on Swedish language//Financial decline']
input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Establishment of its own currency, the markka // Liberation of business leading to increased foreign investment // Introduction of railways and national elevation of the Finnish language']
 visible_values : ['Establishment of its own currency, the markka // Liberation of business leading to increased foreign investment // Introduction of railways and national elevation of the Finnish language']
input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['As a direct consequence of independence // Due to improved healthcare services // As part of military advancements']
 visible_values : ['As a direct consequence of independence // Due to improved healthcare services // As part of military advancements']
input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['genuine belief in easier implementation in an underpopulated country // reward for loyalty during the Crimean War // encourage Finnish nationalism to weaken ties with Sweden']
 visible_values : ['genuine belief in easier implementation in an underpopulated country // reward for loyalty during the Crimean War // encourage Finnish nationalism to weaken ties with Sweden']
input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Strengthening economic ties with Sweden//Promoting Russian language over Finnish//Decreasing industrial development']
 visible_values : ['Strengthening economic ties with Sweden//Promoting Russian language over Finnish//Decreasing industrial development']
input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Results of genuine belief in reform effectiveness // Rewards for loyalty during conflicts // Efforts to dilute Swedish ties']
 visible_values : ['Results of genuine belief in reform effectiveness // Rewards for loyalty during conflicts // Efforts to dilute Swedish ties']
input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['As a punishment for unrest//As a method of economic experiment//As a diplomatic gesture to Sweden']
 visible_values : ['As a punishment for unrest//As a method of economic experiment//As a diplomatic gesture to Sweden']
input: Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Establishment of its own currency (markka)//Foreign investments and industrial development//Introduction of railways']
 visible_values : ['Establishment of its own currency (markka)//Foreign investments and industrial development//Introduction of railways']
input: Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Establishment of Finnish as the only currency // First passenger railway completion // Introduction of Swedish as a national language']
 visible_values : ['Establishment of Finnish as the only currency // First passenger railway completion // Introduction of Swedish as a national language']
input: Input(name=`correctoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Testing of reforms in a smaller area//Reward for loyalty//Encouragement of Finnish nationalism']
 visible_values : ['Testing of reforms in a smaller area//Reward for loyalty//Encouragement of Finnish nationalism']
input: Input(name=`incorrectoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['As a test of reforms // Due to Finnish demand for independence // As direct consequences of the Crimean War']
 visible_values : ['As a test of reforms // Due to Finnish demand for independence // As direct consequences of the Crimean War']
input: Input(name=`correctoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Establishment of its own currency, the markka // First railways under Finnish administration']
 visible_values : ['Establishment of its own currency, the markka // First railways under Finnish administration']
input: Input(name=`incorrectoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Establishing its own currency // Building the first railway // Increasing foreign investments']
 visible_values : ['Establishing its own currency // Building the first railway // Increasing foreign investments']
input: Input(name=`correctoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Promoting Finnish national identity // Opening opportunities for a broader community']
 visible_values : ['Promoting Finnish national identity // Opening opportunities for a broader community']
input: Input(name=`incorrectoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Increased dependence on Sweden//German language adoption//Decline in education']
 visible_values : ['Increased dependence on Sweden//German language adoption//Decline in education']
input: Input(name=`correctoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Railways // Foreign investment']
 visible_values : ['Railways // Foreign investment']
input: Input(name=`incorrectoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Steam-powered looms // Coal mining']
 visible_values : ['Steam-powered looms // Coal mining']
input: Input(name=`correctoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Establishment of its own currency (markka) // Introduction of railways // Promotion of Finnish as a national language equal to Swedish']
 visible_values : ['Establishment of its own currency (markka) // Introduction of railways // Promotion of Finnish as a national language equal to Swedish']
input: Input(name=`incorrectoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Establishment of Swedish as the sole national language//Alexander III initiated the reforms//Autonomy was decreased']
 visible_values : ['Establishment of Swedish as the sole national language//Alexander III initiated the reforms//Autonomy was decreased']
input: Input(name=`correctoptions-15`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Tests in an underpopulated area // Reward for loyalty // Dilute ties with Sweden']
 visible_values : ['Tests in an underpopulated area // Reward for loyalty // Dilute ties with Sweden']
input: Input(name=`incorrectoptions-15`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['As a series of failed attempts // Due to fear of Swedish influence // Because of external pressure from other nations']
 visible_values : ['As a series of failed attempts // Due to fear of Swedish influence // Because of external pressure from other nations']
input: Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : [None]
 visible_values : [None]
 ------- evaluating input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Sent 2: Liberation of business led to increased foreign investment and industrial development. Sent 3: Finland also got its first railways, separately established under Finnish administration. Sent 4: Finally, the elevation of Finnish from a language of the common people to a national language equal to Swedish', 'Binalshibh and Atta']`
----> answers: `['Binalshibh and Atta', 'Sent 2: Liberation of business led to increased foreign investment and industrial development. Sent 3: Finland also got its first railways, separately established under Finnish administration. Sent 4: Finally, the elevation of Finnish from a language of the common people to a national language equal to Swedish']` - type: `<class 'list'>`
----> baseline_answer: `As a trial ground for reforms // As a reward for loyalty // As a means to promote Finnish nationalism` - type: `<class 'str'>`
 --> scores:  0.09230769230769229
----> per-field score: 0.09230769230769229
 ------- evaluating input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['establishment of its own currency, the markka.', 'Qaida when']`
----> answers: `['establishment of its own currency, the markka.', 'Qaida when']` - type: `<class 'list'>`
----> baseline_answer: `As a test location within Russia // For its loyalty during the Crimean War // To promote Swedish influence` - type: `<class 'str'>`
 --> scores:  0.16666666666666666
----> per-field score: 0.16666666666666666
 ------- evaluating input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['The Good Tsar', "Compare Binalshibh's"]`
----> answers: `['The Good Tsar', "Compare Binalshibh's"]` - type: `<class 'list'>`
----> baseline_answer: `The Good Tsar` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Diet of Finland', 'concerned']`
----> answers: `['concerned', 'Diet of Finland']` - type: `<class 'list'>`
----> baseline_answer: `As "The Bad Tsar"//As an unimportant figure//As a foreign leader` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Sweden', 'Binalshibh from']`
----> answers: `['Binalshibh from', 'Sweden']` - type: `<class 'list'>`
----> baseline_answer: `Sweden//Swedish` - type: `<class 'str'>`
 --> scores:  0.6666666666666666
----> per-field score: 0.6666666666666666
 ------- evaluating input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Russia', 'went to Germany']`
----> answers: `['Russia', 'went to Germany']` - type: `<class 'list'>`
----> baseline_answer: `Sweden // Denmark // Norway` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['1863', 'Government']`
----> answers: `['1863', 'Government']` - type: `<class 'list'>`
----> baseline_answer: `1863` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Crimean War', 'expelled from']`
----> answers: `['Crimean War', 'expelled from']` - type: `<class 'list'>`
----> baseline_answer: `1864 // 1859 // When he was a child` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `["yes, he initiated several reforms increasing Finland's autonomy from Russia including establishment of its own currency, the markka. and Sent 3: Finland also got its first railways, separately established under Finnish administration.", 'notified']`
----> answers: `['notified', "yes, he initiated several reforms increasing Finland's autonomy from Russia including establishment of its own currency, the markka. and Sent 3: Finland also got its first railways, separately established under Finnish administration."]` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
 --> scores:  0.05882352941176471
----> per-field score: 0.05882352941176471
 ------- evaluating input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['No', 'leave Yemen']`
----> answers: `['No', 'leave Yemen']` - type: `<class 'list'>`
----> baseline_answer: `Yes // No` - type: `<class 'str'>`
 --> scores:  0.6666666666666666
----> per-field score: 0.6666666666666666
 ------- evaluating input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['It opened opportunities for a larger proportion of the society.', 'drug']`
----> answers: `['It opened opportunities for a larger proportion of the society.', 'drug']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['establishment of its own currency, the markka.', 'lived in Germany']`
----> answers: `['establishment of its own currency, the markka.', 'lived in Germany']` - type: `<class 'list'>`
----> baseline_answer: `Increased ties with Sweden//Larger emphasis on Swedish language//Financial decline` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `["Alexander II re-convened the Diet of Finland and initiated several reforms increasing Finland's autonomy from Russia including establishment of its own currency, the markka.", 'influenced']`
----> answers: `["Alexander II re-convened the Diet of Finland and initiated several reforms increasing Finland's autonomy from Russia including establishment of its own currency, the markka.", 'influenced']` - type: `<class 'list'>`
----> baseline_answer: `Establishment of its own currency, the markka // Liberation of business leading to increased foreign investment // Introduction of railways and national elevation of the Finnish language` - type: `<class 'str'>`
 --> scores:  0.27450980392156865
----> per-field score: 0.27450980392156865
 ------- evaluating input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Encouraging Finnish nationalism and language can also be seen as an attempt to dilute ties with Sweden.', 'Atta first met and when']`
----> answers: `['Encouraging Finnish nationalism and language can also be seen as an attempt to dilute ties with Sweden.', 'Atta first met and when']` - type: `<class 'list'>`
----> baseline_answer: `As a direct consequence of independence // Due to improved healthcare services // As part of military advancements` - type: `<class 'str'>`
 --> scores:  0.12121212121212122
----> per-field score: 0.12121212121212122
 ------- evaluating input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `["by initiating several reforms increasing Finland's autonomy from Russia", 'punishment']`
----> answers: `['punishment', "by initiating several reforms increasing Finland's autonomy from Russia"]` - type: `<class 'list'>`
----> baseline_answer: `genuine belief in easier implementation in an underpopulated country // reward for loyalty during the Crimean War // encourage Finnish nationalism to weaken ties with Sweden` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Encouraging Finnish nationalism and language', 'students']`
----> answers: `['Encouraging Finnish nationalism and language', 'students']` - type: `<class 'list'>`
----> baseline_answer: `Strengthening economic ties with Sweden//Promoting Russian language over Finnish//Decreasing industrial development` - type: `<class 'str'>`
 --> scores:  0.1111111111111111
----> per-field score: 0.1111111111111111
 ------- evaluating input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Sent 6: These reforms could be seen as results of a genuine belief that reforms were easier to test in an underpopulated, homogeneous country, than in the whole of Russia.', 'America 77 flying']`
----> answers: `['America 77 flying', 'Sent 6: These reforms could be seen as results of a genuine belief that reforms were easier to test in an underpopulated, homogeneous country, than in the whole of Russia.']` - type: `<class 'list'>`
----> baseline_answer: `Results of genuine belief in reform effectiveness // Rewards for loyalty during conflicts // Efforts to dilute Swedish ties` - type: `<class 'str'>`
 --> scores:  0.25531914893617025
----> per-field score: 0.25531914893617025
 ------- evaluating input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Alexander II is still regarded as "The Good Tsar" in Finland.', 'mistakes besides']`
----> answers: `['Alexander II is still regarded as "The Good Tsar" in Finland.', 'mistakes besides']` - type: `<class 'list'>`
----> baseline_answer: `As a punishment for unrest//As a method of economic experiment//As a diplomatic gesture to Sweden` - type: `<class 'str'>`
 --> scores:  0.07142857142857142
----> per-field score: 0.07142857142857142
 ------- evaluating input: Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Sent 2: Liberation of business led to increased foreign investment and industrial development.', 'identified']`
----> answers: `['identified', 'Sent 2: Liberation of business led to increased foreign investment and industrial development.']` - type: `<class 'list'>`
----> baseline_answer: `Establishment of its own currency (markka)//Foreign investments and industrial development//Introduction of railways` - type: `<class 'str'>`
 --> scores:  0.4444444444444445
----> per-field score: 0.4444444444444445
 ------- evaluating input: Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Sent 8: Encouraging Finnish nationalism and language can also be seen as an attempt to dilute ties with Sweden.', 'extremist outlook']`
----> answers: `['extremist outlook', 'Sent 8: Encouraging Finnish nationalism and language can also be seen as an attempt to dilute ties with Sweden.']` - type: `<class 'list'>`
----> baseline_answer: `Establishment of Finnish as the only currency // First passenger railway completion // Introduction of Swedish as a national language` - type: `<class 'str'>`
 --> scores:  0.16216216216216214
----> per-field score: 0.16216216216216214
 ------- evaluating input: Input(name=`correctoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Sent 6: These reforms could be seen as results of a genuine belief that reforms were easier to test in an underpopulated, homogeneous country, than in the whole of Russia.', 'highest duty']`
----> answers: `['highest duty', 'Sent 6: These reforms could be seen as results of a genuine belief that reforms were easier to test in an underpopulated, homogeneous country, than in the whole of Russia.']` - type: `<class 'list'>`
----> baseline_answer: `Testing of reforms in a smaller area//Reward for loyalty//Encouragement of Finnish nationalism` - type: `<class 'str'>`
 --> scores:  0.18181818181818182
----> per-field score: 0.18181818181818182
 ------- evaluating input: Input(name=`incorrectoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Sent 8: Encouraging Finnish nationalism and language can also be seen as an attempt to dilute ties with Sweden.', 'wasIKELL']`
----> answers: `['Sent 8: Encouraging Finnish nationalism and language can also be seen as an attempt to dilute ties with Sweden.', 'wasIKELL']` - type: `<class 'list'>`
----> baseline_answer: `As a test of reforms // Due to Finnish demand for independence // As direct consequences of the Crimean War` - type: `<class 'str'>`
 --> scores:  0.10810810810810811
----> per-field score: 0.10810810810810811
 ------- evaluating input: Input(name=`correctoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Sent 2: Liberation of business led to increased foreign investment and industrial development. Sent 3: Finland also got its first railways, separately established under Finnish administration.', 'highest honor']`
----> answers: `['highest honor', 'Sent 2: Liberation of business led to increased foreign investment and industrial development. Sent 3: Finland also got its first railways, separately established under Finnish administration.']` - type: `<class 'list'>`
----> baseline_answer: `Establishment of its own currency, the markka // First railways under Finnish administration` - type: `<class 'str'>`
 --> scores:  0.3684210526315789
----> per-field score: 0.3684210526315789
 ------- evaluating input: Input(name=`incorrectoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Alexander II is still regarded as "The Good Tsar" in Finland.', 'Who that']`
----> answers: `['Alexander II is still regarded as "The Good Tsar" in Finland.', 'Who that']` - type: `<class 'list'>`
----> baseline_answer: `Establishing its own currency // Building the first railway // Increasing foreign investments` - type: `<class 'str'>`
 --> scores:  0.09090909090909091
----> per-field score: 0.09090909090909091
 ------- evaluating input: Input(name=`correctoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['It opened opportunities for a larger proportion of the society.', 'Binalshibh']`
----> answers: `['It opened opportunities for a larger proportion of the society.', 'Binalshibh']` - type: `<class 'list'>`
----> baseline_answer: `Promoting Finnish national identity // Opening opportunities for a broader community` - type: `<class 'str'>`
 --> scores:  0.4000000000000001
----> per-field score: 0.4000000000000001
 ------- evaluating input: Input(name=`incorrectoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Finland also got its first railways, separately established under Finnish administration.', 'first stay']`
----> answers: `['Finland also got its first railways, separately established under Finnish administration.', 'first stay']` - type: `<class 'list'>`
----> baseline_answer: `Increased dependence on Sweden//German language adoption//Decline in education` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Sent 2: Liberation of business led to increased foreign investment and industrial development. Sent 3: Finland also got its first railways, separately established under Finnish administration.', 'Hadley expect']`
----> answers: `['Sent 2: Liberation of business led to increased foreign investment and industrial development. Sent 3: Finland also got its first railways, separately established under Finnish administration.', 'Hadley expect']` - type: `<class 'list'>`
----> baseline_answer: `Railways // Foreign investment` - type: `<class 'str'>`
 --> scores:  0.13793103448275862
----> per-field score: 0.13793103448275862
 ------- evaluating input: Input(name=`incorrectoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Encouraging Finnish nationalism and language can also be seen as an attempt to dilute ties with Sweden.', 'activities that']`
----> answers: `['Encouraging Finnish nationalism and language can also be seen as an attempt to dilute ties with Sweden.', 'activities that']` - type: `<class 'list'>`
----> baseline_answer: `Steam-powered looms // Coal mining` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Sent 2: Liberation of business led to increased foreign investment and industrial development. Sent 3: Finland also got its first railways, separately established under Finnish administration. Sent 4: Finally, the elevation of Finnish from a language of the common people to a national language equal to Swedish', 'countries']`
----> answers: `['countries', 'Sent 2: Liberation of business led to increased foreign investment and industrial development. Sent 3: Finland also got its first railways, separately established under Finnish administration. Sent 4: Finally, the elevation of Finnish from a language of the common people to a national language equal to Swedish']` - type: `<class 'list'>`
----> baseline_answer: `Establishment of its own currency (markka) // Introduction of railways // Promotion of Finnish as a national language equal to Swedish` - type: `<class 'str'>`
 --> scores:  0.3333333333333333
----> per-field score: 0.3333333333333333
 ------- evaluating input: Input(name=`incorrectoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Alexander II is still regarded as "The Good Tsar" in Finland.', 'pay for']`
----> answers: `['Alexander II is still regarded as "The Good Tsar" in Finland.', 'pay for']` - type: `<class 'list'>`
----> baseline_answer: `Establishment of Swedish as the sole national language//Alexander III initiated the reforms//Autonomy was decreased` - type: `<class 'str'>`
 --> scores:  0.14814814814814814
----> per-field score: 0.14814814814814814
 ------- evaluating input: Input(name=`correctoptions-15`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Sent 6: These reforms could be seen as results of a genuine belief that reforms were easier to test in an underpopulated, homogeneous country, than in the whole of Russia. Sent 7: They may also be seen as a reward for the loyalty of its relatively western-oriented population during the Crimean War and during the Polish uprising.', "Binalshibh's"]`
----> answers: `['Sent 6: These reforms could be seen as results of a genuine belief that reforms were easier to test in an underpopulated, homogeneous country, than in the whole of Russia. Sent 7: They may also be seen as a reward for the loyalty of its relatively western-oriented population during the Crimean War and during the Polish uprising.', "Binalshibh's"]` - type: `<class 'list'>`
----> baseline_answer: `Tests in an underpopulated area // Reward for loyalty // Dilute ties with Sweden` - type: `<class 'str'>`
 --> scores:  0.2
----> per-field score: 0.2
 ------- evaluating input: Input(name=`incorrectoptions-15`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['the elevation of Finnish from a language of the common people to a national language equal to Swedish opened opportunities for a larger proportion of the society.', 'friends']`
----> answers: `['friends', 'the elevation of Finnish from a language of the common people to a national language equal to Swedish opened opportunities for a larger proportion of the society.']` - type: `<class 'list'>`
----> baseline_answer: `As a series of failed attempts // Due to fear of Swedish influence // Because of external pressure from other nations` - type: `<class 'str'>`
 --> scores:  0.21739130434782608
----> per-field score: 0.21739130434782608
 ------- evaluating input: Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
Skipping element `hiddenName` since it is not visible.
 --> Per-instance overall score: 0.2274180887098322
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6666666666666666, 0.4, 0.8, 0.28571428571428575, 1.0, 0.0, 0.22222222222222224, 0.0, 0.33333333333333337, 0.0, 0.2641509433962264, 0.0, 0.0, 0.0, 0.27906976744186046, 0.2105263157894737, 0.6666666666666666, 0.3636363636363636, 1.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.5, 1.0, 0.2222222222222222, 1.0, 0.11764705882352941, 0.0, 0.25, 0.5, 0.33333333333333337, 1.0, 0.0, 1.0, 0.2222222222222222, 0.4, 0.33333333333333337, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.4444444444444445, 0.4444444444444445, 0.4615384615384615, 1.0, 0.2, 1.0, 0.0, 0.4444444444444444, 0.1, 0.15789473684210528, 0.13333333333333333, 0.5, 0.16666666666666666, 0.4444444444444445, 0.22222222222222224, 0.5, 0.0, 0.14285714285714288, 0.1818181818181818, 0.16666666666666666, 0.0, 0.5, 0.0, 0.6666666666666666, 0.14285714285714288, 0.3333333333333333, 0.13333333333333333, 0.08333333333333334, 0.1, 0.4, 0.0, 0.6666666666666666, 0.0, 1.0, 0.0, 0.2727272727272727, 0.15384615384615383, 0.0, 0.22222222222222224, 0.41379310344827586, 0.10526315789473684, 0.6666666666666666, 0.0, 0.5806451612903225, 0.11428571428571428, 0.923076923076923, 0.06451612903225806, 0.7272727272727273, 0.0, 0.22222222222222224, 0.17142857142857143, 0.4444444444444444, 0.20833333333333334, 0.10526315789473682, 0.05555555555555556, 0.5833333333333334, 0.07017543859649122, 0.08695652173913043, 0.14634146341463417, 0.125, 0.05714285714285714, 0.8, 0.13333333333333333, 0.0, 0.0, 1.0, 0.13333333333333333, 0.22222222222222224, 0.3448275862068966, 0.35294117647058826, 0.10256410256410257, 0.0, 0.10810810810810811, 0.25, 0.4800000000000001, 0.11764705882352941, 0.24390243902439024, 0.6666666666666666, 0.6, 0.5714285714285715, 0.0, 0.0, 0.0, 0.0, 0.15384615384615385, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.2, 0.6666666666666667, 0.18181818181818182, 0.1, 0.0, 0.1, 0.0, 0.14285714285714288, 0.0, 0.7000000000000001, 0.0, 0.17391304347826086, 0.4444444444444445, 1.0, 0.2222222222222222, 1.0, 0.5, 1.0, 0.7142857142857143, 0.0, 0.0, 1.0, 0.4, 1.0, 0.0, 0.15384615384615385, 0.2758620689655172, 0.33333333333333337, 0.1818181818181818, 0.35294117647058826, 0.3571428571428571, 0.7142857142857143, 0.16666666666666669, 0.28571428571428575, 0.16326530612244897, 0.2222222222222222, 0.0, 0.08, 0.1081081081081081, 0.21052631578947367, 0.12121212121212123, 0.4, 0.0, 0.8, 0.30769230769230765, 1.0, 0.0, 0.1818181818181818, 0.23529411764705882, 0.7999999999999999, 0.17391304347826086, 0.15384615384615383, 0.13793103448275862, 1.0, 0.25, 1.0, 0.25, 0.2222222222222222, 0.0, 0.3529411764705882, 0.17142857142857143, 1.0, 0.4, 0.0, 0.0, 0.0, 0.16666666666666666, 0.25, 0.0, 0.2222222222222222, 0.0, 1.0, 0.06451612903225806, 0.22222222222222224, 0.3333333333333333, 0.28571428571428575, 0.19354838709677416, 0.6666666666666666, 0.16666666666666666, 0.5, 0.25, 0.4, 0.0, 0.2222222222222222, 0.0, 0.15384615384615385, 0.28571428571428575, 0.0, 0.4, 0.0, 0.0, 0.5, 0.5, 1.0, 0.0, 0.23529411764705882, 0.0909090909090909, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.6666666666666667, 0.4, 0.3448275862068966, 0.7499999999999999, 0.20689655172413793, 0.6666666666666666, 0.5882352941176471, 0.07692307692307691, 0.17142857142857143, 1.0, 0.5, 0.09999999999999999, 0.27586206896551724, 0.2105263157894737, 0.26666666666666666, 0.0, 0.2857142857142857, 0.4, 0.1818181818181818, 1.0, 0.3333333333333333, 0.7999999999999999, 0.5714285714285715, 0.8, 0.0, 0.09230769230769229, 0.16666666666666666, 1.0, 0.0, 0.6666666666666666, 0.0, 1.0, 0.0, 0.05882352941176471, 0.6666666666666666, 0.0, 0.0, 0.27450980392156865, 0.12121212121212122, 0.0, 0.1111111111111111, 0.25531914893617025, 0.07142857142857142, 0.4444444444444445, 0.16216216216216214, 0.18181818181818182, 0.10810810810810811, 0.3684210526315789, 0.09090909090909091, 0.4000000000000001, 0.0, 0.13793103448275862, 0.0, 0.3333333333333333, 0.14814814814814814, 0.2, 0.21739130434782608]}
instance_id: 34796 <-> row_number: 61
Could not find input field with name `correctoptions-11`
Could not find input field with name `correctoptions-12`
Could not find input field with name `correctoptions-13`
Could not find input field with name `correctoptions-14`
Could not find input field with name `correctoptions-15`
Could not find input field with name `correctoptions-16`
Could not find input field with name `correctoptions-17`
Could not find input field with name `correctoptions-18`
Could not find input field with name `correctoptions-19`
Could not find input field with name `correctoptions-20`
Could not find input field with name `correctoptions-21`
Could not find input field with name `correctoptions-22`
Could not find input field with name `incorrectoptions-11`
Could not find input field with name `incorrectoptions-12`
Could not find input field with name `incorrectoptions-13`
Could not find input field with name `incorrectoptions-14`
Could not find input field with name `incorrectoptions-15`
Could not find input field with name `incorrectoptions-16`
Could not find input field with name `incorrectoptions-17`
Could not find input field with name `incorrectoptions-18`
Could not find input field with name `incorrectoptions-19`
Could not find input field with name `incorrectoptions-20`
Could not find input field with name `incorrectoptions-21`
Could not find input field with name `incorrectoptions-22`
 --> inputs: ['correctoptions-0', 'incorrectoptions-0', 'correctoptions-1', 'incorrectoptions-1', 'correctoptions-2', 'incorrectoptions-2', 'correctoptions-3', 'incorrectoptions-3', 'correctoptions-4', 'incorrectoptions-4', 'correctoptions-5', 'incorrectoptions-5', 'correctoptions-6', 'incorrectoptions-6', 'correctoptions-7', 'incorrectoptions-7', 'correctoptions-8', 'incorrectoptions-8', 'correctoptions-9', 'incorrectoptions-9', 'correctoptions-10', 'incorrectoptions-10', 'hiddenName']
 --> Looking up gold labels from row index 61 of `input.csv` (unique inputs). 
 --> input labels: {'correctoptions-0': ['the popes first care was to summin cardinal barbadico', 'Bin Ladin'], 'incorrectoptions-0': ['his fever', 'became identified'], 'correctoptions-1': ['amazement that the cardinals mind seemed an entire blank', 'Command Center'], 'incorrectoptions-1': ['shocked by his reaction', 'concerned'], 'correctoptions-2': ['it was an illusion', 'Reagan National Airport'], 'incorrectoptions-2': ['vivid dream', 'target that triggered'], 'correctoptions-3': ['cardinal barvadico', 'Government'], 'incorrectoptions-3': ['the pope', 'considered'], 'correctoptions-4': ['the popes book of exercisims was in the same place and the holy water stood un broken', 'notified'], 'incorrectoptions-4': ['the popes house', 'drug'], 'correctoptions-5': ['the chamberlains took care of the pope', 'take place'], 'incorrectoptions-5': ["cardinal Barbadico's", 'government'], 'correctoptions-6': ["cardinal Barbadico's", 'influenced'], 'incorrectoptions-6': ['the pope', 'Barnett'], 'correctoptions-7': ['the Appartamento Borgia', 'punishment'], 'incorrectoptions-7': ['outside', 'Hellfire'], 'correctoptions-8': ['the Appartamento Borgia', 'became a close'], 'incorrectoptions-8': ['the chruch', 'friend of Binalshibh'], 'correctoptions-9': ['the pope summoned Cardinal Barbadico', 'concern'], 'incorrectoptions-9': ['the chambermaids', 'extremist outlook'], 'correctoptions-10': ['yes the pope remembered', 'Barnett'], 'incorrectoptions-10': ['no he forgot', 'Muslim was'], 'hiddenName': ['{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-0
Executing one action: self.actions.modify_text('correctoptions-0', 'To summon Cardinal Barbadico and confer with him')
Add text `To summon Cardinal Barbadico and confer with him` to this text input: <input type="text" name="correctoptions-0">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-0
Executing one action: self.actions.modify_text('incorrectoptions-0', 'Summoned another Cardinal // Discussed the weather')
Add text `Summoned another Cardinal // Discussed the weather` to this text input: <input type="text" name="incorrectoptions-0">
 - - - - - -  starting a new element: `Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-1
Executing one action: self.actions.modify_text('correctoptions-1', 'Amazed by the Cardinal\'s lack of memory')
Add text `Amazed by the Cardinal's lack of memory` to this text input: <input type="text" name="correctoptions-1">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-1
Executing one action: self.actions.modify_text('incorrectoptions-1', 'Cardinal Barbadico remembered everything // Cardinal Barbadico was on a vacation')
Add text `Cardinal Barbadico remembered everything // Cardinal Barbadico was on a vacation` to this text input: <input type="text" name="incorrectoptions-1">
 - - - - - -  starting a new element: `Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-2
Executing one action: self.actions.modify_text('correctoptions-2', 'He admitted having made his customary report to his Holiness the preceding night, but knew nothing of any supernatural ratcatcher, and nothing of any midnight rendezvous at the Appartamento Borgia')
self.actions.modify_text('incorrectoptions-2', 'He confessed to hosting the nocturnal meeting // He denied the existence of the supernatural ratcatcher // He claimed to have evidence of the supernatural occurrences')
Add text `He admitted having made his customary report to his Holiness the preceding night, but knew nothing of any supernatural ratcatcher, and nothing of any midnight rendezvous at the Appartamento Borgia` to this text input: <input type="text" name="correctoptions-2">
Add text `He confessed to hosting the nocturnal meeting // He denied the existence of the supernatural ratcatcher // He claimed to have evidence of the supernatural occurrences` to this text input: <input type="text" name="incorrectoptions-2">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-2
Executing one action: self.actions.modify_text('incorrectoptions-2', 'Tom's older cousin // Art Museum of Chicago')
Failed to execute an action self.actions.modify_text('incorrectoptions-2', 'Tom's older cousin // Art Museum of Chicago'), error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-3
Executing one action: self.actions.modify_text('correctoptions-3', 'Cardinal Barbadico')
Add text `Cardinal Barbadico` to this text input: <input type="text" name="correctoptions-3">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-3
Executing one action: self.actions.modify_text('incorrectoptions-3', 'Cardinal Barbadico was fully aware // Cardinal Barbadico recalled the event vividly // Cardinal Barbadico planned the rendezvous')
Add text `Cardinal Barbadico was fully aware // Cardinal Barbadico recalled the event vividly // Cardinal Barbadico planned the rendezvous` to this text input: <input type="text" name="incorrectoptions-3">
 - - - - - -  starting a new element: `Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-4
Executing one action: self.actions.modify_text('correctoptions-4', 'No traces of the visit were found for many years')
self.actions.modify_text('incorrectoptions-4', 'Evidence of recent entry was found // A supernatural ratcatcher was seen')
Add text `No traces of the visit were found for many years` to this text input: <input type="text" name="correctoptions-4">
Add text `Evidence of recent entry was found // A supernatural ratcatcher was seen` to this text input: <input type="text" name="incorrectoptions-4">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-4
Executing one action: self.actions.modify_text('incorrectoptions-4', 'No traces of rats // No records of the supernatural ratcatcher // Unchanged settings in the apartment')
Add text `No traces of rats // No records of the supernatural ratcatcher // Unchanged settings in the apartment` to this text input: <input type="text" name="incorrectoptions-4" value="Evidence of recent entry was found // A supernatural ratcatcher was seen">
 - - - - - -  starting a new element: `Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-5
Executing one action: self.actions.modify_text('correctoptions-5', 'His chamberlains // His vial of holy water')
Add text `His chamberlains // His vial of holy water` to this text input: <input type="text" name="correctoptions-5">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-5
Executing one action: self.actions.modify_text('incorrectoptions-5', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-6
Executing one action: self.actions.modify_text('correctoptions-6', 'Cardinal Barbadico admitted knowing nothing of any supernatural ratcatcher.')
self.actions.modify_text('incorrectoptions-6', 'Cardinal Barbadico remembered the supernatural ratcatcher//Cardinal Barbadico planned the midnight rendezvous//Cardinal Barbadico had evidence of the supernatural ratcatcher')
Add text `Cardinal Barbadico admitted knowing nothing of any supernatural ratcatcher.` to this text input: <input type="text" name="correctoptions-6">
Add text `Cardinal Barbadico remembered the supernatural ratcatcher//Cardinal Barbadico planned the midnight rendezvous//Cardinal Barbadico had evidence of the supernatural ratcatcher` to this text input: <input type="text" name="incorrectoptions-6">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-6
Executing one action: self.actions.modify_text('incorrectoptions-6', 'The Cardinal remembered everything clearly // The Cardinal offered a different story // The Cardinal was not present during the events')
Add text `The Cardinal remembered everything clearly // The Cardinal offered a different story // The Cardinal was not present during the events` to this text input: <input type="text" name="incorrectoptions-6" value="Cardinal Barbadico remembered the supernatural ratcatcher//Cardinal Barbadico planned the midnight rendezvous//Cardinal Barbadico had evidence of the supernatural ratcatcher">
 - - - - - -  starting a new element: `Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-7
Executing one action: self.actions.modify_text('correctoptions-7', 'in his Holiness\'s upper storeys')
self.actions.modify_text('incorrectoptions-7', 'in the Vatican gardens // within the Pope\'s private library // inside the Vatican City walls')
Add text `in his Holiness's upper storeys` to this text input: <input type="text" name="correctoptions-7">
Add text `in the Vatican gardens // within the Pope's private library // inside the Vatican City walls` to this text input: <input type="text" name="incorrectoptions-7">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-7
Executing one action: self.actions.modify_text('incorrectoptions-7', 'in his Holiness's basement // scattered around Vatican City')
Failed to execute an action self.actions.modify_text('incorrectoptions-7', 'in his Holiness's basement // scattered around Vatican City'), error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-8
Executing one action: self.actions.modify_text('correctoptions-8', 'The Appartamento Borgia')
self.actions.modify_text('incorrectoptions-8', 'The Vatican Gardens//The Sistine Chapel//The Papal Basilica of St. Peter')
Add text `The Appartamento Borgia` to this text input: <input type="text" name="correctoptions-8">
Add text `The Vatican Gardens//The Sistine Chapel//The Papal Basilica of St. Peter` to this text input: <input type="text" name="incorrectoptions-8">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-8
Executing one action: self.actions.modify_text('incorrectoptions-8', 'Borgian chambers // Appartamento Vaticano // Cardinal's residence')
Failed to execute an action self.actions.modify_text('incorrectoptions-8', 'Borgian chambers // Appartamento Vaticano // Cardinal's residence'), error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-9
Executing one action: self.actions.modify_text('correctoptions-9', 'The Pope')
self.actions.modify_text('incorrectoptions-9', 'Cardinal Barbadico//The chamberlains//A supernatural ratcatcher')
Add text `The Pope` to this text input: <input type="text" name="correctoptions-9">
Add text `Cardinal Barbadico//The chamberlains//A supernatural ratcatcher` to this text input: <input type="text" name="incorrectoptions-9">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-9
Executing one action: self.actions.modify_text('incorrectoptions-9', 'A supernatural pizza delivery man // Cardinal Barbadico confessed to the adventure // Rats were actually musicians')
Add text `A supernatural pizza delivery man // Cardinal Barbadico confessed to the adventure // Rats were actually musicians` to this text input: <input type="text" name="incorrectoptions-9" value="Cardinal Barbadico//The chamberlains//A supernatural ratcatcher">
 - - - - - -  starting a new element: `Input(name=`correctoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-10
Executing one action: self.actions.modify_text('correctoptions-10', 'Yes')
self.actions.modify_text('incorrectoptions-10', 'No // Not sure')
Add text `Yes` to this text input: <input type="text" name="correctoptions-10">
Add text `No // Not sure` to this text input: <input type="text" name="incorrectoptions-10">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-10
Executing one action: self.actions.modify_text('incorrectoptions-10', 'Yes // No')
Add text `Yes // No` to this text input: <input type="text" name="incorrectoptions-10" value="No // Not sure">
 - - - - - -  starting a new element: `Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
Skipping element `hiddenName` since it is not visible.
input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['To summon Cardinal Barbadico and confer with him']
 visible_values : ['To summon Cardinal Barbadico and confer with him']
input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Summoned another Cardinal // Discussed the weather']
 visible_values : ['Summoned another Cardinal // Discussed the weather']
input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ["Amazed by the Cardinal's lack of memory"]
 visible_values : ["Amazed by the Cardinal's lack of memory"]
input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Cardinal Barbadico remembered everything // Cardinal Barbadico was on a vacation']
 visible_values : ['Cardinal Barbadico remembered everything // Cardinal Barbadico was on a vacation']
input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['He admitted having made his customary report to his Holiness the preceding night, but knew nothing of any supernatural ratcatcher, and nothing of any midnight rendezvous at the Appartamento Borgia']
 visible_values : ['He admitted having made his customary report to his Holiness the preceding night, but knew nothing of any supernatural ratcatcher, and nothing of any midnight rendezvous at the Appartamento Borgia']
input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['He confessed to hosting the nocturnal meeting // He denied the existence of the supernatural ratcatcher // He claimed to have evidence of the supernatural occurrences']
 visible_values : ['He confessed to hosting the nocturnal meeting // He denied the existence of the supernatural ratcatcher // He claimed to have evidence of the supernatural occurrences']
input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Cardinal Barbadico']
 visible_values : ['Cardinal Barbadico']
input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Cardinal Barbadico was fully aware // Cardinal Barbadico recalled the event vividly // Cardinal Barbadico planned the rendezvous']
 visible_values : ['Cardinal Barbadico was fully aware // Cardinal Barbadico recalled the event vividly // Cardinal Barbadico planned the rendezvous']
input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['No traces of the visit were found for many years']
 visible_values : ['No traces of the visit were found for many years']
input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['No traces of rats // No records of the supernatural ratcatcher // Unchanged settings in the apartment']
 visible_values : ['No traces of rats // No records of the supernatural ratcatcher // Unchanged settings in the apartment']
input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['His chamberlains // His vial of holy water']
 visible_values : ['His chamberlains // His vial of holy water']
input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : [None]
 visible_values : [None]
input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Cardinal Barbadico admitted knowing nothing of any supernatural ratcatcher.']
 visible_values : ['Cardinal Barbadico admitted knowing nothing of any supernatural ratcatcher.']
input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['The Cardinal remembered everything clearly // The Cardinal offered a different story // The Cardinal was not present during the events']
 visible_values : ['The Cardinal remembered everything clearly // The Cardinal offered a different story // The Cardinal was not present during the events']
input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ["in his Holiness's upper storeys"]
 visible_values : ["in his Holiness's upper storeys"]
input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ["in the Vatican gardens // within the Pope's private library // inside the Vatican City walls"]
 visible_values : ["in the Vatican gardens // within the Pope's private library // inside the Vatican City walls"]
input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['The Appartamento Borgia']
 visible_values : ['The Appartamento Borgia']
input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['The Vatican Gardens//The Sistine Chapel//The Papal Basilica of St. Peter']
 visible_values : ['The Vatican Gardens//The Sistine Chapel//The Papal Basilica of St. Peter']
input: Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['The Pope']
 visible_values : ['The Pope']
input: Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['A supernatural pizza delivery man // Cardinal Barbadico confessed to the adventure // Rats were actually musicians']
 visible_values : ['A supernatural pizza delivery man // Cardinal Barbadico confessed to the adventure // Rats were actually musicians']
input: Input(name=`correctoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`incorrectoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Yes // No']
 visible_values : ['Yes // No']
input: Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : [None]
 visible_values : [None]
 ------- evaluating input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['the popes first care was to summin cardinal barbadico', 'Bin Ladin']`
----> answers: `['Bin Ladin', 'the popes first care was to summin cardinal barbadico']` - type: `<class 'list'>`
----> baseline_answer: `To summon Cardinal Barbadico and confer with him` - type: `<class 'str'>`
 --> scores:  0.35294117647058826
----> per-field score: 0.35294117647058826
 ------- evaluating input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['his fever', 'became identified']`
----> answers: `['became identified', 'his fever']` - type: `<class 'list'>`
----> baseline_answer: `Summoned another Cardinal // Discussed the weather` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['amazement that the cardinals mind seemed an entire blank', 'Command Center']`
----> answers: `['amazement that the cardinals mind seemed an entire blank', 'Command Center']` - type: `<class 'list'>`
----> baseline_answer: `Amazed by the Cardinal's lack of memory` - type: `<class 'str'>`
 --> scores:  0.35294117647058826
----> per-field score: 0.35294117647058826
 ------- evaluating input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['shocked by his reaction', 'concerned']`
----> answers: `['shocked by his reaction', 'concerned']` - type: `<class 'list'>`
----> baseline_answer: `Cardinal Barbadico remembered everything // Cardinal Barbadico was on a vacation` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['it was an illusion', 'Reagan National Airport']`
----> answers: `['it was an illusion', 'Reagan National Airport']` - type: `<class 'list'>`
----> baseline_answer: `He admitted having made his customary report to his Holiness the preceding night, but knew nothing of any supernatural ratcatcher, and nothing of any midnight rendezvous at the Appartamento Borgia` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['vivid dream', 'target that triggered']`
----> answers: `['vivid dream', 'target that triggered']` - type: `<class 'list'>`
----> baseline_answer: `He confessed to hosting the nocturnal meeting // He denied the existence of the supernatural ratcatcher // He claimed to have evidence of the supernatural occurrences` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['cardinal barvadico', 'Government']`
----> answers: `['cardinal barvadico', 'Government']` - type: `<class 'list'>`
----> baseline_answer: `Cardinal Barbadico` - type: `<class 'str'>`
 --> scores:  0.5
----> per-field score: 0.5
 ------- evaluating input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['the pope', 'considered']`
----> answers: `['considered', 'the pope']` - type: `<class 'list'>`
----> baseline_answer: `Cardinal Barbadico was fully aware // Cardinal Barbadico recalled the event vividly // Cardinal Barbadico planned the rendezvous` - type: `<class 'str'>`
 --> scores:  0.1111111111111111
----> per-field score: 0.1111111111111111
 ------- evaluating input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['the popes book of exercisims was in the same place and the holy water stood un broken', 'notified']`
----> answers: `['the popes book of exercisims was in the same place and the holy water stood un broken', 'notified']` - type: `<class 'list'>`
----> baseline_answer: `No traces of the visit were found for many years` - type: `<class 'str'>`
 --> scores:  0.14814814814814817
----> per-field score: 0.14814814814814817
 ------- evaluating input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['the popes house', 'drug']`
----> answers: `['the popes house', 'drug']` - type: `<class 'list'>`
----> baseline_answer: `No traces of rats // No records of the supernatural ratcatcher // Unchanged settings in the apartment` - type: `<class 'str'>`
 --> scores:  0.1111111111111111
----> per-field score: 0.1111111111111111
 ------- evaluating input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['the chamberlains took care of the pope', 'take place']`
----> answers: `['the chamberlains took care of the pope', 'take place']` - type: `<class 'list'>`
----> baseline_answer: `His chamberlains // His vial of holy water` - type: `<class 'str'>`
 --> scores:  0.2857142857142857
----> per-field score: 0.2857142857142857
 ------- evaluating input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `["cardinal Barbadico's", 'government']`
----> answers: `["cardinal Barbadico's", 'government']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `["cardinal Barbadico's", 'influenced']`
----> answers: `['influenced', "cardinal Barbadico's"]` - type: `<class 'list'>`
----> baseline_answer: `Cardinal Barbadico admitted knowing nothing of any supernatural ratcatcher.` - type: `<class 'str'>`
 --> scores:  0.3333333333333333
----> per-field score: 0.3333333333333333
 ------- evaluating input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['the pope', 'Barnett']`
----> answers: `['Barnett', 'the pope']` - type: `<class 'list'>`
----> baseline_answer: `The Cardinal remembered everything clearly // The Cardinal offered a different story // The Cardinal was not present during the events` - type: `<class 'str'>`
 --> scores:  0.09523809523809525
----> per-field score: 0.09523809523809525
 ------- evaluating input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['the Appartamento Borgia', 'punishment']`
----> answers: `['punishment', 'the Appartamento Borgia']` - type: `<class 'list'>`
----> baseline_answer: `in his Holiness's upper storeys` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['outside', 'Hellfire']`
----> answers: `['outside', 'Hellfire']` - type: `<class 'list'>`
----> baseline_answer: `in the Vatican gardens // within the Pope's private library // inside the Vatican City walls` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['the Appartamento Borgia', 'became a close']`
----> answers: `['became a close', 'the Appartamento Borgia']` - type: `<class 'list'>`
----> baseline_answer: `The Appartamento Borgia` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['the chruch', 'friend of Binalshibh']`
----> answers: `['friend of Binalshibh', 'the chruch']` - type: `<class 'list'>`
----> baseline_answer: `The Vatican Gardens//The Sistine Chapel//The Papal Basilica of St. Peter` - type: `<class 'str'>`
 --> scores:  0.14285714285714285
----> per-field score: 0.14285714285714285
 ------- evaluating input: Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['the pope summoned Cardinal Barbadico', 'concern']`
----> answers: `['concern', 'the pope summoned Cardinal Barbadico']` - type: `<class 'list'>`
----> baseline_answer: `The Pope` - type: `<class 'str'>`
 --> scores:  0.5714285714285715
----> per-field score: 0.5714285714285715
 ------- evaluating input: Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['the chambermaids', 'extremist outlook']`
----> answers: `['extremist outlook', 'the chambermaids']` - type: `<class 'list'>`
----> baseline_answer: `A supernatural pizza delivery man // Cardinal Barbadico confessed to the adventure // Rats were actually musicians` - type: `<class 'str'>`
 --> scores:  0.11764705882352941
----> per-field score: 0.11764705882352941
 ------- evaluating input: Input(name=`correctoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['yes the pope remembered', 'Barnett']`
----> answers: `['yes the pope remembered', 'Barnett']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
 --> scores:  0.4
----> per-field score: 0.4
 ------- evaluating input: Input(name=`incorrectoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['no he forgot', 'Muslim was']`
----> answers: `['Muslim was', 'no he forgot']` - type: `<class 'list'>`
----> baseline_answer: `Yes // No` - type: `<class 'str'>`
 --> scores:  0.4
----> per-field score: 0.4
 ------- evaluating input: Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
Skipping element `hiddenName` since it is not visible.
 --> Per-instance overall score: 0.22374869139575024
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6666666666666666, 0.4, 0.8, 0.28571428571428575, 1.0, 0.0, 0.22222222222222224, 0.0, 0.33333333333333337, 0.0, 0.2641509433962264, 0.0, 0.0, 0.0, 0.27906976744186046, 0.2105263157894737, 0.6666666666666666, 0.3636363636363636, 1.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.5, 1.0, 0.2222222222222222, 1.0, 0.11764705882352941, 0.0, 0.25, 0.5, 0.33333333333333337, 1.0, 0.0, 1.0, 0.2222222222222222, 0.4, 0.33333333333333337, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.4444444444444445, 0.4444444444444445, 0.4615384615384615, 1.0, 0.2, 1.0, 0.0, 0.4444444444444444, 0.1, 0.15789473684210528, 0.13333333333333333, 0.5, 0.16666666666666666, 0.4444444444444445, 0.22222222222222224, 0.5, 0.0, 0.14285714285714288, 0.1818181818181818, 0.16666666666666666, 0.0, 0.5, 0.0, 0.6666666666666666, 0.14285714285714288, 0.3333333333333333, 0.13333333333333333, 0.08333333333333334, 0.1, 0.4, 0.0, 0.6666666666666666, 0.0, 1.0, 0.0, 0.2727272727272727, 0.15384615384615383, 0.0, 0.22222222222222224, 0.41379310344827586, 0.10526315789473684, 0.6666666666666666, 0.0, 0.5806451612903225, 0.11428571428571428, 0.923076923076923, 0.06451612903225806, 0.7272727272727273, 0.0, 0.22222222222222224, 0.17142857142857143, 0.4444444444444444, 0.20833333333333334, 0.10526315789473682, 0.05555555555555556, 0.5833333333333334, 0.07017543859649122, 0.08695652173913043, 0.14634146341463417, 0.125, 0.05714285714285714, 0.8, 0.13333333333333333, 0.0, 0.0, 1.0, 0.13333333333333333, 0.22222222222222224, 0.3448275862068966, 0.35294117647058826, 0.10256410256410257, 0.0, 0.10810810810810811, 0.25, 0.4800000000000001, 0.11764705882352941, 0.24390243902439024, 0.6666666666666666, 0.6, 0.5714285714285715, 0.0, 0.0, 0.0, 0.0, 0.15384615384615385, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.2, 0.6666666666666667, 0.18181818181818182, 0.1, 0.0, 0.1, 0.0, 0.14285714285714288, 0.0, 0.7000000000000001, 0.0, 0.17391304347826086, 0.4444444444444445, 1.0, 0.2222222222222222, 1.0, 0.5, 1.0, 0.7142857142857143, 0.0, 0.0, 1.0, 0.4, 1.0, 0.0, 0.15384615384615385, 0.2758620689655172, 0.33333333333333337, 0.1818181818181818, 0.35294117647058826, 0.3571428571428571, 0.7142857142857143, 0.16666666666666669, 0.28571428571428575, 0.16326530612244897, 0.2222222222222222, 0.0, 0.08, 0.1081081081081081, 0.21052631578947367, 0.12121212121212123, 0.4, 0.0, 0.8, 0.30769230769230765, 1.0, 0.0, 0.1818181818181818, 0.23529411764705882, 0.7999999999999999, 0.17391304347826086, 0.15384615384615383, 0.13793103448275862, 1.0, 0.25, 1.0, 0.25, 0.2222222222222222, 0.0, 0.3529411764705882, 0.17142857142857143, 1.0, 0.4, 0.0, 0.0, 0.0, 0.16666666666666666, 0.25, 0.0, 0.2222222222222222, 0.0, 1.0, 0.06451612903225806, 0.22222222222222224, 0.3333333333333333, 0.28571428571428575, 0.19354838709677416, 0.6666666666666666, 0.16666666666666666, 0.5, 0.25, 0.4, 0.0, 0.2222222222222222, 0.0, 0.15384615384615385, 0.28571428571428575, 0.0, 0.4, 0.0, 0.0, 0.5, 0.5, 1.0, 0.0, 0.23529411764705882, 0.0909090909090909, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.6666666666666667, 0.4, 0.3448275862068966, 0.7499999999999999, 0.20689655172413793, 0.6666666666666666, 0.5882352941176471, 0.07692307692307691, 0.17142857142857143, 1.0, 0.5, 0.09999999999999999, 0.27586206896551724, 0.2105263157894737, 0.26666666666666666, 0.0, 0.2857142857142857, 0.4, 0.1818181818181818, 1.0, 0.3333333333333333, 0.7999999999999999, 0.5714285714285715, 0.8, 0.0, 0.09230769230769229, 0.16666666666666666, 1.0, 0.0, 0.6666666666666666, 0.0, 1.0, 0.0, 0.05882352941176471, 0.6666666666666666, 0.0, 0.0, 0.27450980392156865, 0.12121212121212122, 0.0, 0.1111111111111111, 0.25531914893617025, 0.07142857142857142, 0.4444444444444445, 0.16216216216216214, 0.18181818181818182, 0.10810810810810811, 0.3684210526315789, 0.09090909090909091, 0.4000000000000001, 0.0, 0.13793103448275862, 0.0, 0.3333333333333333, 0.14814814814814814, 0.2, 0.21739130434782608, 0.35294117647058826, 0.0, 0.35294117647058826, 0.0, 0.0, 0.0, 0.5, 0.1111111111111111, 0.14814814814814817, 0.1111111111111111, 0.2857142857142857, 0.0, 0.3333333333333333, 0.09523809523809525, 0.0, 0.0, 1.0, 0.14285714285714285, 0.5714285714285715, 0.11764705882352941, 0.4, 0.4]}
instance_id: 34820 <-> row_number: 85
Could not find input field with name `correctoptions-10`
Could not find input field with name `correctoptions-11`
Could not find input field with name `correctoptions-12`
Could not find input field with name `correctoptions-13`
Could not find input field with name `correctoptions-14`
Could not find input field with name `correctoptions-15`
Could not find input field with name `correctoptions-16`
Could not find input field with name `correctoptions-17`
Could not find input field with name `correctoptions-18`
Could not find input field with name `correctoptions-19`
Could not find input field with name `correctoptions-20`
Could not find input field with name `correctoptions-21`
Could not find input field with name `correctoptions-22`
Could not find input field with name `incorrectoptions-10`
Could not find input field with name `incorrectoptions-11`
Could not find input field with name `incorrectoptions-12`
Could not find input field with name `incorrectoptions-13`
Could not find input field with name `incorrectoptions-14`
Could not find input field with name `incorrectoptions-15`
Could not find input field with name `incorrectoptions-16`
Could not find input field with name `incorrectoptions-17`
Could not find input field with name `incorrectoptions-18`
Could not find input field with name `incorrectoptions-19`
Could not find input field with name `incorrectoptions-20`
Could not find input field with name `incorrectoptions-21`
Could not find input field with name `incorrectoptions-22`
 --> inputs: ['correctoptions-0', 'incorrectoptions-0', 'correctoptions-1', 'incorrectoptions-1', 'correctoptions-2', 'incorrectoptions-2', 'correctoptions-3', 'incorrectoptions-3', 'correctoptions-4', 'incorrectoptions-4', 'correctoptions-5', 'incorrectoptions-5', 'correctoptions-6', 'incorrectoptions-6', 'correctoptions-7', 'incorrectoptions-7', 'correctoptions-8', 'incorrectoptions-8', 'correctoptions-9', 'incorrectoptions-9', 'hiddenName']
 --> Looking up gold labels from row index 85 of `input.csv` (unique inputs). 
 --> input labels: {'correctoptions-0': ['Binalshibh and Atta', '1986'], 'incorrectoptions-0': ['Qaida when', '1989'], 'correctoptions-1': ["Compare Binalshibh's", 'when students or teachers observe a well-trained model and experience increases in his or her knowledge and understanding.'], 'incorrectoptions-1': ['ordered', 'when a student or teacher decides to replicate an observed behavior'], 'correctoptions-2': ['California', 'self-efficacy, self-regulation, observational learning, and reciprocal determinism.'], 'incorrectoptions-2': ['primary', 'motivation and learning'], 'correctoptions-3': ['community', 'Self-regulation'], 'incorrectoptions-3': ['searching', 'Self-efficacy'], 'correctoptions-4': ['notified', 'The social cognitive theory'], 'incorrectoptions-4': ['President', 'Self-regulation'], 'correctoptions-5': ['concern', 'experience increases in his or her knowledge and understanding.'], 'incorrectoptions-5': ['lived in Germany', 'experience decreases in his or her knowledge and understanding.'], 'correctoptions-6': ['e passed between', 'Self-regulation'], 'incorrectoptions-6': ['Barnett', 'Self-efficacy'], 'correctoptions-7': ['aircraft began', 'It operates under individual everyday classroom functions such as goal setting, self-monitoring, and self-influence.'], 'incorrectoptions-7': ['the safety', 'the mutual relationship between a student or teacher, his or her environment, and his or her behavior is pointed out as key components'], 'correctoptions-8': ['became a close', 'teachers'], 'incorrectoptions-8': ['friend of Binalshibh', 'students'], 'correctoptions-9': ['concern', 'Bandura'], 'incorrectoptions-9': ['extremist outlook', 'Teacher'], 'hiddenName': ['{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-0
Executing one action: self.actions.modify_text('correctoptions-0', '1986')
Add text `1986` to this text input: <input type="text" name="correctoptions-0">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-0
Executing one action: self.actions.modify_text('incorrectoptions-0', '1985 // 2001 // 1978')
Add text `1985 // 2001 // 1978` to this text input: <input type="text" name="incorrectoptions-0">
 - - - - - -  starting a new element: `Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-1
Executing one action: self.actions.modify_text('correctoptions-1', 'When students or teachers observe a well-trained model and experience increases in his or her knowledge and understanding.')
self.actions.modify_text('incorrectoptions-1', 'During tests and exams//When reading textbooks alone//After completing homework assignments')
Add text `When students or teachers observe a well-trained model and experience increases in his or her knowledge and understanding.` to this text input: <input type="text" name="correctoptions-1">
Add text `During tests and exams//When reading textbooks alone//After completing homework assignments` to this text input: <input type="text" name="incorrectoptions-1">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-1
Executing one action: self.actions.modify_text('incorrectoptions-1', 'When students or teachers observe a well-trained model and increase their self-efficacy // When teachers write new lesson plans // During a science experiment in class')
Add text `When students or teachers observe a well-trained model and increase their self-efficacy // When teachers write new lesson plans // During a science experiment in class` to this text input: <input type="text" name="incorrectoptions-1" value="During tests and exams//When reading textbooks alone//After completing homework assignments">
 - - - - - -  starting a new element: `Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-2
Executing one action: self.actions.modify_text('correctoptions-2', 'Using self-efficacy to set higher goals//Applying observational learning in classroom discussions')
self.actions.modify_text('incorrectoptions-2', 'Memorizing textbook content verbatim//Focusing solely on grades without understanding concepts')
Add text `Using self-efficacy to set higher goals//Applying observational learning in classroom discussions` to this text input: <input type="text" name="correctoptions-2">
Add text `Memorizing textbook content verbatim//Focusing solely on grades without understanding concepts` to this text input: <input type="text" name="incorrectoptions-2">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-2
Executing one action: self.actions.modify_text('incorrectoptions-2', 'Application in sports coaching // Use of digital media in classrooms // Behavioral rewards system')
Add text `Application in sports coaching // Use of digital media in classrooms // Behavioral rewards system` to this text input: <input type="text" name="incorrectoptions-2" value="Memorizing textbook content verbatim//Focusing solely on grades without understanding concepts">
 - - - - - -  starting a new element: `Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-3
Executing one action: self.actions.modify_text('correctoptions-3', 'Self-regulation')
self.actions.modify_text('incorrectoptions-3', 'Self-efficacy // Observational learning // Triadic reciprocal determinism')
Add text `Self-regulation` to this text input: <input type="text" name="correctoptions-3">
Add text `Self-efficacy // Observational learning // Triadic reciprocal determinism` to this text input: <input type="text" name="incorrectoptions-3">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-3
Executing one action: self.actions.modify_text('incorrectoptions-3', 'Goal setting // Observational learning // Reciprocal determinism')
Add text `Goal setting // Observational learning // Reciprocal determinism` to this text input: <input type="text" name="incorrectoptions-3" value="Self-efficacy // Observational learning // Triadic reciprocal determinism">
 - - - - - -  starting a new element: `Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-4
Executing one action: self.actions.modify_text('correctoptions-4', 'Social Learning Theory')
self.actions.modify_text('incorrectoptions-4', 'Cognitive Dissonance Theory // Behavioral Theory // Constructivism')
Add text `Social Learning Theory` to this text input: <input type="text" name="correctoptions-4">
Add text `Cognitive Dissonance Theory // Behavioral Theory // Constructivism` to this text input: <input type="text" name="incorrectoptions-4">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-4
Executing one action: self.actions.modify_text('incorrectoptions-4', 'Social behaviorism theory // Environmental learning theory // Reflexive observational theory')
Add text `Social behaviorism theory // Environmental learning theory // Reflexive observational theory` to this text input: <input type="text" name="incorrectoptions-4" value="Cognitive Dissonance Theory // Behavioral Theory // Constructivism">
 - - - - - -  starting a new element: `Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-5
Executing one action: self.actions.modify_text('correctoptions-5', 'self-regulative functions')
self.actions.modify_text('incorrectoptions-5', 'educational insights//classroom management skills//advanced teaching techniques')
Add text `self-regulative functions` to this text input: <input type="text" name="correctoptions-5">
Add text `educational insights//classroom management skills//advanced teaching techniques` to this text input: <input type="text" name="incorrectoptions-5">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-5
Executing one action: self.actions.modify_text('incorrectoptions-5', 'Self-regulative functions // High self-efficacy // Goal setting strategies')
Add text `Self-regulative functions // High self-efficacy // Goal setting strategies` to this text input: <input type="text" name="incorrectoptions-5" value="educational insights//classroom management skills//advanced teaching techniques">
 - - - - - -  starting a new element: `Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-6
Executing one action: self.actions.modify_text('correctoptions-6', 'Self-regulation')
self.actions.modify_text('incorrectoptions-6', 'Self-efficacy//Observational learning//Reciprocal determinism')
Add text `Self-regulation` to this text input: <input type="text" name="correctoptions-6">
Add text `Self-efficacy//Observational learning//Reciprocal determinism` to this text input: <input type="text" name="incorrectoptions-6">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-6
Executing one action: self.actions.modify_text('incorrectoptions-6', 'Goal-setting // Self-monitoring')
Add text `Goal-setting // Self-monitoring` to this text input: <input type="text" name="incorrectoptions-6" value="Self-efficacy//Observational learning//Reciprocal determinism">
 - - - - - -  starting a new element: `Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-7
Executing one action: self.actions.modify_text('correctoptions-7', 'A theory focusing on how behavior and growth are affected by cognitive operations during social activities')
Add text `A theory focusing on how behavior and growth are affected by cognitive operations during social activities` to this text input: <input type="text" name="correctoptions-7">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-7
Executing one action: self.actions.modify_text('incorrectoptions-7', 'Social emotional theory // Personality development theory // Behavioral adjustment theory')
Add text `Social emotional theory // Personality development theory // Behavioral adjustment theory` to this text input: <input type="text" name="incorrectoptions-7">
 - - - - - -  starting a new element: `Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-8
Executing one action: self.actions.modify_text('correctoptions-8', 'Students and teachers')
Add text `Students and teachers` to this text input: <input type="text" name="correctoptions-8">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-8
Executing one action: self.actions.modify_text('incorrectoptions-8', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-9
Executing one action: self.actions.modify_text('correctoptions-9', 'Albert Bandura')
self.actions.modify_text('incorrectoptions-9', 'Jean Piaget // Lev Vygotsky // Sigmund Freud')
Add text `Albert Bandura` to this text input: <input type="text" name="correctoptions-9">
Add text `Jean Piaget // Lev Vygotsky // Sigmund Freud` to this text input: <input type="text" name="incorrectoptions-9">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-9
Executing one action: self.actions.modify_text('incorrectoptions-9', 'Albert Bandura // Jean Piaget // Lev Vygotsky')
Add text `Albert Bandura // Jean Piaget // Lev Vygotsky` to this text input: <input type="text" name="incorrectoptions-9" value="Jean Piaget // Lev Vygotsky // Sigmund Freud">
 - - - - - -  starting a new element: `Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
Skipping element `hiddenName` since it is not visible.
input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['1986']
 visible_values : ['1986']
input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['1985 // 2001 // 1978']
 visible_values : ['1985 // 2001 // 1978']
input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['When students or teachers observe a well-trained model and experience increases in his or her knowledge and understanding.']
 visible_values : ['When students or teachers observe a well-trained model and experience increases in his or her knowledge and understanding.']
input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['When students or teachers observe a well-trained model and increase their self-efficacy // When teachers write new lesson plans // During a science experiment in class']
 visible_values : ['When students or teachers observe a well-trained model and increase their self-efficacy // When teachers write new lesson plans // During a science experiment in class']
input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Using self-efficacy to set higher goals//Applying observational learning in classroom discussions']
 visible_values : ['Using self-efficacy to set higher goals//Applying observational learning in classroom discussions']
input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Application in sports coaching // Use of digital media in classrooms // Behavioral rewards system']
 visible_values : ['Application in sports coaching // Use of digital media in classrooms // Behavioral rewards system']
input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Self-regulation']
 visible_values : ['Self-regulation']
input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Goal setting // Observational learning // Reciprocal determinism']
 visible_values : ['Goal setting // Observational learning // Reciprocal determinism']
input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Social Learning Theory']
 visible_values : ['Social Learning Theory']
input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Social behaviorism theory // Environmental learning theory // Reflexive observational theory']
 visible_values : ['Social behaviorism theory // Environmental learning theory // Reflexive observational theory']
input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['self-regulative functions']
 visible_values : ['self-regulative functions']
input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Self-regulative functions // High self-efficacy // Goal setting strategies']
 visible_values : ['Self-regulative functions // High self-efficacy // Goal setting strategies']
input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Self-regulation']
 visible_values : ['Self-regulation']
input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Goal-setting // Self-monitoring']
 visible_values : ['Goal-setting // Self-monitoring']
input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['A theory focusing on how behavior and growth are affected by cognitive operations during social activities']
 visible_values : ['A theory focusing on how behavior and growth are affected by cognitive operations during social activities']
input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Social emotional theory // Personality development theory // Behavioral adjustment theory']
 visible_values : ['Social emotional theory // Personality development theory // Behavioral adjustment theory']
input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Students and teachers']
 visible_values : ['Students and teachers']
input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : [None]
 visible_values : [None]
input: Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Albert Bandura']
 visible_values : ['Albert Bandura']
input: Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Albert Bandura // Jean Piaget // Lev Vygotsky']
 visible_values : ['Albert Bandura // Jean Piaget // Lev Vygotsky']
input: Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : [None]
 visible_values : [None]
 ------- evaluating input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Binalshibh and Atta', '1986']`
----> answers: `['1986', 'Binalshibh and Atta']` - type: `<class 'list'>`
----> baseline_answer: `1986` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Qaida when', '1989']`
----> answers: `['Qaida when', '1989']` - type: `<class 'list'>`
----> baseline_answer: `1985 // 2001 // 1978` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `["Compare Binalshibh's", 'when students or teachers observe a well-trained model and experience increases in his or her knowledge and understanding.']`
----> answers: `['when students or teachers observe a well-trained model and experience increases in his or her knowledge and understanding.', "Compare Binalshibh's"]` - type: `<class 'list'>`
----> baseline_answer: `When students or teachers observe a well-trained model and experience increases in his or her knowledge and understanding.` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['ordered', 'when a student or teacher decides to replicate an observed behavior']`
----> answers: `['ordered', 'when a student or teacher decides to replicate an observed behavior']` - type: `<class 'list'>`
----> baseline_answer: `When students or teachers observe a well-trained model and increase their self-efficacy // When teachers write new lesson plans // During a science experiment in class` - type: `<class 'str'>`
 --> scores:  0.27027027027027023
----> per-field score: 0.27027027027027023
 ------- evaluating input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['California', 'self-efficacy, self-regulation, observational learning, and reciprocal determinism.']`
----> answers: `['California', 'self-efficacy, self-regulation, observational learning, and reciprocal determinism.']` - type: `<class 'list'>`
----> baseline_answer: `Using self-efficacy to set higher goals//Applying observational learning in classroom discussions` - type: `<class 'str'>`
 --> scores:  0.3636363636363637
----> per-field score: 0.3636363636363637
 ------- evaluating input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['primary', 'motivation and learning']`
----> answers: `['primary', 'motivation and learning']` - type: `<class 'list'>`
----> baseline_answer: `Application in sports coaching // Use of digital media in classrooms // Behavioral rewards system` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['community', 'Self-regulation']`
----> answers: `['Self-regulation', 'community']` - type: `<class 'list'>`
----> baseline_answer: `Self-regulation` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['searching', 'Self-efficacy']`
----> answers: `['searching', 'Self-efficacy']` - type: `<class 'list'>`
----> baseline_answer: `Goal setting // Observational learning // Reciprocal determinism` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['notified', 'The social cognitive theory']`
----> answers: `['notified', 'The social cognitive theory']` - type: `<class 'list'>`
----> baseline_answer: `Social Learning Theory` - type: `<class 'str'>`
 --> scores:  0.5714285714285715
----> per-field score: 0.5714285714285715
 ------- evaluating input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['President', 'Self-regulation']`
----> answers: `['Self-regulation', 'President']` - type: `<class 'list'>`
----> baseline_answer: `Social behaviorism theory // Environmental learning theory // Reflexive observational theory` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['concern', 'experience increases in his or her knowledge and understanding.']`
----> answers: `['concern', 'experience increases in his or her knowledge and understanding.']` - type: `<class 'list'>`
----> baseline_answer: `self-regulative functions` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['lived in Germany', 'experience decreases in his or her knowledge and understanding.']`
----> answers: `['experience decreases in his or her knowledge and understanding.', 'lived in Germany']` - type: `<class 'list'>`
----> baseline_answer: `Self-regulative functions // High self-efficacy // Goal setting strategies` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['e passed between', 'Self-regulation']`
----> answers: `['e passed between', 'Self-regulation']` - type: `<class 'list'>`
----> baseline_answer: `Self-regulation` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Barnett', 'Self-efficacy']`
----> answers: `['Barnett', 'Self-efficacy']` - type: `<class 'list'>`
----> baseline_answer: `Goal-setting // Self-monitoring` - type: `<class 'str'>`
 --> scores:  0.3333333333333333
----> per-field score: 0.3333333333333333
 ------- evaluating input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['aircraft began', 'It operates under individual everyday classroom functions such as goal setting, self-monitoring, and self-influence.']`
----> answers: `['aircraft began', 'It operates under individual everyday classroom functions such as goal setting, self-monitoring, and self-influence.']` - type: `<class 'list'>`
----> baseline_answer: `A theory focusing on how behavior and growth are affected by cognitive operations during social activities` - type: `<class 'str'>`
 --> scores:  0.0625
----> per-field score: 0.0625
 ------- evaluating input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['the safety', 'the mutual relationship between a student or teacher, his or her environment, and his or her behavior is pointed out as key components']`
----> answers: `['the mutual relationship between a student or teacher, his or her environment, and his or her behavior is pointed out as key components', 'the safety']` - type: `<class 'list'>`
----> baseline_answer: `Social emotional theory // Personality development theory // Behavioral adjustment theory` - type: `<class 'str'>`
 --> scores:  0.0625
----> per-field score: 0.0625
 ------- evaluating input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['became a close', 'teachers']`
----> answers: `['became a close', 'teachers']` - type: `<class 'list'>`
----> baseline_answer: `Students and teachers` - type: `<class 'str'>`
 --> scores:  0.5
----> per-field score: 0.5
 ------- evaluating input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['friend of Binalshibh', 'students']`
----> answers: `['students', 'friend of Binalshibh']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['concern', 'Bandura']`
----> answers: `['concern', 'Bandura']` - type: `<class 'list'>`
----> baseline_answer: `Albert Bandura` - type: `<class 'str'>`
 --> scores:  0.6666666666666666
----> per-field score: 0.6666666666666666
 ------- evaluating input: Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['extremist outlook', 'Teacher']`
----> answers: `['extremist outlook', 'Teacher']` - type: `<class 'list'>`
----> baseline_answer: `Albert Bandura // Jean Piaget // Lev Vygotsky` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
Skipping element `hiddenName` since it is not visible.
 --> Per-instance overall score: 0.34151676026676026
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6666666666666666, 0.4, 0.8, 0.28571428571428575, 1.0, 0.0, 0.22222222222222224, 0.0, 0.33333333333333337, 0.0, 0.2641509433962264, 0.0, 0.0, 0.0, 0.27906976744186046, 0.2105263157894737, 0.6666666666666666, 0.3636363636363636, 1.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.5, 1.0, 0.2222222222222222, 1.0, 0.11764705882352941, 0.0, 0.25, 0.5, 0.33333333333333337, 1.0, 0.0, 1.0, 0.2222222222222222, 0.4, 0.33333333333333337, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.4444444444444445, 0.4444444444444445, 0.4615384615384615, 1.0, 0.2, 1.0, 0.0, 0.4444444444444444, 0.1, 0.15789473684210528, 0.13333333333333333, 0.5, 0.16666666666666666, 0.4444444444444445, 0.22222222222222224, 0.5, 0.0, 0.14285714285714288, 0.1818181818181818, 0.16666666666666666, 0.0, 0.5, 0.0, 0.6666666666666666, 0.14285714285714288, 0.3333333333333333, 0.13333333333333333, 0.08333333333333334, 0.1, 0.4, 0.0, 0.6666666666666666, 0.0, 1.0, 0.0, 0.2727272727272727, 0.15384615384615383, 0.0, 0.22222222222222224, 0.41379310344827586, 0.10526315789473684, 0.6666666666666666, 0.0, 0.5806451612903225, 0.11428571428571428, 0.923076923076923, 0.06451612903225806, 0.7272727272727273, 0.0, 0.22222222222222224, 0.17142857142857143, 0.4444444444444444, 0.20833333333333334, 0.10526315789473682, 0.05555555555555556, 0.5833333333333334, 0.07017543859649122, 0.08695652173913043, 0.14634146341463417, 0.125, 0.05714285714285714, 0.8, 0.13333333333333333, 0.0, 0.0, 1.0, 0.13333333333333333, 0.22222222222222224, 0.3448275862068966, 0.35294117647058826, 0.10256410256410257, 0.0, 0.10810810810810811, 0.25, 0.4800000000000001, 0.11764705882352941, 0.24390243902439024, 0.6666666666666666, 0.6, 0.5714285714285715, 0.0, 0.0, 0.0, 0.0, 0.15384615384615385, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.2, 0.6666666666666667, 0.18181818181818182, 0.1, 0.0, 0.1, 0.0, 0.14285714285714288, 0.0, 0.7000000000000001, 0.0, 0.17391304347826086, 0.4444444444444445, 1.0, 0.2222222222222222, 1.0, 0.5, 1.0, 0.7142857142857143, 0.0, 0.0, 1.0, 0.4, 1.0, 0.0, 0.15384615384615385, 0.2758620689655172, 0.33333333333333337, 0.1818181818181818, 0.35294117647058826, 0.3571428571428571, 0.7142857142857143, 0.16666666666666669, 0.28571428571428575, 0.16326530612244897, 0.2222222222222222, 0.0, 0.08, 0.1081081081081081, 0.21052631578947367, 0.12121212121212123, 0.4, 0.0, 0.8, 0.30769230769230765, 1.0, 0.0, 0.1818181818181818, 0.23529411764705882, 0.7999999999999999, 0.17391304347826086, 0.15384615384615383, 0.13793103448275862, 1.0, 0.25, 1.0, 0.25, 0.2222222222222222, 0.0, 0.3529411764705882, 0.17142857142857143, 1.0, 0.4, 0.0, 0.0, 0.0, 0.16666666666666666, 0.25, 0.0, 0.2222222222222222, 0.0, 1.0, 0.06451612903225806, 0.22222222222222224, 0.3333333333333333, 0.28571428571428575, 0.19354838709677416, 0.6666666666666666, 0.16666666666666666, 0.5, 0.25, 0.4, 0.0, 0.2222222222222222, 0.0, 0.15384615384615385, 0.28571428571428575, 0.0, 0.4, 0.0, 0.0, 0.5, 0.5, 1.0, 0.0, 0.23529411764705882, 0.0909090909090909, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.6666666666666667, 0.4, 0.3448275862068966, 0.7499999999999999, 0.20689655172413793, 0.6666666666666666, 0.5882352941176471, 0.07692307692307691, 0.17142857142857143, 1.0, 0.5, 0.09999999999999999, 0.27586206896551724, 0.2105263157894737, 0.26666666666666666, 0.0, 0.2857142857142857, 0.4, 0.1818181818181818, 1.0, 0.3333333333333333, 0.7999999999999999, 0.5714285714285715, 0.8, 0.0, 0.09230769230769229, 0.16666666666666666, 1.0, 0.0, 0.6666666666666666, 0.0, 1.0, 0.0, 0.05882352941176471, 0.6666666666666666, 0.0, 0.0, 0.27450980392156865, 0.12121212121212122, 0.0, 0.1111111111111111, 0.25531914893617025, 0.07142857142857142, 0.4444444444444445, 0.16216216216216214, 0.18181818181818182, 0.10810810810810811, 0.3684210526315789, 0.09090909090909091, 0.4000000000000001, 0.0, 0.13793103448275862, 0.0, 0.3333333333333333, 0.14814814814814814, 0.2, 0.21739130434782608, 0.35294117647058826, 0.0, 0.35294117647058826, 0.0, 0.0, 0.0, 0.5, 0.1111111111111111, 0.14814814814814817, 0.1111111111111111, 0.2857142857142857, 0.0, 0.3333333333333333, 0.09523809523809525, 0.0, 0.0, 1.0, 0.14285714285714285, 0.5714285714285715, 0.11764705882352941, 0.4, 0.4, 1.0, 0.0, 1.0, 0.27027027027027023, 0.3636363636363637, 0.0, 1.0, 0.0, 0.5714285714285715, 0.0, 0.0, 0.0, 1.0, 0.3333333333333333, 0.0625, 0.0625, 0.5, 0.0, 0.6666666666666666, 0.0]}
instance_id: 34772 <-> row_number: 37
Could not find input field with name `correctoptions-16`
Could not find input field with name `correctoptions-17`
Could not find input field with name `correctoptions-18`
Could not find input field with name `correctoptions-19`
Could not find input field with name `correctoptions-20`
Could not find input field with name `correctoptions-21`
Could not find input field with name `correctoptions-22`
Could not find input field with name `incorrectoptions-16`
Could not find input field with name `incorrectoptions-17`
Could not find input field with name `incorrectoptions-18`
Could not find input field with name `incorrectoptions-19`
Could not find input field with name `incorrectoptions-20`
Could not find input field with name `incorrectoptions-21`
Could not find input field with name `incorrectoptions-22`
 --> inputs: ['correctoptions-0', 'incorrectoptions-0', 'correctoptions-1', 'incorrectoptions-1', 'correctoptions-2', 'incorrectoptions-2', 'correctoptions-3', 'incorrectoptions-3', 'correctoptions-4', 'incorrectoptions-4', 'correctoptions-5', 'incorrectoptions-5', 'correctoptions-6', 'incorrectoptions-6', 'correctoptions-7', 'incorrectoptions-7', 'correctoptions-8', 'incorrectoptions-8', 'correctoptions-9', 'incorrectoptions-9', 'correctoptions-10', 'incorrectoptions-10', 'correctoptions-11', 'incorrectoptions-11', 'correctoptions-12', 'incorrectoptions-12', 'correctoptions-13', 'incorrectoptions-13', 'correctoptions-14', 'incorrectoptions-14', 'correctoptions-15', 'incorrectoptions-15', 'hiddenName']
 --> Looking up gold labels from row index 37 of `input.csv` (unique inputs). 
 --> input labels: {'correctoptions-0': ["Max's Owner", 'Binalshibh and Atta'], 'incorrectoptions-0': ['The Dog', 'Qaida when'], 'correctoptions-1': ['Max and Mary', 'when most'], 'incorrectoptions-1': ['Max and Sam', 'concerned'], 'correctoptions-2': ['Squirrel', 'California'], 'incorrectoptions-2': ['Mary', 'target that triggered'], 'correctoptions-3': ['Mary', 'Government'], 'incorrectoptions-3': ['Sally', 'considered'], 'correctoptions-4': ["Max is Mary's Dog", 'Binalshibh use'], 'incorrectoptions-4': ["Max is Mary's Brother", 'President'], 'correctoptions-5': ['Max ran away', 'concern'], 'incorrectoptions-5': ['Max bit mary', 'lived in Germany'], 'correctoptions-6': ['she looked all over and found him not far away', 'influenced'], 'incorrectoptions-6': ['she never found max', 'Barnett'], 'correctoptions-7': ['walking in the woods', 'punishment'], 'incorrectoptions-7': ['cooking', 'highest duty'], 'correctoptions-8': ['picking blueberries', 'America 77 flying'], 'incorrectoptions-8': ['reading', 'friend of Binalshibh'], 'correctoptions-9': ['The Stream // raspberry bushes // old cabin', 'identified'], 'incorrectoptions-9': ['The beach', 'extremist outlook'], 'correctoptions-10': ['Squirrels', 'highest duty'], 'incorrectoptions-10': ['Mary', 'wasIKELL'], 'correctoptions-11': ['Yes', 'sophisticated'], 'incorrectoptions-11': ["She doesn't know Max", 'Who that'], 'correctoptions-12': ['Yes', 'Binalshibh'], 'incorrectoptions-12': ['No', 'CIA management'], 'correctoptions-13': ['Max', 'Hadley expect'], 'incorrectoptions-13': ['Mary', 'Predator to'], 'correctoptions-14': ['go to an old cabin', 'countries'], 'incorrectoptions-14': ['play fetch', 'Ramzi Binalshibh'], 'correctoptions-15': ['Nothing', "Binalshibh's"], 'incorrectoptions-15': ['Went to bed with no dinner', 'friends'], 'hiddenName': ['{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-0
Executing one action: self.actions.modify_text('correctoptions-0', 'Mary')
Add text `Mary` to this text input: <input type="text" name="correctoptions-0">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-0
Executing one action: self.actions.modify_text('incorrectoptions-0', 'A cat // A birch tree // A lakeside')
Add text `A cat // A birch tree // A lakeside` to this text input: <input type="text" name="incorrectoptions-0">
 - - - - - -  starting a new element: `Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-1
Executing one action: self.actions.modify_text('correctoptions-1', 'Mary and Max//Max and Mary')
self.actions.modify_text('incorrectoptions-1', 'Mary and her cat//Max alone//Mary by herself')
Add text `Mary and Max//Max and Mary` to this text input: <input type="text" name="correctoptions-1">
Add text `Mary and her cat//Max alone//Mary by herself` to this text input: <input type="text" name="incorrectoptions-1">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-1
Executing one action: self.actions.modify_text('incorrectoptions-1', 'A bear//A rabbit')
Add text `A bear//A rabbit` to this text input: <input type="text" name="incorrectoptions-1" value="Mary and her cat//Max alone//Mary by herself">
 - - - - - -  starting a new element: `Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-2
Executing one action: self.actions.modify_text('correctoptions-2', 'squirrel')
self.actions.modify_text('incorrectoptions-2', 'rabbit//bird//fox')
Add text `squirrel` to this text input: <input type="text" name="correctoptions-2">
Add text `rabbit//bird//fox` to this text input: <input type="text" name="incorrectoptions-2">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-2
Executing one action: self.actions.modify_text('incorrectoptions-2', 'A rabbit // A deer // A human')
Add text `A rabbit // A deer // A human` to this text input: <input type="text" name="incorrectoptions-2" value="rabbit//bird//fox">
 - - - - - -  starting a new element: `Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-3
Executing one action: self.actions.modify_text('correctoptions-3', 'Mary')
Add text `Mary` to this text input: <input type="text" name="correctoptions-3">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-3
Executing one action: self.actions.modify_text('incorrectoptions-3', 'A squirrel // A rabbit // A deer')
Add text `A squirrel // A rabbit // A deer` to this text input: <input type="text" name="incorrectoptions-3">
 - - - - - -  starting a new element: `Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-4
Executing one action: self.actions.modify_text('correctoptions-4', 'Max is a dog // Max is an animal that loves adventures with Mary')
self.actions.modify_text('incorrectoptions-4', 'Max is Mary’s neighbor // Max is a squirrel Mary saw in the woods')
Add text `Max is a dog // Max is an animal that loves adventures with Mary` to this text input: <input type="text" name="correctoptions-4">
Add text `Max is Mary’s neighbor // Max is a squirrel Mary saw in the woods` to this text input: <input type="text" name="incorrectoptions-4">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-4
Executing one action: self.actions.modify_text('incorrectoptions-4', 'A cat // A deer // A rabbit')
Add text `A cat // A deer // A rabbit` to this text input: <input type="text" name="incorrectoptions-4" value="Max is Mary’s neighbor // Max is a squirrel Mary saw in the woods">
 - - - - - -  starting a new element: `Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-5
Executing one action: self.actions.modify_text('correctoptions-5', 'Max chasing a squirrel // Max getting distracted by a squirrel')
Add text `Max chasing a squirrel // Max getting distracted by a squirrel` to this text input: <input type="text" name="correctoptions-5">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-5
Executing one action: self.actions.modify_text('incorrectoptions-5', 'Rabbit // Another dog // A deer')
Add text `Rabbit // Another dog // A deer` to this text input: <input type="text" name="incorrectoptions-5">
 - - - - - -  starting a new element: `Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-6
Executing one action: self.actions.modify_text('correctoptions-6', 'next to the stream // in their secret hiding place behind the raspberry bushes // inside the old cabin')
Add text `next to the stream // in their secret hiding place behind the raspberry bushes // inside the old cabin` to this text input: <input type="text" name="correctoptions-6">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-6
Executing one action: self.actions.modify_text('incorrectoptions-6', 'Behind the raspberry bushes // In the old cabin // Next to the stream // A few steps away from where Mary was picking blueberries')
Add text `Behind the raspberry bushes // In the old cabin // Next to the stream // A few steps away from where Mary was picking blueberries` to this text input: <input type="text" name="incorrectoptions-6">
 - - - - - -  starting a new element: `Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-7
Executing one action: self.actions.modify_text('correctoptions-7', 'Picking blueberries // Looking for Max // Running through the woods')
self.actions.modify_text('incorrectoptions-7', 'Baking a cake // Swimming in a lake // Reading a book')
Add text `Picking blueberries // Looking for Max // Running through the woods` to this text input: <input type="text" name="correctoptions-7">
Add text `Baking a cake // Swimming in a lake // Reading a book` to this text input: <input type="text" name="incorrectoptions-7">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-7
Executing one action: self.actions.modify_text('incorrectoptions-7', 'Mary cooking dinner // Max playing fetch alone // Mary and Max watching TV')
Add text `Mary cooking dinner // Max playing fetch alone // Mary and Max watching TV` to this text input: <input type="text" name="incorrectoptions-7" value="Baking a cake // Swimming in a lake // Reading a book">
 - - - - - -  starting a new element: `Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-8
Executing one action: self.actions.modify_text('correctoptions-8', 'Picking blueberries')
self.actions.modify_text('incorrectoptions-8', 'Sleeping in the tall grass // Chasing a squirrel // Running through the stream')
Add text `Picking blueberries` to this text input: <input type="text" name="correctoptions-8">
Add text `Sleeping in the tall grass // Chasing a squirrel // Running through the stream` to this text input: <input type="text" name="incorrectoptions-8">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-8
Executing one action: self.actions.modify_text('incorrectoptions-8', 'Picking raspberries//Chasing a rabbit//Sitting in the tall grass')
Add text `Picking raspberries//Chasing a rabbit//Sitting in the tall grass` to this text input: <input type="text" name="incorrectoptions-8" value="Sleeping in the tall grass // Chasing a squirrel // Running through the stream">
 - - - - - -  starting a new element: `Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-9
Executing one action: self.actions.modify_text('correctoptions-9', 'next to the stream // in their secret hiding place behind the raspberry bushes // inside the old cabin that sat in the woods')
self.actions.modify_text('incorrectoptions-9', 'in the middle of the road // on top of a tall tree // under the porch of Mary’s house')
Add text `next to the stream // in their secret hiding place behind the raspberry bushes // inside the old cabin that sat in the woods` to this text input: <input type="text" name="correctoptions-9">
Add text `in the middle of the road // on top of a tall tree // under the porch of Mary’s house` to this text input: <input type="text" name="incorrectoptions-9">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-9
Executing one action: self.actions.modify_text('incorrectoptions-9', 'Behind a tree // Inside the house // Under a car')
Add text `Behind a tree // Inside the house // Under a car` to this text input: <input type="text" name="incorrectoptions-9" value="in the middle of the road // on top of a tall tree // under the porch of Mary’s house">
 - - - - - -  starting a new element: `Input(name=`correctoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-10
Executing one action: self.actions.modify_text('correctoptions-10', 'squirrels')
self.actions.modify_text('incorrectoptions-10', 'blueberries // rabbits // leaves')
Add text `squirrels` to this text input: <input type="text" name="correctoptions-10">
Add text `blueberries // rabbits // leaves` to this text input: <input type="text" name="incorrectoptions-10">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-10
Executing one action: self.actions.modify_text('incorrectoptions-10', 'Cats // Trees')
Add text `Cats // Trees` to this text input: <input type="text" name="incorrectoptions-10" value="blueberries // rabbits // leaves">
 - - - - - -  starting a new element: `Input(name=`correctoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-11
Executing one action: self.actions.modify_text('correctoptions-11', 'Yes')
self.actions.modify_text('incorrectoptions-11', 'No // Not sure')
Add text `Yes` to this text input: <input type="text" name="correctoptions-11">
Add text `No // Not sure` to this text input: <input type="text" name="incorrectoptions-11">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-11
Executing one action: self.actions.modify_text('incorrectoptions-11', 'Mary sees Max as a burden // Max dislikes Mary // Max is an independent cat')
Add text `Mary sees Max as a burden // Max dislikes Mary // Max is an independent cat` to this text input: <input type="text" name="incorrectoptions-11" value="No // Not sure">
 - - - - - -  starting a new element: `Input(name=`correctoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-12
Executing one action: self.actions.modify_text('correctoptions-12', 'Yes // Mary's dog follows her commands')
self.actions.modify_text('incorrectoptions-12', 'No // Mary's dog never listens to her // The dog is disobedient')
Failed to execute an action self.actions.modify_text('correctoptions-12', 'Yes // Mary's dog follows her commands')
self.actions.modify_text('incorrectoptions-12', 'No // Mary's dog never listens to her // The dog is disobedient'), error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-12
Executing one action: self.actions.modify_text('incorrectoptions-12', 'A cat // A tree')
Add text `A cat // A tree` to this text input: <input type="text" name="incorrectoptions-12">
 - - - - - -  starting a new element: `Input(name=`correctoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-13
Executing one action: self.actions.modify_text('correctoptions-13', 'Max')
self.actions.modify_text('incorrectoptions-13', 'Mary // A rabbit // The neighbor')
Add text `Max` to this text input: <input type="text" name="correctoptions-13">
Add text `Mary // A rabbit // The neighbor` to this text input: <input type="text" name="incorrectoptions-13">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-13
Executing one action: self.actions.modify_text('incorrectoptions-13', 'Mary // A blueberry bush')
Add text `Mary // A blueberry bush` to this text input: <input type="text" name="incorrectoptions-13" value="Mary // A rabbit // The neighbor">
 - - - - - -  starting a new element: `Input(name=`correctoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-14
Executing one action: self.actions.modify_text('correctoptions-14', 'Looking for blueberries // Falling asleep in the tall grass')
self.actions.modify_text('incorrectoptions-14', 'Climbing trees // Fishing in the stream')
Add text `Looking for blueberries // Falling asleep in the tall grass` to this text input: <input type="text" name="correctoptions-14">
Add text `Climbing trees // Fishing in the stream` to this text input: <input type="text" name="incorrectoptions-14">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-14
Executing one action: self.actions.modify_text('incorrectoptions-14', 'Playing fetch with a stick // Hiking alone // Bird watching')
Add text `Playing fetch with a stick // Hiking alone // Bird watching` to this text input: <input type="text" name="incorrectoptions-14" value="Climbing trees // Fishing in the stream">
 - - - - - -  starting a new element: `Input(name=`correctoptions-15`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-15`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-15
Executing one action: self.actions.modify_text('correctoptions-15', 'Max happily returned to Mary // Mary found Max')
self.actions.modify_text('incorrectoptions-15', 'Max got lost forever // Mary never found Max // Max chased another dog')
Add text `Max happily returned to Mary // Mary found Max` to this text input: <input type="text" name="correctoptions-15">
Add text `Max got lost forever // Mary never found Max // Max chased another dog` to this text input: <input type="text" name="incorrectoptions-15">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-15`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-15`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-15
Executing one action: self.actions.modify_text('incorrectoptions-15', 'Mary went home without Max // Max returned with a rabbit instead of chasing a squirrel')
Add text `Mary went home without Max // Max returned with a rabbit instead of chasing a squirrel` to this text input: <input type="text" name="incorrectoptions-15" value="Max got lost forever // Mary never found Max // Max chased another dog">
 - - - - - -  starting a new element: `Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
Skipping element `hiddenName` since it is not visible.
input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Mary']
 visible_values : ['Mary']
input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['A cat // A birch tree // A lakeside']
 visible_values : ['A cat // A birch tree // A lakeside']
input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Mary and Max//Max and Mary']
 visible_values : ['Mary and Max//Max and Mary']
input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['A bear//A rabbit']
 visible_values : ['A bear//A rabbit']
input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['squirrel']
 visible_values : ['squirrel']
input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['A rabbit // A deer // A human']
 visible_values : ['A rabbit // A deer // A human']
input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Mary']
 visible_values : ['Mary']
input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['A squirrel // A rabbit // A deer']
 visible_values : ['A squirrel // A rabbit // A deer']
input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Max is a dog // Max is an animal that loves adventures with Mary']
 visible_values : ['Max is a dog // Max is an animal that loves adventures with Mary']
input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['A cat // A deer // A rabbit']
 visible_values : ['A cat // A deer // A rabbit']
input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Max chasing a squirrel // Max getting distracted by a squirrel']
 visible_values : ['Max chasing a squirrel // Max getting distracted by a squirrel']
input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Rabbit // Another dog // A deer']
 visible_values : ['Rabbit // Another dog // A deer']
input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['next to the stream // in their secret hiding place behind the raspberry bushes // inside the old cabin']
 visible_values : ['next to the stream // in their secret hiding place behind the raspberry bushes // inside the old cabin']
input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Behind the raspberry bushes // In the old cabin // Next to the stream // A few steps away from where Mary was picking blueberries']
 visible_values : ['Behind the raspberry bushes // In the old cabin // Next to the stream // A few steps away from where Mary was picking blueberries']
input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Picking blueberries // Looking for Max // Running through the woods']
 visible_values : ['Picking blueberries // Looking for Max // Running through the woods']
input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Mary cooking dinner // Max playing fetch alone // Mary and Max watching TV']
 visible_values : ['Mary cooking dinner // Max playing fetch alone // Mary and Max watching TV']
input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Picking blueberries']
 visible_values : ['Picking blueberries']
input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Picking raspberries//Chasing a rabbit//Sitting in the tall grass']
 visible_values : ['Picking raspberries//Chasing a rabbit//Sitting in the tall grass']
input: Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['next to the stream // in their secret hiding place behind the raspberry bushes // inside the old cabin that sat in the woods']
 visible_values : ['next to the stream // in their secret hiding place behind the raspberry bushes // inside the old cabin that sat in the woods']
input: Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Behind a tree // Inside the house // Under a car']
 visible_values : ['Behind a tree // Inside the house // Under a car']
input: Input(name=`correctoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['squirrels']
 visible_values : ['squirrels']
input: Input(name=`incorrectoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Cats // Trees']
 visible_values : ['Cats // Trees']
input: Input(name=`correctoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`incorrectoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Mary sees Max as a burden // Max dislikes Mary // Max is an independent cat']
 visible_values : ['Mary sees Max as a burden // Max dislikes Mary // Max is an independent cat']
input: Input(name=`correctoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : [None]
 visible_values : [None]
input: Input(name=`incorrectoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['A cat // A tree']
 visible_values : ['A cat // A tree']
input: Input(name=`correctoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Max']
 visible_values : ['Max']
input: Input(name=`incorrectoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Mary // A blueberry bush']
 visible_values : ['Mary // A blueberry bush']
input: Input(name=`correctoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Looking for blueberries // Falling asleep in the tall grass']
 visible_values : ['Looking for blueberries // Falling asleep in the tall grass']
input: Input(name=`incorrectoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Playing fetch with a stick // Hiking alone // Bird watching']
 visible_values : ['Playing fetch with a stick // Hiking alone // Bird watching']
input: Input(name=`correctoptions-15`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Max happily returned to Mary // Mary found Max']
 visible_values : ['Max happily returned to Mary // Mary found Max']
input: Input(name=`incorrectoptions-15`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Mary went home without Max // Max returned with a rabbit instead of chasing a squirrel']
 visible_values : ['Mary went home without Max // Max returned with a rabbit instead of chasing a squirrel']
input: Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : [None]
 visible_values : [None]
 ------- evaluating input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `["Max's Owner", 'Binalshibh and Atta']`
----> answers: `["Max's Owner", 'Binalshibh and Atta']` - type: `<class 'list'>`
----> baseline_answer: `Mary` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['The Dog', 'Qaida when']`
----> answers: `['Qaida when', 'The Dog']` - type: `<class 'list'>`
----> baseline_answer: `A cat // A birch tree // A lakeside` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Max and Mary', 'when most']`
----> answers: `['when most', 'Max and Mary']` - type: `<class 'list'>`
----> baseline_answer: `Mary and Max//Max and Mary` - type: `<class 'str'>`
 --> scores:  0.6666666666666666
----> per-field score: 0.6666666666666666
 ------- evaluating input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Max and Sam', 'concerned']`
----> answers: `['concerned', 'Max and Sam']` - type: `<class 'list'>`
----> baseline_answer: `A bear//A rabbit` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Squirrel', 'California']`
----> answers: `['Squirrel', 'California']` - type: `<class 'list'>`
----> baseline_answer: `squirrel` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Mary', 'target that triggered']`
----> answers: `['Mary', 'target that triggered']` - type: `<class 'list'>`
----> baseline_answer: `A rabbit // A deer // A human` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Mary', 'Government']`
----> answers: `['Mary', 'Government']` - type: `<class 'list'>`
----> baseline_answer: `Mary` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Sally', 'considered']`
----> answers: `['Sally', 'considered']` - type: `<class 'list'>`
----> baseline_answer: `A squirrel // A rabbit // A deer` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `["Max is Mary's Dog", 'Binalshibh use']`
----> answers: `["Max is Mary's Dog", 'Binalshibh use']` - type: `<class 'list'>`
----> baseline_answer: `Max is a dog // Max is an animal that loves adventures with Mary` - type: `<class 'str'>`
 --> scores:  0.33333333333333337
----> per-field score: 0.33333333333333337
 ------- evaluating input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `["Max is Mary's Brother", 'President']`
----> answers: `["Max is Mary's Brother", 'President']` - type: `<class 'list'>`
----> baseline_answer: `A cat // A deer // A rabbit` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Max ran away', 'concern']`
----> answers: `['concern', 'Max ran away']` - type: `<class 'list'>`
----> baseline_answer: `Max chasing a squirrel // Max getting distracted by a squirrel` - type: `<class 'str'>`
 --> scores:  0.15384615384615383
----> per-field score: 0.15384615384615383
 ------- evaluating input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Max bit mary', 'lived in Germany']`
----> answers: `['lived in Germany', 'Max bit mary']` - type: `<class 'list'>`
----> baseline_answer: `Rabbit // Another dog // A deer` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['she looked all over and found him not far away', 'influenced']`
----> answers: `['influenced', 'she looked all over and found him not far away']` - type: `<class 'list'>`
----> baseline_answer: `next to the stream // in their secret hiding place behind the raspberry bushes // inside the old cabin` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['she never found max', 'Barnett']`
----> answers: `['Barnett', 'she never found max']` - type: `<class 'list'>`
----> baseline_answer: `Behind the raspberry bushes // In the old cabin // Next to the stream // A few steps away from where Mary was picking blueberries` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['walking in the woods', 'punishment']`
----> answers: `['punishment', 'walking in the woods']` - type: `<class 'list'>`
----> baseline_answer: `Picking blueberries // Looking for Max // Running through the woods` - type: `<class 'str'>`
 --> scores:  0.30769230769230765
----> per-field score: 0.30769230769230765
 ------- evaluating input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['cooking', 'highest duty']`
----> answers: `['highest duty', 'cooking']` - type: `<class 'list'>`
----> baseline_answer: `Mary cooking dinner // Max playing fetch alone // Mary and Max watching TV` - type: `<class 'str'>`
 --> scores:  0.15384615384615385
----> per-field score: 0.15384615384615385
 ------- evaluating input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['picking blueberries', 'America 77 flying']`
----> answers: `['America 77 flying', 'picking blueberries']` - type: `<class 'list'>`
----> baseline_answer: `Picking blueberries` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['reading', 'friend of Binalshibh']`
----> answers: `['reading', 'friend of Binalshibh']` - type: `<class 'list'>`
----> baseline_answer: `Picking raspberries//Chasing a rabbit//Sitting in the tall grass` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['The Stream // raspberry bushes // old cabin', 'identified']`
----> answers: `['identified', 'The Stream // raspberry bushes // old cabin']` - type: `<class 'list'>`
----> baseline_answer: `next to the stream // in their secret hiding place behind the raspberry bushes // inside the old cabin that sat in the woods` - type: `<class 'str'>`
 --> scores:  0.42857142857142855
----> per-field score: 0.42857142857142855
 ------- evaluating input: Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['The beach', 'extremist outlook']`
----> answers: `['extremist outlook', 'The beach']` - type: `<class 'list'>`
----> baseline_answer: `Behind a tree // Inside the house // Under a car` - type: `<class 'str'>`
 --> scores:  0.1818181818181818
----> per-field score: 0.1818181818181818
 ------- evaluating input: Input(name=`correctoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Squirrels', 'highest duty']`
----> answers: `['highest duty', 'Squirrels']` - type: `<class 'list'>`
----> baseline_answer: `squirrels` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Mary', 'wasIKELL']`
----> answers: `['Mary', 'wasIKELL']` - type: `<class 'list'>`
----> baseline_answer: `Cats // Trees` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Yes', 'sophisticated']`
----> answers: `['Yes', 'sophisticated']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `["She doesn't know Max", 'Who that']`
----> answers: `["She doesn't know Max", 'Who that']` - type: `<class 'list'>`
----> baseline_answer: `Mary sees Max as a burden // Max dislikes Mary // Max is an independent cat` - type: `<class 'str'>`
 --> scores:  0.10526315789473682
----> per-field score: 0.10526315789473682
 ------- evaluating input: Input(name=`correctoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Yes', 'Binalshibh']`
----> answers: `['Yes', 'Binalshibh']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`incorrectoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['No', 'CIA management']`
----> answers: `['CIA management', 'No']` - type: `<class 'list'>`
----> baseline_answer: `A cat // A tree` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Max', 'Hadley expect']`
----> answers: `['Hadley expect', 'Max']` - type: `<class 'list'>`
----> baseline_answer: `Max` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Mary', 'Predator to']`
----> answers: `['Mary', 'Predator to']` - type: `<class 'list'>`
----> baseline_answer: `Mary // A blueberry bush` - type: `<class 'str'>`
 --> scores:  0.4
----> per-field score: 0.4
 ------- evaluating input: Input(name=`correctoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['go to an old cabin', 'countries']`
----> answers: `['go to an old cabin', 'countries']` - type: `<class 'list'>`
----> baseline_answer: `Looking for blueberries // Falling asleep in the tall grass` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`incorrectoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['play fetch', 'Ramzi Binalshibh']`
----> answers: `['play fetch', 'Ramzi Binalshibh']` - type: `<class 'list'>`
----> baseline_answer: `Playing fetch with a stick // Hiking alone // Bird watching` - type: `<class 'str'>`
 --> scores:  0.3636363636363636
----> per-field score: 0.3636363636363636
 ------- evaluating input: Input(name=`correctoptions-15`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Nothing', "Binalshibh's"]`
----> answers: `['Nothing', "Binalshibh's"]` - type: `<class 'list'>`
----> baseline_answer: `Max happily returned to Mary // Mary found Max` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`incorrectoptions-15`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Went to bed with no dinner', 'friends']`
----> answers: `['Went to bed with no dinner', 'friends']` - type: `<class 'list'>`
----> baseline_answer: `Mary went home without Max // Max returned with a rabbit instead of chasing a squirrel` - type: `<class 'str'>`
 --> scores:  0.19047619047619044
----> per-field score: 0.19047619047619044
 ------- evaluating input: Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
Skipping element `hiddenName` since it is not visible.
 --> Per-instance overall score: 0.2901609355556724
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6666666666666666, 0.4, 0.8, 0.28571428571428575, 1.0, 0.0, 0.22222222222222224, 0.0, 0.33333333333333337, 0.0, 0.2641509433962264, 0.0, 0.0, 0.0, 0.27906976744186046, 0.2105263157894737, 0.6666666666666666, 0.3636363636363636, 1.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.5, 1.0, 0.2222222222222222, 1.0, 0.11764705882352941, 0.0, 0.25, 0.5, 0.33333333333333337, 1.0, 0.0, 1.0, 0.2222222222222222, 0.4, 0.33333333333333337, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.4444444444444445, 0.4444444444444445, 0.4615384615384615, 1.0, 0.2, 1.0, 0.0, 0.4444444444444444, 0.1, 0.15789473684210528, 0.13333333333333333, 0.5, 0.16666666666666666, 0.4444444444444445, 0.22222222222222224, 0.5, 0.0, 0.14285714285714288, 0.1818181818181818, 0.16666666666666666, 0.0, 0.5, 0.0, 0.6666666666666666, 0.14285714285714288, 0.3333333333333333, 0.13333333333333333, 0.08333333333333334, 0.1, 0.4, 0.0, 0.6666666666666666, 0.0, 1.0, 0.0, 0.2727272727272727, 0.15384615384615383, 0.0, 0.22222222222222224, 0.41379310344827586, 0.10526315789473684, 0.6666666666666666, 0.0, 0.5806451612903225, 0.11428571428571428, 0.923076923076923, 0.06451612903225806, 0.7272727272727273, 0.0, 0.22222222222222224, 0.17142857142857143, 0.4444444444444444, 0.20833333333333334, 0.10526315789473682, 0.05555555555555556, 0.5833333333333334, 0.07017543859649122, 0.08695652173913043, 0.14634146341463417, 0.125, 0.05714285714285714, 0.8, 0.13333333333333333, 0.0, 0.0, 1.0, 0.13333333333333333, 0.22222222222222224, 0.3448275862068966, 0.35294117647058826, 0.10256410256410257, 0.0, 0.10810810810810811, 0.25, 0.4800000000000001, 0.11764705882352941, 0.24390243902439024, 0.6666666666666666, 0.6, 0.5714285714285715, 0.0, 0.0, 0.0, 0.0, 0.15384615384615385, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.2, 0.6666666666666667, 0.18181818181818182, 0.1, 0.0, 0.1, 0.0, 0.14285714285714288, 0.0, 0.7000000000000001, 0.0, 0.17391304347826086, 0.4444444444444445, 1.0, 0.2222222222222222, 1.0, 0.5, 1.0, 0.7142857142857143, 0.0, 0.0, 1.0, 0.4, 1.0, 0.0, 0.15384615384615385, 0.2758620689655172, 0.33333333333333337, 0.1818181818181818, 0.35294117647058826, 0.3571428571428571, 0.7142857142857143, 0.16666666666666669, 0.28571428571428575, 0.16326530612244897, 0.2222222222222222, 0.0, 0.08, 0.1081081081081081, 0.21052631578947367, 0.12121212121212123, 0.4, 0.0, 0.8, 0.30769230769230765, 1.0, 0.0, 0.1818181818181818, 0.23529411764705882, 0.7999999999999999, 0.17391304347826086, 0.15384615384615383, 0.13793103448275862, 1.0, 0.25, 1.0, 0.25, 0.2222222222222222, 0.0, 0.3529411764705882, 0.17142857142857143, 1.0, 0.4, 0.0, 0.0, 0.0, 0.16666666666666666, 0.25, 0.0, 0.2222222222222222, 0.0, 1.0, 0.06451612903225806, 0.22222222222222224, 0.3333333333333333, 0.28571428571428575, 0.19354838709677416, 0.6666666666666666, 0.16666666666666666, 0.5, 0.25, 0.4, 0.0, 0.2222222222222222, 0.0, 0.15384615384615385, 0.28571428571428575, 0.0, 0.4, 0.0, 0.0, 0.5, 0.5, 1.0, 0.0, 0.23529411764705882, 0.0909090909090909, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.6666666666666667, 0.4, 0.3448275862068966, 0.7499999999999999, 0.20689655172413793, 0.6666666666666666, 0.5882352941176471, 0.07692307692307691, 0.17142857142857143, 1.0, 0.5, 0.09999999999999999, 0.27586206896551724, 0.2105263157894737, 0.26666666666666666, 0.0, 0.2857142857142857, 0.4, 0.1818181818181818, 1.0, 0.3333333333333333, 0.7999999999999999, 0.5714285714285715, 0.8, 0.0, 0.09230769230769229, 0.16666666666666666, 1.0, 0.0, 0.6666666666666666, 0.0, 1.0, 0.0, 0.05882352941176471, 0.6666666666666666, 0.0, 0.0, 0.27450980392156865, 0.12121212121212122, 0.0, 0.1111111111111111, 0.25531914893617025, 0.07142857142857142, 0.4444444444444445, 0.16216216216216214, 0.18181818181818182, 0.10810810810810811, 0.3684210526315789, 0.09090909090909091, 0.4000000000000001, 0.0, 0.13793103448275862, 0.0, 0.3333333333333333, 0.14814814814814814, 0.2, 0.21739130434782608, 0.35294117647058826, 0.0, 0.35294117647058826, 0.0, 0.0, 0.0, 0.5, 0.1111111111111111, 0.14814814814814817, 0.1111111111111111, 0.2857142857142857, 0.0, 0.3333333333333333, 0.09523809523809525, 0.0, 0.0, 1.0, 0.14285714285714285, 0.5714285714285715, 0.11764705882352941, 0.4, 0.4, 1.0, 0.0, 1.0, 0.27027027027027023, 0.3636363636363637, 0.0, 1.0, 0.0, 0.5714285714285715, 0.0, 0.0, 0.0, 1.0, 0.3333333333333333, 0.0625, 0.0625, 0.5, 0.0, 0.6666666666666666, 0.0, 0.0, 0.0, 0.6666666666666666, 0.0, 1.0, 0.0, 1.0, 0.0, 0.33333333333333337, 0.0, 0.15384615384615383, 0.0, 0.0, 0.0, 0.30769230769230765, 0.15384615384615385, 1.0, 0.0, 0.42857142857142855, 0.1818181818181818, 1.0, 0.0, 1.0, 0.10526315789473682, 0.0, 0.0, 1.0, 0.4, 0.0, 0.3636363636363636, 0.0, 0.19047619047619044]}
instance_id: 34767 <-> row_number: 32
Could not find input field with name `correctoptions-10`
Could not find input field with name `correctoptions-11`
Could not find input field with name `correctoptions-12`
Could not find input field with name `correctoptions-13`
Could not find input field with name `correctoptions-14`
Could not find input field with name `correctoptions-15`
Could not find input field with name `correctoptions-16`
Could not find input field with name `correctoptions-17`
Could not find input field with name `correctoptions-18`
Could not find input field with name `correctoptions-19`
Could not find input field with name `correctoptions-20`
Could not find input field with name `correctoptions-21`
Could not find input field with name `correctoptions-22`
Could not find input field with name `incorrectoptions-10`
Could not find input field with name `incorrectoptions-11`
Could not find input field with name `incorrectoptions-12`
Could not find input field with name `incorrectoptions-13`
Could not find input field with name `incorrectoptions-14`
Could not find input field with name `incorrectoptions-15`
Could not find input field with name `incorrectoptions-16`
Could not find input field with name `incorrectoptions-17`
Could not find input field with name `incorrectoptions-18`
Could not find input field with name `incorrectoptions-19`
Could not find input field with name `incorrectoptions-20`
Could not find input field with name `incorrectoptions-21`
Could not find input field with name `incorrectoptions-22`
 --> inputs: ['correctoptions-0', 'incorrectoptions-0', 'correctoptions-1', 'incorrectoptions-1', 'correctoptions-2', 'incorrectoptions-2', 'correctoptions-3', 'incorrectoptions-3', 'correctoptions-4', 'incorrectoptions-4', 'correctoptions-5', 'incorrectoptions-5', 'correctoptions-6', 'incorrectoptions-6', 'correctoptions-7', 'incorrectoptions-7', 'correctoptions-8', 'incorrectoptions-8', 'correctoptions-9', 'incorrectoptions-9', 'hiddenName']
 --> Looking up gold labels from row index 32 of `input.csv` (unique inputs). 
 --> input labels: {'correctoptions-0': ['Zheng', 'Zheng'], 'incorrectoptions-0': ['Kishori//Jefferson', 'Kishori // Sarah // Jefferson'], 'correctoptions-1': ['Zheng,Sarah and Kishori', 'Kishori, Jefferson, Zheng, Sarah and the narrator'], 'incorrectoptions-1': ['Jefferson', 'Zheng and his band of 20 rebels // Zheng, Sarah and Kishori // the narrator and Zheng'], 'correctoptions-2': ['Sarah', 'Sarah'], 'incorrectoptions-2': ['Zheng', 'Zheng // Kishori // the narrator'], 'correctoptions-3': ['Amused and Speculating', "they're interested // they're secretive // curiosity"], 'incorrectoptions-3': ['Happy and angry', 'disgust // romantic love // fear'], 'correctoptions-4': ['They are going to start a rebellion.', "they're rebelling"], 'incorrectoptions-4': ['They are going to mutiny against the captain.', "they're disgusting // they're unpleasant to look at // he doesn't like them"], 'correctoptions-5': ['4 charterers.', 'three'], 'incorrectoptions-5': ['3 Charecters', 'five // two // only the narrator speaks'], 'correctoptions-6': ['Jefferson the captain.', 'Kishori'], 'incorrectoptions-6': ['Zheng//Sarah//Kishori', 'Jefferson // Zheng // Sarah'], 'correctoptions-7': ['Smuggling.', 'through smuggling'], 'incorrectoptions-7': ['Trading//The captain', "they stole it // they worked and saved money for years // they borrowed it from Kishori's relatives"], 'correctoptions-8': ['Jefferson the Captain', 'Kishori // the captain'], 'incorrectoptions-8': ['Zheng//Sarah//Kishori', 'Zheng // the captain - not named in the dialogue // Sarah'], 'correctoptions-9': ['Jefferson the Captain', 'Kishori'], 'incorrectoptions-9': ['Zheng//Sarah//Kishori', 'everyone // noone // Zheng'], 'hiddenName': ['{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-0
Executing one action: self.actions.modify_text('correctoptions-0', 'Zheng')
Add text `Zheng` to this text input: <input type="text" name="correctoptions-0">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-0
Executing one action: self.actions.modify_text('incorrectoptions-0', 'Jefferson // Sarah // Zheng')
Add text `Jefferson // Sarah // Zheng` to this text input: <input type="text" name="incorrectoptions-0">
 - - - - - -  starting a new element: `Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-1
Executing one action: self.actions.modify_text('correctoptions-1', 'Kishori // Jefferson // Zheng // Sarah')
self.actions.modify_text('incorrectoptions-1', 'The captain // Tom // Pablo // Ann')
Add text `Kishori // Jefferson // Zheng // Sarah` to this text input: <input type="text" name="correctoptions-1">
Add text `The captain // Tom // Pablo // Ann` to this text input: <input type="text" name="incorrectoptions-1">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-1
Executing one action: self.actions.modify_text('incorrectoptions-1', 'Jefferson // Kishori // Sarah')
Add text `Jefferson // Kishori // Sarah` to this text input: <input type="text" name="incorrectoptions-1" value="The captain // Tom // Pablo // Ann">
 - - - - - -  starting a new element: `Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-2
Executing one action: self.actions.modify_text('correctoptions-2', 'Sarah')
Add text `Sarah` to this text input: <input type="text" name="correctoptions-2">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-2
Executing one action: self.actions.modify_text('incorrectoptions-2', 'Sarah // Zheng // Captain Jefferson')
Add text `Sarah // Zheng // Captain Jefferson` to this text input: <input type="text" name="incorrectoptions-2">
 - - - - - -  starting a new element: `Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-3
Executing one action: self.actions.modify_text('correctoptions-3', 'Amused // Curious')
self.actions.modify_text('incorrectoptions-3', 'Bored // Indifferent')
Add text `Amused // Curious` to this text input: <input type="text" name="correctoptions-3">
Add text `Bored // Indifferent` to this text input: <input type="text" name="incorrectoptions-3">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-3
Executing one action: self.actions.modify_text('incorrectoptions-3', 'Feeling nervous // Feeling excited // At peace')
Add text `Feeling nervous // Feeling excited // At peace` to this text input: <input type="text" name="incorrectoptions-3" value="Bored // Indifferent">
 - - - - - -  starting a new element: `Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-4
Executing one action: self.actions.modify_text('correctoptions-4', 'Starting a rebellion')
self.actions.modify_text('incorrectoptions-4', 'Refusing to work // Disliking the captain // Planning a party')
Add text `Starting a rebellion` to this text input: <input type="text" name="correctoptions-4">
Add text `Refusing to work // Disliking the captain // Planning a party` to this text input: <input type="text" name="incorrectoptions-4">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-4
Executing one action: self.actions.modify_text('incorrectoptions-4', 'Starting a new fashion trend // Joining a cooking class // Learning a new dance form')
Add text `Starting a new fashion trend // Joining a cooking class // Learning a new dance form` to this text input: <input type="text" name="incorrectoptions-4" value="Refusing to work // Disliking the captain // Planning a party">
 - - - - - -  starting a new element: `Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-5
Executing one action: self.actions.modify_text('correctoptions-5', 'Zheng // Jefferson // Sarah')
self.actions.modify_text('incorrectoptions-5', 'Kishori // The captain')
Add text `Zheng // Jefferson // Sarah` to this text input: <input type="text" name="correctoptions-5">
Add text `Kishori // The captain` to this text input: <input type="text" name="incorrectoptions-5">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-5
Executing one action: self.actions.modify_text('incorrectoptions-5', 'Kishori // Jefferson // Sarah // The captain')
Add text `Kishori // Jefferson // Sarah // The captain` to this text input: <input type="text" name="incorrectoptions-5" value="Kishori // The captain">
 - - - - - -  starting a new element: `Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-6
Executing one action: self.actions.modify_text('correctoptions-6', 'Jefferson')
self.actions.modify_text('incorrectoptions-6', 'Kishori // Zheng // Sarah')
Add text `Jefferson` to this text input: <input type="text" name="correctoptions-6">
Add text `Kishori // Zheng // Sarah` to this text input: <input type="text" name="incorrectoptions-6">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-6
Executing one action: self.actions.modify_text('incorrectoptions-6', 'Jefferson // Zheng // Kishori // Sarah')
Add text `Jefferson // Zheng // Kishori // Sarah` to this text input: <input type="text" name="incorrectoptions-6" value="Kishori // Zheng // Sarah">
 - - - - - -  starting a new element: `Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-7
Executing one action: self.actions.modify_text('correctoptions-7', 'Smuggling')
Add text `Smuggling` to this text input: <input type="text" name="correctoptions-7">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-7
Executing one action: self.actions.modify_text('incorrectoptions-7', 'From legal businesses // Through legal trade // Innocent gifts')
Add text `From legal businesses // Through legal trade // Innocent gifts` to this text input: <input type="text" name="incorrectoptions-7">
 - - - - - -  starting a new element: `Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-8
Executing one action: self.actions.modify_text('correctoptions-8', 'The captain')
self.actions.modify_text('incorrectoptions-8', 'Zheng // Kishori // Sarah')
Add text `The captain` to this text input: <input type="text" name="correctoptions-8">
Add text `Zheng // Kishori // Sarah` to this text input: <input type="text" name="incorrectoptions-8">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-8
Executing one action: self.actions.modify_text('incorrectoptions-8', 'The captain // Sarah // Kishori')
Add text `The captain // Sarah // Kishori` to this text input: <input type="text" name="incorrectoptions-8" value="Zheng // Kishori // Sarah">
 - - - - - -  starting a new element: `Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-9
Executing one action: self.actions.modify_text('correctoptions-9', 'No one')
Add text `No one` to this text input: <input type="text" name="correctoptions-9">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-9
Executing one action: self.actions.modify_text('incorrectoptions-9', 'Jefferson // Kishori // Sarah')
Add text `Jefferson // Kishori // Sarah` to this text input: <input type="text" name="incorrectoptions-9">
 - - - - - -  starting a new element: `Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
Skipping element `hiddenName` since it is not visible.
input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Zheng']
 visible_values : ['Zheng']
input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Jefferson // Sarah // Zheng']
 visible_values : ['Jefferson // Sarah // Zheng']
input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Kishori // Jefferson // Zheng // Sarah']
 visible_values : ['Kishori // Jefferson // Zheng // Sarah']
input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Jefferson // Kishori // Sarah']
 visible_values : ['Jefferson // Kishori // Sarah']
input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Sarah']
 visible_values : ['Sarah']
input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Sarah // Zheng // Captain Jefferson']
 visible_values : ['Sarah // Zheng // Captain Jefferson']
input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Amused // Curious']
 visible_values : ['Amused // Curious']
input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Feeling nervous // Feeling excited // At peace']
 visible_values : ['Feeling nervous // Feeling excited // At peace']
input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Starting a rebellion']
 visible_values : ['Starting a rebellion']
input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Starting a new fashion trend // Joining a cooking class // Learning a new dance form']
 visible_values : ['Starting a new fashion trend // Joining a cooking class // Learning a new dance form']
input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Zheng // Jefferson // Sarah']
 visible_values : ['Zheng // Jefferson // Sarah']
input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Kishori // Jefferson // Sarah // The captain']
 visible_values : ['Kishori // Jefferson // Sarah // The captain']
input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Jefferson']
 visible_values : ['Jefferson']
input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Jefferson // Zheng // Kishori // Sarah']
 visible_values : ['Jefferson // Zheng // Kishori // Sarah']
input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Smuggling']
 visible_values : ['Smuggling']
input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['From legal businesses // Through legal trade // Innocent gifts']
 visible_values : ['From legal businesses // Through legal trade // Innocent gifts']
input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['The captain']
 visible_values : ['The captain']
input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['The captain // Sarah // Kishori']
 visible_values : ['The captain // Sarah // Kishori']
input: Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['No one']
 visible_values : ['No one']
input: Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Jefferson // Kishori // Sarah']
 visible_values : ['Jefferson // Kishori // Sarah']
input: Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : [None]
 visible_values : [None]
 ------- evaluating input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Zheng', 'Zheng']`
----> answers: `['Zheng']` - type: `<class 'list'>`
----> baseline_answer: `Zheng` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Kishori//Jefferson', 'Kishori // Sarah // Jefferson']`
----> answers: `['Kishori // Sarah // Jefferson', 'Kishori//Jefferson']` - type: `<class 'list'>`
----> baseline_answer: `Jefferson // Sarah // Zheng` - type: `<class 'str'>`
 --> scores:  0.4
----> per-field score: 0.4
 ------- evaluating input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Zheng,Sarah and Kishori', 'Kishori, Jefferson, Zheng, Sarah and the narrator']`
----> answers: `['Zheng,Sarah and Kishori', 'Kishori, Jefferson, Zheng, Sarah and the narrator']` - type: `<class 'list'>`
----> baseline_answer: `Kishori // Jefferson // Zheng // Sarah` - type: `<class 'str'>`
 --> scores:  0.7272727272727273
----> per-field score: 0.7272727272727273
 ------- evaluating input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Jefferson', 'Zheng and his band of 20 rebels // Zheng, Sarah and Kishori // the narrator and Zheng']`
----> answers: `['Jefferson', 'Zheng and his band of 20 rebels // Zheng, Sarah and Kishori // the narrator and Zheng']` - type: `<class 'list'>`
----> baseline_answer: `Jefferson // Kishori // Sarah` - type: `<class 'str'>`
 --> scores:  0.5
----> per-field score: 0.5
 ------- evaluating input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Sarah', 'Sarah']`
----> answers: `['Sarah']` - type: `<class 'list'>`
----> baseline_answer: `Sarah` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Zheng', 'Zheng // Kishori // the narrator']`
----> answers: `['Zheng', 'Zheng // Kishori // the narrator']` - type: `<class 'list'>`
----> baseline_answer: `Sarah // Zheng // Captain Jefferson` - type: `<class 'str'>`
 --> scores:  0.4
----> per-field score: 0.4
 ------- evaluating input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Amused and Speculating', "they're interested // they're secretive // curiosity"]`
----> answers: `["they're interested // they're secretive // curiosity", 'Amused and Speculating']` - type: `<class 'list'>`
----> baseline_answer: `Amused // Curious` - type: `<class 'str'>`
 --> scores:  0.4
----> per-field score: 0.4
 ------- evaluating input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Happy and angry', 'disgust // romantic love // fear']`
----> answers: `['Happy and angry', 'disgust // romantic love // fear']` - type: `<class 'list'>`
----> baseline_answer: `Feeling nervous // Feeling excited // At peace` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['They are going to start a rebellion.', "they're rebelling"]`
----> answers: `["they're rebelling", 'They are going to start a rebellion.']` - type: `<class 'list'>`
----> baseline_answer: `Starting a rebellion` - type: `<class 'str'>`
 --> scores:  0.6
----> per-field score: 0.6
 ------- evaluating input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['They are going to mutiny against the captain.', "they're disgusting // they're unpleasant to look at // he doesn't like them"]`
----> answers: `["they're disgusting // they're unpleasant to look at // he doesn't like them", 'They are going to mutiny against the captain.']` - type: `<class 'list'>`
----> baseline_answer: `Starting a new fashion trend // Joining a cooking class // Learning a new dance form` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['4 charterers.', 'three']`
----> answers: `['three', '4 charterers.']` - type: `<class 'list'>`
----> baseline_answer: `Zheng // Jefferson // Sarah` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['3 Charecters', 'five // two // only the narrator speaks']`
----> answers: `['3 Charecters', 'five // two // only the narrator speaks']` - type: `<class 'list'>`
----> baseline_answer: `Kishori // Jefferson // Sarah // The captain` - type: `<class 'str'>`
 --> scores:  0.1818181818181818
----> per-field score: 0.1818181818181818
 ------- evaluating input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Jefferson the captain.', 'Kishori']`
----> answers: `['Jefferson the captain.', 'Kishori']` - type: `<class 'list'>`
----> baseline_answer: `Jefferson` - type: `<class 'str'>`
 --> scores:  0.5
----> per-field score: 0.5
 ------- evaluating input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Zheng//Sarah//Kishori', 'Jefferson // Zheng // Sarah']`
----> answers: `['Jefferson // Zheng // Sarah', 'Zheng//Sarah//Kishori']` - type: `<class 'list'>`
----> baseline_answer: `Jefferson // Zheng // Kishori // Sarah` - type: `<class 'str'>`
 --> scores:  0.8571428571428571
----> per-field score: 0.8571428571428571
 ------- evaluating input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Smuggling.', 'through smuggling']`
----> answers: `['Smuggling.', 'through smuggling']` - type: `<class 'list'>`
----> baseline_answer: `Smuggling` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Trading//The captain', "they stole it // they worked and saved money for years // they borrowed it from Kishori's relatives"]`
----> answers: `["they stole it // they worked and saved money for years // they borrowed it from Kishori's relatives", 'Trading//The captain']` - type: `<class 'list'>`
----> baseline_answer: `From legal businesses // Through legal trade // Innocent gifts` - type: `<class 'str'>`
 --> scores:  0.18181818181818182
----> per-field score: 0.18181818181818182
 ------- evaluating input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Jefferson the Captain', 'Kishori // the captain']`
----> answers: `['Kishori // the captain', 'Jefferson the Captain']` - type: `<class 'list'>`
----> baseline_answer: `The captain` - type: `<class 'str'>`
 --> scores:  0.8
----> per-field score: 0.8
 ------- evaluating input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Zheng//Sarah//Kishori', 'Zheng // the captain - not named in the dialogue // Sarah']`
----> answers: `['Zheng // the captain - not named in the dialogue // Sarah', 'Zheng//Sarah//Kishori']` - type: `<class 'list'>`
----> baseline_answer: `The captain // Sarah // Kishori` - type: `<class 'str'>`
 --> scores:  0.5714285714285715
----> per-field score: 0.5714285714285715
 ------- evaluating input: Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Jefferson the Captain', 'Kishori']`
----> answers: `['Jefferson the Captain', 'Kishori']` - type: `<class 'list'>`
----> baseline_answer: `No one` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Zheng//Sarah//Kishori', 'everyone // noone // Zheng']`
----> answers: `['everyone // noone // Zheng', 'Zheng//Sarah//Kishori']` - type: `<class 'list'>`
----> baseline_answer: `Jefferson // Kishori // Sarah` - type: `<class 'str'>`
 --> scores:  0.3333333333333333
----> per-field score: 0.3333333333333333
 ------- evaluating input: Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
Skipping element `hiddenName` since it is not visible.
 --> Per-instance overall score: 0.47264069264069264
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6666666666666666, 0.4, 0.8, 0.28571428571428575, 1.0, 0.0, 0.22222222222222224, 0.0, 0.33333333333333337, 0.0, 0.2641509433962264, 0.0, 0.0, 0.0, 0.27906976744186046, 0.2105263157894737, 0.6666666666666666, 0.3636363636363636, 1.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.5, 1.0, 0.2222222222222222, 1.0, 0.11764705882352941, 0.0, 0.25, 0.5, 0.33333333333333337, 1.0, 0.0, 1.0, 0.2222222222222222, 0.4, 0.33333333333333337, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.4444444444444445, 0.4444444444444445, 0.4615384615384615, 1.0, 0.2, 1.0, 0.0, 0.4444444444444444, 0.1, 0.15789473684210528, 0.13333333333333333, 0.5, 0.16666666666666666, 0.4444444444444445, 0.22222222222222224, 0.5, 0.0, 0.14285714285714288, 0.1818181818181818, 0.16666666666666666, 0.0, 0.5, 0.0, 0.6666666666666666, 0.14285714285714288, 0.3333333333333333, 0.13333333333333333, 0.08333333333333334, 0.1, 0.4, 0.0, 0.6666666666666666, 0.0, 1.0, 0.0, 0.2727272727272727, 0.15384615384615383, 0.0, 0.22222222222222224, 0.41379310344827586, 0.10526315789473684, 0.6666666666666666, 0.0, 0.5806451612903225, 0.11428571428571428, 0.923076923076923, 0.06451612903225806, 0.7272727272727273, 0.0, 0.22222222222222224, 0.17142857142857143, 0.4444444444444444, 0.20833333333333334, 0.10526315789473682, 0.05555555555555556, 0.5833333333333334, 0.07017543859649122, 0.08695652173913043, 0.14634146341463417, 0.125, 0.05714285714285714, 0.8, 0.13333333333333333, 0.0, 0.0, 1.0, 0.13333333333333333, 0.22222222222222224, 0.3448275862068966, 0.35294117647058826, 0.10256410256410257, 0.0, 0.10810810810810811, 0.25, 0.4800000000000001, 0.11764705882352941, 0.24390243902439024, 0.6666666666666666, 0.6, 0.5714285714285715, 0.0, 0.0, 0.0, 0.0, 0.15384615384615385, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.2, 0.6666666666666667, 0.18181818181818182, 0.1, 0.0, 0.1, 0.0, 0.14285714285714288, 0.0, 0.7000000000000001, 0.0, 0.17391304347826086, 0.4444444444444445, 1.0, 0.2222222222222222, 1.0, 0.5, 1.0, 0.7142857142857143, 0.0, 0.0, 1.0, 0.4, 1.0, 0.0, 0.15384615384615385, 0.2758620689655172, 0.33333333333333337, 0.1818181818181818, 0.35294117647058826, 0.3571428571428571, 0.7142857142857143, 0.16666666666666669, 0.28571428571428575, 0.16326530612244897, 0.2222222222222222, 0.0, 0.08, 0.1081081081081081, 0.21052631578947367, 0.12121212121212123, 0.4, 0.0, 0.8, 0.30769230769230765, 1.0, 0.0, 0.1818181818181818, 0.23529411764705882, 0.7999999999999999, 0.17391304347826086, 0.15384615384615383, 0.13793103448275862, 1.0, 0.25, 1.0, 0.25, 0.2222222222222222, 0.0, 0.3529411764705882, 0.17142857142857143, 1.0, 0.4, 0.0, 0.0, 0.0, 0.16666666666666666, 0.25, 0.0, 0.2222222222222222, 0.0, 1.0, 0.06451612903225806, 0.22222222222222224, 0.3333333333333333, 0.28571428571428575, 0.19354838709677416, 0.6666666666666666, 0.16666666666666666, 0.5, 0.25, 0.4, 0.0, 0.2222222222222222, 0.0, 0.15384615384615385, 0.28571428571428575, 0.0, 0.4, 0.0, 0.0, 0.5, 0.5, 1.0, 0.0, 0.23529411764705882, 0.0909090909090909, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.6666666666666667, 0.4, 0.3448275862068966, 0.7499999999999999, 0.20689655172413793, 0.6666666666666666, 0.5882352941176471, 0.07692307692307691, 0.17142857142857143, 1.0, 0.5, 0.09999999999999999, 0.27586206896551724, 0.2105263157894737, 0.26666666666666666, 0.0, 0.2857142857142857, 0.4, 0.1818181818181818, 1.0, 0.3333333333333333, 0.7999999999999999, 0.5714285714285715, 0.8, 0.0, 0.09230769230769229, 0.16666666666666666, 1.0, 0.0, 0.6666666666666666, 0.0, 1.0, 0.0, 0.05882352941176471, 0.6666666666666666, 0.0, 0.0, 0.27450980392156865, 0.12121212121212122, 0.0, 0.1111111111111111, 0.25531914893617025, 0.07142857142857142, 0.4444444444444445, 0.16216216216216214, 0.18181818181818182, 0.10810810810810811, 0.3684210526315789, 0.09090909090909091, 0.4000000000000001, 0.0, 0.13793103448275862, 0.0, 0.3333333333333333, 0.14814814814814814, 0.2, 0.21739130434782608, 0.35294117647058826, 0.0, 0.35294117647058826, 0.0, 0.0, 0.0, 0.5, 0.1111111111111111, 0.14814814814814817, 0.1111111111111111, 0.2857142857142857, 0.0, 0.3333333333333333, 0.09523809523809525, 0.0, 0.0, 1.0, 0.14285714285714285, 0.5714285714285715, 0.11764705882352941, 0.4, 0.4, 1.0, 0.0, 1.0, 0.27027027027027023, 0.3636363636363637, 0.0, 1.0, 0.0, 0.5714285714285715, 0.0, 0.0, 0.0, 1.0, 0.3333333333333333, 0.0625, 0.0625, 0.5, 0.0, 0.6666666666666666, 0.0, 0.0, 0.0, 0.6666666666666666, 0.0, 1.0, 0.0, 1.0, 0.0, 0.33333333333333337, 0.0, 0.15384615384615383, 0.0, 0.0, 0.0, 0.30769230769230765, 0.15384615384615385, 1.0, 0.0, 0.42857142857142855, 0.1818181818181818, 1.0, 0.0, 1.0, 0.10526315789473682, 0.0, 0.0, 1.0, 0.4, 0.0, 0.3636363636363636, 0.0, 0.19047619047619044, 1.0, 0.4, 0.7272727272727273, 0.5, 1.0, 0.4, 0.4, 0.0, 0.6, 0.0, 0.0, 0.1818181818181818, 0.5, 0.8571428571428571, 1.0, 0.18181818181818182, 0.8, 0.5714285714285715, 0.0, 0.3333333333333333]}
instance_id: 34813 <-> row_number: 78
Could not find input field with name `correctoptions-10`
Could not find input field with name `correctoptions-11`
Could not find input field with name `correctoptions-12`
Could not find input field with name `correctoptions-13`
Could not find input field with name `correctoptions-14`
Could not find input field with name `correctoptions-15`
Could not find input field with name `correctoptions-16`
Could not find input field with name `correctoptions-17`
Could not find input field with name `correctoptions-18`
Could not find input field with name `correctoptions-19`
Could not find input field with name `correctoptions-20`
Could not find input field with name `correctoptions-21`
Could not find input field with name `correctoptions-22`
Could not find input field with name `correctoptions-9`
Could not find input field with name `incorrectoptions-10`
Could not find input field with name `incorrectoptions-11`
Could not find input field with name `incorrectoptions-12`
Could not find input field with name `incorrectoptions-13`
Could not find input field with name `incorrectoptions-14`
Could not find input field with name `incorrectoptions-15`
Could not find input field with name `incorrectoptions-16`
Could not find input field with name `incorrectoptions-17`
Could not find input field with name `incorrectoptions-18`
Could not find input field with name `incorrectoptions-19`
Could not find input field with name `incorrectoptions-20`
Could not find input field with name `incorrectoptions-21`
Could not find input field with name `incorrectoptions-22`
Could not find input field with name `incorrectoptions-9`
 --> inputs: ['correctoptions-0', 'incorrectoptions-0', 'correctoptions-1', 'incorrectoptions-1', 'correctoptions-2', 'incorrectoptions-2', 'correctoptions-3', 'incorrectoptions-3', 'correctoptions-4', 'incorrectoptions-4', 'correctoptions-5', 'incorrectoptions-5', 'correctoptions-6', 'incorrectoptions-6', 'correctoptions-7', 'incorrectoptions-7', 'correctoptions-8', 'incorrectoptions-8', 'hiddenName']
 --> Looking up gold labels from row index 78 of `input.csv` (unique inputs). 
 --> input labels: {'correctoptions-0': ['Late 11th', 'Binalshibh and Atta'], 'incorrectoptions-0': ['Late 10th', 'airspace at 9:10'], 'correctoptions-1': ['1864', 'Command Center'], 'incorrectoptions-1': ['1990', 'ordered'], 'correctoptions-2': ['Communist', 'Reagan National Airport'], 'incorrectoptions-2': ['Protestant', 'went to Germany'], 'correctoptions-3': ['1864', 'Government'], 'incorrectoptions-3': ['2010', 'considered'], 'correctoptions-4': ['1992', 'Binalshibh use'], 'incorrectoptions-4': ['2010', 'President'], 'correctoptions-5': ['Christian', 'concern'], 'incorrectoptions-5': ['Jewish', 'which times'], 'correctoptions-6': ['11th century', 'e passed between'], 'incorrectoptions-6': ['10th century', 'Atta first met and when'], 'correctoptions-7': ['20', 'punishment'], 'incorrectoptions-7': ['10', 'students'], 'correctoptions-8': ['137', 'America 77 flying'], 'incorrectoptions-8': ['147', 'mistakes besides'], 'hiddenName': ['{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-0
Executing one action: self.actions.modify_text('correctoptions-0', 'By the late 11th century')
Add text `By the late 11th century` to this text input: <input type="text" name="correctoptions-0">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-0
Executing one action: self.actions.modify_text('incorrectoptions-0', 'Before the 11th century // After the Ottoman Empire')
Add text `Before the 11th century // After the Ottoman Empire` to this text input: <input type="text" name="incorrectoptions-0">
 - - - - - -  starting a new element: `Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-1
Executing one action: self.actions.modify_text('correctoptions-1', '1864')
Add text `1864` to this text input: <input type="text" name="correctoptions-1">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-1
Executing one action: self.actions.modify_text('incorrectoptions-1', 'In the 15th century // After 1912 // During the Byzantine Empire')
Add text `In the 15th century // After 1912 // During the Byzantine Empire` to this text input: <input type="text" name="incorrectoptions-1">
 - - - - - -  starting a new element: `Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-2
Executing one action: self.actions.modify_text('correctoptions-2', 'Communist regime')
Add text `Communist regime` to this text input: <input type="text" name="correctoptions-2">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-2
Executing one action: self.actions.modify_text('incorrectoptions-2', 'Democratic regime // Monarchical rule // Libertarian society')
Add text `Democratic regime // Monarchical rule // Libertarian society` to this text input: <input type="text" name="incorrectoptions-2">
 - - - - - -  starting a new element: `Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-3
Executing one action: self.actions.modify_text('correctoptions-3', '1864')
self.actions.modify_text('incorrectoptions-3', '1875 // 1901 // 1843')
Add text `1864` to this text input: <input type="text" name="correctoptions-3">
Add text `1875 // 1901 // 1843` to this text input: <input type="text" name="incorrectoptions-3">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-3
Executing one action: self.actions.modify_text('incorrectoptions-3', '1863 // 1865 // 1870')
Add text `1863 // 1865 // 1870` to this text input: <input type="text" name="incorrectoptions-3" value="1875 // 1901 // 1843">
 - - - - - -  starting a new element: `Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-4
Executing one action: self.actions.modify_text('correctoptions-4', '1992')
self.actions.modify_text('incorrectoptions-4', '1985 // 2000 // 1980')
Add text `1992` to this text input: <input type="text" name="correctoptions-4">
Add text `1985 // 2000 // 1980` to this text input: <input type="text" name="incorrectoptions-4">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-4
Executing one action: self.actions.modify_text('incorrectoptions-4', '1991 // 1985 // 2005')
Add text `1991 // 1985 // 2005` to this text input: <input type="text" name="incorrectoptions-4" value="1985 // 2000 // 1980">
 - - - - - -  starting a new element: `Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-5
Executing one action: self.actions.modify_text('correctoptions-5', 'Christianity')
self.actions.modify_text('incorrectoptions-5', 'Islam//Paganism//Buddhism')
Add text `Christianity` to this text input: <input type="text" name="correctoptions-5">
Add text `Islam//Paganism//Buddhism` to this text input: <input type="text" name="incorrectoptions-5">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-5
Executing one action: self.actions.modify_text('incorrectoptions-5', 'Christianity // Paganism // Orthodox Christianity')
Add text `Christianity // Paganism // Orthodox Christianity` to this text input: <input type="text" name="incorrectoptions-5" value="Islam//Paganism//Buddhism">
 - - - - - -  starting a new element: `Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-6
Executing one action: self.actions.modify_text('correctoptions-6', 'the late 11th century')
self.actions.modify_text('incorrectoptions-6', '19th century // 5th century // after Ottoman rule')
Add text `the late 11th century` to this text input: <input type="text" name="correctoptions-6">
Add text `19th century // 5th century // after Ottoman rule` to this text input: <input type="text" name="incorrectoptions-6">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-6
Executing one action: self.actions.modify_text('incorrectoptions-6', 'Before the 11th century // After the 12th century // By the end of the 9th century')
Add text `Before the 11th century // After the 12th century // By the end of the 9th century` to this text input: <input type="text" name="incorrectoptions-6" value="19th century // 5th century // after Ottoman rule">
 - - - - - -  starting a new element: `Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-7
Executing one action: self.actions.modify_text('correctoptions-7', 'Several centuries')
self.actions.modify_text('incorrectoptions-7', 'Only one century//Two centuries//Half a century//No freedom of religion before Communism')
Add text `Several centuries` to this text input: <input type="text" name="correctoptions-7">
Add text `Only one century//Two centuries//Half a century//No freedom of religion before Communism` to this text input: <input type="text" name="incorrectoptions-7">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-7
Executing one action: self.actions.modify_text('incorrectoptions-7', '3 centuries // 1 century // 10 centuries')
Add text `3 centuries // 1 century // 10 centuries` to this text input: <input type="text" name="incorrectoptions-7" value="Only one century//Two centuries//Half a century//No freedom of religion before Communism">
 - - - - - -  starting a new element: `Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-8
Executing one action: self.actions.modify_text('correctoptions-8', '126 years')
Add text `126 years` to this text input: <input type="text" name="correctoptions-8">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-8
Executing one action: self.actions.modify_text('incorrectoptions-8', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
Skipping element `hiddenName` since it is not visible.
input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['By the late 11th century']
 visible_values : ['By the late 11th century']
input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Before the 11th century // After the Ottoman Empire']
 visible_values : ['Before the 11th century // After the Ottoman Empire']
input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['1864']
 visible_values : ['1864']
input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['In the 15th century // After 1912 // During the Byzantine Empire']
 visible_values : ['In the 15th century // After 1912 // During the Byzantine Empire']
input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Communist regime']
 visible_values : ['Communist regime']
input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Democratic regime // Monarchical rule // Libertarian society']
 visible_values : ['Democratic regime // Monarchical rule // Libertarian society']
input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['1864']
 visible_values : ['1864']
input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['1863 // 1865 // 1870']
 visible_values : ['1863 // 1865 // 1870']
input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['1992']
 visible_values : ['1992']
input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['1991 // 1985 // 2005']
 visible_values : ['1991 // 1985 // 2005']
input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Christianity']
 visible_values : ['Christianity']
input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Christianity // Paganism // Orthodox Christianity']
 visible_values : ['Christianity // Paganism // Orthodox Christianity']
input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['the late 11th century']
 visible_values : ['the late 11th century']
input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Before the 11th century // After the 12th century // By the end of the 9th century']
 visible_values : ['Before the 11th century // After the 12th century // By the end of the 9th century']
input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Several centuries']
 visible_values : ['Several centuries']
input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['3 centuries // 1 century // 10 centuries']
 visible_values : ['3 centuries // 1 century // 10 centuries']
input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['126 years']
 visible_values : ['126 years']
input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : [None]
 visible_values : [None]
input: Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : [None]
 visible_values : [None]
 ------- evaluating input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Late 11th', 'Binalshibh and Atta']`
----> answers: `['Binalshibh and Atta', 'Late 11th']` - type: `<class 'list'>`
----> baseline_answer: `By the late 11th century` - type: `<class 'str'>`
 --> scores:  0.5714285714285715
----> per-field score: 0.5714285714285715
 ------- evaluating input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Late 10th', 'airspace at 9:10']`
----> answers: `['Late 10th', 'airspace at 9:10']` - type: `<class 'list'>`
----> baseline_answer: `Before the 11th century // After the Ottoman Empire` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['1864', 'Command Center']`
----> answers: `['1864', 'Command Center']` - type: `<class 'list'>`
----> baseline_answer: `1864` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['1990', 'ordered']`
----> answers: `['ordered', '1990']` - type: `<class 'list'>`
----> baseline_answer: `In the 15th century // After 1912 // During the Byzantine Empire` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Communist', 'Reagan National Airport']`
----> answers: `['Communist', 'Reagan National Airport']` - type: `<class 'list'>`
----> baseline_answer: `Communist regime` - type: `<class 'str'>`
 --> scores:  0.6666666666666666
----> per-field score: 0.6666666666666666
 ------- evaluating input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Protestant', 'went to Germany']`
----> answers: `['went to Germany', 'Protestant']` - type: `<class 'list'>`
----> baseline_answer: `Democratic regime // Monarchical rule // Libertarian society` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['1864', 'Government']`
----> answers: `['Government', '1864']` - type: `<class 'list'>`
----> baseline_answer: `1864` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['2010', 'considered']`
----> answers: `['2010', 'considered']` - type: `<class 'list'>`
----> baseline_answer: `1863 // 1865 // 1870` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['1992', 'Binalshibh use']`
----> answers: `['Binalshibh use', '1992']` - type: `<class 'list'>`
----> baseline_answer: `1992` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['2010', 'President']`
----> answers: `['2010', 'President']` - type: `<class 'list'>`
----> baseline_answer: `1991 // 1985 // 2005` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Christian', 'concern']`
----> answers: `['concern', 'Christian']` - type: `<class 'list'>`
----> baseline_answer: `Christianity` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Jewish', 'which times']`
----> answers: `['Jewish', 'which times']` - type: `<class 'list'>`
----> baseline_answer: `Christianity // Paganism // Orthodox Christianity` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['11th century', 'e passed between']`
----> answers: `['e passed between', '11th century']` - type: `<class 'list'>`
----> baseline_answer: `the late 11th century` - type: `<class 'str'>`
 --> scores:  0.6666666666666666
----> per-field score: 0.6666666666666666
 ------- evaluating input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['10th century', 'Atta first met and when']`
----> answers: `['Atta first met and when', '10th century']` - type: `<class 'list'>`
----> baseline_answer: `Before the 11th century // After the 12th century // By the end of the 9th century` - type: `<class 'str'>`
 --> scores:  0.11764705882352941
----> per-field score: 0.11764705882352941
 ------- evaluating input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['20', 'punishment']`
----> answers: `['punishment', '20']` - type: `<class 'list'>`
----> baseline_answer: `Several centuries` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['10', 'students']`
----> answers: `['10', 'students']` - type: `<class 'list'>`
----> baseline_answer: `3 centuries // 1 century // 10 centuries` - type: `<class 'str'>`
 --> scores:  0.2857142857142857
----> per-field score: 0.2857142857142857
 ------- evaluating input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['137', 'America 77 flying']`
----> answers: `['137', 'America 77 flying']` - type: `<class 'list'>`
----> baseline_answer: `126 years` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['147', 'mistakes besides']`
----> answers: `['147', 'mistakes besides']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
Skipping element `hiddenName` since it is not visible.
 --> Per-instance overall score: 0.35045129162776223
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6666666666666666, 0.4, 0.8, 0.28571428571428575, 1.0, 0.0, 0.22222222222222224, 0.0, 0.33333333333333337, 0.0, 0.2641509433962264, 0.0, 0.0, 0.0, 0.27906976744186046, 0.2105263157894737, 0.6666666666666666, 0.3636363636363636, 1.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.5, 1.0, 0.2222222222222222, 1.0, 0.11764705882352941, 0.0, 0.25, 0.5, 0.33333333333333337, 1.0, 0.0, 1.0, 0.2222222222222222, 0.4, 0.33333333333333337, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.4444444444444445, 0.4444444444444445, 0.4615384615384615, 1.0, 0.2, 1.0, 0.0, 0.4444444444444444, 0.1, 0.15789473684210528, 0.13333333333333333, 0.5, 0.16666666666666666, 0.4444444444444445, 0.22222222222222224, 0.5, 0.0, 0.14285714285714288, 0.1818181818181818, 0.16666666666666666, 0.0, 0.5, 0.0, 0.6666666666666666, 0.14285714285714288, 0.3333333333333333, 0.13333333333333333, 0.08333333333333334, 0.1, 0.4, 0.0, 0.6666666666666666, 0.0, 1.0, 0.0, 0.2727272727272727, 0.15384615384615383, 0.0, 0.22222222222222224, 0.41379310344827586, 0.10526315789473684, 0.6666666666666666, 0.0, 0.5806451612903225, 0.11428571428571428, 0.923076923076923, 0.06451612903225806, 0.7272727272727273, 0.0, 0.22222222222222224, 0.17142857142857143, 0.4444444444444444, 0.20833333333333334, 0.10526315789473682, 0.05555555555555556, 0.5833333333333334, 0.07017543859649122, 0.08695652173913043, 0.14634146341463417, 0.125, 0.05714285714285714, 0.8, 0.13333333333333333, 0.0, 0.0, 1.0, 0.13333333333333333, 0.22222222222222224, 0.3448275862068966, 0.35294117647058826, 0.10256410256410257, 0.0, 0.10810810810810811, 0.25, 0.4800000000000001, 0.11764705882352941, 0.24390243902439024, 0.6666666666666666, 0.6, 0.5714285714285715, 0.0, 0.0, 0.0, 0.0, 0.15384615384615385, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.2, 0.6666666666666667, 0.18181818181818182, 0.1, 0.0, 0.1, 0.0, 0.14285714285714288, 0.0, 0.7000000000000001, 0.0, 0.17391304347826086, 0.4444444444444445, 1.0, 0.2222222222222222, 1.0, 0.5, 1.0, 0.7142857142857143, 0.0, 0.0, 1.0, 0.4, 1.0, 0.0, 0.15384615384615385, 0.2758620689655172, 0.33333333333333337, 0.1818181818181818, 0.35294117647058826, 0.3571428571428571, 0.7142857142857143, 0.16666666666666669, 0.28571428571428575, 0.16326530612244897, 0.2222222222222222, 0.0, 0.08, 0.1081081081081081, 0.21052631578947367, 0.12121212121212123, 0.4, 0.0, 0.8, 0.30769230769230765, 1.0, 0.0, 0.1818181818181818, 0.23529411764705882, 0.7999999999999999, 0.17391304347826086, 0.15384615384615383, 0.13793103448275862, 1.0, 0.25, 1.0, 0.25, 0.2222222222222222, 0.0, 0.3529411764705882, 0.17142857142857143, 1.0, 0.4, 0.0, 0.0, 0.0, 0.16666666666666666, 0.25, 0.0, 0.2222222222222222, 0.0, 1.0, 0.06451612903225806, 0.22222222222222224, 0.3333333333333333, 0.28571428571428575, 0.19354838709677416, 0.6666666666666666, 0.16666666666666666, 0.5, 0.25, 0.4, 0.0, 0.2222222222222222, 0.0, 0.15384615384615385, 0.28571428571428575, 0.0, 0.4, 0.0, 0.0, 0.5, 0.5, 1.0, 0.0, 0.23529411764705882, 0.0909090909090909, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.6666666666666667, 0.4, 0.3448275862068966, 0.7499999999999999, 0.20689655172413793, 0.6666666666666666, 0.5882352941176471, 0.07692307692307691, 0.17142857142857143, 1.0, 0.5, 0.09999999999999999, 0.27586206896551724, 0.2105263157894737, 0.26666666666666666, 0.0, 0.2857142857142857, 0.4, 0.1818181818181818, 1.0, 0.3333333333333333, 0.7999999999999999, 0.5714285714285715, 0.8, 0.0, 0.09230769230769229, 0.16666666666666666, 1.0, 0.0, 0.6666666666666666, 0.0, 1.0, 0.0, 0.05882352941176471, 0.6666666666666666, 0.0, 0.0, 0.27450980392156865, 0.12121212121212122, 0.0, 0.1111111111111111, 0.25531914893617025, 0.07142857142857142, 0.4444444444444445, 0.16216216216216214, 0.18181818181818182, 0.10810810810810811, 0.3684210526315789, 0.09090909090909091, 0.4000000000000001, 0.0, 0.13793103448275862, 0.0, 0.3333333333333333, 0.14814814814814814, 0.2, 0.21739130434782608, 0.35294117647058826, 0.0, 0.35294117647058826, 0.0, 0.0, 0.0, 0.5, 0.1111111111111111, 0.14814814814814817, 0.1111111111111111, 0.2857142857142857, 0.0, 0.3333333333333333, 0.09523809523809525, 0.0, 0.0, 1.0, 0.14285714285714285, 0.5714285714285715, 0.11764705882352941, 0.4, 0.4, 1.0, 0.0, 1.0, 0.27027027027027023, 0.3636363636363637, 0.0, 1.0, 0.0, 0.5714285714285715, 0.0, 0.0, 0.0, 1.0, 0.3333333333333333, 0.0625, 0.0625, 0.5, 0.0, 0.6666666666666666, 0.0, 0.0, 0.0, 0.6666666666666666, 0.0, 1.0, 0.0, 1.0, 0.0, 0.33333333333333337, 0.0, 0.15384615384615383, 0.0, 0.0, 0.0, 0.30769230769230765, 0.15384615384615385, 1.0, 0.0, 0.42857142857142855, 0.1818181818181818, 1.0, 0.0, 1.0, 0.10526315789473682, 0.0, 0.0, 1.0, 0.4, 0.0, 0.3636363636363636, 0.0, 0.19047619047619044, 1.0, 0.4, 0.7272727272727273, 0.5, 1.0, 0.4, 0.4, 0.0, 0.6, 0.0, 0.0, 0.1818181818181818, 0.5, 0.8571428571428571, 1.0, 0.18181818181818182, 0.8, 0.5714285714285715, 0.0, 0.3333333333333333, 0.5714285714285715, 0.0, 1.0, 0.0, 0.6666666666666666, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.6666666666666666, 0.11764705882352941, 0.0, 0.2857142857142857, 0.0, 0.0]}
instance_id: 34791 <-> row_number: 56
Could not find input field with name `correctoptions-19`
Could not find input field with name `correctoptions-20`
Could not find input field with name `correctoptions-21`
Could not find input field with name `correctoptions-22`
Could not find input field with name `incorrectoptions-19`
Could not find input field with name `incorrectoptions-20`
Could not find input field with name `incorrectoptions-21`
Could not find input field with name `incorrectoptions-22`
 --> inputs: ['correctoptions-0', 'incorrectoptions-0', 'correctoptions-1', 'incorrectoptions-1', 'correctoptions-2', 'incorrectoptions-2', 'correctoptions-3', 'incorrectoptions-3', 'correctoptions-4', 'incorrectoptions-4', 'correctoptions-5', 'incorrectoptions-5', 'correctoptions-6', 'incorrectoptions-6', 'correctoptions-7', 'incorrectoptions-7', 'correctoptions-8', 'incorrectoptions-8', 'correctoptions-9', 'incorrectoptions-9', 'correctoptions-10', 'incorrectoptions-10', 'correctoptions-11', 'incorrectoptions-11', 'correctoptions-12', 'incorrectoptions-12', 'correctoptions-13', 'incorrectoptions-13', 'correctoptions-14', 'incorrectoptions-14', 'correctoptions-15', 'incorrectoptions-15', 'correctoptions-16', 'incorrectoptions-16', 'correctoptions-17', 'incorrectoptions-17', 'correctoptions-18', 'incorrectoptions-18', 'hiddenName']
 --> Looking up gold labels from row index 56 of `input.csv` (unique inputs). 
 --> input labels: {'correctoptions-0': ['Louise: her manner of approaching the simple country folk was so gracious and winning', 'Bin Ladin'], 'incorrectoptions-0': ['the country folk freely gave her any information they possessed, and chatted with her unreservedly', 'Qaida when'], 'correctoptions-1': ['Arthur Weldon, though he did no editorial work', 'Command Center'], 'incorrectoptions-1': ['the girls', 'ordered'], 'correctoptions-2': ['the country folk and the girls, Louise and Beth', 'California'], 'incorrectoptions-2': ['Uncle John', 'target that triggered'], 'correctoptions-3': ['He amused himself these delightful summer days by wandering in the woods, where he collected botanical specimens, or sat with Uncle John on the lawn, where they read together or played chess.', 'Binalshibh when'], 'incorrectoptions-3': ['editorial work', 'searching'], 'correctoptions-4': ['Louise and Beth', 'Bin Ladin'], 'incorrectoptions-4': ['the girls', 'secret service'], 'correctoptions-5': ['Although he had not been very enthusiastic about the paper at any time, although he humored the girls by attending in a good-natured way to the advertising, hiring some of the country folk to get subscriptions, and keeping the book', 'concern'], 'incorrectoptions-5': ['he collected botanical specimens', 'government'], 'correctoptions-6': ['only 2: Louise and Beth', 'e passed between'], 'incorrectoptions-6': ['Louise, Beth, and the other girl', 'officials'], 'correctoptions-7': ['their characters and peculiarities', 'proclaimed that'], 'incorrectoptions-7': ['small items of local interest', 'the safety'], 'correctoptions-8': ['Arthur Weldon', 'America 77 flying'], 'incorrectoptions-8': ['Uncle John', 'celebrates'], 'correctoptions-9': ['Arthur Weldon', 'identified'], 'incorrectoptions-9': ['Uncle John', 'Predator'], 'correctoptions-10': ['Louise', 'highest duty'], 'incorrectoptions-10': ['Beth', 'wasIKELL'], 'correctoptions-11': ['Arthur Weldon', 'Hellfire'], 'incorrectoptions-11': ['Uncle John', 'warhead'], 'correctoptions-12': ['Arthur Weldon & Uncle John', 'Binalshibh'], 'incorrectoptions-12': ['the country folk', 'first stay'], 'correctoptions-13': ['Louise', 'occupations'], 'incorrectoptions-13': ['Beth', 'Predator to'], 'correctoptions-14': ['Arthur Weldon & Uncle John', 'CIA not'], 'incorrectoptions-14': ['Louise & Beth', 'pay for'], 'correctoptions-15': ['only two: Louise & Beth', "Binalshibh's"], 'incorrectoptions-15': ['Louise, Beth & the other girl', 'going'], 'correctoptions-16': ['Arthur Weldon', 'Christians'], 'incorrectoptions-16': ['Uncle John', 'coming'], 'correctoptions-17': ['Louise', 'years'], 'incorrectoptions-17': ['Beth', 'passed'], 'correctoptions-18': ['Arthur Weldon', 'Binalshib when'], 'incorrectoptions-18': ['Beth // Louise', 'Hughes'], 'hiddenName': ['{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-0
Executing one action: self.actions.modify_text('correctoptions-0', 'Louise // Louise helped her by providing local information')
self.actions.modify_text('incorrectoptions-0', 'Beth // Arthur // Local farmers helped her by giving interviews')
Add text `Louise // Louise helped her by providing local information` to this text input: <input type="text" name="correctoptions-0">
Add text `Beth // Arthur // Local farmers helped her by giving interviews` to this text input: <input type="text" name="incorrectoptions-0">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-0
Executing one action: self.actions.modify_text('incorrectoptions-0', 'Louise disliked interacting with country folk//Louise found reportorial work uninteresting//Arthur collected botanical specimens')
Add text `Louise disliked interacting with country folk//Louise found reportorial work uninteresting//Arthur collected botanical specimens` to this text input: <input type="text" name="incorrectoptions-0" value="Beth // Arthur // Local farmers helped her by giving interviews">
 - - - - - -  starting a new element: `Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-1
Executing one action: self.actions.modify_text('correctoptions-1', 'Arthur Weldon')
Add text `Arthur Weldon` to this text input: <input type="text" name="correctoptions-1">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-1
Executing one action: self.actions.modify_text('incorrectoptions-1', 'Arthur // Uncle John // Beth // Louise')
Add text `Arthur // Uncle John // Beth // Louise` to this text input: <input type="text" name="incorrectoptions-1">
 - - - - - -  starting a new element: `Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-2
Executing one action: self.actions.modify_text('correctoptions-2', 'Beth // Louise')
Add text `Beth // Louise` to this text input: <input type="text" name="correctoptions-2">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-2
Executing one action: self.actions.modify_text('incorrectoptions-2', 'Arthur's friends from Chicago // Beth writing about botany // Uncle John collecting editorial content')
Failed to execute an action self.actions.modify_text('incorrectoptions-2', 'Arthur's friends from Chicago // Beth writing about botany // Uncle John collecting editorial content'), error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-3
Executing one action: self.actions.modify_text('correctoptions-3', 'Collected botanical specimens//Read with Uncle John//Played chess')
self.actions.modify_text('incorrectoptions-3', 'Went fishing//Took photography lessons//Traveled abroad for work')
Add text `Collected botanical specimens//Read with Uncle John//Played chess` to this text input: <input type="text" name="correctoptions-3">
Add text `Went fishing//Took photography lessons//Traveled abroad for work` to this text input: <input type="text" name="incorrectoptions-3">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-3
Executing one action: self.actions.modify_text('incorrectoptions-3', 'Went jogging every morning // Studied law at college // Traveled abroad for botanical research')
Add text `Went jogging every morning // Studied law at college // Traveled abroad for botanical research` to this text input: <input type="text" name="incorrectoptions-3" value="Went fishing//Took photography lessons//Traveled abroad for work">
 - - - - - -  starting a new element: `Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-4
Executing one action: self.actions.modify_text('correctoptions-4', 'Beth and Patsy')
Add text `Beth and Patsy` to this text input: <input type="text" name="correctoptions-4">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-4
Executing one action: self.actions.modify_text('incorrectoptions-4', 'Beth and Louise // Louise and Patsy')
Add text `Beth and Louise // Louise and Patsy` to this text input: <input type="text" name="incorrectoptions-4">
 - - - - - -  starting a new element: `Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-5
Executing one action: self.actions.modify_text('correctoptions-5', 'Arthur had no financial necessity to work // Arthur enjoyed his leisure time more')
self.actions.modify_text('incorrectoptions-5', 'Arthur was passionate about editorial work // Arthur needed the job for living expenses')
Add text `Arthur had no financial necessity to work // Arthur enjoyed his leisure time more` to this text input: <input type="text" name="correctoptions-5">
Add text `Arthur was passionate about editorial work // Arthur needed the job for living expenses` to this text input: <input type="text" name="incorrectoptions-5">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-5
Executing one action: self.actions.modify_text('incorrectoptions-5', 'Arthur needed money // He was interested in journalism')
Add text `Arthur needed money // He was interested in journalism` to this text input: <input type="text" name="incorrectoptions-5" value="Arthur was passionate about editorial work // Arthur needed the job for living expenses">
 - - - - - -  starting a new element: `Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-6
Executing one action: self.actions.modify_text('correctoptions-6', 'Beth // Louise // Patsy')
self.actions.modify_text('incorrectoptions-6', 'Anna // Susan // Mary // Emily')
Add text `Beth // Louise // Patsy` to this text input: <input type="text" name="correctoptions-6">
Add text `Anna // Susan // Mary // Emily` to this text input: <input type="text" name="incorrectoptions-6">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-6
Executing one action: self.actions.modify_text('incorrectoptions-6', 'Beth // Louise // Uncle John')
Add text `Beth // Louise // Uncle John` to this text input: <input type="text" name="incorrectoptions-6" value="Anna // Susan // Mary // Emily">
 - - - - - -  starting a new element: `Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-7
Executing one action: self.actions.modify_text('correctoptions-7', 'Her manner was gracious and winning//Her approach was friendly')
self.actions.modify_text('incorrectoptions-7', 'Her reporting style was unfriendly//She avoided people')
Add text `Her manner was gracious and winning//Her approach was friendly` to this text input: <input type="text" name="correctoptions-7">
Add text `Her reporting style was unfriendly//She avoided people` to this text input: <input type="text" name="incorrectoptions-7">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-7
Executing one action: self.actions.modify_text('incorrectoptions-7', 'Her hobbies // Her favorite books // The outdoor activities she dislikes')
Add text `Her hobbies // Her favorite books // The outdoor activities she dislikes` to this text input: <input type="text" name="incorrectoptions-7" value="Her reporting style was unfriendly//She avoided people">
 - - - - - -  starting a new element: `Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-8
Executing one action: self.actions.modify_text('correctoptions-8', 'Arthur Weldon')
self.actions.modify_text('incorrectoptions-8', 'Uncle John // Beth // Louise')
Add text `Arthur Weldon` to this text input: <input type="text" name="correctoptions-8">
Add text `Uncle John // Beth // Louise` to this text input: <input type="text" name="incorrectoptions-8">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-8
Executing one action: self.actions.modify_text('incorrectoptions-8', 'Arthur's older sister // Uncle John // A local businessman')
Failed to execute an action self.actions.modify_text('incorrectoptions-8', 'Arthur's older sister // Uncle John // A local businessman'), error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-9
Executing one action: self.actions.modify_text('correctoptions-9', 'Arthur Weldon')
self.actions.modify_text('incorrectoptions-9', 'Beth // Louise // Uncle John')
Add text `Arthur Weldon` to this text input: <input type="text" name="correctoptions-9">
Add text `Beth // Louise // Uncle John` to this text input: <input type="text" name="incorrectoptions-9">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-9
Executing one action: self.actions.modify_text('incorrectoptions-9', 'Arthur Weldon // John Smith // Michael Owens')
Add text `Arthur Weldon // John Smith // Michael Owens` to this text input: <input type="text" name="incorrectoptions-9" value="Beth // Louise // Uncle John">
 - - - - - -  starting a new element: `Input(name=`correctoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-10
Executing one action: self.actions.modify_text('correctoptions-10', 'Louise')
self.actions.modify_text('incorrectoptions-10', 'Arthur Weldon//Beth//Uncle John')
Add text `Louise` to this text input: <input type="text" name="correctoptions-10">
Add text `Arthur Weldon//Beth//Uncle John` to this text input: <input type="text" name="incorrectoptions-10">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-10
Executing one action: self.actions.modify_text('incorrectoptions-10', 'Louise was shy around people//Louise seldom left her home')
Add text `Louise was shy around people//Louise seldom left her home` to this text input: <input type="text" name="incorrectoptions-10" value="Arthur Weldon//Beth//Uncle John">
 - - - - - -  starting a new element: `Input(name=`correctoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-11
Executing one action: self.actions.modify_text('correctoptions-11', 'Arthur Weldon')
self.actions.modify_text('incorrectoptions-11', 'Uncle John // Louise // Beth')
Add text `Arthur Weldon` to this text input: <input type="text" name="correctoptions-11">
Add text `Uncle John // Louise // Beth` to this text input: <input type="text" name="incorrectoptions-11">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-11
Executing one action: self.actions.modify_text('incorrectoptions-11', 'Arthur Weldon // John Smith // Michael Brown')
Add text `Arthur Weldon // John Smith // Michael Brown` to this text input: <input type="text" name="incorrectoptions-11" value="Uncle John // Louise // Beth">
 - - - - - -  starting a new element: `Input(name=`correctoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-12
Executing one action: self.actions.modify_text('correctoptions-12', 'Arthur Weldon//John')
self.actions.modify_text('incorrectoptions-12', 'Tom//Uncle John//Beth')
Add text `Arthur Weldon//John` to this text input: <input type="text" name="correctoptions-12">
Add text `Tom//Uncle John//Beth` to this text input: <input type="text" name="incorrectoptions-12">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-12
Executing one action: self.actions.modify_text('incorrectoptions-12', 'Arthur // Uncle John // Beth // Louise')
Add text `Arthur // Uncle John // Beth // Louise` to this text input: <input type="text" name="incorrectoptions-12" value="Tom//Uncle John//Beth">
 - - - - - -  starting a new element: `Input(name=`correctoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-13
Executing one action: self.actions.modify_text('correctoptions-13', 'Louise')
self.actions.modify_text('incorrectoptions-13', 'Beth // Arthur Weldon // Uncle John')
Add text `Louise` to this text input: <input type="text" name="correctoptions-13">
Add text `Beth // Arthur Weldon // Uncle John` to this text input: <input type="text" name="incorrectoptions-13">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-13
Executing one action: self.actions.modify_text('incorrectoptions-13', 'Louise // Beth // Arthur // Uncle John')
Add text `Louise // Beth // Arthur // Uncle John` to this text input: <input type="text" name="incorrectoptions-13" value="Beth // Arthur Weldon // Uncle John">
 - - - - - -  starting a new element: `Input(name=`correctoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-14
Executing one action: self.actions.modify_text('correctoptions-14', 'Arthur Weldon // Uncle John')
self.actions.modify_text('incorrectoptions-14', 'Beth // Louise')
Add text `Arthur Weldon // Uncle John` to this text input: <input type="text" name="correctoptions-14">
Add text `Beth // Louise` to this text input: <input type="text" name="incorrectoptions-14">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-14
Executing one action: self.actions.modify_text('incorrectoptions-14', 'Arthur Weldon // Uncle John')
Add text `Arthur Weldon // Uncle John` to this text input: <input type="text" name="incorrectoptions-14" value="Beth // Louise">
 - - - - - -  starting a new element: `Input(name=`correctoptions-15`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-15`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-15
Executing one action: self.actions.modify_text('correctoptions-15', 'Beth // Louise // Patsy')
self.actions.modify_text('incorrectoptions-15', 'Arthur // John // Ann')
Add text `Beth // Louise // Patsy` to this text input: <input type="text" name="correctoptions-15">
Add text `Arthur // John // Ann` to this text input: <input type="text" name="incorrectoptions-15">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-15`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-15`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-15
Executing one action: self.actions.modify_text('incorrectoptions-15', 'Beth // Louise // Ann')
Add text `Beth // Louise // Ann` to this text input: <input type="text" name="incorrectoptions-15" value="Arthur // John // Ann">
 - - - - - -  starting a new element: `Input(name=`correctoptions-16`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-16`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-16
Executing one action: self.actions.modify_text('correctoptions-16', 'Arthur Weldon')
self.actions.modify_text('incorrectoptions-16', 'Uncle John // Beth // Louise')
Add text `Arthur Weldon` to this text input: <input type="text" name="correctoptions-16">
Add text `Uncle John // Beth // Louise` to this text input: <input type="text" name="incorrectoptions-16">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-16`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-16`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-16
Executing one action: self.actions.modify_text('incorrectoptions-16', 'Arthur Weldon // John Doe')
Add text `Arthur Weldon // John Doe` to this text input: <input type="text" name="incorrectoptions-16" value="Uncle John // Beth // Louise">
 - - - - - -  starting a new element: `Input(name=`correctoptions-17`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-17`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-17
Executing one action: self.actions.modify_text('correctoptions-17', 'Louise // Louise was fond of reporting and it brought her close to the people, allowing her to study their characteristics and peculiarities.')
self.actions.modify_text('incorrectoptions-17', 'Beth // Arthur // None of the girls')
Add text `Louise // Louise was fond of reporting and it brought her close to the people, allowing her to study their characteristics and peculiarities.` to this text input: <input type="text" name="correctoptions-17">
Add text `Beth // Arthur // None of the girls` to this text input: <input type="text" name="incorrectoptions-17">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-17`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-17`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-17
Executing one action: self.actions.modify_text('incorrectoptions-17', 'Arthur Weldon // Uncle John // Beth')
Add text `Arthur Weldon // Uncle John // Beth` to this text input: <input type="text" name="incorrectoptions-17" value="Beth // Arthur // None of the girls">
 - - - - - -  starting a new element: `Input(name=`correctoptions-18`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-18`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-18
Executing one action: self.actions.modify_text('correctoptions-18', 'Arthur Weldon')
self.actions.modify_text('incorrectoptions-18', 'Uncle John//Beth//Louise')
Add text `Arthur Weldon` to this text input: <input type="text" name="correctoptions-18">
Add text `Uncle John//Beth//Louise` to this text input: <input type="text" name="incorrectoptions-18">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-18`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-18`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-18
Executing one action: self.actions.modify_text('incorrectoptions-18', 'Arthur Weldon // Uncle John // Louise')
Add text `Arthur Weldon // Uncle John // Louise` to this text input: <input type="text" name="incorrectoptions-18" value="Uncle John//Beth//Louise">
 - - - - - -  starting a new element: `Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
Skipping element `hiddenName` since it is not visible.
input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Louise // Louise helped her by providing local information']
 visible_values : ['Louise // Louise helped her by providing local information']
input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Louise disliked interacting with country folk//Louise found reportorial work uninteresting//Arthur collected botanical specimens']
 visible_values : ['Louise disliked interacting with country folk//Louise found reportorial work uninteresting//Arthur collected botanical specimens']
input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Arthur Weldon']
 visible_values : ['Arthur Weldon']
input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Arthur // Uncle John // Beth // Louise']
 visible_values : ['Arthur // Uncle John // Beth // Louise']
input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Beth // Louise']
 visible_values : ['Beth // Louise']
input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : [None]
 visible_values : [None]
input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Collected botanical specimens//Read with Uncle John//Played chess']
 visible_values : ['Collected botanical specimens//Read with Uncle John//Played chess']
input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Went jogging every morning // Studied law at college // Traveled abroad for botanical research']
 visible_values : ['Went jogging every morning // Studied law at college // Traveled abroad for botanical research']
input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Beth and Patsy']
 visible_values : ['Beth and Patsy']
input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Beth and Louise // Louise and Patsy']
 visible_values : ['Beth and Louise // Louise and Patsy']
input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Arthur had no financial necessity to work // Arthur enjoyed his leisure time more']
 visible_values : ['Arthur had no financial necessity to work // Arthur enjoyed his leisure time more']
input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Arthur needed money // He was interested in journalism']
 visible_values : ['Arthur needed money // He was interested in journalism']
input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Beth // Louise // Patsy']
 visible_values : ['Beth // Louise // Patsy']
input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Beth // Louise // Uncle John']
 visible_values : ['Beth // Louise // Uncle John']
input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Her manner was gracious and winning//Her approach was friendly']
 visible_values : ['Her manner was gracious and winning//Her approach was friendly']
input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Her hobbies // Her favorite books // The outdoor activities she dislikes']
 visible_values : ['Her hobbies // Her favorite books // The outdoor activities she dislikes']
input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Arthur Weldon']
 visible_values : ['Arthur Weldon']
input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Uncle John // Beth // Louise']
 visible_values : ['Uncle John // Beth // Louise']
input: Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Arthur Weldon']
 visible_values : ['Arthur Weldon']
input: Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Arthur Weldon // John Smith // Michael Owens']
 visible_values : ['Arthur Weldon // John Smith // Michael Owens']
input: Input(name=`correctoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Louise']
 visible_values : ['Louise']
input: Input(name=`incorrectoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Louise was shy around people//Louise seldom left her home']
 visible_values : ['Louise was shy around people//Louise seldom left her home']
input: Input(name=`correctoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Arthur Weldon']
 visible_values : ['Arthur Weldon']
input: Input(name=`incorrectoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Arthur Weldon // John Smith // Michael Brown']
 visible_values : ['Arthur Weldon // John Smith // Michael Brown']
input: Input(name=`correctoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Arthur Weldon//John']
 visible_values : ['Arthur Weldon//John']
input: Input(name=`incorrectoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Arthur // Uncle John // Beth // Louise']
 visible_values : ['Arthur // Uncle John // Beth // Louise']
input: Input(name=`correctoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Louise']
 visible_values : ['Louise']
input: Input(name=`incorrectoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Louise // Beth // Arthur // Uncle John']
 visible_values : ['Louise // Beth // Arthur // Uncle John']
input: Input(name=`correctoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Arthur Weldon // Uncle John']
 visible_values : ['Arthur Weldon // Uncle John']
input: Input(name=`incorrectoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Arthur Weldon // Uncle John']
 visible_values : ['Arthur Weldon // Uncle John']
input: Input(name=`correctoptions-15`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Beth // Louise // Patsy']
 visible_values : ['Beth // Louise // Patsy']
input: Input(name=`incorrectoptions-15`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Beth // Louise // Ann']
 visible_values : ['Beth // Louise // Ann']
input: Input(name=`correctoptions-16`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Arthur Weldon']
 visible_values : ['Arthur Weldon']
input: Input(name=`incorrectoptions-16`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Arthur Weldon // John Doe']
 visible_values : ['Arthur Weldon // John Doe']
input: Input(name=`correctoptions-17`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Louise // Louise was fond of reporting and it brought her close to the people, allowing her to study their characteristics and peculiarities.']
 visible_values : ['Louise // Louise was fond of reporting and it brought her close to the people, allowing her to study their characteristics and peculiarities.']
input: Input(name=`incorrectoptions-17`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Arthur Weldon // Uncle John // Beth']
 visible_values : ['Arthur Weldon // Uncle John // Beth']
input: Input(name=`correctoptions-18`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Arthur Weldon']
 visible_values : ['Arthur Weldon']
input: Input(name=`incorrectoptions-18`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Arthur Weldon // Uncle John // Louise']
 visible_values : ['Arthur Weldon // Uncle John // Louise']
input: Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : [None]
 visible_values : [None]
 ------- evaluating input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Louise: her manner of approaching the simple country folk was so gracious and winning', 'Bin Ladin']`
----> answers: `['Louise: her manner of approaching the simple country folk was so gracious and winning', 'Bin Ladin']` - type: `<class 'list'>`
----> baseline_answer: `Louise // Louise helped her by providing local information` - type: `<class 'str'>`
 --> scores:  0.18181818181818182
----> per-field score: 0.18181818181818182
 ------- evaluating input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['the country folk freely gave her any information they possessed, and chatted with her unreservedly', 'Qaida when']`
----> answers: `['the country folk freely gave her any information they possessed, and chatted with her unreservedly', 'Qaida when']` - type: `<class 'list'>`
----> baseline_answer: `Louise disliked interacting with country folk//Louise found reportorial work uninteresting//Arthur collected botanical specimens` - type: `<class 'str'>`
 --> scores:  0.13333333333333333
----> per-field score: 0.13333333333333333
 ------- evaluating input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Arthur Weldon, though he did no editorial work', 'Command Center']`
----> answers: `['Arthur Weldon, though he did no editorial work', 'Command Center']` - type: `<class 'list'>`
----> baseline_answer: `Arthur Weldon` - type: `<class 'str'>`
 --> scores:  0.4
----> per-field score: 0.4
 ------- evaluating input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['the girls', 'ordered']`
----> answers: `['the girls', 'ordered']` - type: `<class 'list'>`
----> baseline_answer: `Arthur // Uncle John // Beth // Louise` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['the country folk and the girls, Louise and Beth', 'California']`
----> answers: `['the country folk and the girls, Louise and Beth', 'California']` - type: `<class 'list'>`
----> baseline_answer: `Beth // Louise` - type: `<class 'str'>`
 --> scores:  0.1818181818181818
----> per-field score: 0.1818181818181818
 ------- evaluating input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Uncle John', 'target that triggered']`
----> answers: `['Uncle John', 'target that triggered']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['He amused himself these delightful summer days by wandering in the woods, where he collected botanical specimens, or sat with Uncle John on the lawn, where they read together or played chess.', 'Binalshibh when']`
----> answers: `['Binalshibh when', 'He amused himself these delightful summer days by wandering in the woods, where he collected botanical specimens, or sat with Uncle John on the lawn, where they read together or played chess.']` - type: `<class 'list'>`
----> baseline_answer: `Collected botanical specimens//Read with Uncle John//Played chess` - type: `<class 'str'>`
 --> scores:  0.3902439024390244
----> per-field score: 0.3902439024390244
 ------- evaluating input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['editorial work', 'searching']`
----> answers: `['searching', 'editorial work']` - type: `<class 'list'>`
----> baseline_answer: `Went jogging every morning // Studied law at college // Traveled abroad for botanical research` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Louise and Beth', 'Bin Ladin']`
----> answers: `['Bin Ladin', 'Louise and Beth']` - type: `<class 'list'>`
----> baseline_answer: `Beth and Patsy` - type: `<class 'str'>`
 --> scores:  0.3333333333333333
----> per-field score: 0.3333333333333333
 ------- evaluating input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['the girls', 'secret service']`
----> answers: `['the girls', 'secret service']` - type: `<class 'list'>`
----> baseline_answer: `Beth and Louise // Louise and Patsy` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Although he had not been very enthusiastic about the paper at any time, although he humored the girls by attending in a good-natured way to the advertising, hiring some of the country folk to get subscriptions, and keeping the book', 'concern']`
----> answers: `['Although he had not been very enthusiastic about the paper at any time, although he humored the girls by attending in a good-natured way to the advertising, hiring some of the country folk to get subscriptions, and keeping the book', 'concern']` - type: `<class 'list'>`
----> baseline_answer: `Arthur had no financial necessity to work // Arthur enjoyed his leisure time more` - type: `<class 'str'>`
 --> scores:  0.07407407407407408
----> per-field score: 0.07407407407407408
 ------- evaluating input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['he collected botanical specimens', 'government']`
----> answers: `['he collected botanical specimens', 'government']` - type: `<class 'list'>`
----> baseline_answer: `Arthur needed money // He was interested in journalism` - type: `<class 'str'>`
 --> scores:  0.16666666666666666
----> per-field score: 0.16666666666666666
 ------- evaluating input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['only 2: Louise and Beth', 'e passed between']`
----> answers: `['e passed between', 'only 2: Louise and Beth']` - type: `<class 'list'>`
----> baseline_answer: `Beth // Louise // Patsy` - type: `<class 'str'>`
 --> scores:  0.25
----> per-field score: 0.25
 ------- evaluating input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Louise, Beth, and the other girl', 'officials']`
----> answers: `['officials', 'Louise, Beth, and the other girl']` - type: `<class 'list'>`
----> baseline_answer: `Beth // Louise // Uncle John` - type: `<class 'str'>`
 --> scores:  0.2
----> per-field score: 0.2
 ------- evaluating input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['their characters and peculiarities', 'proclaimed that']`
----> answers: `['their characters and peculiarities', 'proclaimed that']` - type: `<class 'list'>`
----> baseline_answer: `Her manner was gracious and winning//Her approach was friendly` - type: `<class 'str'>`
 --> scores:  0.14285714285714288
----> per-field score: 0.14285714285714288
 ------- evaluating input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['small items of local interest', 'the safety']`
----> answers: `['the safety', 'small items of local interest']` - type: `<class 'list'>`
----> baseline_answer: `Her hobbies // Her favorite books // The outdoor activities she dislikes` - type: `<class 'str'>`
 --> scores:  0.16666666666666669
----> per-field score: 0.16666666666666669
 ------- evaluating input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Arthur Weldon', 'America 77 flying']`
----> answers: `['Arthur Weldon', 'America 77 flying']` - type: `<class 'list'>`
----> baseline_answer: `Arthur Weldon` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Uncle John', 'celebrates']`
----> answers: `['Uncle John', 'celebrates']` - type: `<class 'list'>`
----> baseline_answer: `Uncle John // Beth // Louise` - type: `<class 'str'>`
 --> scores:  0.6666666666666666
----> per-field score: 0.6666666666666666
 ------- evaluating input: Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Arthur Weldon', 'identified']`
----> answers: `['identified', 'Arthur Weldon']` - type: `<class 'list'>`
----> baseline_answer: `Arthur Weldon` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Uncle John', 'Predator']`
----> answers: `['Uncle John', 'Predator']` - type: `<class 'list'>`
----> baseline_answer: `Arthur Weldon // John Smith // Michael Owens` - type: `<class 'str'>`
 --> scores:  0.25
----> per-field score: 0.25
 ------- evaluating input: Input(name=`correctoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Louise', 'highest duty']`
----> answers: `['highest duty', 'Louise']` - type: `<class 'list'>`
----> baseline_answer: `Louise` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Beth', 'wasIKELL']`
----> answers: `['Beth', 'wasIKELL']` - type: `<class 'list'>`
----> baseline_answer: `Louise was shy around people//Louise seldom left her home` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Arthur Weldon', 'Hellfire']`
----> answers: `['Arthur Weldon', 'Hellfire']` - type: `<class 'list'>`
----> baseline_answer: `Arthur Weldon` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Uncle John', 'warhead']`
----> answers: `['Uncle John', 'warhead']` - type: `<class 'list'>`
----> baseline_answer: `Arthur Weldon // John Smith // Michael Brown` - type: `<class 'str'>`
 --> scores:  0.25
----> per-field score: 0.25
 ------- evaluating input: Input(name=`correctoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Arthur Weldon & Uncle John', 'Binalshibh']`
----> answers: `['Binalshibh', 'Arthur Weldon & Uncle John']` - type: `<class 'list'>`
----> baseline_answer: `Arthur Weldon//John` - type: `<class 'str'>`
 --> scores:  0.8571428571428571
----> per-field score: 0.8571428571428571
 ------- evaluating input: Input(name=`incorrectoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['the country folk', 'first stay']`
----> answers: `['first stay', 'the country folk']` - type: `<class 'list'>`
----> baseline_answer: `Arthur // Uncle John // Beth // Louise` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Louise', 'occupations']`
----> answers: `['occupations', 'Louise']` - type: `<class 'list'>`
----> baseline_answer: `Louise` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Beth', 'Predator to']`
----> answers: `['Beth', 'Predator to']` - type: `<class 'list'>`
----> baseline_answer: `Louise // Beth // Arthur // Uncle John` - type: `<class 'str'>`
 --> scores:  0.33333333333333337
----> per-field score: 0.33333333333333337
 ------- evaluating input: Input(name=`correctoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Arthur Weldon & Uncle John', 'CIA not']`
----> answers: `['Arthur Weldon & Uncle John', 'CIA not']` - type: `<class 'list'>`
----> baseline_answer: `Arthur Weldon // Uncle John` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Louise & Beth', 'pay for']`
----> answers: `['pay for', 'Louise & Beth']` - type: `<class 'list'>`
----> baseline_answer: `Arthur Weldon // Uncle John` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-15`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['only two: Louise & Beth', "Binalshibh's"]`
----> answers: `["Binalshibh's", 'only two: Louise & Beth']` - type: `<class 'list'>`
----> baseline_answer: `Beth // Louise // Patsy` - type: `<class 'str'>`
 --> scores:  0.28571428571428575
----> per-field score: 0.28571428571428575
 ------- evaluating input: Input(name=`incorrectoptions-15`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Louise, Beth & the other girl', 'going']`
----> answers: `['going', 'Louise, Beth & the other girl']` - type: `<class 'list'>`
----> baseline_answer: `Beth // Louise // Ann` - type: `<class 'str'>`
 --> scores:  0.25
----> per-field score: 0.25
 ------- evaluating input: Input(name=`correctoptions-16`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Arthur Weldon', 'Christians']`
----> answers: `['Christians', 'Arthur Weldon']` - type: `<class 'list'>`
----> baseline_answer: `Arthur Weldon` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-16`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Uncle John', 'coming']`
----> answers: `['Uncle John', 'coming']` - type: `<class 'list'>`
----> baseline_answer: `Arthur Weldon // John Doe` - type: `<class 'str'>`
 --> scores:  0.3333333333333333
----> per-field score: 0.3333333333333333
 ------- evaluating input: Input(name=`correctoptions-17`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Louise', 'years']`
----> answers: `['Louise', 'years']` - type: `<class 'list'>`
----> baseline_answer: `Louise // Louise was fond of reporting and it brought her close to the people, allowing her to study their characteristics and peculiarities.` - type: `<class 'str'>`
 --> scores:  0.08695652173913045
----> per-field score: 0.08695652173913045
 ------- evaluating input: Input(name=`incorrectoptions-17`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Beth', 'passed']`
----> answers: `['Beth', 'passed']` - type: `<class 'list'>`
----> baseline_answer: `Arthur Weldon // Uncle John // Beth` - type: `<class 'str'>`
 --> scores:  0.33333333333333337
----> per-field score: 0.33333333333333337
 ------- evaluating input: Input(name=`correctoptions-18`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Arthur Weldon', 'Binalshib when']`
----> answers: `['Arthur Weldon', 'Binalshib when']` - type: `<class 'list'>`
----> baseline_answer: `Arthur Weldon` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-18`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Beth // Louise', 'Hughes']`
----> answers: `['Hughes', 'Beth // Louise']` - type: `<class 'list'>`
----> baseline_answer: `Arthur Weldon // Uncle John // Louise` - type: `<class 'str'>`
 --> scores:  0.28571428571428575
----> per-field score: 0.28571428571428575
 ------- evaluating input: Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
Skipping element `hiddenName` since it is not visible.
 --> Per-instance overall score: 0.3829738447364167
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6666666666666666, 0.4, 0.8, 0.28571428571428575, 1.0, 0.0, 0.22222222222222224, 0.0, 0.33333333333333337, 0.0, 0.2641509433962264, 0.0, 0.0, 0.0, 0.27906976744186046, 0.2105263157894737, 0.6666666666666666, 0.3636363636363636, 1.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.5, 1.0, 0.2222222222222222, 1.0, 0.11764705882352941, 0.0, 0.25, 0.5, 0.33333333333333337, 1.0, 0.0, 1.0, 0.2222222222222222, 0.4, 0.33333333333333337, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.4444444444444445, 0.4444444444444445, 0.4615384615384615, 1.0, 0.2, 1.0, 0.0, 0.4444444444444444, 0.1, 0.15789473684210528, 0.13333333333333333, 0.5, 0.16666666666666666, 0.4444444444444445, 0.22222222222222224, 0.5, 0.0, 0.14285714285714288, 0.1818181818181818, 0.16666666666666666, 0.0, 0.5, 0.0, 0.6666666666666666, 0.14285714285714288, 0.3333333333333333, 0.13333333333333333, 0.08333333333333334, 0.1, 0.4, 0.0, 0.6666666666666666, 0.0, 1.0, 0.0, 0.2727272727272727, 0.15384615384615383, 0.0, 0.22222222222222224, 0.41379310344827586, 0.10526315789473684, 0.6666666666666666, 0.0, 0.5806451612903225, 0.11428571428571428, 0.923076923076923, 0.06451612903225806, 0.7272727272727273, 0.0, 0.22222222222222224, 0.17142857142857143, 0.4444444444444444, 0.20833333333333334, 0.10526315789473682, 0.05555555555555556, 0.5833333333333334, 0.07017543859649122, 0.08695652173913043, 0.14634146341463417, 0.125, 0.05714285714285714, 0.8, 0.13333333333333333, 0.0, 0.0, 1.0, 0.13333333333333333, 0.22222222222222224, 0.3448275862068966, 0.35294117647058826, 0.10256410256410257, 0.0, 0.10810810810810811, 0.25, 0.4800000000000001, 0.11764705882352941, 0.24390243902439024, 0.6666666666666666, 0.6, 0.5714285714285715, 0.0, 0.0, 0.0, 0.0, 0.15384615384615385, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.2, 0.6666666666666667, 0.18181818181818182, 0.1, 0.0, 0.1, 0.0, 0.14285714285714288, 0.0, 0.7000000000000001, 0.0, 0.17391304347826086, 0.4444444444444445, 1.0, 0.2222222222222222, 1.0, 0.5, 1.0, 0.7142857142857143, 0.0, 0.0, 1.0, 0.4, 1.0, 0.0, 0.15384615384615385, 0.2758620689655172, 0.33333333333333337, 0.1818181818181818, 0.35294117647058826, 0.3571428571428571, 0.7142857142857143, 0.16666666666666669, 0.28571428571428575, 0.16326530612244897, 0.2222222222222222, 0.0, 0.08, 0.1081081081081081, 0.21052631578947367, 0.12121212121212123, 0.4, 0.0, 0.8, 0.30769230769230765, 1.0, 0.0, 0.1818181818181818, 0.23529411764705882, 0.7999999999999999, 0.17391304347826086, 0.15384615384615383, 0.13793103448275862, 1.0, 0.25, 1.0, 0.25, 0.2222222222222222, 0.0, 0.3529411764705882, 0.17142857142857143, 1.0, 0.4, 0.0, 0.0, 0.0, 0.16666666666666666, 0.25, 0.0, 0.2222222222222222, 0.0, 1.0, 0.06451612903225806, 0.22222222222222224, 0.3333333333333333, 0.28571428571428575, 0.19354838709677416, 0.6666666666666666, 0.16666666666666666, 0.5, 0.25, 0.4, 0.0, 0.2222222222222222, 0.0, 0.15384615384615385, 0.28571428571428575, 0.0, 0.4, 0.0, 0.0, 0.5, 0.5, 1.0, 0.0, 0.23529411764705882, 0.0909090909090909, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.6666666666666667, 0.4, 0.3448275862068966, 0.7499999999999999, 0.20689655172413793, 0.6666666666666666, 0.5882352941176471, 0.07692307692307691, 0.17142857142857143, 1.0, 0.5, 0.09999999999999999, 0.27586206896551724, 0.2105263157894737, 0.26666666666666666, 0.0, 0.2857142857142857, 0.4, 0.1818181818181818, 1.0, 0.3333333333333333, 0.7999999999999999, 0.5714285714285715, 0.8, 0.0, 0.09230769230769229, 0.16666666666666666, 1.0, 0.0, 0.6666666666666666, 0.0, 1.0, 0.0, 0.05882352941176471, 0.6666666666666666, 0.0, 0.0, 0.27450980392156865, 0.12121212121212122, 0.0, 0.1111111111111111, 0.25531914893617025, 0.07142857142857142, 0.4444444444444445, 0.16216216216216214, 0.18181818181818182, 0.10810810810810811, 0.3684210526315789, 0.09090909090909091, 0.4000000000000001, 0.0, 0.13793103448275862, 0.0, 0.3333333333333333, 0.14814814814814814, 0.2, 0.21739130434782608, 0.35294117647058826, 0.0, 0.35294117647058826, 0.0, 0.0, 0.0, 0.5, 0.1111111111111111, 0.14814814814814817, 0.1111111111111111, 0.2857142857142857, 0.0, 0.3333333333333333, 0.09523809523809525, 0.0, 0.0, 1.0, 0.14285714285714285, 0.5714285714285715, 0.11764705882352941, 0.4, 0.4, 1.0, 0.0, 1.0, 0.27027027027027023, 0.3636363636363637, 0.0, 1.0, 0.0, 0.5714285714285715, 0.0, 0.0, 0.0, 1.0, 0.3333333333333333, 0.0625, 0.0625, 0.5, 0.0, 0.6666666666666666, 0.0, 0.0, 0.0, 0.6666666666666666, 0.0, 1.0, 0.0, 1.0, 0.0, 0.33333333333333337, 0.0, 0.15384615384615383, 0.0, 0.0, 0.0, 0.30769230769230765, 0.15384615384615385, 1.0, 0.0, 0.42857142857142855, 0.1818181818181818, 1.0, 0.0, 1.0, 0.10526315789473682, 0.0, 0.0, 1.0, 0.4, 0.0, 0.3636363636363636, 0.0, 0.19047619047619044, 1.0, 0.4, 0.7272727272727273, 0.5, 1.0, 0.4, 0.4, 0.0, 0.6, 0.0, 0.0, 0.1818181818181818, 0.5, 0.8571428571428571, 1.0, 0.18181818181818182, 0.8, 0.5714285714285715, 0.0, 0.3333333333333333, 0.5714285714285715, 0.0, 1.0, 0.0, 0.6666666666666666, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.6666666666666666, 0.11764705882352941, 0.0, 0.2857142857142857, 0.0, 0.0, 0.18181818181818182, 0.13333333333333333, 0.4, 0.0, 0.1818181818181818, 0.0, 0.3902439024390244, 0.0, 0.3333333333333333, 0.0, 0.07407407407407408, 0.16666666666666666, 0.25, 0.2, 0.14285714285714288, 0.16666666666666669, 1.0, 0.6666666666666666, 1.0, 0.25, 1.0, 0.0, 1.0, 0.25, 0.8571428571428571, 0.0, 1.0, 0.33333333333333337, 1.0, 0.0, 0.28571428571428575, 0.25, 1.0, 0.3333333333333333, 0.08695652173913045, 0.33333333333333337, 1.0, 0.28571428571428575]}
instance_id: 34758 <-> row_number: 23
Could not find input field with name `correctoptions-15`
Could not find input field with name `correctoptions-16`
Could not find input field with name `correctoptions-17`
Could not find input field with name `correctoptions-18`
Could not find input field with name `correctoptions-19`
Could not find input field with name `correctoptions-20`
Could not find input field with name `correctoptions-21`
Could not find input field with name `correctoptions-22`
Could not find input field with name `incorrectoptions-15`
Could not find input field with name `incorrectoptions-16`
Could not find input field with name `incorrectoptions-17`
Could not find input field with name `incorrectoptions-18`
Could not find input field with name `incorrectoptions-19`
Could not find input field with name `incorrectoptions-20`
Could not find input field with name `incorrectoptions-21`
Could not find input field with name `incorrectoptions-22`
 --> inputs: ['correctoptions-0', 'incorrectoptions-0', 'correctoptions-1', 'incorrectoptions-1', 'correctoptions-2', 'incorrectoptions-2', 'correctoptions-3', 'incorrectoptions-3', 'correctoptions-4', 'incorrectoptions-4', 'correctoptions-5', 'incorrectoptions-5', 'correctoptions-6', 'incorrectoptions-6', 'correctoptions-7', 'incorrectoptions-7', 'correctoptions-8', 'incorrectoptions-8', 'correctoptions-9', 'incorrectoptions-9', 'correctoptions-10', 'incorrectoptions-10', 'correctoptions-11', 'incorrectoptions-11', 'correctoptions-12', 'incorrectoptions-12', 'correctoptions-13', 'incorrectoptions-13', 'correctoptions-14', 'incorrectoptions-14', 'hiddenName']
 --> Looking up gold labels from row index 23 of `input.csv` (unique inputs). 
 --> input labels: {'correctoptions-0': ['to preserve baby tomatoes, cucumbers, and strawberries in translucent cubes', 'Binalshibh and Atta'], 'incorrectoptions-0': ['mink jacket', 'Qaida when'], 'correctoptions-1': ['Their baby shoes protected in stopboxes', 'Command Center'], 'incorrectoptions-1': ['mink jacket', 'concerned'], 'correctoptions-2': ["Will Shetterly's baby shoes", 'California'], 'incorrectoptions-2': ['stopboxes', 'went to Germany'], 'correctoptions-3': ['baby shoes had not been cleaned', 'Binalshibh when'], 'incorrectoptions-3': ['symbol of their love for me.', 'searching'], 'correctoptions-4': ['Mama and Papa', 'Barnett'], 'incorrectoptions-4': ['uncle', 'President'], 'correctoptions-5': ['baby tomatoes, cucumbers, and strawberries', 'concern'], 'incorrectoptions-5': ['baby shoes', 'government'], 'correctoptions-6': ['a year', 'influenced'], 'incorrectoptions-6': ['Immediately', 'Barnett'], 'correctoptions-7': ['baby shoes', 'proclaimed that'], 'incorrectoptions-7': ['stopboxes', 'highest duty'], 'correctoptions-8': ['a family hand-me-down possesion', 'supported'], 'incorrectoptions-8': ['stamp collection', 'mistakes besides'], 'correctoptions-9': ['baby tomatoes, cucumbers, and strawberries', 'concern'], 'incorrectoptions-9': ['mink jacket', 'extremist outlook'], 'correctoptions-10': ['above her computer while she worked', 'Barnett'], 'incorrectoptions-10': ['stopboxes', 'wasIKELL'], 'correctoptions-11': ['baby shoes had not been cleaned before they were encased.', 'highest honor'], 'incorrectoptions-11': ['symbol of their love for her', 'warhead'], 'correctoptions-12': ['stopbox, a teal blue Tiempo Capturado', 'Binalshibh'], 'incorrectoptions-12': ['mink jacket', 'first stay'], 'correctoptions-13': ['baby shoes', 'occupations'], 'incorrectoptions-13': ['stamp collection', 'activities that'], 'correctoptions-14': ['teal blue', 'CIA not'], 'incorrectoptions-14': ['translucent', 'Ramzi Binalshibh'], 'hiddenName': ['{}', '{}']}
 - - - - - -  starting a new element: `Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-0
Executing one action: self.actions.modify_text('correctoptions-0', 'Preserving food // Preserving clothes // Preserving toys')
self.actions.modify_text('incorrectoptions-0', 'Playing music // Brewing coffee // Watching TV')
Add text `Preserving food // Preserving clothes // Preserving toys` to this text input: <input type="text" name="correctoptions-0">
Add text `Playing music // Brewing coffee // Watching TV` to this text input: <input type="text" name="incorrectoptions-0">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-0
Executing one action: self.actions.modify_text('incorrectoptions-0', 'Used it as a fruit bowl // Stored old newspapers inside')
Add text `Used it as a fruit bowl // Stored old newspapers inside` to this text input: <input type="text" name="incorrectoptions-0" value="Playing music // Brewing coffee // Watching TV">
 - - - - - -  starting a new element: `Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-1
Executing one action: self.actions.modify_text('correctoptions-1', 'Their baby shoes//stopboxes')
Add text `Their baby shoes//stopboxes` to this text input: <input type="text" name="correctoptions-1">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-1
Executing one action: self.actions.modify_text('incorrectoptions-1', 'Their old toys // Their childhood clothes // Their old photo albums')
Add text `Their old toys // Their childhood clothes // Their old photo albums` to this text input: <input type="text" name="incorrectoptions-1">
 - - - - - -  starting a new element: `Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-2
Executing one action: self.actions.modify_text('correctoptions-2', 'baby shoes')
Add text `baby shoes` to this text input: <input type="text" name="correctoptions-2">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-2
Executing one action: self.actions.modify_text('incorrectoptions-2', '')
Since the input value is ``, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-3
Executing one action: self.actions.modify_text('correctoptions-3', 'dust from the old shoes // air from the stopbox')
self.actions.modify_text('incorrectoptions-3', 'new car smell // burnt toast')
Add text `dust from the old shoes // air from the stopbox` to this text input: <input type="text" name="correctoptions-3">
Add text `new car smell // burnt toast` to this text input: <input type="text" name="incorrectoptions-3">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-3
Executing one action: self.actions.modify_text('incorrectoptions-3', 'Dusty air // Unwashed shoes // Moldy smell')
Add text `Dusty air // Unwashed shoes // Moldy smell` to this text input: <input type="text" name="incorrectoptions-3" value="new car smell // burnt toast">
 - - - - - -  starting a new element: `Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-4
Executing one action: self.actions.modify_text('correctoptions-4', 'Papa')
Add text `Papa` to this text input: <input type="text" name="correctoptions-4">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-4
Executing one action: self.actions.modify_text('incorrectoptions-4', 'Mama // Papa\'s sister // The local baker')
Add text `Mama // Papa's sister // The local baker` to this text input: <input type="text" name="incorrectoptions-4">
 - - - - - -  starting a new element: `Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-5
Executing one action: self.actions.modify_text('correctoptions-5', 'baby tomatoes // cucumbers // strawberries')

self.actions.modify_text('incorrectoptions-5', 'apples // bread // milk')
Add text `baby tomatoes // cucumbers // strawberries` to this text input: <input type="text" name="correctoptions-5">
Add text `apples // bread // milk` to this text input: <input type="text" name="incorrectoptions-5">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-5
Executing one action: self.actions.modify_text('incorrectoptions-5', 'strawberries preserved in glass // cucumbers kept fresh without technology // mink jacket treated with chemicals')
Add text `strawberries preserved in glass // cucumbers kept fresh without technology // mink jacket treated with chemicals` to this text input: <input type="text" name="incorrectoptions-5" value="apples // bread // milk">
 - - - - - -  starting a new element: `Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-6
Executing one action: self.actions.modify_text('correctoptions-6', 'One year')
self.actions.modify_text('incorrectoptions-6', 'Two years // Five years // The same year')
Add text `One year` to this text input: <input type="text" name="correctoptions-6">
Add text `Two years // Five years // The same year` to this text input: <input type="text" name="incorrectoptions-6">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-6
Executing one action: self.actions.modify_text('incorrectoptions-6', 'Two years // Four years // Ten days // 5 years')
Add text `Two years // Four years // Ten days // 5 years` to this text input: <input type="text" name="incorrectoptions-6" value="Two years // Five years // The same year">
 - - - - - -  starting a new element: `Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-7
Executing one action: self.actions.modify_text('correctoptions-7', 'baby shoes')
self.actions.modify_text('incorrectoptions-7', 'parents portraits//father\'s glasses//mother\'s diary')
Add text `baby shoes` to this text input: <input type="text" name="correctoptions-7">
Add text `parents portraits//father's glasses//mother's diary` to this text input: <input type="text" name="incorrectoptions-7">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-7
Executing one action: self.actions.modify_text('incorrectoptions-7', 'A capturador // Baby clothes // Papa\'s computer')
Add text `A capturador // Baby clothes // Papa's computer` to this text input: <input type="text" name="incorrectoptions-7" value="parents portraits//father's glasses//mother's diary">
 - - - - - -  starting a new element: `Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-8
Executing one action: self.actions.modify_text('correctoptions-8', 'A family hand-me-down mink jacket')
self.actions.modify_text('incorrectoptions-8', 'A toy car // A pair of shoes // A stopbox for stamps')
Add text `A family hand-me-down mink jacket` to this text input: <input type="text" name="correctoptions-8">
Add text `A toy car // A pair of shoes // A stopbox for stamps` to this text input: <input type="text" name="incorrectoptions-8">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-8
Executing one action: self.actions.modify_text('incorrectoptions-8', 'Safe from moths // Safe in the basement // Used only during winter')
Add text `Safe from moths // Safe in the basement // Used only during winter` to this text input: <input type="text" name="incorrectoptions-8" value="A toy car // A pair of shoes // A stopbox for stamps">
 - - - - - -  starting a new element: `Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-9
Executing one action: self.actions.modify_text('correctoptions-9', 'Preserving baby tomatoes, cucumbers, and strawberries // Storing small food items for spring-time meals')
self.actions.modify_text('incorrectoptions-9', 'Storing large furniture items // Freezing water into ice cubes // Keeping winter clothes')
Add text `Preserving baby tomatoes, cucumbers, and strawberries // Storing small food items for spring-time meals` to this text input: <input type="text" name="correctoptions-9">
Add text `Storing large furniture items // Freezing water into ice cubes // Keeping winter clothes` to this text input: <input type="text" name="incorrectoptions-9">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-9
Executing one action: self.actions.modify_text('incorrectoptions-9', 'Sanyo Tardar Ahora // Carrots and peas // A stamp collection // Baby shoes')
Add text `Sanyo Tardar Ahora // Carrots and peas // A stamp collection // Baby shoes` to this text input: <input type="text" name="incorrectoptions-9" value="Storing large furniture items // Freezing water into ice cubes // Keeping winter clothes">
 - - - - - -  starting a new element: `Input(name=`correctoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-10
Executing one action: self.actions.modify_text('correctoptions-10', 'Above my computer')
Add text `Above my computer` to this text input: <input type="text" name="correctoptions-10">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-10
Executing one action: self.actions.modify_text('incorrectoptions-10', 'Above the desk // In the living room shelf // On the kitchen counter')
Add text `Above the desk // In the living room shelf // On the kitchen counter` to this text input: <input type="text" name="incorrectoptions-10">
 - - - - - -  starting a new element: `Input(name=`correctoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-11
Executing one action: self.actions.modify_text('correctoptions-11', 'Dusty air from the shoes//The smell of old leather')
self.actions.modify_text('incorrectoptions-11', 'Fresh lavender scent//A spider crawling out')
Add text `Dusty air from the shoes//The smell of old leather` to this text input: <input type="text" name="correctoptions-11">
Add text `Fresh lavender scent//A spider crawling out` to this text input: <input type="text" name="incorrectoptions-11">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-11
Executing one action: self.actions.modify_text('incorrectoptions-11', 'They laughed at the joke // The neighboor's cat // A dusty bookshelf')
Failed to execute an action self.actions.modify_text('incorrectoptions-11', 'They laughed at the joke // The neighboor's cat // A dusty bookshelf'), error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`correctoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-12
Executing one action: self.actions.modify_text('correctoptions-12', 'teal blue Tiempo Capturado')
Add text `teal blue Tiempo Capturado` to this text input: <input type="text" name="correctoptions-12">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-12
Executing one action: self.actions.modify_text('incorrectoptions-12', 'A sleek watch // A painting from Mama // Fresh strawberries // A pair of shoes')
Add text `A sleek watch // A painting from Mama // Fresh strawberries // A pair of shoes` to this text input: <input type="text" name="incorrectoptions-12">
 - - - - - -  starting a new element: `Input(name=`correctoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-13
Executing one action: self.actions.modify_text('correctoptions-13', 'baby shoes')
self.actions.modify_text('incorrectoptions-13', 'family photos//wedding rings//travel souvenirs')
Add text `baby shoes` to this text input: <input type="text" name="correctoptions-13">
Add text `family photos//wedding rings//travel souvenirs` to this text input: <input type="text" name="incorrectoptions-13">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-13
Executing one action: self.actions.modify_text('incorrectoptions-13', 'Toy animals // Wall paintings // Unused kitchen gadgets')
Add text `Toy animals // Wall paintings // Unused kitchen gadgets` to this text input: <input type="text" name="incorrectoptions-13" value="family photos//wedding rings//travel souvenirs">
 - - - - - -  starting a new element: `Input(name=`correctoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`correctoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: correctoptions-14
Executing one action: self.actions.modify_text('correctoptions-14', 'teal blue')
self.actions.modify_text('incorrectoptions-14', 'red // black // white')
Add text `teal blue` to this text input: <input type="text" name="correctoptions-14">
Add text `red // black // white` to this text input: <input type="text" name="incorrectoptions-14">
 - - - - - -  starting a new element: `Input(name=`incorrectoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
input: Input(name=`incorrectoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
about to try executing one action, on the following input: incorrectoptions-14
Executing one action: self.actions.modify_text('incorrectoptions-14', 'Teal // Grey // Red')
Add text `Teal // Grey // Red` to this text input: <input type="text" name="incorrectoptions-14" value="red // black // white">
 - - - - - -  starting a new element: `Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)` - - - - - -  
Skipping element `hiddenName` since it is not visible.
input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Preserving food // Preserving clothes // Preserving toys']
 visible_values : ['Preserving food // Preserving clothes // Preserving toys']
input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Used it as a fruit bowl // Stored old newspapers inside']
 visible_values : ['Used it as a fruit bowl // Stored old newspapers inside']
input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Their baby shoes//stopboxes']
 visible_values : ['Their baby shoes//stopboxes']
input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Their old toys // Their childhood clothes // Their old photo albums']
 visible_values : ['Their old toys // Their childhood clothes // Their old photo albums']
input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['baby shoes']
 visible_values : ['baby shoes']
input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : [None]
 visible_values : [None]
input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['dust from the old shoes // air from the stopbox']
 visible_values : ['dust from the old shoes // air from the stopbox']
input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Dusty air // Unwashed shoes // Moldy smell']
 visible_values : ['Dusty air // Unwashed shoes // Moldy smell']
input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Papa']
 visible_values : ['Papa']
input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ["Mama // Papa's sister // The local baker"]
 visible_values : ["Mama // Papa's sister // The local baker"]
input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['baby tomatoes // cucumbers // strawberries']
 visible_values : ['baby tomatoes // cucumbers // strawberries']
input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['strawberries preserved in glass // cucumbers kept fresh without technology // mink jacket treated with chemicals']
 visible_values : ['strawberries preserved in glass // cucumbers kept fresh without technology // mink jacket treated with chemicals']
input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['One year']
 visible_values : ['One year']
input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Two years // Four years // Ten days // 5 years']
 visible_values : ['Two years // Four years // Ten days // 5 years']
input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['baby shoes']
 visible_values : ['baby shoes']
input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ["A capturador // Baby clothes // Papa's computer"]
 visible_values : ["A capturador // Baby clothes // Papa's computer"]
input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['A family hand-me-down mink jacket']
 visible_values : ['A family hand-me-down mink jacket']
input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Safe from moths // Safe in the basement // Used only during winter']
 visible_values : ['Safe from moths // Safe in the basement // Used only during winter']
input: Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Preserving baby tomatoes, cucumbers, and strawberries // Storing small food items for spring-time meals']
 visible_values : ['Preserving baby tomatoes, cucumbers, and strawberries // Storing small food items for spring-time meals']
input: Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Sanyo Tardar Ahora // Carrots and peas // A stamp collection // Baby shoes']
 visible_values : ['Sanyo Tardar Ahora // Carrots and peas // A stamp collection // Baby shoes']
input: Input(name=`correctoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Above my computer']
 visible_values : ['Above my computer']
input: Input(name=`incorrectoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Above the desk // In the living room shelf // On the kitchen counter']
 visible_values : ['Above the desk // In the living room shelf // On the kitchen counter']
input: Input(name=`correctoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Dusty air from the shoes//The smell of old leather']
 visible_values : ['Dusty air from the shoes//The smell of old leather']
input: Input(name=`incorrectoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Fresh lavender scent//A spider crawling out']
 visible_values : ['Fresh lavender scent//A spider crawling out']
input: Input(name=`correctoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['teal blue Tiempo Capturado']
 visible_values : ['teal blue Tiempo Capturado']
input: Input(name=`incorrectoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['A sleek watch // A painting from Mama // Fresh strawberries // A pair of shoes']
 visible_values : ['A sleek watch // A painting from Mama // Fresh strawberries // A pair of shoes']
input: Input(name=`correctoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['baby shoes']
 visible_values : ['baby shoes']
input: Input(name=`incorrectoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Toy animals // Wall paintings // Unused kitchen gadgets']
 visible_values : ['Toy animals // Wall paintings // Unused kitchen gadgets']
input: Input(name=`correctoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['teal blue']
 visible_values : ['teal blue']
input: Input(name=`incorrectoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : ['Teal // Grey // Red']
 visible_values : ['Teal // Grey // Red']
input: Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`)
 visible : [None]
 visible_values : [None]
 ------- evaluating input: Input(name=`correctoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['to preserve baby tomatoes, cucumbers, and strawberries in translucent cubes', 'Binalshibh and Atta']`
----> answers: `['to preserve baby tomatoes, cucumbers, and strawberries in translucent cubes', 'Binalshibh and Atta']` - type: `<class 'list'>`
----> baseline_answer: `Preserving food // Preserving clothes // Preserving toys` - type: `<class 'str'>`
 --> scores:  0.125
----> per-field score: 0.125
 ------- evaluating input: Input(name=`incorrectoptions-0`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['mink jacket', 'Qaida when']`
----> answers: `['Qaida when', 'mink jacket']` - type: `<class 'list'>`
----> baseline_answer: `Used it as a fruit bowl // Stored old newspapers inside` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Their baby shoes protected in stopboxes', 'Command Center']`
----> answers: `['Their baby shoes protected in stopboxes', 'Command Center']` - type: `<class 'list'>`
----> baseline_answer: `Their baby shoes//stopboxes` - type: `<class 'str'>`
 --> scores:  0.8
----> per-field score: 0.8
 ------- evaluating input: Input(name=`incorrectoptions-1`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['mink jacket', 'concerned']`
----> answers: `['concerned', 'mink jacket']` - type: `<class 'list'>`
----> baseline_answer: `Their old toys // Their childhood clothes // Their old photo albums` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `["Will Shetterly's baby shoes", 'California']`
----> answers: `['California', "Will Shetterly's baby shoes"]` - type: `<class 'list'>`
----> baseline_answer: `baby shoes` - type: `<class 'str'>`
 --> scores:  0.5714285714285715
----> per-field score: 0.5714285714285715
 ------- evaluating input: Input(name=`incorrectoptions-2`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['stopboxes', 'went to Germany']`
----> answers: `['went to Germany', 'stopboxes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['baby shoes had not been cleaned', 'Binalshibh when']`
----> answers: `['Binalshibh when', 'baby shoes had not been cleaned']` - type: `<class 'list'>`
----> baseline_answer: `dust from the old shoes // air from the stopbox` - type: `<class 'str'>`
 --> scores:  0.13333333333333333
----> per-field score: 0.13333333333333333
 ------- evaluating input: Input(name=`incorrectoptions-3`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['symbol of their love for me.', 'searching']`
----> answers: `['searching', 'symbol of their love for me.']` - type: `<class 'list'>`
----> baseline_answer: `Dusty air // Unwashed shoes // Moldy smell` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Mama and Papa', 'Barnett']`
----> answers: `['Barnett', 'Mama and Papa']` - type: `<class 'list'>`
----> baseline_answer: `Papa` - type: `<class 'str'>`
 --> scores:  0.5
----> per-field score: 0.5
 ------- evaluating input: Input(name=`incorrectoptions-4`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['uncle', 'President']`
----> answers: `['uncle', 'President']` - type: `<class 'list'>`
----> baseline_answer: `Mama // Papa's sister // The local baker` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['baby tomatoes, cucumbers, and strawberries', 'concern']`
----> answers: `['concern', 'baby tomatoes, cucumbers, and strawberries']` - type: `<class 'list'>`
----> baseline_answer: `baby tomatoes // cucumbers // strawberries` - type: `<class 'str'>`
 --> scores:  0.888888888888889
----> per-field score: 0.888888888888889
 ------- evaluating input: Input(name=`incorrectoptions-5`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['baby shoes', 'government']`
----> answers: `['baby shoes', 'government']` - type: `<class 'list'>`
----> baseline_answer: `strawberries preserved in glass // cucumbers kept fresh without technology // mink jacket treated with chemicals` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['a year', 'influenced']`
----> answers: `['a year', 'influenced']` - type: `<class 'list'>`
----> baseline_answer: `One year` - type: `<class 'str'>`
 --> scores:  0.5
----> per-field score: 0.5
 ------- evaluating input: Input(name=`incorrectoptions-6`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['Immediately', 'Barnett']`
----> answers: `['Barnett', 'Immediately']` - type: `<class 'list'>`
----> baseline_answer: `Two years // Four years // Ten days // 5 years` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['baby shoes', 'proclaimed that']`
----> answers: `['baby shoes', 'proclaimed that']` - type: `<class 'list'>`
----> baseline_answer: `baby shoes` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-7`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['stopboxes', 'highest duty']`
----> answers: `['stopboxes', 'highest duty']` - type: `<class 'list'>`
----> baseline_answer: `A capturador // Baby clothes // Papa's computer` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['a family hand-me-down possesion', 'supported']`
----> answers: `['supported', 'a family hand-me-down possesion']` - type: `<class 'list'>`
----> baseline_answer: `A family hand-me-down mink jacket` - type: `<class 'str'>`
 --> scores:  0.7692307692307692
----> per-field score: 0.7692307692307692
 ------- evaluating input: Input(name=`incorrectoptions-8`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['stamp collection', 'mistakes besides']`
----> answers: `['stamp collection', 'mistakes besides']` - type: `<class 'list'>`
----> baseline_answer: `Safe from moths // Safe in the basement // Used only during winter` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['baby tomatoes, cucumbers, and strawberries', 'concern']`
----> answers: `['concern', 'baby tomatoes, cucumbers, and strawberries']` - type: `<class 'list'>`
----> baseline_answer: `Preserving baby tomatoes, cucumbers, and strawberries // Storing small food items for spring-time meals` - type: `<class 'str'>`
 --> scores:  0.5263157894736842
----> per-field score: 0.5263157894736842
 ------- evaluating input: Input(name=`incorrectoptions-9`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['mink jacket', 'extremist outlook']`
----> answers: `['extremist outlook', 'mink jacket']` - type: `<class 'list'>`
----> baseline_answer: `Sanyo Tardar Ahora // Carrots and peas // A stamp collection // Baby shoes` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['above her computer while she worked', 'Barnett']`
----> answers: `['Barnett', 'above her computer while she worked']` - type: `<class 'list'>`
----> baseline_answer: `Above my computer` - type: `<class 'str'>`
 --> scores:  0.4444444444444444
----> per-field score: 0.4444444444444444
 ------- evaluating input: Input(name=`incorrectoptions-10`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['stopboxes', 'wasIKELL']`
----> answers: `['wasIKELL', 'stopboxes']` - type: `<class 'list'>`
----> baseline_answer: `Above the desk // In the living room shelf // On the kitchen counter` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['baby shoes had not been cleaned before they were encased.', 'highest honor']`
----> answers: `['highest honor', 'baby shoes had not been cleaned before they were encased.']` - type: `<class 'list'>`
----> baseline_answer: `Dusty air from the shoes//The smell of old leather` - type: `<class 'str'>`
 --> scores:  0.10000000000000002
----> per-field score: 0.10000000000000002
 ------- evaluating input: Input(name=`incorrectoptions-11`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['symbol of their love for her', 'warhead']`
----> answers: `['symbol of their love for her', 'warhead']` - type: `<class 'list'>`
----> baseline_answer: `Fresh lavender scent//A spider crawling out` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['stopbox, a teal blue Tiempo Capturado', 'Binalshibh']`
----> answers: `['Binalshibh', 'stopbox, a teal blue Tiempo Capturado']` - type: `<class 'list'>`
----> baseline_answer: `teal blue Tiempo Capturado` - type: `<class 'str'>`
 --> scores:  0.8
----> per-field score: 0.8
 ------- evaluating input: Input(name=`incorrectoptions-12`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['mink jacket', 'first stay']`
----> answers: `['first stay', 'mink jacket']` - type: `<class 'list'>`
----> baseline_answer: `A sleek watch // A painting from Mama // Fresh strawberries // A pair of shoes` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['baby shoes', 'occupations']`
----> answers: `['baby shoes', 'occupations']` - type: `<class 'list'>`
----> baseline_answer: `baby shoes` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-13`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['stamp collection', 'activities that']`
----> answers: `['stamp collection', 'activities that']` - type: `<class 'list'>`
----> baseline_answer: `Toy animals // Wall paintings // Unused kitchen gadgets` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`correctoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['teal blue', 'CIA not']`
----> answers: `['teal blue', 'CIA not']` - type: `<class 'list'>`
----> baseline_answer: `teal blue` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`incorrectoptions-14`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
answers after mapping: `['translucent', 'Ramzi Binalshibh']`
----> answers: `['translucent', 'Ramzi Binalshibh']` - type: `<class 'list'>`
----> baseline_answer: `Teal // Grey // Red` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`hiddenName`, type=`text`, task=`Step 3 Creating Answers Given Questions 23`) ------- 
Skipping element `hiddenName` since it is not visible.
 --> Per-instance overall score: 0.3052880598933231
 --> Per-instance per-field breakdown: {'text': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6666666666666666, 0.4, 0.8, 0.28571428571428575, 1.0, 0.0, 0.22222222222222224, 0.0, 0.33333333333333337, 0.0, 0.2641509433962264, 0.0, 0.0, 0.0, 0.27906976744186046, 0.2105263157894737, 0.6666666666666666, 0.3636363636363636, 1.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.5, 1.0, 0.2222222222222222, 1.0, 0.11764705882352941, 0.0, 0.25, 0.5, 0.33333333333333337, 1.0, 0.0, 1.0, 0.2222222222222222, 0.4, 0.33333333333333337, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.4444444444444445, 0.4444444444444445, 0.4615384615384615, 1.0, 0.2, 1.0, 0.0, 0.4444444444444444, 0.1, 0.15789473684210528, 0.13333333333333333, 0.5, 0.16666666666666666, 0.4444444444444445, 0.22222222222222224, 0.5, 0.0, 0.14285714285714288, 0.1818181818181818, 0.16666666666666666, 0.0, 0.5, 0.0, 0.6666666666666666, 0.14285714285714288, 0.3333333333333333, 0.13333333333333333, 0.08333333333333334, 0.1, 0.4, 0.0, 0.6666666666666666, 0.0, 1.0, 0.0, 0.2727272727272727, 0.15384615384615383, 0.0, 0.22222222222222224, 0.41379310344827586, 0.10526315789473684, 0.6666666666666666, 0.0, 0.5806451612903225, 0.11428571428571428, 0.923076923076923, 0.06451612903225806, 0.7272727272727273, 0.0, 0.22222222222222224, 0.17142857142857143, 0.4444444444444444, 0.20833333333333334, 0.10526315789473682, 0.05555555555555556, 0.5833333333333334, 0.07017543859649122, 0.08695652173913043, 0.14634146341463417, 0.125, 0.05714285714285714, 0.8, 0.13333333333333333, 0.0, 0.0, 1.0, 0.13333333333333333, 0.22222222222222224, 0.3448275862068966, 0.35294117647058826, 0.10256410256410257, 0.0, 0.10810810810810811, 0.25, 0.4800000000000001, 0.11764705882352941, 0.24390243902439024, 0.6666666666666666, 0.6, 0.5714285714285715, 0.0, 0.0, 0.0, 0.0, 0.15384615384615385, 0.0, 0.0, 0.6666666666666666, 0.0, 0.0, 0.2, 0.6666666666666667, 0.18181818181818182, 0.1, 0.0, 0.1, 0.0, 0.14285714285714288, 0.0, 0.7000000000000001, 0.0, 0.17391304347826086, 0.4444444444444445, 1.0, 0.2222222222222222, 1.0, 0.5, 1.0, 0.7142857142857143, 0.0, 0.0, 1.0, 0.4, 1.0, 0.0, 0.15384615384615385, 0.2758620689655172, 0.33333333333333337, 0.1818181818181818, 0.35294117647058826, 0.3571428571428571, 0.7142857142857143, 0.16666666666666669, 0.28571428571428575, 0.16326530612244897, 0.2222222222222222, 0.0, 0.08, 0.1081081081081081, 0.21052631578947367, 0.12121212121212123, 0.4, 0.0, 0.8, 0.30769230769230765, 1.0, 0.0, 0.1818181818181818, 0.23529411764705882, 0.7999999999999999, 0.17391304347826086, 0.15384615384615383, 0.13793103448275862, 1.0, 0.25, 1.0, 0.25, 0.2222222222222222, 0.0, 0.3529411764705882, 0.17142857142857143, 1.0, 0.4, 0.0, 0.0, 0.0, 0.16666666666666666, 0.25, 0.0, 0.2222222222222222, 0.0, 1.0, 0.06451612903225806, 0.22222222222222224, 0.3333333333333333, 0.28571428571428575, 0.19354838709677416, 0.6666666666666666, 0.16666666666666666, 0.5, 0.25, 0.4, 0.0, 0.2222222222222222, 0.0, 0.15384615384615385, 0.28571428571428575, 0.0, 0.4, 0.0, 0.0, 0.5, 0.5, 1.0, 0.0, 0.23529411764705882, 0.0909090909090909, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.6666666666666667, 0.4, 0.3448275862068966, 0.7499999999999999, 0.20689655172413793, 0.6666666666666666, 0.5882352941176471, 0.07692307692307691, 0.17142857142857143, 1.0, 0.5, 0.09999999999999999, 0.27586206896551724, 0.2105263157894737, 0.26666666666666666, 0.0, 0.2857142857142857, 0.4, 0.1818181818181818, 1.0, 0.3333333333333333, 0.7999999999999999, 0.5714285714285715, 0.8, 0.0, 0.09230769230769229, 0.16666666666666666, 1.0, 0.0, 0.6666666666666666, 0.0, 1.0, 0.0, 0.05882352941176471, 0.6666666666666666, 0.0, 0.0, 0.27450980392156865, 0.12121212121212122, 0.0, 0.1111111111111111, 0.25531914893617025, 0.07142857142857142, 0.4444444444444445, 0.16216216216216214, 0.18181818181818182, 0.10810810810810811, 0.3684210526315789, 0.09090909090909091, 0.4000000000000001, 0.0, 0.13793103448275862, 0.0, 0.3333333333333333, 0.14814814814814814, 0.2, 0.21739130434782608, 0.35294117647058826, 0.0, 0.35294117647058826, 0.0, 0.0, 0.0, 0.5, 0.1111111111111111, 0.14814814814814817, 0.1111111111111111, 0.2857142857142857, 0.0, 0.3333333333333333, 0.09523809523809525, 0.0, 0.0, 1.0, 0.14285714285714285, 0.5714285714285715, 0.11764705882352941, 0.4, 0.4, 1.0, 0.0, 1.0, 0.27027027027027023, 0.3636363636363637, 0.0, 1.0, 0.0, 0.5714285714285715, 0.0, 0.0, 0.0, 1.0, 0.3333333333333333, 0.0625, 0.0625, 0.5, 0.0, 0.6666666666666666, 0.0, 0.0, 0.0, 0.6666666666666666, 0.0, 1.0, 0.0, 1.0, 0.0, 0.33333333333333337, 0.0, 0.15384615384615383, 0.0, 0.0, 0.0, 0.30769230769230765, 0.15384615384615385, 1.0, 0.0, 0.42857142857142855, 0.1818181818181818, 1.0, 0.0, 1.0, 0.10526315789473682, 0.0, 0.0, 1.0, 0.4, 0.0, 0.3636363636363636, 0.0, 0.19047619047619044, 1.0, 0.4, 0.7272727272727273, 0.5, 1.0, 0.4, 0.4, 0.0, 0.6, 0.0, 0.0, 0.1818181818181818, 0.5, 0.8571428571428571, 1.0, 0.18181818181818182, 0.8, 0.5714285714285715, 0.0, 0.3333333333333333, 0.5714285714285715, 0.0, 1.0, 0.0, 0.6666666666666666, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.6666666666666666, 0.11764705882352941, 0.0, 0.2857142857142857, 0.0, 0.0, 0.18181818181818182, 0.13333333333333333, 0.4, 0.0, 0.1818181818181818, 0.0, 0.3902439024390244, 0.0, 0.3333333333333333, 0.0, 0.07407407407407408, 0.16666666666666666, 0.25, 0.2, 0.14285714285714288, 0.16666666666666669, 1.0, 0.6666666666666666, 1.0, 0.25, 1.0, 0.0, 1.0, 0.25, 0.8571428571428571, 0.0, 1.0, 0.33333333333333337, 1.0, 0.0, 0.28571428571428575, 0.25, 1.0, 0.3333333333333333, 0.08695652173913045, 0.33333333333333337, 1.0, 0.28571428571428575, 0.125, 0.0, 0.8, 0.0, 0.5714285714285715, 0.0, 0.13333333333333333, 0.0, 0.5, 0.0, 0.888888888888889, 0.0, 0.5, 0.0, 1.0, 0.0, 0.7692307692307692, 0.0, 0.5263157894736842, 0.0, 0.4444444444444444, 0.0, 0.10000000000000002, 0.0, 0.8, 0.0, 1.0, 0.0, 1.0, 0.0]}
 = = = = = = = = = = = = starting new task: `Word Formality Annotation` = = = = = = = = = = = = 
First instance id: 4911
instance_id: 4955 <-> row_number: 44
 --> inputs: ['email0', 'email1', 'email2', 'email3', 'email4', 'email5', 'email6', 'email7', 'email8', 'email9', 'email10', 'email11', 'email12', 'email13', 'email14', 'email15', 'email16', 'email17', 'email18', 'email19']
 --> Looking up gold labels from row index 44 of `input.csv` (unique inputs). 
 --> input labels: {'email0': ['0_Neither', '0_Neither', '-2_Moderately_Informal', '0_Neither', '1_Slightly_Formal'], 'email1': ['0_Neither', '1_Slightly_Formal', '-2_Moderately_Informal', '2_Moderately_Formal', '1_Slightly_Formal'], 'email2': ['1_Slightly_Formal', '3_Very_Formal', '-2_Moderately_Informal', '2_Moderately_Formal', '2_Moderately_Formal'], 'email3': ['0_Neither', '-3_Very_Informal', '-2_Moderately_Informal', '-2_Moderately_Informal', '1_Slightly_Formal'], 'email4': ['0_Neither', '1_Slightly_Formal', '-1_Slightly_Informal', '-1_Slightly_Informal', '2_Moderately_Formal'], 'email5': ['0_Neither', '0_Neither', '-1_Slightly_Informal', '1_Slightly_Formal', '2_Moderately_Formal'], 'email6': ['1_Slightly_Formal', '1_Slightly_Formal', '-1_Slightly_Informal', '1_Slightly_Formal', '2_Moderately_Formal'], 'email7': ['1_Slightly_Formal', '3_Very_Formal', '-1_Slightly_Informal', '0_Not_Usable', '-3_Very_Informal'], 'email8': ['0_Neither', '1_Slightly_Formal', '-1_Slightly_Informal', '-1_Slightly_Informal', '1_Slightly_Formal'], 'email9': ['0_Neither', '-3_Very_Informal', '-2_Moderately_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal'], 'email10': ['1_Slightly_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '1_Slightly_Formal'], 'email11': ['1_Slightly_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal'], 'email12': ['1_Slightly_Formal', '2_Moderately_Formal', '-1_Slightly_Informal', '2_Moderately_Formal', '2_Moderately_Formal'], 'email13': ['0_Neither', '1_Slightly_Formal', '0_Neither', '0_Neither', '2_Moderately_Formal'], 'email14': ['-2_Moderately_Informal', '-3_Very_Informal', '-3_Very_Informal', '-3_Very_Informal', '-3_Very_Informal'], 'email15': ['2_Moderately_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal'], 'email16': ['0_Neither', '1_Slightly_Formal', '0_Neither', '-1_Slightly_Informal', '2_Moderately_Formal'], 'email17': ['0_Neither', '2_Moderately_Formal', '-1_Slightly_Informal', '0_Neither', '2_Moderately_Formal'], 'email18': ['0_Neither', '2_Moderately_Formal', '-2_Moderately_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal'], 'email19': ['2_Moderately_Formal', '3_Very_Formal', '0_Neither', '2_Moderately_Formal', '1_Slightly_Formal']}
 - - - - - -  starting a new element: `Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email0
Executing one action: self.actions.modify_select('email0', '1_Very_Informal')
Failed to execute an action self.actions.modify_select('email0', '1_Very_Informal'), error: Input value `1_Very_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email1
Executing one action: self.actions.modify_select('email1', '3_Very_Formal')
We are going to select this select `email1` with value `3_Very_Formal`
 - - - - - -  starting a new element: `Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email2
Executing one action: self.actions.modify_select('email2', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email2', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email3
Executing one action: self.actions.modify_select('email3', '1_Slightly_Formal')
We are going to select this select `email3` with value `1_Slightly_Formal`
 - - - - - -  starting a new element: `Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email4
Executing one action: self.actions.modify_select('email4', '3_Very_Formal')
We are going to select this select `email4` with value `3_Very_Formal`
 - - - - - -  starting a new element: `Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email5
Executing one action: self.actions.modify_select('email5', '3_Very_Formal')
We are going to select this select `email5` with value `3_Very_Formal`
 - - - - - -  starting a new element: `Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email6
Executing one action: self.actions.modify_select('email6', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email6', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email7
Executing one action: self.actions.modify_select('email7', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email7', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email8
Executing one action: self.actions.modify_select('email8', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email8', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email9
Executing one action: self.actions.modify_select('email9', '-1_Slightly_Informal')
We are going to select this select `email9` with value `-1_Slightly_Informal`
 - - - - - -  starting a new element: `Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email10
Executing one action: self.actions.modify_select('email10', '3_Very_Formal')
We are going to select this select `email10` with value `3_Very_Formal`
 - - - - - -  starting a new element: `Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email11
Executing one action: self.actions.modify_select('email11', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email11', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email12
Executing one action: self.actions.modify_select('email12', '3_Very_Formal')
We are going to select this select `email12` with value `3_Very_Formal`
 - - - - - -  starting a new element: `Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email13
Executing one action: self.actions.modify_select('email13', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email13', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email14
Executing one action: self.actions.modify_select('email14', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email14', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email15
Executing one action: self.actions.modify_select('email15', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email15', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email16
Executing one action: self.actions.modify_select('email16', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email16', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email17
Executing one action: self.actions.modify_select('email17', '3_Very_Formal')
We are going to select this select `email17` with value `3_Very_Formal`
 - - - - - -  starting a new element: `Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email18
Executing one action: self.actions.modify_select('email18', '0_Neither')
We are going to select this select `email18` with value `0_Neither`
 - - - - - -  starting a new element: `Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email19
Executing one action: self.actions.modify_select('email19', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email19', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)
 visible : ['3_Very_Formal']
 visible_values : ['3_Very_Formal']
input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)
 visible : ['1_Slightly_Formal']
 visible_values : ['1_Slightly_Formal']
input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)
 visible : ['3_Very_Formal']
 visible_values : ['3_Very_Formal']
input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)
 visible : ['3_Very_Formal']
 visible_values : ['3_Very_Formal']
input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)
 visible : ['-1_Slightly_Informal']
 visible_values : ['-1_Slightly_Informal']
input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)
 visible : ['3_Very_Formal']
 visible_values : ['3_Very_Formal']
input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)
 visible : ['3_Very_Formal']
 visible_values : ['3_Very_Formal']
input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)
 visible : ['3_Very_Formal']
 visible_values : ['3_Very_Formal']
input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)
 visible : ['0_Neither']
 visible_values : ['0_Neither']
input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
 ------- evaluating input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '-2_Moderately_Informal', '0_Neither', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '1_Slightly_Formal', '-2_Moderately_Informal', '2_Moderately_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `3_Very_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '3_Very_Formal', '-2_Moderately_Informal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '-3_Very_Informal', '-2_Moderately_Informal', '-2_Moderately_Informal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `1_Slightly_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '1_Slightly_Formal', '-1_Slightly_Informal', '-1_Slightly_Informal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `3_Very_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '-1_Slightly_Informal', '1_Slightly_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `3_Very_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '1_Slightly_Formal', '-1_Slightly_Informal', '1_Slightly_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '3_Very_Formal', '-1_Slightly_Informal', '0_Not_Usable', '-3_Very_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '1_Slightly_Formal', '-1_Slightly_Informal', '-1_Slightly_Informal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '-3_Very_Informal', '-2_Moderately_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal']` - type: `<class 'list'>`
----> baseline_answer: `-1_Slightly_Informal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `3_Very_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '2_Moderately_Formal', '-1_Slightly_Informal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `3_Very_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '1_Slightly_Formal', '0_Neither', '0_Neither', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-2_Moderately_Informal', '-3_Very_Informal', '-3_Very_Informal', '-3_Very_Informal', '-3_Very_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['2_Moderately_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '1_Slightly_Formal', '0_Neither', '-1_Slightly_Informal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '2_Moderately_Formal', '-1_Slightly_Informal', '0_Neither', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `3_Very_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '2_Moderately_Formal', '-2_Moderately_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal']` - type: `<class 'list'>`
----> baseline_answer: `0_Neither` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['2_Moderately_Formal', '3_Very_Formal', '0_Neither', '2_Moderately_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 4999 <-> row_number: 88
 --> inputs: ['email0', 'email1', 'email2', 'email3', 'email4', 'email5', 'email6', 'email7', 'email8', 'email9', 'email10', 'email11', 'email12', 'email13', 'email14', 'email15', 'email16', 'email17', 'email18', 'email19']
 --> Looking up gold labels from row index 88 of `input.csv` (unique inputs). 
 --> input labels: {'email0': ['2_Moderately_Formal', '1_Slightly_Formal', '-1_Slightly_Informal', '0_Neither', '-2_Moderately_Informal'], 'email1': ['2_Moderately_Formal', '-1_Slightly_Informal', '0_Not_Usable', '1_Slightly_Formal', '1_Slightly_Formal'], 'email2': ['-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '0_Neither', '1_Slightly_Formal'], 'email3': ['-2_Moderately_Informal', '0_Neither', '0_Neither', '0_Neither', '1_Slightly_Formal'], 'email4': ['-3_Very_Informal', '-3_Very_Informal', '-3_Very_Informal', '-3_Very_Informal', '-2_Moderately_Informal'], 'email5': ['-2_Moderately_Informal', '1_Slightly_Formal', '1_Slightly_Formal', '0_Neither', '1_Slightly_Formal'], 'email6': ['1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '1_Slightly_Formal'], 'email7': ['1_Slightly_Formal', '1_Slightly_Formal', '-1_Slightly_Informal', '1_Slightly_Formal', '1_Slightly_Formal'], 'email8': ['0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal'], 'email9': ['1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal'], 'email10': ['0_Neither', '2_Moderately_Formal', '1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal'], 'email11': ['-2_Moderately_Informal', '0_Neither', '0_Not_Usable', '0_Neither', '1_Slightly_Formal'], 'email12': ['-1_Slightly_Informal', '-1_Slightly_Informal', '1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal'], 'email13': ['0_Neither', '2_Moderately_Formal', '1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal'], 'email14': ['0_Neither', '-1_Slightly_Informal', '0_Neither', '0_Neither', '1_Slightly_Formal'], 'email15': ['1_Slightly_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal'], 'email16': ['-1_Slightly_Informal', '1_Slightly_Formal', '-1_Slightly_Informal', '1_Slightly_Formal', '1_Slightly_Formal'], 'email17': ['1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '2_Moderately_Formal', '2_Moderately_Formal'], 'email18': ['1_Slightly_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal'], 'email19': ['3_Very_Formal', '2_Moderately_Formal', '3_Very_Formal', '3_Very_Formal', '0_Neither']}
 - - - - - -  starting a new element: `Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email0
Executing one action: self.actions.modify_select('email0', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email0', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email1
Executing one action: self.actions.modify_select('email1', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email1', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email2
Executing one action: self.actions.modify_select('email2', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email2', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email3
Executing one action: self.actions.modify_select('email3', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email3', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email4
Executing one action: self.actions.modify_select('email4', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email4', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email5
Executing one action: self.actions.modify_select('email5', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email5', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email6
Executing one action: self.actions.modify_select('email6', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email6', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email7
Executing one action: self.actions.modify_select('email7', '3_Very_Formal')
We are going to select this select `email7` with value `3_Very_Formal`
 - - - - - -  starting a new element: `Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email8
Executing one action: self.actions.modify_select('email8', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email8', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email9
Executing one action: self.actions.modify_select('email9', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email9', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email10
Executing one action: self.actions.modify_select('email10', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email10', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email11
Executing one action: self.actions.modify_select('email11', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email11', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email12
Executing one action: self.actions.modify_select('email12', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email12', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email13
Executing one action: self.actions.modify_select('email13', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email13', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email14
Executing one action: self.actions.modify_select('email14', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email14', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email15
Executing one action: self.actions.modify_select('email15', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email15', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email16
Executing one action: self.actions.modify_select('email16', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email16', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email17
Executing one action: self.actions.modify_select('email17', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email17', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email18
Executing one action: self.actions.modify_select('email18', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email18', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email19
Executing one action: self.actions.modify_select('email19', '1_Very_Informal')
Failed to execute an action self.actions.modify_select('email19', '1_Very_Informal'), error: Input value `1_Very_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)
 visible : ['3_Very_Formal']
 visible_values : ['3_Very_Formal']
input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
 ------- evaluating input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['2_Moderately_Formal', '1_Slightly_Formal', '-1_Slightly_Informal', '0_Neither', '-2_Moderately_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['2_Moderately_Formal', '-1_Slightly_Informal', '0_Not_Usable', '1_Slightly_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '0_Neither', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-2_Moderately_Informal', '0_Neither', '0_Neither', '0_Neither', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-3_Very_Informal', '-3_Very_Informal', '-3_Very_Informal', '-3_Very_Informal', '-2_Moderately_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-2_Moderately_Informal', '1_Slightly_Formal', '1_Slightly_Formal', '0_Neither', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '1_Slightly_Formal', '-1_Slightly_Informal', '1_Slightly_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `3_Very_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '2_Moderately_Formal', '1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-2_Moderately_Informal', '0_Neither', '0_Not_Usable', '0_Neither', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-1_Slightly_Informal', '-1_Slightly_Informal', '1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '2_Moderately_Formal', '1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '-1_Slightly_Informal', '0_Neither', '0_Neither', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-1_Slightly_Informal', '1_Slightly_Formal', '-1_Slightly_Informal', '1_Slightly_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['3_Very_Formal', '2_Moderately_Formal', '3_Very_Formal', '3_Very_Formal', '0_Neither']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 4950 <-> row_number: 39
 --> inputs: ['email0', 'email1', 'email2', 'email3', 'email4', 'email5', 'email6', 'email7', 'email8', 'email9', 'email10', 'email11', 'email12', 'email13', 'email14', 'email15', 'email16', 'email17', 'email18', 'email19']
 --> Looking up gold labels from row index 39 of `input.csv` (unique inputs). 
 --> input labels: {'email0': ['0_Neither', '-3_Very_Informal', '0_Neither', '-2_Moderately_Informal', '-3_Very_Informal'], 'email1': ['0_Neither', '2_Moderately_Formal', '-2_Moderately_Informal', '-2_Moderately_Informal', '2_Moderately_Formal'], 'email2': ['0_Neither', '2_Moderately_Formal', '0_Neither', '1_Slightly_Formal', '0_Not_Usable'], 'email3': ['0_Neither', '3_Very_Formal', '2_Moderately_Formal', '-2_Moderately_Informal', '-3_Very_Informal'], 'email4': ['0_Neither', '2_Moderately_Formal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal'], 'email5': ['0_Neither', '-3_Very_Informal', '0_Neither', '-2_Moderately_Informal', '-3_Very_Informal'], 'email6': ['0_Neither', '2_Moderately_Formal', '0_Neither', '1_Slightly_Formal', '3_Very_Formal'], 'email7': ['0_Neither', '2_Moderately_Formal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal'], 'email8': ['-3_Very_Informal', '3_Very_Formal', '-3_Very_Informal', '-1_Slightly_Informal', '-3_Very_Informal'], 'email9': ['1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal'], 'email10': ['1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal'], 'email11': ['0_Neither', '2_Moderately_Formal', '0_Neither', '2_Moderately_Formal', '1_Slightly_Formal'], 'email12': ['0_Neither', '3_Very_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal'], 'email13': ['0_Neither', '2_Moderately_Formal', '0_Neither', '2_Moderately_Formal', '2_Moderately_Formal'], 'email14': ['-3_Very_Informal', '3_Very_Formal', '2_Moderately_Formal', '0_Neither', '0_Not_Usable'], 'email15': ['0_Neither', '2_Moderately_Formal', '0_Neither', '1_Slightly_Formal', '3_Very_Formal'], 'email16': ['2_Moderately_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal'], 'email17': ['0_Neither', '2_Moderately_Formal', '3_Very_Formal', '1_Slightly_Formal', '3_Very_Formal'], 'email18': ['0_Neither', '2_Moderately_Formal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal'], 'email19': ['-2_Moderately_Informal', '-3_Very_Informal', '-2_Moderately_Informal', '-2_Moderately_Informal', '1_Slightly_Formal']}
 - - - - - -  starting a new element: `Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email0
Executing one action: self.actions.modify_select('email0', '2_Moderately_Formal')
We are going to select this select `email0` with value `2_Moderately_Formal`
 - - - - - -  starting a new element: `Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email1
Executing one action: self.actions.modify_select('email1', '1_Slightly_Formal')
We are going to select this select `email1` with value `1_Slightly_Formal`
 - - - - - -  starting a new element: `Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email2
Executing one action: self.actions.modify_select('email2', '3_Very_Formal')
We are going to select this select `email2` with value `3_Very_Formal`
 - - - - - -  starting a new element: `Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email3
Executing one action: self.actions.modify_select('email3', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email3', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email4
Executing one action: self.actions.modify_select('email4', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email4', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email5
Executing one action: self.actions.modify_select('email5', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email5', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email6
Executing one action: self.actions.modify_select('email6', '3_Very_Formal')
We are going to select this select `email6` with value `3_Very_Formal`
 - - - - - -  starting a new element: `Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email7
Executing one action: self.actions.modify_select('email7', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email7', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email8
Executing one action: self.actions.modify_select('email8', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email8', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email9
Executing one action: self.actions.modify_select('email9', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email9', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email10
Executing one action: self.actions.modify_select('email10', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email10', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email11
Executing one action: self.actions.modify_select('email11', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email11', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email12
Executing one action: self.actions.modify_select('email12', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email12', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email13
Executing one action: self.actions.modify_select('email13', '-1_Slightly_Informal')
We are going to select this select `email13` with value `-1_Slightly_Informal`
 - - - - - -  starting a new element: `Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email14
Executing one action: self.actions.modify_select('email14', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email14', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email15
Executing one action: self.actions.modify_select('email15', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email15', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email16
Executing one action: self.actions.modify_select('email16', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email16', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email17
Executing one action: self.actions.modify_select('email17', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email17', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email18
Executing one action: self.actions.modify_select('email18', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email18', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email19
Executing one action: self.actions.modify_select('email19', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email19', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)
 visible : ['2_Moderately_Formal']
 visible_values : ['2_Moderately_Formal']
input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)
 visible : ['1_Slightly_Formal']
 visible_values : ['1_Slightly_Formal']
input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)
 visible : ['3_Very_Formal']
 visible_values : ['3_Very_Formal']
input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)
 visible : ['3_Very_Formal']
 visible_values : ['3_Very_Formal']
input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)
 visible : ['-1_Slightly_Informal']
 visible_values : ['-1_Slightly_Informal']
input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
 ------- evaluating input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '-3_Very_Informal', '0_Neither', '-2_Moderately_Informal', '-3_Very_Informal']` - type: `<class 'list'>`
----> baseline_answer: `2_Moderately_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '2_Moderately_Formal', '-2_Moderately_Informal', '-2_Moderately_Informal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `1_Slightly_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '2_Moderately_Formal', '0_Neither', '1_Slightly_Formal', '0_Not_Usable']` - type: `<class 'list'>`
----> baseline_answer: `3_Very_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '3_Very_Formal', '2_Moderately_Formal', '-2_Moderately_Informal', '-3_Very_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '2_Moderately_Formal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '-3_Very_Informal', '0_Neither', '-2_Moderately_Informal', '-3_Very_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '2_Moderately_Formal', '0_Neither', '1_Slightly_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `3_Very_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '2_Moderately_Formal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-3_Very_Informal', '3_Very_Formal', '-3_Very_Informal', '-1_Slightly_Informal', '-3_Very_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '2_Moderately_Formal', '0_Neither', '2_Moderately_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '3_Very_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '2_Moderately_Formal', '0_Neither', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `-1_Slightly_Informal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-3_Very_Informal', '3_Very_Formal', '2_Moderately_Formal', '0_Neither', '0_Not_Usable']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '2_Moderately_Formal', '0_Neither', '1_Slightly_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['2_Moderately_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '2_Moderately_Formal', '3_Very_Formal', '1_Slightly_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '2_Moderately_Formal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-2_Moderately_Informal', '-3_Very_Informal', '-2_Moderately_Informal', '-2_Moderately_Informal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 5002 <-> row_number: 91
 --> inputs: ['email0', 'email1', 'email2', 'email3', 'email4', 'email5', 'email6', 'email7', 'email8', 'email9', 'email10', 'email11', 'email12', 'email13', 'email14', 'email15', 'email16', 'email17', 'email18', 'email19']
 --> Looking up gold labels from row index 91 of `input.csv` (unique inputs). 
 --> input labels: {'email0': ['-1_Slightly_Informal', '0_Neither', '0_Neither', '-1_Slightly_Informal', '2_Moderately_Formal'], 'email1': ['0_Neither', '0_Neither', '0_Neither', '-1_Slightly_Informal', '2_Moderately_Formal'], 'email2': ['3_Very_Formal', '0_Neither', '0_Neither', '3_Very_Formal', '3_Very_Formal'], 'email3': ['1_Slightly_Formal', '0_Neither', '-1_Slightly_Informal', '-1_Slightly_Informal', '2_Moderately_Formal'], 'email4': ['1_Slightly_Formal', '-3_Very_Informal', '0_Neither', '3_Very_Formal', '2_Moderately_Formal'], 'email5': ['0_Neither', '0_Neither', '0_Not_Usable', '-2_Moderately_Informal', '2_Moderately_Formal'], 'email6': ['-3_Very_Informal', '-3_Very_Informal', '-3_Very_Informal', '-3_Very_Informal', '-2_Moderately_Informal'], 'email7': ['-2_Moderately_Informal', '-2_Moderately_Informal', '0_Not_Usable', '0_Not_Usable', '2_Moderately_Formal'], 'email8': ['1_Slightly_Formal', '0_Neither', '0_Neither', '-1_Slightly_Informal', '0_Neither'], 'email9': ['2_Moderately_Formal', '-2_Moderately_Informal', '0_Neither', '3_Very_Formal', '3_Very_Formal'], 'email10': ['0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal'], 'email11': ['1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '2_Moderately_Formal'], 'email12': ['1_Slightly_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '1_Slightly_Formal', '1_Slightly_Formal'], 'email13': ['-3_Very_Informal', '-3_Very_Informal', '0_Not_Usable', '0_Not_Usable', '-1_Slightly_Informal'], 'email14': ['-1_Slightly_Informal', '0_Neither', '-1_Slightly_Informal', '0_Neither', '2_Moderately_Formal'], 'email15': ['-2_Moderately_Informal', '0_Neither', '0_Neither', '-1_Slightly_Informal', '2_Moderately_Formal'], 'email16': ['3_Very_Formal', '-1_Slightly_Informal', '0_Neither', '0_Not_Usable', '1_Slightly_Formal'], 'email17': ['3_Very_Formal', '-3_Very_Informal', '0_Not_Usable', '0_Not_Usable', '2_Moderately_Formal'], 'email18': ['0_Neither', '2_Moderately_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '2_Moderately_Formal'], 'email19': ['3_Very_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal']}
 - - - - - -  starting a new element: `Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email0
Executing one action: self.actions.modify_select('email0', '-3_Very_Informal')
We are going to select this select `email0` with value `-3_Very_Informal`
 - - - - - -  starting a new element: `Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email1
Executing one action: self.actions.modify_select('email1', '1_Slightly_Formal')
We are going to select this select `email1` with value `1_Slightly_Formal`
 - - - - - -  starting a new element: `Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email2
Executing one action: self.actions.modify_select('email2', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email2', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email3
Executing one action: self.actions.modify_select('email3', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email3', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email4
Executing one action: self.actions.modify_select('email4', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email4', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email5
Executing one action: self.actions.modify_select('email5', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email5', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email6
Executing one action: self.actions.modify_select('email6', '1_Very_Informal')
Failed to execute an action self.actions.modify_select('email6', '1_Very_Informal'), error: Input value `1_Very_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email7
Executing one action: self.actions.modify_select('email7', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email7', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email8
Executing one action: self.actions.modify_select('email8', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email8', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email9
Executing one action: self.actions.modify_select('email9', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email9', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email10
Executing one action: self.actions.modify_select('email10', '1_Slightly_Formal')
We are going to select this select `email10` with value `1_Slightly_Formal`
 - - - - - -  starting a new element: `Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email11
Executing one action: self.actions.modify_select('email11', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email11', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email12
Executing one action: self.actions.modify_select('email12', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email12', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email13
Executing one action: self.actions.modify_select('email13', '1_Very_Informal')
Failed to execute an action self.actions.modify_select('email13', '1_Very_Informal'), error: Input value `1_Very_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email14
Executing one action: self.actions.modify_select('email14', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email14', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email15
Executing one action: self.actions.modify_select('email15', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email15', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email16
Executing one action: self.actions.modify_select('email16', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email16', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email17
Executing one action: self.actions.modify_select('email17', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email17', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email18
Executing one action: self.actions.modify_select('email18', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email18', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email19
Executing one action: self.actions.modify_select('email19', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email19', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)
 visible : ['-3_Very_Informal']
 visible_values : ['-3_Very_Informal']
input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)
 visible : ['1_Slightly_Formal']
 visible_values : ['1_Slightly_Formal']
input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)
 visible : ['1_Slightly_Formal']
 visible_values : ['1_Slightly_Formal']
input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
 ------- evaluating input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-1_Slightly_Informal', '0_Neither', '0_Neither', '-1_Slightly_Informal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `-3_Very_Informal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '0_Neither', '-1_Slightly_Informal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `1_Slightly_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['3_Very_Formal', '0_Neither', '0_Neither', '3_Very_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '0_Neither', '-1_Slightly_Informal', '-1_Slightly_Informal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '-3_Very_Informal', '0_Neither', '3_Very_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '0_Not_Usable', '-2_Moderately_Informal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-3_Very_Informal', '-3_Very_Informal', '-3_Very_Informal', '-3_Very_Informal', '-2_Moderately_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-2_Moderately_Informal', '-2_Moderately_Informal', '0_Not_Usable', '0_Not_Usable', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '0_Neither', '0_Neither', '-1_Slightly_Informal', '0_Neither']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['2_Moderately_Formal', '-2_Moderately_Informal', '0_Neither', '3_Very_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `1_Slightly_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '1_Slightly_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-3_Very_Informal', '-3_Very_Informal', '0_Not_Usable', '0_Not_Usable', '-1_Slightly_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-1_Slightly_Informal', '0_Neither', '-1_Slightly_Informal', '0_Neither', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-2_Moderately_Informal', '0_Neither', '0_Neither', '-1_Slightly_Informal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['3_Very_Formal', '-1_Slightly_Informal', '0_Neither', '0_Not_Usable', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['3_Very_Formal', '-3_Very_Informal', '0_Not_Usable', '0_Not_Usable', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '2_Moderately_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['3_Very_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 4931 <-> row_number: 20
 --> inputs: ['email0', 'email1', 'email2', 'email3', 'email4', 'email5', 'email6', 'email7', 'email8', 'email9', 'email10', 'email11', 'email12', 'email13', 'email14', 'email15', 'email16', 'email17', 'email18', 'email19']
 --> Looking up gold labels from row index 20 of `input.csv` (unique inputs). 
 --> input labels: {'email0': ['0_Neither', '0_Neither', '0_Neither', '2_Moderately_Formal', '-1_Slightly_Informal'], 'email1': ['1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal'], 'email2': ['0_Neither', '0_Neither', '0_Neither', '2_Moderately_Formal', '0_Neither'], 'email3': ['0_Neither', '0_Neither', '0_Neither', '2_Moderately_Formal', '-1_Slightly_Informal'], 'email4': ['1_Slightly_Formal', '0_Neither', '0_Neither', '-3_Very_Informal', '-1_Slightly_Informal'], 'email5': ['0_Neither', '0_Neither', '0_Neither', '2_Moderately_Formal', '0_Neither'], 'email6': ['0_Neither', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '1_Slightly_Formal'], 'email7': ['0_Neither', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '1_Slightly_Formal'], 'email8': ['0_Neither', '1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '1_Slightly_Formal'], 'email9': ['0_Neither', '0_Neither', '0_Neither', '2_Moderately_Formal', '-1_Slightly_Informal'], 'email10': ['1_Slightly_Formal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal'], 'email11': ['0_Neither', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '1_Slightly_Formal'], 'email12': ['-2_Moderately_Informal', '-3_Very_Informal', '-2_Moderately_Informal', '-3_Very_Informal', '-3_Very_Informal'], 'email13': ['0_Neither', '0_Neither', '0_Neither', '2_Moderately_Formal', '-1_Slightly_Informal'], 'email14': ['0_Neither', '0_Neither', '0_Neither', '2_Moderately_Formal', '0_Neither'], 'email15': ['0_Neither', '0_Neither', '0_Neither', '0_Not_Usable', '0_Not_Usable'], 'email16': ['0_Neither', '0_Neither', '-1_Slightly_Informal', '-2_Moderately_Informal', '1_Slightly_Formal'], 'email17': ['0_Neither', '0_Neither', '0_Neither', '3_Very_Formal', '3_Very_Formal'], 'email18': ['0_Neither', '0_Neither', '0_Neither', '3_Very_Formal', '3_Very_Formal'], 'email19': ['0_Neither', '0_Neither', '0_Neither', '3_Very_Formal', '3_Very_Formal']}
 - - - - - -  starting a new element: `Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email0
Executing one action: self.actions.modify_select('email0', '1_Slightly_Formal')
We are going to select this select `email0` with value `1_Slightly_Formal`
 - - - - - -  starting a new element: `Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email1
Executing one action: self.actions.modify_select('email1', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email1', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email2
Executing one action: self.actions.modify_select('email2', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email2', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email3
Executing one action: self.actions.modify_select('email3', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email3', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email4
Executing one action: self.actions.modify_select('email4', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email4', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email5
Executing one action: self.actions.modify_select('email5', '1_Very_Informal')
Failed to execute an action self.actions.modify_select('email5', '1_Very_Informal'), error: Input value `1_Very_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email6
Executing one action: self.actions.modify_select('email6', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email6', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email7
Executing one action: self.actions.modify_select('email7', '-1_Slightly_Informal')
We are going to select this select `email7` with value `-1_Slightly_Informal`
 - - - - - -  starting a new element: `Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email8
Executing one action: self.actions.modify_select('email8', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email8', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email9
Executing one action: self.actions.modify_select('email9', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email9', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email10
Executing one action: self.actions.modify_select('email10', '-3_Very_Informal')
We are going to select this select `email10` with value `-3_Very_Informal`
 - - - - - -  starting a new element: `Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email11
Executing one action: self.actions.modify_select('email11', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email11', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email12
Executing one action: self.actions.modify_select('email12', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email12', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email13
Executing one action: self.actions.modify_select('email13', '1_Slightly_Formal')
We are going to select this select `email13` with value `1_Slightly_Formal`
 - - - - - -  starting a new element: `Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email14
Executing one action: self.actions.modify_select('email14', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email14', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email15
Executing one action: self.actions.modify_select('email15', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email15', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email16
Executing one action: self.actions.modify_select('email16', '1_Slightly_Formal')
We are going to select this select `email16` with value `1_Slightly_Formal`
 - - - - - -  starting a new element: `Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email17
Executing one action: self.actions.modify_select('email17', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email17', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email18
Executing one action: self.actions.modify_select('email18', '-1_Slightly_Informal')
We are going to select this select `email18` with value `-1_Slightly_Informal`
 - - - - - -  starting a new element: `Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email19
Executing one action: self.actions.modify_select('email19', '1_Very_Informal')
Failed to execute an action self.actions.modify_select('email19', '1_Very_Informal'), error: Input value `1_Very_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)
 visible : ['1_Slightly_Formal']
 visible_values : ['1_Slightly_Formal']
input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)
 visible : ['-1_Slightly_Informal']
 visible_values : ['-1_Slightly_Informal']
input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)
 visible : ['-3_Very_Informal']
 visible_values : ['-3_Very_Informal']
input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)
 visible : ['1_Slightly_Formal']
 visible_values : ['1_Slightly_Formal']
input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)
 visible : ['1_Slightly_Formal']
 visible_values : ['1_Slightly_Formal']
input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)
 visible : ['-1_Slightly_Informal']
 visible_values : ['-1_Slightly_Informal']
input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
 ------- evaluating input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '0_Neither', '2_Moderately_Formal', '-1_Slightly_Informal']` - type: `<class 'list'>`
----> baseline_answer: `1_Slightly_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '0_Neither', '2_Moderately_Formal', '0_Neither']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '0_Neither', '2_Moderately_Formal', '-1_Slightly_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '0_Neither', '0_Neither', '-3_Very_Informal', '-1_Slightly_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '0_Neither', '2_Moderately_Formal', '0_Neither']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `-1_Slightly_Informal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '0_Neither', '2_Moderately_Formal', '-1_Slightly_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `-3_Very_Informal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-2_Moderately_Informal', '-3_Very_Informal', '-2_Moderately_Informal', '-3_Very_Informal', '-3_Very_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '0_Neither', '2_Moderately_Formal', '-1_Slightly_Informal']` - type: `<class 'list'>`
----> baseline_answer: `1_Slightly_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '0_Neither', '2_Moderately_Formal', '0_Neither']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '0_Neither', '0_Not_Usable', '0_Not_Usable']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '-1_Slightly_Informal', '-2_Moderately_Informal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `1_Slightly_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '0_Neither', '3_Very_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '0_Neither', '3_Very_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `-1_Slightly_Informal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '0_Neither', '3_Very_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 4977 <-> row_number: 66
 --> inputs: ['email0', 'email1', 'email2', 'email3', 'email4', 'email5', 'email6', 'email7', 'email8', 'email9', 'email10', 'email11', 'email12', 'email13', 'email14', 'email15', 'email16', 'email17', 'email18', 'email19']
 --> Looking up gold labels from row index 66 of `input.csv` (unique inputs). 
 --> input labels: {'email0': ['0_Not_Usable', '-1_Slightly_Informal', '-1_Slightly_Informal', '0_Not_Usable', '-3_Very_Informal'], 'email1': ['-2_Moderately_Informal', '0_Neither', '0_Neither', '-1_Slightly_Informal', '1_Slightly_Formal'], 'email2': ['-2_Moderately_Informal', '0_Neither', '0_Neither', '0_Neither', '1_Slightly_Formal'], 'email3': ['0_Not_Usable', '-1_Slightly_Informal', '-2_Moderately_Informal', '3_Very_Formal', '0_Neither'], 'email4': ['-3_Very_Informal', '-1_Slightly_Informal', '0_Neither', '0_Neither', '1_Slightly_Formal'], 'email5': ['2_Moderately_Formal', '1_Slightly_Formal', '1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal'], 'email6': ['3_Very_Formal', '0_Neither', '-2_Moderately_Informal', '-3_Very_Informal', '-3_Very_Informal'], 'email7': ['3_Very_Formal', '3_Very_Formal', '3_Very_Formal', '2_Moderately_Formal', '0_Neither'], 'email8': ['0_Neither', '1_Slightly_Formal', '1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal'], 'email9': ['2_Moderately_Formal', '3_Very_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal'], 'email10': ['3_Very_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal'], 'email11': ['3_Very_Formal', '3_Very_Formal', '1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal'], 'email12': ['3_Very_Formal', '0_Neither', '0_Not_Usable', '0_Not_Usable', '-2_Moderately_Informal'], 'email13': ['-1_Slightly_Informal', '1_Slightly_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '2_Moderately_Formal'], 'email14': ['1_Slightly_Formal', '1_Slightly_Formal', '1_Slightly_Formal', '0_Neither', '1_Slightly_Formal'], 'email15': ['1_Slightly_Formal', '-1_Slightly_Informal', '-2_Moderately_Informal', '0_Neither', '1_Slightly_Formal'], 'email16': ['3_Very_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '-1_Slightly_Informal', '2_Moderately_Formal'], 'email17': ['3_Very_Formal', '1_Slightly_Formal', '-2_Moderately_Informal', '3_Very_Formal', '-1_Slightly_Informal'], 'email18': ['2_Moderately_Formal', '2_Moderately_Formal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal'], 'email19': ['0_Not_Usable', '1_Slightly_Formal', '-2_Moderately_Informal', '0_Neither', '-1_Slightly_Informal']}
 - - - - - -  starting a new element: `Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email0
Executing one action: self.actions.modify_select('email0', '2_Moderately_Formal')
We are going to select this select `email0` with value `2_Moderately_Formal`
 - - - - - -  starting a new element: `Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email1
Executing one action: self.actions.modify_select('email1', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email1', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email2
Executing one action: self.actions.modify_select('email2', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email2', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email3
Executing one action: self.actions.modify_select('email3', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email3', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email4
Executing one action: self.actions.modify_select('email4', '3_Very_Formal')
We are going to select this select `email4` with value `3_Very_Formal`
 - - - - - -  starting a new element: `Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email5
Executing one action: self.actions.modify_select('email5', '1_Slightly_Formal')
We are going to select this select `email5` with value `1_Slightly_Formal`
 - - - - - -  starting a new element: `Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email6
Executing one action: self.actions.modify_select('email6', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email6', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email7
Executing one action: self.actions.modify_select('email7', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email7', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email8
Executing one action: self.actions.modify_select('email8', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email8', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email9
Executing one action: self.actions.modify_select('email9', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email9', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email10
Executing one action: self.actions.modify_select('email10', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email10', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email11
Executing one action: self.actions.modify_select('email11', '-3_Very_Informal')
We are going to select this select `email11` with value `-3_Very_Informal`
 - - - - - -  starting a new element: `Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email12
Executing one action: self.actions.modify_select('email12', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email12', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email13
Executing one action: self.actions.modify_select('email13', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email13', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email14
Executing one action: self.actions.modify_select('email14', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email14', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email15
Executing one action: self.actions.modify_select('email15', '-1_Slightly_Informal')
We are going to select this select `email15` with value `-1_Slightly_Informal`
 - - - - - -  starting a new element: `Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email16
Executing one action: self.actions.modify_select('email16', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email16', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email17
Executing one action: self.actions.modify_select('email17', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email17', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email18
Executing one action: self.actions.modify_select('email18', '3_Very_Formal')
We are going to select this select `email18` with value `3_Very_Formal`
 - - - - - -  starting a new element: `Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email19
Executing one action: self.actions.modify_select('email19', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email19', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)
 visible : ['2_Moderately_Formal']
 visible_values : ['2_Moderately_Formal']
input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)
 visible : ['3_Very_Formal']
 visible_values : ['3_Very_Formal']
input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)
 visible : ['1_Slightly_Formal']
 visible_values : ['1_Slightly_Formal']
input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)
 visible : ['-3_Very_Informal']
 visible_values : ['-3_Very_Informal']
input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)
 visible : ['-1_Slightly_Informal']
 visible_values : ['-1_Slightly_Informal']
input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)
 visible : ['3_Very_Formal']
 visible_values : ['3_Very_Formal']
input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
 ------- evaluating input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Not_Usable', '-1_Slightly_Informal', '-1_Slightly_Informal', '0_Not_Usable', '-3_Very_Informal']` - type: `<class 'list'>`
----> baseline_answer: `2_Moderately_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-2_Moderately_Informal', '0_Neither', '0_Neither', '-1_Slightly_Informal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-2_Moderately_Informal', '0_Neither', '0_Neither', '0_Neither', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Not_Usable', '-1_Slightly_Informal', '-2_Moderately_Informal', '3_Very_Formal', '0_Neither']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-3_Very_Informal', '-1_Slightly_Informal', '0_Neither', '0_Neither', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `3_Very_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['2_Moderately_Formal', '1_Slightly_Formal', '1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `1_Slightly_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['3_Very_Formal', '0_Neither', '-2_Moderately_Informal', '-3_Very_Informal', '-3_Very_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['3_Very_Formal', '3_Very_Formal', '3_Very_Formal', '2_Moderately_Formal', '0_Neither']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '1_Slightly_Formal', '1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['2_Moderately_Formal', '3_Very_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['3_Very_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['3_Very_Formal', '3_Very_Formal', '1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `-3_Very_Informal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['3_Very_Formal', '0_Neither', '0_Not_Usable', '0_Not_Usable', '-2_Moderately_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-1_Slightly_Informal', '1_Slightly_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '1_Slightly_Formal', '1_Slightly_Formal', '0_Neither', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '-1_Slightly_Informal', '-2_Moderately_Informal', '0_Neither', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `-1_Slightly_Informal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['3_Very_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '-1_Slightly_Informal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['3_Very_Formal', '1_Slightly_Formal', '-2_Moderately_Informal', '3_Very_Formal', '-1_Slightly_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['2_Moderately_Formal', '2_Moderately_Formal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `3_Very_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Not_Usable', '1_Slightly_Formal', '-2_Moderately_Informal', '0_Neither', '-1_Slightly_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.05
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 4965 <-> row_number: 54
 --> inputs: ['email0', 'email1', 'email2', 'email3', 'email4', 'email5', 'email6', 'email7', 'email8', 'email9', 'email10', 'email11', 'email12', 'email13', 'email14', 'email15', 'email16', 'email17', 'email18', 'email19']
 --> Looking up gold labels from row index 54 of `input.csv` (unique inputs). 
 --> input labels: {'email0': ['0_Neither', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal'], 'email1': ['3_Very_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal'], 'email2': ['2_Moderately_Formal', '3_Very_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal'], 'email3': ['0_Neither', '-3_Very_Informal', '2_Moderately_Formal', '-3_Very_Informal', '-3_Very_Informal'], 'email4': ['-2_Moderately_Informal', '-1_Slightly_Informal', '2_Moderately_Formal', '2_Moderately_Formal', '-1_Slightly_Informal'], 'email5': ['3_Very_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal'], 'email6': ['3_Very_Formal', '3_Very_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal'], 'email7': ['1_Slightly_Formal', '3_Very_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal'], 'email8': ['1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal'], 'email9': ['3_Very_Formal', '3_Very_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal'], 'email10': ['-1_Slightly_Informal', '0_Neither', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal'], 'email11': ['-1_Slightly_Informal', '2_Moderately_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '2_Moderately_Formal'], 'email12': ['3_Very_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal'], 'email13': ['2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal'], 'email14': ['3_Very_Formal', '3_Very_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal'], 'email15': ['3_Very_Formal', '3_Very_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal'], 'email16': ['-3_Very_Informal', '0_Neither', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal'], 'email17': ['0_Neither', '0_Not_Usable', '2_Moderately_Formal', '-3_Very_Informal', '-3_Very_Informal'], 'email18': ['0_Neither', '0_Not_Usable', '2_Moderately_Formal', '-3_Very_Informal', '0_Neither'], 'email19': ['-3_Very_Informal', '-1_Slightly_Informal', '2_Moderately_Formal', '1_Slightly_Formal', '1_Slightly_Formal']}
 - - - - - -  starting a new element: `Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email0
Executing one action: self.actions.modify_select('email0', '1_Very_Informal')
Failed to execute an action self.actions.modify_select('email0', '1_Very_Informal'), error: Input value `1_Very_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email1
Executing one action: self.actions.modify_select('email1', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email1', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email2
Executing one action: self.actions.modify_select('email2', '1_Slightly_Informal')
Failed to execute an action self.actions.modify_select('email2', '1_Slightly_Informal'), error: Input value `1_Slightly_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email3
Executing one action: self.actions.modify_select('email3', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email3', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email4
Executing one action: self.actions.modify_select('email4', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email4', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email5
Executing one action: self.actions.modify_select('email5', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email5', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email6
Executing one action: self.actions.modify_select('email6', '6 Moderately Formal')
Failed to execute an action self.actions.modify_select('email6', '6 Moderately Formal'), error: Input value `6 Moderately Formal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email7
Executing one action: self.actions.modify_select('email7', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email7', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email8
Executing one action: self.actions.modify_select('email8', '1_Slightly_Formal')
We are going to select this select `email8` with value `1_Slightly_Formal`
 - - - - - -  starting a new element: `Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email9
Executing one action: self.actions.modify_select('email9', '-2_Moderately_Informal')
We are going to select this select `email9` with value `-2_Moderately_Informal`
 - - - - - -  starting a new element: `Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email10
Executing one action: self.actions.modify_select('email10', '4_Neither')
Failed to execute an action self.actions.modify_select('email10', '4_Neither'), error: Input value `4_Neither` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email11
Executing one action: self.actions.modify_select('email11', '3_Very_Formal')
We are going to select this select `email11` with value `3_Very_Formal`
 - - - - - -  starting a new element: `Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email12
Executing one action: self.actions.modify_select('email12', '1_Slightly_Formal')
We are going to select this select `email12` with value `1_Slightly_Formal`
 - - - - - -  starting a new element: `Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email13
Executing one action: self.actions.modify_select('email13', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email13', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email14
Executing one action: self.actions.modify_select('email14', '1_Slightly_Formal')
We are going to select this select `email14` with value `1_Slightly_Formal`
 - - - - - -  starting a new element: `Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email15
Executing one action: self.actions.modify_select('email15', '1_Slightly_Formal')
We are going to select this select `email15` with value `1_Slightly_Formal`
 - - - - - -  starting a new element: `Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email16
Executing one action: self.actions.modify_select('email16', '1_Slightly_Formal')
We are going to select this select `email16` with value `1_Slightly_Formal`
 - - - - - -  starting a new element: `Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email17
Executing one action: self.actions.modify_select('email17', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email17', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email18
Executing one action: self.actions.modify_select('email18', '3_Very_Formal')
We are going to select this select `email18` with value `3_Very_Formal`
 - - - - - -  starting a new element: `Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email19
Executing one action: self.actions.modify_select('email19', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email19', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)
 visible : ['1_Slightly_Formal']
 visible_values : ['1_Slightly_Formal']
input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)
 visible : ['-2_Moderately_Informal']
 visible_values : ['-2_Moderately_Informal']
input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)
 visible : ['3_Very_Formal']
 visible_values : ['3_Very_Formal']
input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)
 visible : ['1_Slightly_Formal']
 visible_values : ['1_Slightly_Formal']
input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)
 visible : ['1_Slightly_Formal']
 visible_values : ['1_Slightly_Formal']
input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)
 visible : ['1_Slightly_Formal']
 visible_values : ['1_Slightly_Formal']
input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)
 visible : ['1_Slightly_Formal']
 visible_values : ['1_Slightly_Formal']
input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)
 visible : ['3_Very_Formal']
 visible_values : ['3_Very_Formal']
input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
 ------- evaluating input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['3_Very_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['2_Moderately_Formal', '3_Very_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '-3_Very_Informal', '2_Moderately_Formal', '-3_Very_Informal', '-3_Very_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-2_Moderately_Informal', '-1_Slightly_Informal', '2_Moderately_Formal', '2_Moderately_Formal', '-1_Slightly_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['3_Very_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['3_Very_Formal', '3_Very_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '3_Very_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `1_Slightly_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['3_Very_Formal', '3_Very_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `-2_Moderately_Informal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-1_Slightly_Informal', '0_Neither', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-1_Slightly_Informal', '2_Moderately_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `3_Very_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['3_Very_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `1_Slightly_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['3_Very_Formal', '3_Very_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `1_Slightly_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['3_Very_Formal', '3_Very_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `1_Slightly_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-3_Very_Informal', '0_Neither', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `1_Slightly_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Not_Usable', '2_Moderately_Formal', '-3_Very_Informal', '-3_Very_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Not_Usable', '2_Moderately_Formal', '-3_Very_Informal', '0_Neither']` - type: `<class 'list'>`
----> baseline_answer: `3_Very_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-3_Very_Informal', '-1_Slightly_Informal', '2_Moderately_Formal', '1_Slightly_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 4975 <-> row_number: 64
 --> inputs: ['email0', 'email1', 'email2', 'email3', 'email4', 'email5', 'email6', 'email7', 'email8', 'email9', 'email10', 'email11', 'email12', 'email13', 'email14', 'email15', 'email16', 'email17', 'email18', 'email19']
 --> Looking up gold labels from row index 64 of `input.csv` (unique inputs). 
 --> input labels: {'email0': ['1_Slightly_Formal', '0_Neither', '-1_Slightly_Informal', '2_Moderately_Formal'], 'email1': ['0_Neither', '1_Slightly_Formal', '0_Neither', '0_Neither'], 'email2': ['0_Neither', '-1_Slightly_Informal', '2_Moderately_Formal', '1_Slightly_Formal'], 'email3': ['1_Slightly_Formal', '0_Neither', '0_Neither', '-3_Very_Informal'], 'email4': ['2_Moderately_Formal', '1_Slightly_Formal', '0_Neither', '2_Moderately_Formal'], 'email5': ['2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal', '2_Moderately_Formal'], 'email6': ['-1_Slightly_Informal', '0_Not_Usable', '0_Neither', '-3_Very_Informal'], 'email7': ['-1_Slightly_Informal', '-3_Very_Informal', '-3_Very_Informal', '-2_Moderately_Informal'], 'email8': ['0_Neither', '-1_Slightly_Informal', '0_Neither', '2_Moderately_Formal'], 'email9': ['1_Slightly_Formal', '3_Very_Formal', '2_Moderately_Formal', '3_Very_Formal'], 'email10': ['3_Very_Formal', '2_Moderately_Formal', '3_Very_Formal', '2_Moderately_Formal'], 'email11': ['1_Slightly_Formal', '-1_Slightly_Informal', '2_Moderately_Formal', '2_Moderately_Formal'], 'email12': ['0_Neither', '-1_Slightly_Informal', '2_Moderately_Formal', '1_Slightly_Formal'], 'email13': ['1_Slightly_Formal', '1_Slightly_Formal', '0_Neither', '-3_Very_Informal'], 'email14': ['1_Slightly_Formal', '1_Slightly_Formal', '0_Neither', '0_Not_Usable'], 'email15': ['-1_Slightly_Informal', '-1_Slightly_Informal', '-1_Slightly_Informal', '1_Slightly_Formal'], 'email16': ['0_Neither', '-1_Slightly_Informal', '-1_Slightly_Informal', '1_Slightly_Formal'], 'email17': ['0_Neither', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal'], 'email18': ['1_Slightly_Formal', '-1_Slightly_Informal', '0_Neither', '2_Moderately_Formal'], 'email19': ['2_Moderately_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '3_Very_Formal']}
 - - - - - -  starting a new element: `Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email0
Executing one action: self.actions.modify_select('email0', '-3_Very_Informal')
We are going to select this select `email0` with value `-3_Very_Informal`
 - - - - - -  starting a new element: `Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email1
Executing one action: self.actions.modify_select('email1', '1_Very_Informal')
Failed to execute an action self.actions.modify_select('email1', '1_Very_Informal'), error: Input value `1_Very_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email2
Executing one action: self.actions.modify_select('email2', '-3_Very_Informal')
We are going to select this select `email2` with value `-3_Very_Informal`
 - - - - - -  starting a new element: `Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email3
Executing one action: self.actions.modify_select('email3', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email3', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email4
Executing one action: self.actions.modify_select('email4', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email4', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email5
Executing one action: self.actions.modify_select('email5', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email5', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email6
Executing one action: self.actions.modify_select('email6', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email6', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email7
Executing one action: self.actions.modify_select('email7', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email7', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email8
Executing one action: self.actions.modify_select('email8', '1_Slightly_Formal')
We are going to select this select `email8` with value `1_Slightly_Formal`
 - - - - - -  starting a new element: `Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email9
Executing one action: self.actions.modify_select('email9', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email9', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email10
Executing one action: self.actions.modify_select('email10', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email10', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email11
Executing one action: self.actions.modify_select('email11', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email11', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email12
Executing one action: self.actions.modify_select('email12', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email12', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email13
Executing one action: self.actions.modify_select('email13', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email13', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email14
Executing one action: self.actions.modify_select('email14', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email14', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email15
Executing one action: self.actions.modify_select('email15', '1_Very_Informal')
Failed to execute an action self.actions.modify_select('email15', '1_Very_Informal'), error: Input value `1_Very_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email16
Executing one action: self.actions.modify_select('email16', '4_Neither')
Failed to execute an action self.actions.modify_select('email16', '4_Neither'), error: Input value `4_Neither` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email17
Executing one action: self.actions.modify_select('email17', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email17', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email18
Executing one action: self.actions.modify_select('email18', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email18', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email19
Executing one action: self.actions.modify_select('email19', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email19', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)
 visible : ['-3_Very_Informal']
 visible_values : ['-3_Very_Informal']
input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)
 visible : ['-3_Very_Informal']
 visible_values : ['-3_Very_Informal']
input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)
 visible : ['1_Slightly_Formal']
 visible_values : ['1_Slightly_Formal']
input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
 ------- evaluating input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '0_Neither', '-1_Slightly_Informal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `-3_Very_Informal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '1_Slightly_Formal', '0_Neither', '0_Neither']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '-1_Slightly_Informal', '2_Moderately_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `-3_Very_Informal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '0_Neither', '0_Neither', '-3_Very_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['2_Moderately_Formal', '1_Slightly_Formal', '0_Neither', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-1_Slightly_Informal', '0_Not_Usable', '0_Neither', '-3_Very_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-1_Slightly_Informal', '-3_Very_Informal', '-3_Very_Informal', '-2_Moderately_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '-1_Slightly_Informal', '0_Neither', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `1_Slightly_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '3_Very_Formal', '2_Moderately_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['3_Very_Formal', '2_Moderately_Formal', '3_Very_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '-1_Slightly_Informal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '-1_Slightly_Informal', '2_Moderately_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '1_Slightly_Formal', '0_Neither', '-3_Very_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '1_Slightly_Formal', '0_Neither', '0_Not_Usable']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-1_Slightly_Informal', '-1_Slightly_Informal', '-1_Slightly_Informal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '-1_Slightly_Informal', '-1_Slightly_Informal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '-1_Slightly_Informal', '0_Neither', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['2_Moderately_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 4912 <-> row_number: 1
 --> inputs: ['email0', 'email1', 'email2', 'email3', 'email4', 'email5', 'email6', 'email7', 'email8', 'email9', 'email10', 'email11', 'email12', 'email13', 'email14', 'email15', 'email16', 'email17', 'email18', 'email19']
 --> Looking up gold labels from row index 1 of `input.csv` (unique inputs). 
 --> input labels: {'email0': ['0_Not_Usable', '-3_Very_Informal', '0_Not_Usable', '2_Moderately_Formal', '-3_Very_Informal'], 'email1': ['0_Neither', '2_Moderately_Formal', '0_Neither', '2_Moderately_Formal', '3_Very_Formal'], 'email2': ['1_Slightly_Formal', '2_Moderately_Formal', '0_Neither', '-1_Slightly_Informal', '1_Slightly_Formal'], 'email3': ['-1_Slightly_Informal', '-3_Very_Informal', '0_Not_Usable', '2_Moderately_Formal', '-3_Very_Informal'], 'email4': ['0_Neither', '2_Moderately_Formal', '-2_Moderately_Informal', '2_Moderately_Formal', '1_Slightly_Formal'], 'email5': ['-1_Slightly_Informal', '2_Moderately_Formal', '-3_Very_Informal', '2_Moderately_Formal', '2_Moderately_Formal'], 'email6': ['2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal', '2_Moderately_Formal', '3_Very_Formal'], 'email7': ['0_Neither', '2_Moderately_Formal', '0_Neither', '2_Moderately_Formal', '2_Moderately_Formal'], 'email8': ['1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal'], 'email9': ['0_Not_Usable', '3_Very_Formal', '0_Not_Usable', '2_Moderately_Formal', '3_Very_Formal'], 'email10': ['2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal', '2_Moderately_Formal', '3_Very_Formal'], 'email11': ['0_Neither', '2_Moderately_Formal', '0_Neither', '2_Moderately_Formal', '2_Moderately_Formal'], 'email12': ['0_Neither', '2_Moderately_Formal', '0_Neither', '2_Moderately_Formal', '3_Very_Formal'], 'email13': ['1_Slightly_Formal', '2_Moderately_Formal', '0_Neither', '2_Moderately_Formal', '3_Very_Formal'], 'email14': ['0_Neither', '2_Moderately_Formal', '0_Neither', '2_Moderately_Formal', '2_Moderately_Formal'], 'email15': ['0_Neither', '2_Moderately_Formal', '0_Neither', '0_Neither', '2_Moderately_Formal'], 'email16': ['0_Not_Usable', '-3_Very_Informal', '0_Not_Usable', '1_Slightly_Formal', '-3_Very_Informal'], 'email17': ['0_Neither', '2_Moderately_Formal', '0_Neither', '2_Moderately_Formal', '2_Moderately_Formal'], 'email18': ['-1_Slightly_Informal', '2_Moderately_Formal', '-3_Very_Informal', '-1_Slightly_Informal', '2_Moderately_Formal'], 'email19': ['1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal']}
 - - - - - -  starting a new element: `Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email0
Executing one action: self.actions.modify_select('email0', '-1_Slightly_Informal')
We are going to select this select `email0` with value `-1_Slightly_Informal`
 - - - - - -  starting a new element: `Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email1
Executing one action: self.actions.modify_select('email1', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email1', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email2
Executing one action: self.actions.modify_select('email2', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email2', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email3
Executing one action: self.actions.modify_select('email3', '3_Very_Formal')
We are going to select this select `email3` with value `3_Very_Formal`
 - - - - - -  starting a new element: `Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email4
Executing one action: self.actions.modify_select('email4', '1_Slightly_Formal')
We are going to select this select `email4` with value `1_Slightly_Formal`
 - - - - - -  starting a new element: `Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email5
Executing one action: self.actions.modify_select('email5', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email5', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email6
Executing one action: self.actions.modify_select('email6', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email6', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email7
Executing one action: self.actions.modify_select('email7', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email7', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email8
Executing one action: self.actions.modify_select('email8', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email8', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email9
Executing one action: self.actions.modify_select('email9', '3_Very_Formal')
We are going to select this select `email9` with value `3_Very_Formal`
 - - - - - -  starting a new element: `Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email10
Executing one action: self.actions.modify_select('email10', '1_Slightly_Formal')
We are going to select this select `email10` with value `1_Slightly_Formal`
 - - - - - -  starting a new element: `Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email11
Executing one action: self.actions.modify_select('email11', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email11', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email12
Executing one action: self.actions.modify_select('email12', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email12', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email13
Executing one action: self.actions.modify_select('email13', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email13', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email14
Executing one action: self.actions.modify_select('email14', '1_Very_Informal')
Failed to execute an action self.actions.modify_select('email14', '1_Very_Informal'), error: Input value `1_Very_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email15
Executing one action: self.actions.modify_select('email15', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email15', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email16
Executing one action: self.actions.modify_select('email16', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email16', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email17
Executing one action: self.actions.modify_select('email17', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email17', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email18
Executing one action: self.actions.modify_select('email18', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email18', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email19
Executing one action: self.actions.modify_select('email19', '1_Very_Informal')
Failed to execute an action self.actions.modify_select('email19', '1_Very_Informal'), error: Input value `1_Very_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)
 visible : ['-1_Slightly_Informal']
 visible_values : ['-1_Slightly_Informal']
input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)
 visible : ['3_Very_Formal']
 visible_values : ['3_Very_Formal']
input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)
 visible : ['1_Slightly_Formal']
 visible_values : ['1_Slightly_Formal']
input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)
 visible : ['3_Very_Formal']
 visible_values : ['3_Very_Formal']
input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)
 visible : ['1_Slightly_Formal']
 visible_values : ['1_Slightly_Formal']
input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
 ------- evaluating input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Not_Usable', '-3_Very_Informal', '0_Not_Usable', '2_Moderately_Formal', '-3_Very_Informal']` - type: `<class 'list'>`
----> baseline_answer: `-1_Slightly_Informal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '2_Moderately_Formal', '0_Neither', '2_Moderately_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '2_Moderately_Formal', '0_Neither', '-1_Slightly_Informal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-1_Slightly_Informal', '-3_Very_Informal', '0_Not_Usable', '2_Moderately_Formal', '-3_Very_Informal']` - type: `<class 'list'>`
----> baseline_answer: `3_Very_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '2_Moderately_Formal', '-2_Moderately_Informal', '2_Moderately_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `1_Slightly_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-1_Slightly_Informal', '2_Moderately_Formal', '-3_Very_Informal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal', '2_Moderately_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '2_Moderately_Formal', '0_Neither', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Not_Usable', '3_Very_Formal', '0_Not_Usable', '2_Moderately_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `3_Very_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal', '2_Moderately_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `1_Slightly_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '2_Moderately_Formal', '0_Neither', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '2_Moderately_Formal', '0_Neither', '2_Moderately_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '2_Moderately_Formal', '0_Neither', '2_Moderately_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '2_Moderately_Formal', '0_Neither', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '2_Moderately_Formal', '0_Neither', '0_Neither', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Not_Usable', '-3_Very_Informal', '0_Not_Usable', '1_Slightly_Formal', '-3_Very_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '2_Moderately_Formal', '0_Neither', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-1_Slightly_Informal', '2_Moderately_Formal', '-3_Very_Informal', '-1_Slightly_Informal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 4942 <-> row_number: 31
 --> inputs: ['email0', 'email1', 'email2', 'email3', 'email4', 'email5', 'email6', 'email7', 'email8', 'email9', 'email10', 'email11', 'email12', 'email13', 'email14', 'email15', 'email16', 'email17', 'email18', 'email19']
 --> Looking up gold labels from row index 31 of `input.csv` (unique inputs). 
 --> input labels: {'email0': ['-3_Very_Informal', '0_Not_Usable', '-3_Very_Informal', '0_Not_Usable'], 'email1': ['-3_Very_Informal', '0_Neither', '-3_Very_Informal', '-3_Very_Informal'], 'email2': ['-1_Slightly_Informal', '1_Slightly_Formal', '1_Slightly_Formal', '0_Neither'], 'email3': ['-2_Moderately_Informal', '0_Neither', '1_Slightly_Formal', '-2_Moderately_Informal'], 'email4': ['-3_Very_Informal', '1_Slightly_Formal', '1_Slightly_Formal', '1_Slightly_Formal'], 'email5': ['0_Neither', '2_Moderately_Formal', '1_Slightly_Formal', '-2_Moderately_Informal'], 'email6': ['0_Neither', '-1_Slightly_Informal', '1_Slightly_Formal', '-3_Very_Informal'], 'email7': ['0_Neither', '0_Neither', '1_Slightly_Formal', '-3_Very_Informal'], 'email8': ['1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '-1_Slightly_Informal'], 'email9': ['2_Moderately_Formal', '3_Very_Formal', '2_Moderately_Formal', '1_Slightly_Formal'], 'email10': ['-3_Very_Informal', '0_Not_Usable', '-2_Moderately_Informal', '-3_Very_Informal'], 'email11': ['0_Neither', '2_Moderately_Formal', '2_Moderately_Formal', '1_Slightly_Formal'], 'email12': ['3_Very_Formal', '3_Very_Formal', '2_Moderately_Formal', '1_Slightly_Formal'], 'email13': ['1_Slightly_Formal', '0_Neither', '3_Very_Formal', '-1_Slightly_Informal'], 'email14': ['-3_Very_Informal', '-3_Very_Informal', '-1_Slightly_Informal', '-1_Slightly_Informal'], 'email15': ['1_Slightly_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '-2_Moderately_Informal'], 'email16': ['2_Moderately_Formal', '3_Very_Formal', '2_Moderately_Formal', '2_Moderately_Formal'], 'email17': ['0_Neither', '2_Moderately_Formal', '2_Moderately_Formal', '-1_Slightly_Informal'], 'email18': ['1_Slightly_Formal', '0_Neither', '0_Neither', '-2_Moderately_Informal'], 'email19': ['0_Neither', '0_Neither', '2_Moderately_Formal', '-3_Very_Informal']}
 - - - - - -  starting a new element: `Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email0
Executing one action: self.actions.modify_select('email0', '1_Very_Informal')
Failed to execute an action self.actions.modify_select('email0', '1_Very_Informal'), error: Input value `1_Very_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email1
Executing one action: self.actions.modify_select('email1', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email1', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email2
Executing one action: self.actions.modify_select('email2', '-2_Moderately_Informal')
We are going to select this select `email2` with value `-2_Moderately_Informal`
 - - - - - -  starting a new element: `Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email3
Executing one action: self.actions.modify_select('email3', '1_Very_Informal')
Failed to execute an action self.actions.modify_select('email3', '1_Very_Informal'), error: Input value `1_Very_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email4
Executing one action: self.actions.modify_select('email4', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email4', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email5
Executing one action: self.actions.modify_select('email5', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email5', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email6
Executing one action: self.actions.modify_select('email6', '1_Very_Informal')
Failed to execute an action self.actions.modify_select('email6', '1_Very_Informal'), error: Input value `1_Very_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email7
Executing one action: self.actions.modify_select('email7', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email7', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email8
Executing one action: self.actions.modify_select('email8', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email8', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email9
Executing one action: self.actions.modify_select('email9', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email9', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email10
Executing one action: self.actions.modify_select('email10', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email10', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email11
Executing one action: self.actions.modify_select('email11', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email11', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email12
Executing one action: self.actions.modify_select('email12', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email12', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email13
Executing one action: self.actions.modify_select('email13', '4')
Failed to execute an action self.actions.modify_select('email13', '4'), error: Input value `4` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email14
Executing one action: self.actions.modify_select('email14', '1_Slightly_Formal')
We are going to select this select `email14` with value `1_Slightly_Formal`
 - - - - - -  starting a new element: `Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email15
Executing one action: self.actions.modify_select('email15', '-1_Slightly_Informal')
We are going to select this select `email15` with value `-1_Slightly_Informal`
 - - - - - -  starting a new element: `Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email16
Executing one action: self.actions.modify_select('email16', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email16', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email17
Executing one action: self.actions.modify_select('email17', '1_Slightly_Formal')
We are going to select this select `email17` with value `1_Slightly_Formal`
 - - - - - -  starting a new element: `Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email18
Executing one action: self.actions.modify_select('email18', '1_Slightly_Formal')
We are going to select this select `email18` with value `1_Slightly_Formal`
 - - - - - -  starting a new element: `Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email19
Executing one action: self.actions.modify_select('email19', '-1_Slightly_Informal')
We are going to select this select `email19` with value `-1_Slightly_Informal`
input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)
 visible : ['-2_Moderately_Informal']
 visible_values : ['-2_Moderately_Informal']
input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)
 visible : ['1_Slightly_Formal']
 visible_values : ['1_Slightly_Formal']
input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)
 visible : ['-1_Slightly_Informal']
 visible_values : ['-1_Slightly_Informal']
input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)
 visible : ['1_Slightly_Formal']
 visible_values : ['1_Slightly_Formal']
input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)
 visible : ['1_Slightly_Formal']
 visible_values : ['1_Slightly_Formal']
input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)
 visible : ['-1_Slightly_Informal']
 visible_values : ['-1_Slightly_Informal']
 ------- evaluating input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-3_Very_Informal', '0_Not_Usable', '-3_Very_Informal', '0_Not_Usable']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-3_Very_Informal', '0_Neither', '-3_Very_Informal', '-3_Very_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-1_Slightly_Informal', '1_Slightly_Formal', '1_Slightly_Formal', '0_Neither']` - type: `<class 'list'>`
----> baseline_answer: `-2_Moderately_Informal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-2_Moderately_Informal', '0_Neither', '1_Slightly_Formal', '-2_Moderately_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-3_Very_Informal', '1_Slightly_Formal', '1_Slightly_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '2_Moderately_Formal', '1_Slightly_Formal', '-2_Moderately_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '-1_Slightly_Informal', '1_Slightly_Formal', '-3_Very_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '1_Slightly_Formal', '-3_Very_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '-1_Slightly_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['2_Moderately_Formal', '3_Very_Formal', '2_Moderately_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-3_Very_Informal', '0_Not_Usable', '-2_Moderately_Informal', '-3_Very_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '2_Moderately_Formal', '2_Moderately_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['3_Very_Formal', '3_Very_Formal', '2_Moderately_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '0_Neither', '3_Very_Formal', '-1_Slightly_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-3_Very_Informal', '-3_Very_Informal', '-1_Slightly_Informal', '-1_Slightly_Informal']` - type: `<class 'list'>`
----> baseline_answer: `1_Slightly_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '-2_Moderately_Informal']` - type: `<class 'list'>`
----> baseline_answer: `-1_Slightly_Informal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['2_Moderately_Formal', '3_Very_Formal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '2_Moderately_Formal', '2_Moderately_Formal', '-1_Slightly_Informal']` - type: `<class 'list'>`
----> baseline_answer: `1_Slightly_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '0_Neither', '0_Neither', '-2_Moderately_Informal']` - type: `<class 'list'>`
----> baseline_answer: `1_Slightly_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '2_Moderately_Formal', '-3_Very_Informal']` - type: `<class 'list'>`
----> baseline_answer: `-1_Slightly_Informal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 5004 <-> row_number: 93
 --> inputs: ['email0', 'email1', 'email2', 'email3', 'email4', 'email5', 'email6', 'email7', 'email8', 'email9', 'email10', 'email11', 'email12', 'email13', 'email14', 'email15', 'email16', 'email17', 'email18', 'email19']
 --> Looking up gold labels from row index 93 of `input.csv` (unique inputs). 
 --> input labels: {'email0': ['1_Slightly_Formal', '0_Neither', '0_Neither', '0_Neither', '-3_Very_Informal'], 'email1': ['0_Neither', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal'], 'email2': ['0_Neither', '0_Neither', '1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal'], 'email3': ['0_Neither', '0_Neither', '-1_Slightly_Informal', '0_Neither', '2_Moderately_Formal'], 'email4': ['0_Neither', '0_Neither', '1_Slightly_Formal', '1_Slightly_Formal', '3_Very_Formal'], 'email5': ['0_Neither', '0_Neither', '-1_Slightly_Informal', '-1_Slightly_Informal', '2_Moderately_Formal'], 'email6': ['0_Neither', '0_Neither', '-1_Slightly_Informal', '2_Moderately_Formal', '0_Not_Usable'], 'email7': ['2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal'], 'email8': ['-2_Moderately_Informal', '-3_Very_Informal', '-3_Very_Informal', '-2_Moderately_Informal', '2_Moderately_Formal'], 'email9': ['0_Neither', '1_Slightly_Formal', '1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal'], 'email10': ['0_Neither', '0_Neither', '-1_Slightly_Informal', '0_Neither', '2_Moderately_Formal'], 'email11': ['0_Neither', '0_Neither', '-1_Slightly_Informal', '0_Not_Usable', '0_Not_Usable'], 'email12': ['1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '2_Moderately_Formal'], 'email13': ['0_Neither', '0_Neither', '1_Slightly_Formal', '0_Neither', '2_Moderately_Formal'], 'email14': ['-1_Slightly_Informal', '0_Neither', '-2_Moderately_Informal', '0_Neither', '2_Moderately_Formal'], 'email15': ['0_Neither', '0_Neither', '-2_Moderately_Informal', '0_Neither', '1_Slightly_Formal'], 'email16': ['1_Slightly_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal'], 'email17': ['0_Neither', '1_Slightly_Formal', '1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal'], 'email18': ['0_Neither', '0_Neither', '-1_Slightly_Informal', '0_Neither', '0_Not_Usable'], 'email19': ['0_Neither', '1_Slightly_Formal', '1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal']}
 - - - - - -  starting a new element: `Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email0
Executing one action: self.actions.modify_select('email0', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email0', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email1
Executing one action: self.actions.modify_select('email1', '-3_Very_Informal')
We are going to select this select `email1` with value `-3_Very_Informal`
 - - - - - -  starting a new element: `Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email2
Executing one action: self.actions.modify_select('email2', '1_Very_Informal')
Failed to execute an action self.actions.modify_select('email2', '1_Very_Informal'), error: Input value `1_Very_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email3
Executing one action: self.actions.modify_select('email3', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email3', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email4
Executing one action: self.actions.modify_select('email4', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email4', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email5
Executing one action: self.actions.modify_select('email5', '-1_Slightly_Informal')
We are going to select this select `email5` with value `-1_Slightly_Informal`
 - - - - - -  starting a new element: `Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email6
Executing one action: self.actions.modify_select('email6', '1_Very_Informal')
Failed to execute an action self.actions.modify_select('email6', '1_Very_Informal'), error: Input value `1_Very_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email7
Executing one action: self.actions.modify_select('email7', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email7', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email8
Executing one action: self.actions.modify_select('email8', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email8', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email9
Executing one action: self.actions.modify_select('email9', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email9', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email10
Executing one action: self.actions.modify_select('email10', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email10', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email11
Executing one action: self.actions.modify_select('email11', '-3_Very_Informal')
We are going to select this select `email11` with value `-3_Very_Informal`
 - - - - - -  starting a new element: `Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email12
Executing one action: self.actions.modify_select('email12', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email12', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email13
Executing one action: self.actions.modify_select('email13', '-3_Very_Informal')
We are going to select this select `email13` with value `-3_Very_Informal`
 - - - - - -  starting a new element: `Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email14
Executing one action: self.actions.modify_select('email14', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email14', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email15
Executing one action: self.actions.modify_select('email15', '1_Very_Informal')
Failed to execute an action self.actions.modify_select('email15', '1_Very_Informal'), error: Input value `1_Very_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email16
Executing one action: self.actions.modify_select('email16', '-2_Moderately_Informal')
We are going to select this select `email16` with value `-2_Moderately_Informal`
 - - - - - -  starting a new element: `Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email17
Executing one action: self.actions.modify_select('email17', '3_Very_Formal')
We are going to select this select `email17` with value `3_Very_Formal`
 - - - - - -  starting a new element: `Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email18
Executing one action: self.actions.modify_select('email18', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email18', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email19
Executing one action: self.actions.modify_select('email19', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email19', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)
 visible : ['-3_Very_Informal']
 visible_values : ['-3_Very_Informal']
input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)
 visible : ['-1_Slightly_Informal']
 visible_values : ['-1_Slightly_Informal']
input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)
 visible : ['-3_Very_Informal']
 visible_values : ['-3_Very_Informal']
input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)
 visible : ['-3_Very_Informal']
 visible_values : ['-3_Very_Informal']
input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)
 visible : ['-2_Moderately_Informal']
 visible_values : ['-2_Moderately_Informal']
input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)
 visible : ['3_Very_Formal']
 visible_values : ['3_Very_Formal']
input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
 ------- evaluating input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '0_Neither', '0_Neither', '0_Neither', '-3_Very_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `-3_Very_Informal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '-1_Slightly_Informal', '0_Neither', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '1_Slightly_Formal', '1_Slightly_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '-1_Slightly_Informal', '-1_Slightly_Informal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `-1_Slightly_Informal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '-1_Slightly_Informal', '2_Moderately_Formal', '0_Not_Usable']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-2_Moderately_Informal', '-3_Very_Informal', '-3_Very_Informal', '-2_Moderately_Informal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '1_Slightly_Formal', '1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '-1_Slightly_Informal', '0_Neither', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '-1_Slightly_Informal', '0_Not_Usable', '0_Not_Usable']` - type: `<class 'list'>`
----> baseline_answer: `-3_Very_Informal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '1_Slightly_Formal', '0_Neither', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `-3_Very_Informal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-1_Slightly_Informal', '0_Neither', '-2_Moderately_Informal', '0_Neither', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '-2_Moderately_Informal', '0_Neither', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `-2_Moderately_Informal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '1_Slightly_Formal', '1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `3_Very_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '-1_Slightly_Informal', '0_Neither', '0_Not_Usable']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '1_Slightly_Formal', '1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 4956 <-> row_number: 45
 --> inputs: ['email0', 'email1', 'email2', 'email3', 'email4', 'email5', 'email6', 'email7', 'email8', 'email9', 'email10', 'email11', 'email12', 'email13', 'email14', 'email15', 'email16', 'email17', 'email18', 'email19']
 --> Looking up gold labels from row index 45 of `input.csv` (unique inputs). 
 --> input labels: {'email0': ['1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal'], 'email1': ['1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '1_Slightly_Formal'], 'email2': ['1_Slightly_Formal', '0_Neither', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal'], 'email3': ['1_Slightly_Formal', '0_Neither', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal'], 'email4': ['1_Slightly_Formal', '0_Neither', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal'], 'email5': ['0_Neither', '0_Neither', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal'], 'email6': ['0_Neither', '0_Not_Usable', '3_Very_Formal', '2_Moderately_Formal', '0_Neither'], 'email7': ['0_Neither', '0_Not_Usable', '0_Not_Usable', '2_Moderately_Formal', '0_Not_Usable'], 'email8': ['-2_Moderately_Informal', '0_Not_Usable', '0_Not_Usable', '2_Moderately_Formal', '0_Not_Usable'], 'email9': ['0_Neither', '0_Neither', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal'], 'email10': ['0_Neither', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal'], 'email11': ['-2_Moderately_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal'], 'email12': ['1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal'], 'email13': ['0_Neither', '0_Neither', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal'], 'email14': ['0_Neither', '0_Not_Usable', '3_Very_Formal', '2_Moderately_Formal', '0_Neither'], 'email15': ['1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal'], 'email16': ['0_Neither', '0_Neither', '2_Moderately_Formal', '1_Slightly_Formal', '1_Slightly_Formal'], 'email17': ['2_Moderately_Formal', '0_Neither', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal'], 'email18': ['0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal'], 'email19': ['0_Neither', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '1_Slightly_Formal']}
 - - - - - -  starting a new element: `Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email0
Executing one action: self.actions.modify_select('email0', '2_Moderately_Formal')
We are going to select this select `email0` with value `2_Moderately_Formal`
 - - - - - -  starting a new element: `Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email1
Executing one action: self.actions.modify_select('email1', '3_Very_Formal')
We are going to select this select `email1` with value `3_Very_Formal`
 - - - - - -  starting a new element: `Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email2
Executing one action: self.actions.modify_select('email2', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email2', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email3
Executing one action: self.actions.modify_select('email3', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email3', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email4
Executing one action: self.actions.modify_select('email4', '2_Moderately_Formal')
We are going to select this select `email4` with value `2_Moderately_Formal`
 - - - - - -  starting a new element: `Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email5
Executing one action: self.actions.modify_select('email5', '1_Very_Informal')
Failed to execute an action self.actions.modify_select('email5', '1_Very_Informal'), error: Input value `1_Very_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email6
Executing one action: self.actions.modify_select('email6', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email6', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email7
Executing one action: self.actions.modify_select('email7', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email7', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email8
Executing one action: self.actions.modify_select('email8', '1_Slightly_Formal')
We are going to select this select `email8` with value `1_Slightly_Formal`
 - - - - - -  starting a new element: `Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email9
Executing one action: self.actions.modify_select('email9', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email9', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email10
Executing one action: self.actions.modify_select('email10', '1_Very_Informal')
Failed to execute an action self.actions.modify_select('email10', '1_Very_Informal'), error: Input value `1_Very_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email11
Executing one action: self.actions.modify_select('email11', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email11', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email12
Executing one action: self.actions.modify_select('email12', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email12', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email13
Executing one action: self.actions.modify_select('email13', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email13', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email14
Executing one action: self.actions.modify_select('email14', '6 Moderately Formal')
Failed to execute an action self.actions.modify_select('email14', '6 Moderately Formal'), error: Input value `6 Moderately Formal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email15
Executing one action: self.actions.modify_select('email15', '3_Very_Formal')
We are going to select this select `email15` with value `3_Very_Formal`
 - - - - - -  starting a new element: `Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email16
Executing one action: self.actions.modify_select('email16', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email16', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email17
Executing one action: self.actions.modify_select('email17', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email17', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email18
Executing one action: self.actions.modify_select('email18', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email18', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email19
Executing one action: self.actions.modify_select('email19', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email19', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)
 visible : ['2_Moderately_Formal']
 visible_values : ['2_Moderately_Formal']
input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)
 visible : ['3_Very_Formal']
 visible_values : ['3_Very_Formal']
input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)
 visible : ['2_Moderately_Formal']
 visible_values : ['2_Moderately_Formal']
input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)
 visible : ['1_Slightly_Formal']
 visible_values : ['1_Slightly_Formal']
input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)
 visible : ['3_Very_Formal']
 visible_values : ['3_Very_Formal']
input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
 ------- evaluating input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `2_Moderately_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `3_Very_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '0_Neither', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '0_Neither', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '0_Neither', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `2_Moderately_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Not_Usable', '3_Very_Formal', '2_Moderately_Formal', '0_Neither']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Not_Usable', '0_Not_Usable', '2_Moderately_Formal', '0_Not_Usable']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-2_Moderately_Informal', '0_Not_Usable', '0_Not_Usable', '2_Moderately_Formal', '0_Not_Usable']` - type: `<class 'list'>`
----> baseline_answer: `1_Slightly_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-2_Moderately_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Not_Usable', '3_Very_Formal', '2_Moderately_Formal', '0_Neither']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `3_Very_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '2_Moderately_Formal', '1_Slightly_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['2_Moderately_Formal', '0_Neither', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.1
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 4992 <-> row_number: 81
 --> inputs: ['email0', 'email1', 'email2', 'email3', 'email4', 'email5', 'email6', 'email7', 'email8', 'email9', 'email10', 'email11', 'email12', 'email13', 'email14', 'email15', 'email16', 'email17', 'email18', 'email19']
 --> Looking up gold labels from row index 81 of `input.csv` (unique inputs). 
 --> input labels: {'email0': ['0_Neither', '-2_Moderately_Informal'], 'email1': ['-1_Slightly_Informal', '1_Slightly_Formal'], 'email2': ['0_Neither', '-2_Moderately_Informal'], 'email3': ['1_Slightly_Formal', '1_Slightly_Formal'], 'email4': ['1_Slightly_Formal', '1_Slightly_Formal'], 'email5': ['1_Slightly_Formal', '-1_Slightly_Informal'], 'email6': ['1_Slightly_Formal', '2_Moderately_Formal'], 'email7': ['0_Neither', '0_Not_Usable'], 'email8': ['1_Slightly_Formal', '2_Moderately_Formal'], 'email9': ['0_Neither', '-3_Very_Informal'], 'email10': ['-3_Very_Informal', '-3_Very_Informal'], 'email11': ['1_Slightly_Formal', '2_Moderately_Formal'], 'email12': ['0_Neither', '-2_Moderately_Informal'], 'email13': ['1_Slightly_Formal', '2_Moderately_Formal'], 'email14': ['0_Neither', '0_Not_Usable'], 'email15': ['0_Neither', '-2_Moderately_Informal'], 'email16': ['0_Neither', '0_Neither'], 'email17': ['0_Neither', '0_Not_Usable'], 'email18': ['1_Slightly_Formal', '2_Moderately_Formal'], 'email19': ['0_Neither', '1_Slightly_Formal']}
 - - - - - -  starting a new element: `Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email0
Executing one action: self.actions.modify_select('email0', '1_Very_Informal')
Failed to execute an action self.actions.modify_select('email0', '1_Very_Informal'), error: Input value `1_Very_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email1
Executing one action: self.actions.modify_select('email1', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email1', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email2
Executing one action: self.actions.modify_select('email2', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email2', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email3
Executing one action: self.actions.modify_select('email3', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email3', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email4
Executing one action: self.actions.modify_select('email4', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email4', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email5
Executing one action: self.actions.modify_select('email5', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email5', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email6
Executing one action: self.actions.modify_select('email6', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email6', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email7
Executing one action: self.actions.modify_select('email7', '1_Very_Informal')
Failed to execute an action self.actions.modify_select('email7', '1_Very_Informal'), error: Input value `1_Very_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email8
Executing one action: self.actions.modify_select('email8', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email8', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email9
Executing one action: self.actions.modify_select('email9', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email9', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email10
Executing one action: self.actions.modify_select('email10', '-3_Very_Informal')
We are going to select this select `email10` with value `-3_Very_Informal`
 - - - - - -  starting a new element: `Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email11
Executing one action: self.actions.modify_select('email11', '3_Very_Formal')
We are going to select this select `email11` with value `3_Very_Formal`
 - - - - - -  starting a new element: `Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email12
Executing one action: self.actions.modify_select('email12', '1_Very_Informal')
Failed to execute an action self.actions.modify_select('email12', '1_Very_Informal'), error: Input value `1_Very_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email13
Executing one action: self.actions.modify_select('email13', '1_Very_Informal')
Failed to execute an action self.actions.modify_select('email13', '1_Very_Informal'), error: Input value `1_Very_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email14
Executing one action: self.actions.modify_select('email14', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email14', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email15
Executing one action: self.actions.modify_select('email15', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email15', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email16
Executing one action: self.actions.modify_select('email16', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email16', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email17
Executing one action: self.actions.modify_select('email17', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email17', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email18
Executing one action: self.actions.modify_select('email18', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email18', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email19
Executing one action: self.actions.modify_select('email19', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email19', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)
 visible : ['-3_Very_Informal']
 visible_values : ['-3_Very_Informal']
input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)
 visible : ['3_Very_Formal']
 visible_values : ['3_Very_Formal']
input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
 ------- evaluating input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '-2_Moderately_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-1_Slightly_Informal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '-2_Moderately_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '-1_Slightly_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Not_Usable']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '-3_Very_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-3_Very_Informal', '-3_Very_Informal']` - type: `<class 'list'>`
----> baseline_answer: `-3_Very_Informal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `3_Very_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '-2_Moderately_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Not_Usable']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '-2_Moderately_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Not_Usable']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.05
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 4926 <-> row_number: 15
 --> inputs: ['email0', 'email1', 'email2', 'email3', 'email4', 'email5', 'email6', 'email7', 'email8', 'email9', 'email10', 'email11', 'email12', 'email13', 'email14', 'email15', 'email16', 'email17', 'email18', 'email19']
 --> Looking up gold labels from row index 15 of `input.csv` (unique inputs). 
 --> input labels: {'email0': ['1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '-2_Moderately_Informal'], 'email1': ['-3_Very_Informal', '-3_Very_Informal', '-3_Very_Informal', '-2_Moderately_Informal', '-2_Moderately_Informal'], 'email2': ['0_Neither', '0_Neither', '2_Moderately_Formal', '1_Slightly_Formal', '-3_Very_Informal'], 'email3': ['0_Neither', '0_Neither', '2_Moderately_Formal', '1_Slightly_Formal', '-3_Very_Informal'], 'email4': ['0_Neither', '-1_Slightly_Informal', '2_Moderately_Formal', '1_Slightly_Formal', '-3_Very_Informal'], 'email5': ['0_Neither', '0_Neither', '-3_Very_Informal', '-2_Moderately_Informal', '-3_Very_Informal'], 'email6': ['0_Neither', '0_Neither', '2_Moderately_Formal', '1_Slightly_Formal', '-3_Very_Informal'], 'email7': ['0_Not_Usable', '0_Neither', '3_Very_Formal', '-2_Moderately_Informal', '0_Not_Usable'], 'email8': ['1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '-3_Very_Informal'], 'email9': ['1_Slightly_Formal', '0_Neither', '2_Moderately_Formal', '2_Moderately_Formal', '-3_Very_Informal'], 'email10': ['1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '-2_Moderately_Informal'], 'email11': ['0_Neither', '0_Neither', '2_Moderately_Formal', '1_Slightly_Formal', '-3_Very_Informal'], 'email12': ['-1_Slightly_Informal', '-2_Moderately_Informal', '2_Moderately_Formal', '-1_Slightly_Informal', '-3_Very_Informal'], 'email13': ['0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '1_Slightly_Formal'], 'email14': ['1_Slightly_Formal', '0_Neither', '0_Not_Usable', '-2_Moderately_Informal', '1_Slightly_Formal'], 'email15': ['1_Slightly_Formal', '0_Neither', '3_Very_Formal', '-2_Moderately_Informal', '-3_Very_Informal'], 'email16': ['-1_Slightly_Informal', '1_Slightly_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '1_Slightly_Formal'], 'email17': ['0_Neither', '0_Neither', '2_Moderately_Formal', '1_Slightly_Formal', '-3_Very_Informal'], 'email18': ['2_Moderately_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '-2_Moderately_Informal'], 'email19': ['0_Neither', '0_Neither', '2_Moderately_Formal', '1_Slightly_Formal', '-2_Moderately_Informal']}
 - - - - - -  starting a new element: `Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email0
Executing one action: self.actions.modify_select('email0', '-1_Slightly_Informal')
We are going to select this select `email0` with value `-1_Slightly_Informal`
 - - - - - -  starting a new element: `Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email1
Executing one action: self.actions.modify_select('email1', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email1', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email2
Executing one action: self.actions.modify_select('email2', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email2', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email3
Executing one action: self.actions.modify_select('email3', '1_Slightly_Formal')
We are going to select this select `email3` with value `1_Slightly_Formal`
 - - - - - -  starting a new element: `Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email4
Executing one action: self.actions.modify_select('email4', '1_Slightly_Formal')
We are going to select this select `email4` with value `1_Slightly_Formal`
 - - - - - -  starting a new element: `Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email5
Executing one action: self.actions.modify_select('email5', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email5', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email6
Executing one action: self.actions.modify_select('email6', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email6', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email7
Executing one action: self.actions.modify_select('email7', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email7', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email8
Executing one action: self.actions.modify_select('email8', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email8', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email9
Executing one action: self.actions.modify_select('email9', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email9', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email10
Executing one action: self.actions.modify_select('email10', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email10', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email11
Executing one action: self.actions.modify_select('email11', '3_Very_Formal')
We are going to select this select `email11` with value `3_Very_Formal`
 - - - - - -  starting a new element: `Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email12
Executing one action: self.actions.modify_select('email12', '-1_Slightly_Informal')
We are going to select this select `email12` with value `-1_Slightly_Informal`
 - - - - - -  starting a new element: `Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email13
Executing one action: self.actions.modify_select('email13', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email13', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email14
Executing one action: self.actions.modify_select('email14', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email14', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email15
Executing one action: self.actions.modify_select('email15', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email15', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email16
Executing one action: self.actions.modify_select('email16', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email16', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email17
Executing one action: self.actions.modify_select('email17', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email17', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email18
Executing one action: self.actions.modify_select('email18', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email18', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email19
Executing one action: self.actions.modify_select('email19', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email19', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)
 visible : ['-1_Slightly_Informal']
 visible_values : ['-1_Slightly_Informal']
input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)
 visible : ['1_Slightly_Formal']
 visible_values : ['1_Slightly_Formal']
input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)
 visible : ['1_Slightly_Formal']
 visible_values : ['1_Slightly_Formal']
input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)
 visible : ['3_Very_Formal']
 visible_values : ['3_Very_Formal']
input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)
 visible : ['-1_Slightly_Informal']
 visible_values : ['-1_Slightly_Informal']
input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
 ------- evaluating input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '-2_Moderately_Informal']` - type: `<class 'list'>`
----> baseline_answer: `-1_Slightly_Informal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-3_Very_Informal', '-3_Very_Informal', '-3_Very_Informal', '-2_Moderately_Informal', '-2_Moderately_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '2_Moderately_Formal', '1_Slightly_Formal', '-3_Very_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '2_Moderately_Formal', '1_Slightly_Formal', '-3_Very_Informal']` - type: `<class 'list'>`
----> baseline_answer: `1_Slightly_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '-1_Slightly_Informal', '2_Moderately_Formal', '1_Slightly_Formal', '-3_Very_Informal']` - type: `<class 'list'>`
----> baseline_answer: `1_Slightly_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '-3_Very_Informal', '-2_Moderately_Informal', '-3_Very_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '2_Moderately_Formal', '1_Slightly_Formal', '-3_Very_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Not_Usable', '0_Neither', '3_Very_Formal', '-2_Moderately_Informal', '0_Not_Usable']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '-3_Very_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '0_Neither', '2_Moderately_Formal', '2_Moderately_Formal', '-3_Very_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '-2_Moderately_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '2_Moderately_Formal', '1_Slightly_Formal', '-3_Very_Informal']` - type: `<class 'list'>`
----> baseline_answer: `3_Very_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-1_Slightly_Informal', '-2_Moderately_Informal', '2_Moderately_Formal', '-1_Slightly_Informal', '-3_Very_Informal']` - type: `<class 'list'>`
----> baseline_answer: `-1_Slightly_Informal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '0_Neither', '0_Not_Usable', '-2_Moderately_Informal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '0_Neither', '3_Very_Formal', '-2_Moderately_Informal', '-3_Very_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-1_Slightly_Informal', '1_Slightly_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '2_Moderately_Formal', '1_Slightly_Formal', '-3_Very_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['2_Moderately_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '-2_Moderately_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '2_Moderately_Formal', '1_Slightly_Formal', '-2_Moderately_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.05
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 5009 <-> row_number: 98
 --> inputs: ['email0', 'email1', 'email2', 'email3', 'email4', 'email5', 'email6', 'email7', 'email8', 'email9', 'email10', 'email11', 'email12', 'email13', 'email14', 'email15', 'email16', 'email17', 'email18', 'email19']
 --> Looking up gold labels from row index 98 of `input.csv` (unique inputs). 
 --> input labels: {'email0': ['-2_Moderately_Informal', '0_Neither', '-2_Moderately_Informal', '1_Slightly_Formal', '1_Slightly_Formal'], 'email1': ['3_Very_Formal', '1_Slightly_Formal', '0_Neither', '2_Moderately_Formal', '2_Moderately_Formal'], 'email2': ['1_Slightly_Formal', '0_Neither', '0_Neither', '0_Neither', '1_Slightly_Formal'], 'email3': ['1_Slightly_Formal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal'], 'email4': ['1_Slightly_Formal', '0_Neither', '1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal'], 'email5': ['1_Slightly_Formal', '0_Neither', '-1_Slightly_Informal', '-2_Moderately_Informal', '1_Slightly_Formal'], 'email6': ['0_Neither', '0_Neither', '-1_Slightly_Informal', '1_Slightly_Formal', '2_Moderately_Formal'], 'email7': ['1_Slightly_Formal', '0_Neither', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal'], 'email8': ['2_Moderately_Formal', '1_Slightly_Formal', '3_Very_Formal', '2_Moderately_Formal', '2_Moderately_Formal'], 'email9': ['3_Very_Formal', '0_Not_Usable', '0_Neither', '0_Not_Usable', '-2_Moderately_Informal'], 'email10': ['2_Moderately_Formal', '0_Not_Usable', '0_Not_Usable', '0_Not_Usable', '0_Not_Usable'], 'email11': ['2_Moderately_Formal', '0_Neither', '0_Neither', '-2_Moderately_Informal', '3_Very_Formal'], 'email12': ['0_Neither', '0_Neither', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal'], 'email13': ['-3_Very_Informal', '-3_Very_Informal', '-3_Very_Informal', '-3_Very_Informal', '-2_Moderately_Informal'], 'email14': ['2_Moderately_Formal', '0_Neither', '0_Neither', '0_Neither', '3_Very_Formal'], 'email15': ['0_Neither', '0_Neither', '0_Neither', '0_Neither', '2_Moderately_Formal'], 'email16': ['0_Neither', '0_Neither', '0_Neither', '0_Neither', '1_Slightly_Formal'], 'email17': ['-3_Very_Informal', '0_Neither', '-2_Moderately_Informal', '-1_Slightly_Informal', '1_Slightly_Formal'], 'email18': ['3_Very_Formal', '0_Not_Usable', '0_Neither', '0_Not_Usable', '-3_Very_Informal'], 'email19': ['3_Very_Formal', '1_Slightly_Formal', '3_Very_Formal', '2_Moderately_Formal', '3_Very_Formal']}
 - - - - - -  starting a new element: `Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email0
Executing one action: self.actions.modify_select('email0', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email0', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email1
Executing one action: self.actions.modify_select('email1', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email1', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email2
Executing one action: self.actions.modify_select('email2', '1_Very_Informal')
Failed to execute an action self.actions.modify_select('email2', '1_Very_Informal'), error: Input value `1_Very_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email3
Executing one action: self.actions.modify_select('email3', '1_Very_Informal')
Failed to execute an action self.actions.modify_select('email3', '1_Very_Informal'), error: Input value `1_Very_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email4
Executing one action: self.actions.modify_select('email4', '2_Moderately_Formal')
We are going to select this select `email4` with value `2_Moderately_Formal`
 - - - - - -  starting a new element: `Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email5
Executing one action: self.actions.modify_select('email5', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email5', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email6
Executing one action: self.actions.modify_select('email6', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email6', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email7
Executing one action: self.actions.modify_select('email7', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email7', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email8
Executing one action: self.actions.modify_select('email8', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email8', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email9
Executing one action: self.actions.modify_select('email9', '3_Very_Formal')
We are going to select this select `email9` with value `3_Very_Formal`
 - - - - - -  starting a new element: `Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email10
Executing one action: self.actions.modify_select('email10', '3_Very_Formal')
We are going to select this select `email10` with value `3_Very_Formal`
 - - - - - -  starting a new element: `Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email11
Executing one action: self.actions.modify_select('email11', '3_Very_Formal')
We are going to select this select `email11` with value `3_Very_Formal`
 - - - - - -  starting a new element: `Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email12
Executing one action: self.actions.modify_select('email12', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email12', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email13
Executing one action: self.actions.modify_select('email13', '1_Slightly_Formal')
We are going to select this select `email13` with value `1_Slightly_Formal`
 - - - - - -  starting a new element: `Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email14
Executing one action: self.actions.modify_select('email14', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email14', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email15
Executing one action: self.actions.modify_select('email15', '1_Slightly_Formal')
We are going to select this select `email15` with value `1_Slightly_Formal`
 - - - - - -  starting a new element: `Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email16
Executing one action: self.actions.modify_select('email16', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email16', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email17
Executing one action: self.actions.modify_select('email17', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email17', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email18
Executing one action: self.actions.modify_select('email18', '1_Slightly_Formal')
We are going to select this select `email18` with value `1_Slightly_Formal`
 - - - - - -  starting a new element: `Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email19
Executing one action: self.actions.modify_select('email19', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email19', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)
 visible : ['2_Moderately_Formal']
 visible_values : ['2_Moderately_Formal']
input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)
 visible : ['3_Very_Formal']
 visible_values : ['3_Very_Formal']
input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)
 visible : ['3_Very_Formal']
 visible_values : ['3_Very_Formal']
input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)
 visible : ['3_Very_Formal']
 visible_values : ['3_Very_Formal']
input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)
 visible : ['1_Slightly_Formal']
 visible_values : ['1_Slightly_Formal']
input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)
 visible : ['1_Slightly_Formal']
 visible_values : ['1_Slightly_Formal']
input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)
 visible : ['1_Slightly_Formal']
 visible_values : ['1_Slightly_Formal']
input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
 ------- evaluating input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-2_Moderately_Informal', '0_Neither', '-2_Moderately_Informal', '1_Slightly_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['3_Very_Formal', '1_Slightly_Formal', '0_Neither', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '0_Neither', '0_Neither', '0_Neither', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '0_Neither', '1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `2_Moderately_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '0_Neither', '-1_Slightly_Informal', '-2_Moderately_Informal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '-1_Slightly_Informal', '1_Slightly_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '0_Neither', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['2_Moderately_Formal', '1_Slightly_Formal', '3_Very_Formal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['3_Very_Formal', '0_Not_Usable', '0_Neither', '0_Not_Usable', '-2_Moderately_Informal']` - type: `<class 'list'>`
----> baseline_answer: `3_Very_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['2_Moderately_Formal', '0_Not_Usable', '0_Not_Usable', '0_Not_Usable', '0_Not_Usable']` - type: `<class 'list'>`
----> baseline_answer: `3_Very_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['2_Moderately_Formal', '0_Neither', '0_Neither', '-2_Moderately_Informal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `3_Very_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-3_Very_Informal', '-3_Very_Informal', '-3_Very_Informal', '-3_Very_Informal', '-2_Moderately_Informal']` - type: `<class 'list'>`
----> baseline_answer: `1_Slightly_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['2_Moderately_Formal', '0_Neither', '0_Neither', '0_Neither', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '0_Neither', '0_Neither', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `1_Slightly_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '0_Neither', '0_Neither', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-3_Very_Informal', '0_Neither', '-2_Moderately_Informal', '-1_Slightly_Informal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['3_Very_Formal', '0_Not_Usable', '0_Neither', '0_Not_Usable', '-3_Very_Informal']` - type: `<class 'list'>`
----> baseline_answer: `1_Slightly_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['3_Very_Formal', '1_Slightly_Formal', '3_Very_Formal', '2_Moderately_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 4974 <-> row_number: 63
 --> inputs: ['email0', 'email1', 'email2', 'email3', 'email4', 'email5', 'email6', 'email7', 'email8', 'email9', 'email10', 'email11', 'email12', 'email13', 'email14', 'email15', 'email16', 'email17', 'email18', 'email19']
 --> Looking up gold labels from row index 63 of `input.csv` (unique inputs). 
 --> input labels: {'email0': ['3_Very_Formal', '3_Very_Formal', '2_Moderately_Formal', '3_Very_Formal', '2_Moderately_Formal'], 'email1': ['1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal'], 'email2': ['1_Slightly_Formal', '-3_Very_Informal', '2_Moderately_Formal', '0_Neither', '2_Moderately_Formal'], 'email3': ['-1_Slightly_Informal', '-3_Very_Informal', '2_Moderately_Formal', '0_Neither', '2_Moderately_Formal'], 'email4': ['-1_Slightly_Informal', '-3_Very_Informal', '2_Moderately_Formal', '0_Neither', '2_Moderately_Formal'], 'email5': ['0_Neither', '0_Not_Usable', '-3_Very_Informal', '0_Neither', '-2_Moderately_Informal'], 'email6': ['1_Slightly_Formal', '0_Neither', '3_Very_Formal', '0_Neither', '3_Very_Formal'], 'email7': ['1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '2_Moderately_Formal'], 'email8': ['-1_Slightly_Informal', '-3_Very_Informal', '2_Moderately_Formal', '0_Neither', '2_Moderately_Formal'], 'email9': ['-1_Slightly_Informal', '-1_Slightly_Informal', '2_Moderately_Formal', '0_Neither', '2_Moderately_Formal'], 'email10': ['1_Slightly_Formal', '-1_Slightly_Informal', '2_Moderately_Formal', '0_Not_Usable', '0_Not_Usable'], 'email11': ['1_Slightly_Formal', '0_Not_Usable', '2_Moderately_Formal', '0_Not_Usable', '0_Not_Usable'], 'email12': ['0_Not_Usable', '3_Very_Formal', '-3_Very_Informal', '0_Neither', '0_Not_Usable'], 'email13': ['-1_Slightly_Informal', '-3_Very_Informal', '2_Moderately_Formal', '1_Slightly_Formal', '2_Moderately_Formal'], 'email14': ['1_Slightly_Formal', '-3_Very_Informal', '2_Moderately_Formal', '0_Neither', '2_Moderately_Formal'], 'email15': ['-1_Slightly_Informal', '-3_Very_Informal', '2_Moderately_Formal', '0_Neither', '2_Moderately_Formal'], 'email16': ['1_Slightly_Formal', '0_Neither', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal'], 'email17': ['-2_Moderately_Informal', '-3_Very_Informal', '2_Moderately_Formal', '-2_Moderately_Informal', '2_Moderately_Formal'], 'email18': ['1_Slightly_Formal', '-1_Slightly_Informal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal'], 'email19': ['0_Not_Usable', '0_Not_Usable', '2_Moderately_Formal', '0_Not_Usable', '0_Not_Usable']}
 - - - - - -  starting a new element: `Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email0
Executing one action: self.actions.modify_select('email0', '1_Slightly_Formal')
We are going to select this select `email0` with value `1_Slightly_Formal`
 - - - - - -  starting a new element: `Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email1
Executing one action: self.actions.modify_select('email1', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email1', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email2
Executing one action: self.actions.modify_select('email2', '1_Slightly_Formal')
We are going to select this select `email2` with value `1_Slightly_Formal`
 - - - - - -  starting a new element: `Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email3
Executing one action: self.actions.modify_select('email3', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email3', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email4
Executing one action: self.actions.modify_select('email4', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email4', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email5
Executing one action: self.actions.modify_select('email5', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email5', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email6
Executing one action: self.actions.modify_select('email6', '7 Very Formal')
Failed to execute an action self.actions.modify_select('email6', '7 Very Formal'), error: Input value `7 Very Formal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email7
Executing one action: self.actions.modify_select('email7', '1_Very_Informal')
Failed to execute an action self.actions.modify_select('email7', '1_Very_Informal'), error: Input value `1_Very_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email8
Executing one action: self.actions.modify_select('email8', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email8', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email9
Executing one action: self.actions.modify_select('email9', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email9', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email10
Executing one action: self.actions.modify_select('email10', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email10', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email11
Executing one action: self.actions.modify_select('email11', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email11', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email12
Executing one action: self.actions.modify_select('email12', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email12', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email13
Executing one action: self.actions.modify_select('email13', '-3_Very_Informal')
We are going to select this select `email13` with value `-3_Very_Informal`
 - - - - - -  starting a new element: `Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email14
Executing one action: self.actions.modify_select('email14', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email14', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email15
Executing one action: self.actions.modify_select('email15', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email15', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email16
Executing one action: self.actions.modify_select('email16', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email16', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email17
Executing one action: self.actions.modify_select('email17', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email17', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email18
Executing one action: self.actions.modify_select('email18', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email18', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email19
Executing one action: self.actions.modify_select('email19', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email19', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)
 visible : ['1_Slightly_Formal']
 visible_values : ['1_Slightly_Formal']
input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)
 visible : ['1_Slightly_Formal']
 visible_values : ['1_Slightly_Formal']
input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)
 visible : ['-3_Very_Informal']
 visible_values : ['-3_Very_Informal']
input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
 ------- evaluating input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['3_Very_Formal', '3_Very_Formal', '2_Moderately_Formal', '3_Very_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `1_Slightly_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '-3_Very_Informal', '2_Moderately_Formal', '0_Neither', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `1_Slightly_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-1_Slightly_Informal', '-3_Very_Informal', '2_Moderately_Formal', '0_Neither', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-1_Slightly_Informal', '-3_Very_Informal', '2_Moderately_Formal', '0_Neither', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Not_Usable', '-3_Very_Informal', '0_Neither', '-2_Moderately_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '0_Neither', '3_Very_Formal', '0_Neither', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-1_Slightly_Informal', '-3_Very_Informal', '2_Moderately_Formal', '0_Neither', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-1_Slightly_Informal', '-1_Slightly_Informal', '2_Moderately_Formal', '0_Neither', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '-1_Slightly_Informal', '2_Moderately_Formal', '0_Not_Usable', '0_Not_Usable']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '0_Not_Usable', '2_Moderately_Formal', '0_Not_Usable', '0_Not_Usable']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Not_Usable', '3_Very_Formal', '-3_Very_Informal', '0_Neither', '0_Not_Usable']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-1_Slightly_Informal', '-3_Very_Informal', '2_Moderately_Formal', '1_Slightly_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `-3_Very_Informal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '-3_Very_Informal', '2_Moderately_Formal', '0_Neither', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-1_Slightly_Informal', '-3_Very_Informal', '2_Moderately_Formal', '0_Neither', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '0_Neither', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-2_Moderately_Informal', '-3_Very_Informal', '2_Moderately_Formal', '-2_Moderately_Informal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '-1_Slightly_Informal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Not_Usable', '0_Not_Usable', '2_Moderately_Formal', '0_Not_Usable', '0_Not_Usable']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 4937 <-> row_number: 26
 --> inputs: ['email0', 'email1', 'email2', 'email3', 'email4', 'email5', 'email6', 'email7', 'email8', 'email9', 'email10', 'email11', 'email12', 'email13', 'email14', 'email15', 'email16', 'email17', 'email18', 'email19']
 --> Looking up gold labels from row index 26 of `input.csv` (unique inputs). 
 --> input labels: {'email0': ['1_Slightly_Formal', '3_Very_Formal', '3_Very_Formal', '1_Slightly_Formal', '1_Slightly_Formal'], 'email1': ['2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal', '1_Slightly_Formal', '1_Slightly_Formal'], 'email2': ['1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '1_Slightly_Formal'], 'email3': ['0_Neither', '0_Neither', '0_Neither', '-2_Moderately_Informal', '0_Neither'], 'email4': ['1_Slightly_Formal', '0_Neither', '0_Neither', '-2_Moderately_Informal', '0_Neither'], 'email5': ['0_Neither', '2_Moderately_Formal', '1_Slightly_Formal', '-1_Slightly_Informal', '-1_Slightly_Informal'], 'email6': ['0_Neither', '0_Neither', '0_Neither', '-1_Slightly_Informal', '-1_Slightly_Informal'], 'email7': ['0_Neither', '0_Neither', '0_Neither', '0_Not_Usable', '0_Not_Usable'], 'email8': ['1_Slightly_Formal', '1_Slightly_Formal', '0_Neither', '-1_Slightly_Informal', '1_Slightly_Formal'], 'email9': ['1_Slightly_Formal', '2_Moderately_Formal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal'], 'email10': ['0_Neither', '0_Neither', '0_Neither', '-1_Slightly_Informal', '-1_Slightly_Informal'], 'email11': ['0_Neither', '0_Neither', '0_Neither', '-2_Moderately_Informal', '-1_Slightly_Informal'], 'email12': ['0_Neither', '0_Neither', '0_Neither', '-1_Slightly_Informal', '-1_Slightly_Informal'], 'email13': ['2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal', '1_Slightly_Formal', '1_Slightly_Formal'], 'email14': ['0_Neither', '0_Not_Usable', '-1_Slightly_Informal', '-3_Very_Informal', '0_Not_Usable'], 'email15': ['0_Neither', '0_Neither', '0_Neither', '-1_Slightly_Informal', '-1_Slightly_Informal'], 'email16': ['1_Slightly_Formal', '0_Neither', '2_Moderately_Formal', '1_Slightly_Formal', '1_Slightly_Formal'], 'email17': ['0_Neither', '0_Neither', '-1_Slightly_Informal', '-1_Slightly_Informal', '1_Slightly_Formal'], 'email18': ['0_Neither', '1_Slightly_Formal', '1_Slightly_Formal', '-1_Slightly_Informal', '1_Slightly_Formal'], 'email19': ['0_Neither', '0_Neither', '1_Slightly_Formal', '0_Neither', '1_Slightly_Formal']}
 - - - - - -  starting a new element: `Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email0
Executing one action: self.actions.modify_select('email0', '1_Slightly_Formal')
We are going to select this select `email0` with value `1_Slightly_Formal`
 - - - - - -  starting a new element: `Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email1
Executing one action: self.actions.modify_select('email1', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email1', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email2
Executing one action: self.actions.modify_select('email2', '-1_Slightly_Informal')
We are going to select this select `email2` with value `-1_Slightly_Informal`
 - - - - - -  starting a new element: `Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email3
Executing one action: self.actions.modify_select('email3', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email3', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email4
Executing one action: self.actions.modify_select('email4', '2_Moderately_Formal')
We are going to select this select `email4` with value `2_Moderately_Formal`
 - - - - - -  starting a new element: `Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email5
Executing one action: self.actions.modify_select('email5', '-1_Slightly_Informal')
We are going to select this select `email5` with value `-1_Slightly_Informal`
 - - - - - -  starting a new element: `Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email6
Executing one action: self.actions.modify_select('email6', '1_Very_Informal')
Failed to execute an action self.actions.modify_select('email6', '1_Very_Informal'), error: Input value `1_Very_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email7
Executing one action: self.actions.modify_select('email7', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email7', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email8
Executing one action: self.actions.modify_select('email8', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email8', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email9
Executing one action: self.actions.modify_select('email9', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email9', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email10
Executing one action: self.actions.modify_select('email10', '3_Very_Formal')
We are going to select this select `email10` with value `3_Very_Formal`
 - - - - - -  starting a new element: `Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email11
Executing one action: self.actions.modify_select('email11', '-1_Slightly_Informal')
We are going to select this select `email11` with value `-1_Slightly_Informal`
 - - - - - -  starting a new element: `Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email12
Executing one action: self.actions.modify_select('email12', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email12', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email13
Executing one action: self.actions.modify_select('email13', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email13', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email14
Executing one action: self.actions.modify_select('email14', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email14', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email15
Executing one action: self.actions.modify_select('email15', '3_Very_Formal')
We are going to select this select `email15` with value `3_Very_Formal`
 - - - - - -  starting a new element: `Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email16
Executing one action: self.actions.modify_select('email16', '1_Slightly_Formal')
We are going to select this select `email16` with value `1_Slightly_Formal`
 - - - - - -  starting a new element: `Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email17
Executing one action: self.actions.modify_select('email17', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email17', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email18
Executing one action: self.actions.modify_select('email18', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email18', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email19
Executing one action: self.actions.modify_select('email19', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email19', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)
 visible : ['1_Slightly_Formal']
 visible_values : ['1_Slightly_Formal']
input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)
 visible : ['-1_Slightly_Informal']
 visible_values : ['-1_Slightly_Informal']
input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)
 visible : ['2_Moderately_Formal']
 visible_values : ['2_Moderately_Formal']
input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)
 visible : ['-1_Slightly_Informal']
 visible_values : ['-1_Slightly_Informal']
input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)
 visible : ['3_Very_Formal']
 visible_values : ['3_Very_Formal']
input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)
 visible : ['-1_Slightly_Informal']
 visible_values : ['-1_Slightly_Informal']
input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)
 visible : ['3_Very_Formal']
 visible_values : ['3_Very_Formal']
input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)
 visible : ['1_Slightly_Formal']
 visible_values : ['1_Slightly_Formal']
input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
 ------- evaluating input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '3_Very_Formal', '3_Very_Formal', '1_Slightly_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `1_Slightly_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal', '1_Slightly_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `-1_Slightly_Informal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '0_Neither', '-2_Moderately_Informal', '0_Neither']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '0_Neither', '0_Neither', '-2_Moderately_Informal', '0_Neither']` - type: `<class 'list'>`
----> baseline_answer: `2_Moderately_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '2_Moderately_Formal', '1_Slightly_Formal', '-1_Slightly_Informal', '-1_Slightly_Informal']` - type: `<class 'list'>`
----> baseline_answer: `-1_Slightly_Informal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '0_Neither', '-1_Slightly_Informal', '-1_Slightly_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '0_Neither', '0_Not_Usable', '0_Not_Usable']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '1_Slightly_Formal', '0_Neither', '-1_Slightly_Informal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '2_Moderately_Formal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '0_Neither', '-1_Slightly_Informal', '-1_Slightly_Informal']` - type: `<class 'list'>`
----> baseline_answer: `3_Very_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '0_Neither', '-2_Moderately_Informal', '-1_Slightly_Informal']` - type: `<class 'list'>`
----> baseline_answer: `-1_Slightly_Informal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '0_Neither', '-1_Slightly_Informal', '-1_Slightly_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal', '1_Slightly_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Not_Usable', '-1_Slightly_Informal', '-3_Very_Informal', '0_Not_Usable']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '0_Neither', '-1_Slightly_Informal', '-1_Slightly_Informal']` - type: `<class 'list'>`
----> baseline_answer: `3_Very_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '0_Neither', '2_Moderately_Formal', '1_Slightly_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `1_Slightly_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '-1_Slightly_Informal', '-1_Slightly_Informal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '1_Slightly_Formal', '1_Slightly_Formal', '-1_Slightly_Informal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '1_Slightly_Formal', '0_Neither', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.15
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 4946 <-> row_number: 35
 --> inputs: ['email0', 'email1', 'email2', 'email3', 'email4', 'email5', 'email6', 'email7', 'email8', 'email9', 'email10', 'email11', 'email12', 'email13', 'email14', 'email15', 'email16', 'email17', 'email18', 'email19']
 --> Looking up gold labels from row index 35 of `input.csv` (unique inputs). 
 --> input labels: {'email0': ['0_Neither', '2_Moderately_Formal', '-2_Moderately_Informal', '2_Moderately_Formal', '2_Moderately_Formal'], 'email1': ['1_Slightly_Formal', '3_Very_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal'], 'email2': ['2_Moderately_Formal', '3_Very_Formal', '0_Neither', '-2_Moderately_Informal', '-2_Moderately_Informal'], 'email3': ['0_Neither', '3_Very_Formal', '0_Neither', '2_Moderately_Formal', '2_Moderately_Formal'], 'email4': ['0_Neither', '3_Very_Formal', '-3_Very_Informal', '-3_Very_Informal', '1_Slightly_Formal'], 'email5': ['-2_Moderately_Informal', '2_Moderately_Formal', '-3_Very_Informal', '-3_Very_Informal', '-2_Moderately_Informal'], 'email6': ['-1_Slightly_Informal', '2_Moderately_Formal', '-3_Very_Informal', '2_Moderately_Formal', '-1_Slightly_Informal'], 'email7': ['0_Neither', '3_Very_Formal', '0_Not_Usable', '0_Not_Usable', '0_Not_Usable'], 'email8': ['0_Neither', '2_Moderately_Formal', '0_Neither', '0_Not_Usable', '0_Neither'], 'email9': ['1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal'], 'email10': ['0_Neither', '0_Not_Usable', '-3_Very_Informal', '-3_Very_Informal', '-3_Very_Informal'], 'email11': ['0_Neither', '-3_Very_Informal', '0_Not_Usable', '-2_Moderately_Informal', '-3_Very_Informal'], 'email12': ['0_Neither', '3_Very_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Neither'], 'email13': ['1_Slightly_Formal', '2_Moderately_Formal', '-3_Very_Informal', '2_Moderately_Formal', '2_Moderately_Formal'], 'email14': ['1_Slightly_Formal', '2_Moderately_Formal', '0_Neither', '2_Moderately_Formal', '2_Moderately_Formal'], 'email15': ['0_Neither', '2_Moderately_Formal', '-2_Moderately_Informal', '2_Moderately_Formal', '1_Slightly_Formal'], 'email16': ['0_Neither', '2_Moderately_Formal', '-2_Moderately_Informal', '0_Not_Usable', '0_Not_Usable'], 'email17': ['0_Neither', '3_Very_Formal', '0_Neither', '3_Very_Formal', '0_Not_Usable'], 'email18': ['0_Neither', '2_Moderately_Formal', '0_Neither', '2_Moderately_Formal', '3_Very_Formal'], 'email19': ['1_Slightly_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal']}
 - - - - - -  starting a new element: `Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email0
Executing one action: self.actions.modify_select('email0', '1_Slightly_Formal')
We are going to select this select `email0` with value `1_Slightly_Formal`
 - - - - - -  starting a new element: `Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email1
Executing one action: self.actions.modify_select('email1', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email1', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email2
Executing one action: self.actions.modify_select('email2', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email2', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email3
Executing one action: self.actions.modify_select('email3', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email3', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email4
Executing one action: self.actions.modify_select('email4', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email4', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email5
Executing one action: self.actions.modify_select('email5', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email5', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email6
Executing one action: self.actions.modify_select('email6', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email6', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email7
Executing one action: self.actions.modify_select('email7', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email7', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email8
Executing one action: self.actions.modify_select('email8', '1_Slightly_Formal')
We are going to select this select `email8` with value `1_Slightly_Formal`
 - - - - - -  starting a new element: `Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email9
Executing one action: self.actions.modify_select('email9', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email9', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email10
Executing one action: self.actions.modify_select('email10', '-3_Very_Informal')
We are going to select this select `email10` with value `-3_Very_Informal`
 - - - - - -  starting a new element: `Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email11
Executing one action: self.actions.modify_select('email11', '3_Very_Formal')
We are going to select this select `email11` with value `3_Very_Formal`
 - - - - - -  starting a new element: `Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email12
Executing one action: self.actions.modify_select('email12', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email12', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email13
Executing one action: self.actions.modify_select('email13', '-1_Slightly_Informal')
We are going to select this select `email13` with value `-1_Slightly_Informal`
 - - - - - -  starting a new element: `Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email14
Executing one action: self.actions.modify_select('email14', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email14', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email15
Executing one action: self.actions.modify_select('email15', '-2_Moderately_Informal')
We are going to select this select `email15` with value `-2_Moderately_Informal`
 - - - - - -  starting a new element: `Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email16
Executing one action: self.actions.modify_select('email16', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email16', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email17
Executing one action: self.actions.modify_select('email17', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email17', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email18
Executing one action: self.actions.modify_select('email18', '0_Neither')
We are going to select this select `email18` with value `0_Neither`
 - - - - - -  starting a new element: `Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email19
Executing one action: self.actions.modify_select('email19', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email19', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)
 visible : ['1_Slightly_Formal']
 visible_values : ['1_Slightly_Formal']
input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)
 visible : ['1_Slightly_Formal']
 visible_values : ['1_Slightly_Formal']
input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)
 visible : ['-3_Very_Informal']
 visible_values : ['-3_Very_Informal']
input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)
 visible : ['3_Very_Formal']
 visible_values : ['3_Very_Formal']
input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)
 visible : ['-1_Slightly_Informal']
 visible_values : ['-1_Slightly_Informal']
input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)
 visible : ['-2_Moderately_Informal']
 visible_values : ['-2_Moderately_Informal']
input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)
 visible : ['0_Neither']
 visible_values : ['0_Neither']
input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
 ------- evaluating input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '2_Moderately_Formal', '-2_Moderately_Informal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `1_Slightly_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '3_Very_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['2_Moderately_Formal', '3_Very_Formal', '0_Neither', '-2_Moderately_Informal', '-2_Moderately_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '3_Very_Formal', '0_Neither', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '3_Very_Formal', '-3_Very_Informal', '-3_Very_Informal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-2_Moderately_Informal', '2_Moderately_Formal', '-3_Very_Informal', '-3_Very_Informal', '-2_Moderately_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-1_Slightly_Informal', '2_Moderately_Formal', '-3_Very_Informal', '2_Moderately_Formal', '-1_Slightly_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '3_Very_Formal', '0_Not_Usable', '0_Not_Usable', '0_Not_Usable']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '2_Moderately_Formal', '0_Neither', '0_Not_Usable', '0_Neither']` - type: `<class 'list'>`
----> baseline_answer: `1_Slightly_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Not_Usable', '-3_Very_Informal', '-3_Very_Informal', '-3_Very_Informal']` - type: `<class 'list'>`
----> baseline_answer: `-3_Very_Informal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '-3_Very_Informal', '0_Not_Usable', '-2_Moderately_Informal', '-3_Very_Informal']` - type: `<class 'list'>`
----> baseline_answer: `3_Very_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '3_Very_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Neither']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '2_Moderately_Formal', '-3_Very_Informal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `-1_Slightly_Informal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '2_Moderately_Formal', '0_Neither', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '2_Moderately_Formal', '-2_Moderately_Informal', '2_Moderately_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `-2_Moderately_Informal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '2_Moderately_Formal', '-2_Moderately_Informal', '0_Not_Usable', '0_Not_Usable']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '3_Very_Formal', '0_Neither', '3_Very_Formal', '0_Not_Usable']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '2_Moderately_Formal', '0_Neither', '2_Moderately_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `0_Neither` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.1
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]}
instance_id: 5011 <-> row_number: 100
 --> inputs: ['email0', 'email1', 'email2', 'email3', 'email4', 'email5', 'email6', 'email7', 'email8', 'email9', 'email10', 'email11', 'email12', 'email13', 'email14', 'email15', 'email16', 'email17', 'email18', 'email19']
 --> Looking up gold labels from row index 100 of `input.csv` (unique inputs). 
 --> input labels: {'email0': ['0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '-2_Moderately_Informal', '0_Not_Usable'], 'email1': ['-1_Slightly_Informal', '1_Slightly_Formal', '3_Very_Formal', '2_Moderately_Formal', '1_Slightly_Formal'], 'email2': ['0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal'], 'email3': ['1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal'], 'email4': ['1_Slightly_Formal', '0_Neither', '2_Moderately_Formal', '2_Moderately_Formal', '1_Slightly_Formal'], 'email5': ['0_Neither', '1_Slightly_Formal', '3_Very_Formal', '-3_Very_Informal', '-1_Slightly_Informal'], 'email6': ['2_Moderately_Formal', '3_Very_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal'], 'email7': ['0_Neither', '2_Moderately_Formal', '2_Moderately_Formal', '-3_Very_Informal', '-2_Moderately_Informal'], 'email8': ['2_Moderately_Formal', '3_Very_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal'], 'email9': ['2_Moderately_Formal', '3_Very_Formal', '2_Moderately_Formal', '3_Very_Formal', '3_Very_Formal'], 'email10': ['0_Neither', '-2_Moderately_Informal', '1_Slightly_Formal', '1_Slightly_Formal', '-1_Slightly_Informal'], 'email11': ['0_Neither', '-1_Slightly_Informal', '2_Moderately_Formal', '2_Moderately_Formal', '1_Slightly_Formal'], 'email12': ['0_Neither', '2_Moderately_Formal', '3_Very_Formal', '2_Moderately_Formal', '-1_Slightly_Informal'], 'email13': ['2_Moderately_Formal', '3_Very_Formal', '3_Very_Formal', '3_Very_Formal', '2_Moderately_Formal'], 'email14': ['1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '1_Slightly_Formal'], 'email15': ['1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal'], 'email16': ['0_Neither', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal', '2_Moderately_Formal'], 'email17': ['0_Neither', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal'], 'email18': ['0_Neither', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal'], 'email19': ['1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '-2_Moderately_Informal', '-3_Very_Informal']}
 - - - - - -  starting a new element: `Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email0
Executing one action: self.actions.modify_select('email0', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email0', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email1
Executing one action: self.actions.modify_select('email1', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email1', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email2
Executing one action: self.actions.modify_select('email2', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email2', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email3
Executing one action: self.actions.modify_select('email3', '-2_Moderately_Informal')
We are going to select this select `email3` with value `-2_Moderately_Informal`
 - - - - - -  starting a new element: `Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email4
Executing one action: self.actions.modify_select('email4', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email4', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email5
Executing one action: self.actions.modify_select('email5', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email5', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email6
Executing one action: self.actions.modify_select('email6', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email6', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email7
Executing one action: self.actions.modify_select('email7', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email7', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email8
Executing one action: self.actions.modify_select('email8', '3_Very_Formal')
We are going to select this select `email8` with value `3_Very_Formal`
 - - - - - -  starting a new element: `Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email9
Executing one action: self.actions.modify_select('email9', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email9', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email10
Executing one action: self.actions.modify_select('email10', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email10', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email11
Executing one action: self.actions.modify_select('email11', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email11', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email12
Executing one action: self.actions.modify_select('email12', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email12', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email13
Executing one action: self.actions.modify_select('email13', '3_Very_Formal')
We are going to select this select `email13` with value `3_Very_Formal`
 - - - - - -  starting a new element: `Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email14
Executing one action: self.actions.modify_select('email14', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email14', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email15
Executing one action: self.actions.modify_select('email15', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email15', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email16
Executing one action: self.actions.modify_select('email16', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email16', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email17
Executing one action: self.actions.modify_select('email17', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email17', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email18
Executing one action: self.actions.modify_select('email18', '1_Slightly_Formal')
We are going to select this select `email18` with value `1_Slightly_Formal`
 - - - - - -  starting a new element: `Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email19
Executing one action: self.actions.modify_select('email19', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email19', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)
 visible : ['-2_Moderately_Informal']
 visible_values : ['-2_Moderately_Informal']
input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)
 visible : ['3_Very_Formal']
 visible_values : ['3_Very_Formal']
input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)
 visible : ['3_Very_Formal']
 visible_values : ['3_Very_Formal']
input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)
 visible : ['1_Slightly_Formal']
 visible_values : ['1_Slightly_Formal']
input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
 ------- evaluating input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '-2_Moderately_Informal', '0_Not_Usable']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-1_Slightly_Informal', '1_Slightly_Formal', '3_Very_Formal', '2_Moderately_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `-2_Moderately_Informal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '0_Neither', '2_Moderately_Formal', '2_Moderately_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '1_Slightly_Formal', '3_Very_Formal', '-3_Very_Informal', '-1_Slightly_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['2_Moderately_Formal', '3_Very_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '2_Moderately_Formal', '2_Moderately_Formal', '-3_Very_Informal', '-2_Moderately_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['2_Moderately_Formal', '3_Very_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `3_Very_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['2_Moderately_Formal', '3_Very_Formal', '2_Moderately_Formal', '3_Very_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '-2_Moderately_Informal', '1_Slightly_Formal', '1_Slightly_Formal', '-1_Slightly_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '-1_Slightly_Informal', '2_Moderately_Formal', '2_Moderately_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '2_Moderately_Formal', '3_Very_Formal', '2_Moderately_Formal', '-1_Slightly_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['2_Moderately_Formal', '3_Very_Formal', '3_Very_Formal', '3_Very_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `3_Very_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `1_Slightly_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '-2_Moderately_Informal', '-3_Very_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.05
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 4980 <-> row_number: 69
 --> inputs: ['email0', 'email1', 'email2', 'email3', 'email4', 'email5', 'email6', 'email7', 'email8', 'email9', 'email10', 'email11', 'email12', 'email13', 'email14', 'email15', 'email16', 'email17', 'email18', 'email19']
 --> Looking up gold labels from row index 69 of `input.csv` (unique inputs). 
 --> input labels: {'email0': ['0_Neither', '0_Neither', '0_Neither', '-3_Very_Informal', '-2_Moderately_Informal'], 'email1': ['1_Slightly_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '1_Slightly_Formal'], 'email2': ['0_Neither', '1_Slightly_Formal', '0_Neither', '2_Moderately_Formal', '1_Slightly_Formal'], 'email3': ['-1_Slightly_Informal', '0_Neither', '0_Neither', '2_Moderately_Formal', '1_Slightly_Formal'], 'email4': ['2_Moderately_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal'], 'email5': ['1_Slightly_Formal', '1_Slightly_Formal', '1_Slightly_Formal', '3_Very_Formal', '2_Moderately_Formal'], 'email6': ['1_Slightly_Formal', '1_Slightly_Formal', '1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal'], 'email7': ['-1_Slightly_Informal', '-2_Moderately_Informal', '0_Neither', '0_Not_Usable', '3_Very_Formal'], 'email8': ['0_Neither', '0_Neither', '0_Neither', '3_Very_Formal', '1_Slightly_Formal'], 'email9': ['2_Moderately_Formal', '3_Very_Formal', '2_Moderately_Formal', '3_Very_Formal', '3_Very_Formal'], 'email10': ['0_Neither', '0_Neither', '0_Neither', '2_Moderately_Formal', '1_Slightly_Formal'], 'email11': ['2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal', '2_Moderately_Formal'], 'email12': ['2_Moderately_Formal', '3_Very_Formal', '3_Very_Formal', '3_Very_Formal', '2_Moderately_Formal'], 'email13': ['1_Slightly_Formal', '1_Slightly_Formal', '1_Slightly_Formal', '3_Very_Formal', '2_Moderately_Formal'], 'email14': ['-1_Slightly_Informal', '0_Neither', '0_Neither', '2_Moderately_Formal', '1_Slightly_Formal'], 'email15': ['1_Slightly_Formal', '0_Neither', '0_Neither', '2_Moderately_Formal', '1_Slightly_Formal'], 'email16': ['0_Neither', '-2_Moderately_Informal', '0_Neither', '0_Not_Usable', '-3_Very_Informal'], 'email17': ['2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal', '2_Moderately_Formal'], 'email18': ['-1_Slightly_Informal', '0_Neither', '0_Not_Usable', '0_Not_Usable', '-3_Very_Informal'], 'email19': ['1_Slightly_Formal', '-2_Moderately_Informal', '0_Neither', '2_Moderately_Formal', '-3_Very_Informal']}
 - - - - - -  starting a new element: `Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email0
Executing one action: self.actions.modify_select('email0', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email0', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email1
Executing one action: self.actions.modify_select('email1', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email1', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email2
Executing one action: self.actions.modify_select('email2', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email2', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email3
Executing one action: self.actions.modify_select('email3', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email3', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email4
Executing one action: self.actions.modify_select('email4', '1_Slightly_Formal')
We are going to select this select `email4` with value `1_Slightly_Formal`
 - - - - - -  starting a new element: `Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email5
Executing one action: self.actions.modify_select('email5', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email5', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email6
Executing one action: self.actions.modify_select('email6', '1_Very_Informal')
Failed to execute an action self.actions.modify_select('email6', '1_Very_Informal'), error: Input value `1_Very_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email7
Executing one action: self.actions.modify_select('email7', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email7', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email8
Executing one action: self.actions.modify_select('email8', '-2_Moderately_Informal')
We are going to select this select `email8` with value `-2_Moderately_Informal`
 - - - - - -  starting a new element: `Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email9
Executing one action: self.actions.modify_select('email9', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email9', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email10
Executing one action: self.actions.modify_select('email10', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email10', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email11
Executing one action: self.actions.modify_select('email11', '1_Very_Informal')
Failed to execute an action self.actions.modify_select('email11', '1_Very_Informal'), error: Input value `1_Very_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email12
Executing one action: self.actions.modify_select('email12', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email12', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email13
Executing one action: self.actions.modify_select('email13', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email13', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email14
Executing one action: self.actions.modify_select('email14', '1_Slightly_Formal')
We are going to select this select `email14` with value `1_Slightly_Formal`
 - - - - - -  starting a new element: `Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email15
Executing one action: self.actions.modify_select('email15', '-2_Moderately_Informal')
We are going to select this select `email15` with value `-2_Moderately_Informal`
 - - - - - -  starting a new element: `Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email16
Executing one action: self.actions.modify_select('email16', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email16', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email17
Executing one action: self.actions.modify_select('email17', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email17', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
 - - - - - -  starting a new element: `Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email18
Executing one action: self.actions.modify_select('email18', '3_Very_Formal')
We are going to select this select `email18` with value `3_Very_Formal`
 - - - - - -  starting a new element: `Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)` - - - - - -  
input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)
about to try executing one action, on the following input: email19
Executing one action: self.actions.modify_select('email19', '2_Moderately_Informal')
Failed to execute an action self.actions.modify_select('email19', '2_Moderately_Informal'), error: Input value `2_Moderately_Informal` is not among the available option values `['NA', '-3_Very_Informal', '-2_Moderately_Informal', '-1_Slightly_Informal', '0_Neither', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal', '0_Not_Usable']`
input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`)
 visible : ['1_Slightly_Formal']
 visible_values : ['1_Slightly_Formal']
input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`)
 visible : ['-2_Moderately_Informal']
 visible_values : ['-2_Moderately_Informal']
input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`)
 visible : ['1_Slightly_Formal']
 visible_values : ['1_Slightly_Formal']
input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`)
 visible : ['-2_Moderately_Informal']
 visible_values : ['-2_Moderately_Informal']
input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`)
 visible : ['3_Very_Formal']
 visible_values : ['3_Very_Formal']
input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`)
 visible : ['NA']
 visible_values : ['NA']
 ------- evaluating input: Input(name=`email0`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '0_Neither', '-3_Very_Informal', '-2_Moderately_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email1`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email2`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '1_Slightly_Formal', '0_Neither', '2_Moderately_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email3`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-1_Slightly_Informal', '0_Neither', '0_Neither', '2_Moderately_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email4`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['2_Moderately_Formal', '2_Moderately_Formal', '1_Slightly_Formal', '2_Moderately_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `1_Slightly_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email5`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '1_Slightly_Formal', '1_Slightly_Formal', '3_Very_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email6`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '1_Slightly_Formal', '1_Slightly_Formal', '1_Slightly_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email7`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-1_Slightly_Informal', '-2_Moderately_Informal', '0_Neither', '0_Not_Usable', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email8`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '0_Neither', '3_Very_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `-2_Moderately_Informal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email9`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['2_Moderately_Formal', '3_Very_Formal', '2_Moderately_Formal', '3_Very_Formal', '3_Very_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email10`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '0_Neither', '0_Neither', '2_Moderately_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email11`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email12`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['2_Moderately_Formal', '3_Very_Formal', '3_Very_Formal', '3_Very_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email13`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '1_Slightly_Formal', '1_Slightly_Formal', '3_Very_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email14`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-1_Slightly_Informal', '0_Neither', '0_Neither', '2_Moderately_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `1_Slightly_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email15`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '0_Neither', '0_Neither', '2_Moderately_Formal', '1_Slightly_Formal']` - type: `<class 'list'>`
----> baseline_answer: `-2_Moderately_Informal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email16`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['0_Neither', '-2_Moderately_Informal', '0_Neither', '0_Not_Usable', '-3_Very_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email17`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['2_Moderately_Formal', '2_Moderately_Formal', '2_Moderately_Formal', '3_Very_Formal', '2_Moderately_Formal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email18`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['-1_Slightly_Informal', '0_Neither', '0_Not_Usable', '0_Not_Usable', '-3_Very_Informal']` - type: `<class 'list'>`
----> baseline_answer: `3_Very_Formal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`email19`, type=`select`, task=`Word Formality Annotation`) ------- 
----> answers: `['1_Slightly_Formal', '-2_Moderately_Informal', '0_Neither', '2_Moderately_Formal', '-3_Very_Informal']` - type: `<class 'list'>`
----> baseline_answer: `NA` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'select': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
Task: Word Formality Annotation --> Score: 0.027500000000000004
Premature destructor being called potentially
