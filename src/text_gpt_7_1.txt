Solver: gpt4-text
 = = = = = = = = = = = = starting new task: `ROT Details [m=50] rocstories - 0 - 99` = = = = = = = = = = = = 
First instance id: 32971
instance_id: 32979 <-> row_number: 8
 --> inputs: ['rot-agree', 'rot-categorization', 'rot-moral-foundations', 'char-involved-general', 'rot-rewrite', 'rot-judgment', 'agency-fwd', 'action-fwd-good', 'fwd-agree', 'fwd-legal', 'fwd-pressure', 'char-involved-fwd', 'fwd-hypothetical', 'n-characters']
 --> Looking up gold labels from row index 8 of `input.csv` (unique inputs). 
 --> input labels: {'rot-agree': [2, 0, 1, 1, 0, 1, 0, 2, 1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 3, 2, 1, 2, 1, 2, 3, 2, 1, 1, 2, 2, 1, 2, 3, 2, 1, 2, 1, 1, 2, 2, 3, 2, 2, 2, 2, 0, 3, 3, 1, 2], 'rot-categorization': ['morality-ethics|social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms|advice', 'social-norms', 'description', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms|advice', 'social-norms|description', 'social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'social-norms', 'social-norms|advice', 'social-norms|advice', 'social-norms', 'social-norms', 'description', 'social-norms', 'social-norms|description', 'social-norms|description', 'social-norms', 'description', 'social-norms', 'social-norms', 'description', 'social-norms', 'social-norms|advice', 'social-norms', 'social-norms', 'social-norms|advice', 'description', 'morality-ethics|advice', 'social-norms', 'social-norms'], 'rot-moral-foundations': ['care-harm|sanctity-degradation', '', '', '', 'sanctity-degradation', '', 'fairness-cheating|loyalty-betrayal', 'authority-subversion', 'fairness-cheating', 'care-harm', '', '', 'authority-subversion', 'sanctity-degradation', 'authority-subversion', '', '', 'fairness-cheating', '', '', 'fairness-cheating', 'authority-subversion', '', '', 'care-harm', 'care-harm|authority-subversion|sanctity-degradation', '', 'authority-subversion', 'care-harm', '', '', '', 'loyalty-betrayal', '', 'sanctity-degradation', 'fairness-cheating|loyalty-betrayal', 'authority-subversion', '', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm', '', '', '', '', '', 'care-harm', '', ''], 'char-involved-general': ['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'rot-rewrite': ['carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'Carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol'], 'rot-judgment': ["It's okay", 'okay', "It's okay", "it's okay", "It's okay", "It's okay", "it's okay", 'okay', "It's okay", "It's okay", "It's okay", "it's okay", "It's okay", "it's okay", "It's okay", 'okay', 'okay', "It's okay", "It's okay", "It's okay", "It's okay", "it's okay", 'okay', "It's okay", "It's okay", "It's okay", "it's okay", 'ok', "It's okay", "it's okay", "It's okay", "It's okay", "It's okay", "it's okay", "It's okay", "it's okay", "It's okay", 'okay', "It's okay", "it's okay", "It's okay", 'Its okay', "It's okay", "It's okay", "it's okay", "It's okay", "it's okay", "It's okay", "it's ok", "It's okay"], 'agency-fwd': ['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency'], 'action-fwd-good': [0.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0], 'fwd-agree': [2.0, 4.0, 1.0, 1.0, 0.0, 1.0, 4.0, 2.0, 1.0, 2.0, 2.0, 1.0, 1.0, 0.0, 2.0, 2.0, 2.0, 1.0, 3.0, 2.0, 1.0, 2.0, 1.0, 2.0, 3.0, 2.0, 1.0, 1.0, 2.0, 2.0, 1.0, 2.0, 4.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 2.0, 3.0, 2.0, 2.0, 2.0, 2.0, 0.0, 3.0, 3.0, 1.0, 2.0], 'fwd-legal': ['legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated'], 'fwd-pressure': [-1.0, -1.0, -1.0, 0.0, 0.0, -1.0, -2.0, -1.0, -1.0, 0.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -2.0, -1.0, 0.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0], 'char-involved-fwd': ['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'fwd-hypothetical': ['probable', 'explicit', 'explicit', 'probable', 'explicit', 'hypothetical', 'hypothetical', 'explicit', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'probable', 'explicit', 'hypothetical', 'probable', 'hypothetical', 'probable', 'explicit', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'explicit', 'explicit', 'explicit', 'probable', 'hypothetical', 'probable', 'explicit', 'explicit', 'hypothetical', 'hypothetical', 'explicit', 'explicit', 'hypothetical', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'hypothetical'], 'n-characters': [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]}
 - - - - - -  starting a new element: `Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-agree
Executing one action: self.actions.modify_radio('rot-agree', '2')
We are going to select this radio button: <input type="radio" name="rot-agree" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-categorization
Executing one action: self.actions.modify_checkbox('rot-categorization', 'social-norms')
Looking for checkboxes with `name`: `rot-categorization` the values: `['social-norms']`
About to check this checkbox: <input type="checkbox" name="rot-categorization" value="social-norms">
 - - - - - -  starting a new element: `Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-moral-foundations
Executing one action: self.actions.modify_checkbox('rot-moral-foundations', 'care-harm')
Looking for checkboxes with `name`: `rot-moral-foundations` the values: `['care-harm']`
About to check this checkbox: <input type="checkbox" name="rot-moral-foundations" value="care-harm">
 - - - - - -  starting a new element: `Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-general
Executing one action: self.actions.modify_radio('char-involved-general', 'char-1')
We are going to select this radio button: <input type="radio" name="char-involved-general" value="char-1" required="">
 - - - - - -  starting a new element: `Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-rewrite
Executing one action: self.actions.modify_text('rot-rewrite', 'carrying your pet in public as a status symbol')
Add text `carrying your pet in public as a status symbol` to this text input: <input type="text" class="text" name="rot-rewrite" value="It's okay to carry your pet in public as a status symbol" id="rot-rewrite">
 - - - - - -  starting a new element: `Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-judgment
Executing one action: self.actions.modify_text('rot-judgment', '')
Since the input value is ``, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: agency-fwd
Executing one action: self.actions.modify_radio('agency-fwd', 'agency')
We are going to select this radio button: <input type="radio" name="agency-fwd" value="agency" required="">
 - - - - - -  starting a new element: `Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: action-fwd-good
Executing one action: self.actions.modify_radio('action-fwd-good', '1')
We are going to select this radio button: <input type="radio" name="action-fwd-good" value="1" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-agree
Executing one action: self.actions.modify_radio('fwd-agree', '2')
We are going to select this radio button: <input type="radio" name="fwd-agree" value="2" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-legal
Executing one action: self.actions.modify_radio('fwd-legal', 'legal')
We are going to select this radio button: <input type="radio" name="fwd-legal" value="legal" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-pressure
Executing one action: self.actions.modify_radio('fwd-pressure', '-2')
We are going to select this radio button: <input type="radio" name="fwd-pressure" value="-2" required="required">
 - - - - - -  starting a new element: `Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-fwd
Executing one action: self.actions.modify_radio('char-involved-fwd', 'char-1')
We are going to select this radio button: <input type="radio" name="char-involved-fwd" value="char-1" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-hypothetical
Executing one action: self.actions.modify_radio('fwd-hypothetical', 'hypothetical')
We are going to select this radio button: <input type="radio" name="fwd-hypothetical" value="hypothetical" required="required">
 - - - - - -  starting a new element: `Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `n-characters` since it is not visible.
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['social-norms']
 visible_values : ['social-norms']
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['care-harm']
 visible_values : ['care-harm']
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-1']
 visible_values : ['char-1']
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['carrying your pet in public as a status symbol']
 visible_values : ['carrying your pet in public as a status symbol']
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : [None]
 visible_values : [None]
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['agency']
 visible_values : ['agency']
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['legal']
 visible_values : ['legal']
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-1']
 visible_values : ['char-1']
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['hypothetical']
 visible_values : ['hypothetical']
input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[2, 0, 1, 1, 0, 1, 0, 2, 1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 3, 2, 1, 2, 1, 2, 3, 2, 1, 1, 2, 2, 1, 2, 3, 2, 1, 2, 1, 1, 2, 2, 3, 2, 2, 2, 2, 0, 3, 3, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['morality-ethics|social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'advice|social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'advice|social-norms', 'description|social-norms', 'social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'social-norms', 'advice|social-norms', 'advice|social-norms', 'social-norms', 'social-norms', 'description', 'social-norms', 'description|social-norms', 'description|social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'description', 'social-norms', 'advice|social-norms', 'social-norms', 'social-norms', 'advice|social-norms', 'description', 'advice|morality-ethics', 'social-norms', 'social-norms']` - type: `<class 'list'>`
----> baseline_answer: `social-norms` - type: `<class 'str'>`
Model answers: social-norms 
Gold answers: ['morality-ethics|social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'advice|social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'social-norms', 'social-norms', 'advice|social-norms', 'description|social-norms', 'social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'social-norms', 'advice|social-norms', 'advice|social-norms', 'social-norms', 'social-norms', 'description', 'social-norms', 'description|social-norms', 'description|social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'description', 'social-norms', 'advice|social-norms', 'social-norms', 'social-norms', 'advice|social-norms', 'description', 'advice|morality-ethics', 'social-norms', 'social-norms']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['care-harm|sanctity-degradation', '', '', '', 'sanctity-degradation', '', 'fairness-cheating|loyalty-betrayal', 'authority-subversion', 'fairness-cheating', 'care-harm', '', '', 'authority-subversion', 'sanctity-degradation', 'authority-subversion', '', '', 'fairness-cheating', '', '', 'fairness-cheating', 'authority-subversion', '', '', 'care-harm', 'authority-subversion|care-harm|sanctity-degradation', '', 'authority-subversion', 'care-harm', '', '', '', 'loyalty-betrayal', '', 'sanctity-degradation', 'fairness-cheating|loyalty-betrayal', 'authority-subversion', '', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm', '', '', '', '', '', 'care-harm', '', '']` - type: `<class 'list'>`
----> baseline_answer: `care-harm` - type: `<class 'str'>`
Model answers: care-harm 
Gold answers: ['care-harm|sanctity-degradation', '', '', '', 'sanctity-degradation', '', 'fairness-cheating|loyalty-betrayal', 'authority-subversion', 'fairness-cheating', 'care-harm', '', '', 'authority-subversion', 'sanctity-degradation', 'authority-subversion', '', '', 'fairness-cheating', '', '', 'fairness-cheating', 'authority-subversion', '', '', 'care-harm', 'authority-subversion|care-harm|sanctity-degradation', '', 'authority-subversion', 'care-harm', '', '', '', 'loyalty-betrayal', '', 'sanctity-degradation', 'fairness-cheating|loyalty-betrayal', 'authority-subversion', '', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm', '', '', '', '', '', 'care-harm', '', '']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `['carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'Carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol', 'carrying your pet in public as a status symbol']`
----> answers: `['Carrying your pet in public as a status symbol', 'carrying your pet in public', 'carrying your pet in public as a status symbol']` - type: `<class 'list'>`
----> baseline_answer: `carrying your pet in public as a status symbol` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `["It's okay", 'okay', "It's okay", "it's okay", "It's okay", "It's okay", "it's okay", 'okay', "It's okay", "It's okay", "It's okay", "it's okay", "It's okay", "it's okay", "It's okay", 'okay', 'okay', "It's okay", "It's okay", "It's okay", "It's okay", "it's okay", 'okay', "It's okay", "It's okay", "It's okay", "it's okay", 'ok', "It's okay", "it's okay", "It's okay", "It's okay", "It's okay", "it's okay", "It's okay", "it's okay", "It's okay", 'okay', "It's okay", "it's okay", "It's okay", 'Its okay', "It's okay", "It's okay", "it's okay", "It's okay", "it's okay", "It's okay", "it's ok", "It's okay"]`
----> answers: `["it's okay", 'Its okay', "It's okay", "it's ok", 'okay', 'ok']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency']` - type: `<class 'list'>`
----> baseline_answer: `agency` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[0.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[2.0, 4.0, 1.0, 1.0, 0.0, 1.0, 4.0, 2.0, 1.0, 2.0, 2.0, 1.0, 1.0, 0.0, 2.0, 2.0, 2.0, 1.0, 3.0, 2.0, 1.0, 2.0, 1.0, 2.0, 3.0, 2.0, 1.0, 1.0, 2.0, 2.0, 1.0, 2.0, 4.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 2.0, 3.0, 2.0, 2.0, 2.0, 2.0, 0.0, 3.0, 3.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated']` - type: `<class 'list'>`
----> baseline_answer: `legal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[-1.0, -1.0, -1.0, 0.0, 0.0, -1.0, -2.0, -1.0, -1.0, 0.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -2.0, -1.0, 0.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['probable', 'explicit', 'explicit', 'probable', 'explicit', 'hypothetical', 'hypothetical', 'explicit', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'probable', 'explicit', 'hypothetical', 'probable', 'hypothetical', 'probable', 'explicit', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'explicit', 'explicit', 'explicit', 'probable', 'hypothetical', 'probable', 'explicit', 'explicit', 'hypothetical', 'hypothetical', 'explicit', 'explicit', 'hypothetical', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'hypothetical']` - type: `<class 'list'>`
----> baseline_answer: `hypothetical` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `n-characters` since it is not visible.
 --> Per-instance overall score: 0.7692307692307693
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0], 'checkbox': [1.0, 1.0], 'text': [1.0, 0.0]}
instance_id: 32978 <-> row_number: 7
 --> inputs: ['rot-agree', 'rot-categorization', 'rot-moral-foundations', 'char-involved-general', 'rot-rewrite', 'rot-judgment', 'agency-fwd', 'action-fwd-good', 'fwd-agree', 'fwd-legal', 'fwd-pressure', 'char-involved-fwd', 'fwd-hypothetical', 'n-characters']
 --> Looking up gold labels from row index 7 of `input.csv` (unique inputs). 
 --> input labels: {'rot-agree': [3, 3, 1, 2, 3, 2, 2, 3, 4, 2, 2, 1, 1, 3, 2, 2, 2, 3, 2, 1, 3, 1, 3, 4, 2, 3, 2, 2, 2, 3, 1, 2, 3, 2, 2, 2, 2, 2, 2, 3, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3], 'rot-categorization': ['morality-ethics', 'description', 'social-norms', 'social-norms', 'morality-ethics', 'description', 'advice', 'social-norms|advice', 'social-norms', 'social-norms', 'social-norms|advice', 'morality-ethics', 'morality-ethics', 'morality-ethics|social-norms', 'social-norms|advice', 'description', 'morality-ethics', 'description', 'social-norms', 'social-norms', 'advice', 'morality-ethics|advice', 'social-norms|advice', 'morality-ethics', 'description', 'social-norms|description', 'advice', 'description', 'description', 'social-norms|advice', 'description', 'social-norms', 'morality-ethics', 'social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'morality-ethics', 'social-norms|description', 'morality-ethics|social-norms', 'morality-ethics', 'social-norms', '', 'morality-ethics', 'description', 'morality-ethics|advice', 'morality-ethics|advice', 'morality-ethics', 'morality-ethics'], 'rot-moral-foundations': ['loyalty-betrayal|authority-subversion', '', 'fairness-cheating|authority-subversion', 'authority-subversion', 'care-harm', 'fairness-cheating|loyalty-betrayal|authority-subversion', 'fairness-cheating', 'care-harm|authority-subversion', 'authority-subversion', 'care-harm|authority-subversion', 'care-harm', 'care-harm', 'authority-subversion', 'fairness-cheating|authority-subversion', 'care-harm|authority-subversion', '', 'fairness-cheating|loyalty-betrayal', 'fairness-cheating|authority-subversion', 'fairness-cheating', '', 'loyalty-betrayal', 'care-harm', 'fairness-cheating|authority-subversion', 'fairness-cheating|loyalty-betrayal', 'fairness-cheating', 'care-harm|authority-subversion', 'authority-subversion', 'loyalty-betrayal|authority-subversion', 'care-harm', 'loyalty-betrayal|authority-subversion', 'care-harm', 'authority-subversion', 'fairness-cheating|loyalty-betrayal|authority-subversion', '', 'care-harm|authority-subversion', '', 'loyalty-betrayal|authority-subversion', 'loyalty-betrayal|authority-subversion', 'authority-subversion', 'care-harm', 'fairness-cheating|authority-subversion', 'fairness-cheating|authority-subversion', 'authority-subversion', 'care-harm', 'authority-subversion', 'loyalty-betrayal', 'care-harm|authority-subversion', 'care-harm', 'care-harm|authority-subversion', 'authority-subversion'], 'char-involved-general': ['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-1', 'char-1', 'char-1', 'char-1', 'char-2', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'rot-rewrite': ['a parent enrolling a child in classes without permission.', 'enrolling your child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'enrolling a child in classes without their permission as a parent', 'Enrolling children in classes without permission.', 'enrolling your child in classes without permission.', 'enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'a parent enrolling a child in classes without their permission.', 'enrolling your child in classes without permission', 'a parent enrolling a child in classes without permission.', 'enrolling your child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'parents enrolling their children in classes without their permission', 'enrolling your child in classes without permission.', 'being a parent and enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'parent enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'enrolling your child in classes without permission', 'a parent  enrolling a child in classes without permission.', 'enrolling your child in classes without permission', 'a parent enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'enrolling your child in classes without permission.', 'a parent enrolling a child in classes without permission', 'parent enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'parents  enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'a parent  enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'enrolling your child in classes without permission.', 'a parent enrolling a child in classes without permission', 'enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'parent enrolling a child in classes without permission.', 'enrolling a child in classes without permission.'], 'rot-judgment': ["It's hurtful", 'hurtful', "it's hurtful", "it's hurtful", "It's hurtful", "it's hurtful", "It's hurtful.", "it's hurtful", 'hurtful', "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", 'hurtful', "It's hurtful", 'hurtful', "it's hurtful", 'hurtful', "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "it's hurtful", "it's hurtful", 'hurtful', "It's hurtful", "it's hurtful", "It's hurtful", "It's hurtful", "it's hurtful", "It's hurtful", "It's hurtful", "it's hurtful", 'hurtful', "It's hurtful", "It's wrong", "It's hurtful", "It's hurtful", "It's hurtful", "it's hurtful", "It's hurtful", "it's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "it's hurtful"], 'agency-fwd': ['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency'], 'action-fwd-good': [-1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -2.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, '', -2.0, 0.0, -1.0, 0.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, '', -1.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0, -1.0, '', -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0], 'fwd-agree': [2.0, 3.0, 1.0, 2.0, 3.0, 2.0, 1.0, 2.0, 4.0, 2.0, 2.0, 1.0, 0.0, 3.0, 2.0, 2.0, 2.0, 2.0, 1.0, 1.0, '', 1.0, 3.0, 4.0, 2.0, 3.0, 2.0, 2.0, 3.0, 3.0, 3.0, 2.0, '', 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, '', 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, 2.0, 3.0], 'fwd-legal': ['legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated'], 'fwd-pressure': [-1.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0, -1.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, '', 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, '', 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, '', -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, -2.0], 'char-involved-fwd': ['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'fwd-hypothetical': ['probable', 'hypothetical', 'explicit', 'explicit', 'probable', 'explicit', 'hypothetical', 'hypothetical', 'probable', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'explicit', 'hypothetical', 'hypothetical', '', 'hypothetical', 'explicit', 'probable', 'explicit', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', '', 'explicit', 'hypothetical', 'explicit', 'hypothetical', 'probable', 'explicit', 'hypothetical', 'probable', '', 'hypothetical', 'explicit', 'hypothetical', 'probable', 'probable', 'hypothetical', 'hypothetical', 'hypothetical'], 'n-characters': [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]}
 - - - - - -  starting a new element: `Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-agree
Executing one action: self.actions.modify_radio('rot-agree', '2')
We are going to select this radio button: <input type="radio" name="rot-agree" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-categorization
Executing one action: self.actions.modify_checkbox('rot-categorization', 'morality-ethics')
Looking for checkboxes with `name`: `rot-categorization` the values: `['morality-ethics']`
About to check this checkbox: <input type="checkbox" name="rot-categorization" value="morality-ethics">
 - - - - - -  starting a new element: `Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-moral-foundations
Executing one action: self.actions.modify_checkbox('rot-moral-foundations', 'care-harm')
Looking for checkboxes with `name`: `rot-moral-foundations` the values: `['care-harm']`
About to check this checkbox: <input type="checkbox" name="rot-moral-foundations" value="care-harm">
 - - - - - -  starting a new element: `Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-general
Executing one action: self.actions.modify_radio('char-involved-general', 'char-1')
We are going to select this radio button: <input type="radio" name="char-involved-general" value="char-1" required="">
 - - - - - -  starting a new element: `Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-rewrite
Executing one action: self.actions.modify_text('rot-rewrite', 'a parent enrolling a child in classes without permission')
Add text `a parent enrolling a child in classes without permission` to this text input: <input type="text" class="text" name="rot-rewrite" value="It's hurtful for  a parent to enroll a child in classes without permission." id="rot-rewrite">
 - - - - - -  starting a new element: `Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-judgment
Executing one action: self.actions.modify_text('rot-judgment', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: agency-fwd
Executing one action: self.actions.modify_radio('agency-fwd', 'agency')
We are going to select this radio button: <input type="radio" name="agency-fwd" value="agency" required="">
 - - - - - -  starting a new element: `Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: action-fwd-good
Executing one action: self.actions.modify_radio('action-fwd-good', '-2')
We are going to select this radio button: <input type="radio" name="action-fwd-good" value="-2" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-agree
Executing one action: self.actions.modify_radio('fwd-agree', '2')
We are going to select this radio button: <input type="radio" name="fwd-agree" value="2" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-legal
Executing one action: self.actions.modify_radio('fwd-legal', 'legal')
We are going to select this radio button: <input type="radio" name="fwd-legal" value="legal" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-pressure
Executing one action: self.actions.modify_radio('fwd-pressure', '0')
We are going to select this radio button: <input type="radio" name="fwd-pressure" value="0" required="required">
 - - - - - -  starting a new element: `Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-fwd
Executing one action: self.actions.modify_radio('char-involved-fwd', 'char-1')
We are going to select this radio button: <input type="radio" name="char-involved-fwd" value="char-1" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-hypothetical
Executing one action: self.actions.modify_radio('fwd-hypothetical', 'hypothetical')
We are going to select this radio button: <input type="radio" name="fwd-hypothetical" value="hypothetical" required="required">
 - - - - - -  starting a new element: `Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `n-characters` since it is not visible.
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['morality-ethics']
 visible_values : ['morality-ethics']
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['care-harm']
 visible_values : ['care-harm']
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-1']
 visible_values : ['char-1']
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['a parent enrolling a child in classes without permission']
 visible_values : ['a parent enrolling a child in classes without permission']
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : [None]
 visible_values : [None]
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['agency']
 visible_values : ['agency']
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['legal']
 visible_values : ['legal']
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-1']
 visible_values : ['char-1']
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['hypothetical']
 visible_values : ['hypothetical']
input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[3, 3, 1, 2, 3, 2, 2, 3, 4, 2, 2, 1, 1, 3, 2, 2, 2, 3, 2, 1, 3, 1, 3, 4, 2, 3, 2, 2, 2, 3, 1, 2, 3, 2, 2, 2, 2, 2, 2, 3, 2, 1, 2, 2, 2, 2, 2, 2, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['morality-ethics', 'description', 'social-norms', 'social-norms', 'morality-ethics', 'description', 'advice', 'advice|social-norms', 'social-norms', 'social-norms', 'advice|social-norms', 'morality-ethics', 'morality-ethics', 'morality-ethics|social-norms', 'advice|social-norms', 'description', 'morality-ethics', 'description', 'social-norms', 'social-norms', 'advice', 'advice|morality-ethics', 'advice|social-norms', 'morality-ethics', 'description', 'description|social-norms', 'advice', 'description', 'description', 'advice|social-norms', 'description', 'social-norms', 'morality-ethics', 'social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'morality-ethics', 'description|social-norms', 'morality-ethics|social-norms', 'morality-ethics', 'social-norms', '', 'morality-ethics', 'description', 'advice|morality-ethics', 'advice|morality-ethics', 'morality-ethics', 'morality-ethics']` - type: `<class 'list'>`
----> baseline_answer: `morality-ethics` - type: `<class 'str'>`
Model answers: morality-ethics 
Gold answers: ['morality-ethics', 'description', 'social-norms', 'social-norms', 'morality-ethics', 'description', 'advice', 'advice|social-norms', 'social-norms', 'social-norms', 'advice|social-norms', 'morality-ethics', 'morality-ethics', 'morality-ethics|social-norms', 'advice|social-norms', 'description', 'morality-ethics', 'description', 'social-norms', 'social-norms', 'advice', 'advice|morality-ethics', 'advice|social-norms', 'morality-ethics', 'description', 'description|social-norms', 'advice', 'description', 'description', 'advice|social-norms', 'description', 'social-norms', 'morality-ethics', 'social-norms', 'social-norms', 'description', 'social-norms', 'social-norms', 'morality-ethics', 'description|social-norms', 'morality-ethics|social-norms', 'morality-ethics', 'social-norms', '', 'morality-ethics', 'description', 'advice|morality-ethics', 'advice|morality-ethics', 'morality-ethics', 'morality-ethics']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['authority-subversion|loyalty-betrayal', '', 'authority-subversion|fairness-cheating', 'authority-subversion', 'care-harm', 'authority-subversion|fairness-cheating|loyalty-betrayal', 'fairness-cheating', 'authority-subversion|care-harm', 'authority-subversion', 'authority-subversion|care-harm', 'care-harm', 'care-harm', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion|care-harm', '', 'fairness-cheating|loyalty-betrayal', 'authority-subversion|fairness-cheating', 'fairness-cheating', '', 'loyalty-betrayal', 'care-harm', 'authority-subversion|fairness-cheating', 'fairness-cheating|loyalty-betrayal', 'fairness-cheating', 'authority-subversion|care-harm', 'authority-subversion', 'authority-subversion|loyalty-betrayal', 'care-harm', 'authority-subversion|loyalty-betrayal', 'care-harm', 'authority-subversion', 'authority-subversion|fairness-cheating|loyalty-betrayal', '', 'authority-subversion|care-harm', '', 'authority-subversion|loyalty-betrayal', 'authority-subversion|loyalty-betrayal', 'authority-subversion', 'care-harm', 'authority-subversion|fairness-cheating', 'authority-subversion|fairness-cheating', 'authority-subversion', 'care-harm', 'authority-subversion', 'loyalty-betrayal', 'authority-subversion|care-harm', 'care-harm', 'authority-subversion|care-harm', 'authority-subversion']` - type: `<class 'list'>`
----> baseline_answer: `care-harm` - type: `<class 'str'>`
Model answers: care-harm 
Gold answers: ['authority-subversion|loyalty-betrayal', '', 'authority-subversion|fairness-cheating', 'authority-subversion', 'care-harm', 'authority-subversion|fairness-cheating|loyalty-betrayal', 'fairness-cheating', 'authority-subversion|care-harm', 'authority-subversion', 'authority-subversion|care-harm', 'care-harm', 'care-harm', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion|care-harm', '', 'fairness-cheating|loyalty-betrayal', 'authority-subversion|fairness-cheating', 'fairness-cheating', '', 'loyalty-betrayal', 'care-harm', 'authority-subversion|fairness-cheating', 'fairness-cheating|loyalty-betrayal', 'fairness-cheating', 'authority-subversion|care-harm', 'authority-subversion', 'authority-subversion|loyalty-betrayal', 'care-harm', 'authority-subversion|loyalty-betrayal', 'care-harm', 'authority-subversion', 'authority-subversion|fairness-cheating|loyalty-betrayal', '', 'authority-subversion|care-harm', '', 'authority-subversion|loyalty-betrayal', 'authority-subversion|loyalty-betrayal', 'authority-subversion', 'care-harm', 'authority-subversion|fairness-cheating', 'authority-subversion|fairness-cheating', 'authority-subversion', 'care-harm', 'authority-subversion', 'loyalty-betrayal', 'authority-subversion|care-harm', 'care-harm', 'authority-subversion|care-harm', 'authority-subversion']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-1', 'char-1', 'char-1', 'char-1', 'char-2', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `['a parent enrolling a child in classes without permission.', 'enrolling your child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'enrolling a child in classes without their permission as a parent', 'Enrolling children in classes without permission.', 'enrolling your child in classes without permission.', 'enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'a parent enrolling a child in classes without their permission.', 'enrolling your child in classes without permission', 'a parent enrolling a child in classes without permission.', 'enrolling your child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'parents enrolling their children in classes without their permission', 'enrolling your child in classes without permission.', 'being a parent and enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'parent enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'enrolling your child in classes without permission', 'a parent  enrolling a child in classes without permission.', 'enrolling your child in classes without permission', 'a parent enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'enrolling your child in classes without permission.', 'a parent enrolling a child in classes without permission', 'parent enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'parents  enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'a parent  enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'enrolling your child in classes without permission.', 'a parent enrolling a child in classes without permission', 'enrolling a child in classes without permission.', 'parents enrolling a child in classes without permission.', 'parent enrolling a child in classes without permission.', 'enrolling a child in classes without permission.']`
----> answers: `['enrolling a child in classes without permission.', 'being a parent and enrolling a child in classes without permission.', 'a parent enrolling a child in classes without their permission.', 'Enrolling children in classes without permission.', 'enrolling your child in classes without permission.', 'a parent  enrolling a child in classes without permission.', 'parents  enrolling a child in classes without permission.', 'parent enrolling a child in classes without permission.', 'enrolling a child in classes without their permission as a parent', 'parents enrolling a child in classes without permission.', 'parents enrolling their children in classes without their permission', 'enrolling your child in classes without permission', 'a parent enrolling a child in classes without permission.', 'a parent enrolling a child in classes without permission']` - type: `<class 'list'>`
----> baseline_answer: `a parent enrolling a child in classes without permission` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `["It's hurtful", 'hurtful', "it's hurtful", "it's hurtful", "It's hurtful", "it's hurtful", "It's hurtful.", "it's hurtful", 'hurtful', "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", 'hurtful', "It's hurtful", 'hurtful', "it's hurtful", 'hurtful', "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "it's hurtful", "it's hurtful", 'hurtful', "It's hurtful", "it's hurtful", "It's hurtful", "It's hurtful", "it's hurtful", "It's hurtful", "It's hurtful", "it's hurtful", 'hurtful', "It's hurtful", "It's wrong", "It's hurtful", "It's hurtful", "It's hurtful", "it's hurtful", "It's hurtful", "it's hurtful", "It's hurtful", "It's hurtful", "It's hurtful", "it's hurtful"]`
----> answers: `["It's hurtful", "It's hurtful.", "it's hurtful", 'hurtful', "It's wrong"]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency']` - type: `<class 'list'>`
----> baseline_answer: `agency` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[-1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -2.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, '', -2.0, 0.0, -1.0, 0.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, '', -1.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0, -1.0, '', -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[2.0, 3.0, 1.0, 2.0, 3.0, 2.0, 1.0, 2.0, 4.0, 2.0, 2.0, 1.0, 0.0, 3.0, 2.0, 2.0, 2.0, 2.0, 1.0, 1.0, '', 1.0, 3.0, 4.0, 2.0, 3.0, 2.0, 2.0, 3.0, 3.0, 3.0, 2.0, '', 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, '', 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, 2.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated']` - type: `<class 'list'>`
----> baseline_answer: `legal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[-1.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0, -1.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, '', 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, '', 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, '', -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, -2.0]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['probable', 'hypothetical', 'explicit', 'explicit', 'probable', 'explicit', 'hypothetical', 'hypothetical', 'probable', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'explicit', 'hypothetical', 'hypothetical', '', 'hypothetical', 'explicit', 'probable', 'explicit', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', '', 'explicit', 'hypothetical', 'explicit', 'hypothetical', 'probable', 'explicit', 'hypothetical', 'probable', '', 'hypothetical', 'explicit', 'hypothetical', 'probable', 'probable', 'hypothetical', 'hypothetical', 'hypothetical']` - type: `<class 'list'>`
----> baseline_answer: `hypothetical` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `n-characters` since it is not visible.
 --> Per-instance overall score: 0.8461538461538461
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'checkbox': [1.0, 1.0, 1.0, 1.0], 'text': [1.0, 0.0, 1.0, 0.0]}
instance_id: 32971 <-> row_number: 0
 --> inputs: ['rot-agree', 'rot-categorization', 'rot-moral-foundations', 'char-involved-general', 'rot-rewrite', 'rot-judgment', 'agency-fwd', 'action-fwd-good', 'fwd-agree', 'fwd-legal', 'fwd-pressure', 'char-involved-fwd', 'fwd-hypothetical', 'n-characters']
 --> Looking up gold labels from row index 0 of `input.csv` (unique inputs). 
 --> input labels: {'rot-agree': [4, 4, 4, 3, 4, 4, 4, 4, 3, 3, 3, 4, 2, 2, 3, 2, 4, 3, 4, 3, 4, 3, 3, 4, 4, 3, 3, 4, 4, 3, 3, 3, 4, 3, 3, 3, 3, 4, 3, 2, 3, 3, 3, 4, 4, 4, 3, 3, 4, 3], 'rot-categorization': ['social-norms|advice', 'description', 'social-norms', 'advice', 'morality-ethics', 'advice', 'social-norms|description', 'morality-ethics', 'morality-ethics', 'morality-ethics|social-norms', 'description', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms|description', 'social-norms|advice', 'advice', 'morality-ethics|description', 'advice', 'social-norms', 'morality-ethics|social-norms', 'social-norms|advice', 'advice', 'social-norms', 'morality-ethics|social-norms', 'social-norms|description', 'morality-ethics|social-norms', 'social-norms|advice', 'morality-ethics|advice', 'social-norms', 'social-norms|description', 'description', 'morality-ethics|social-norms', 'social-norms|description', 'description', 'advice|description', 'morality-ethics|advice', 'morality-ethics|social-norms', 'advice', 'advice', 'morality-ethics|social-norms', 'description', 'social-norms|advice', 'social-norms|description', 'description', 'description', 'social-norms|description', 'social-norms', 'advice', 'advice', 'social-norms'], 'rot-moral-foundations': ['fairness-cheating', '', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion|sanctity-degradation', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'fairness-cheating', 'authority-subversion', 'fairness-cheating|authority-subversion', 'authority-subversion', 'care-harm|fairness-cheating|sanctity-degradation', '', 'fairness-cheating|authority-subversion', 'authority-subversion', 'fairness-cheating', 'authority-subversion', 'fairness-cheating|authority-subversion', 'fairness-cheating|authority-subversion', 'authority-subversion', 'fairness-cheating|authority-subversion', 'fairness-cheating|authority-subversion', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating|authority-subversion|sanctity-degradation', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'fairness-cheating|authority-subversion', 'authority-subversion', 'fairness-cheating|authority-subversion', 'fairness-cheating|authority-subversion', 'authority-subversion', 'fairness-cheating|authority-subversion', 'fairness-cheating', 'sanctity-degradation', 'authority-subversion', 'authority-subversion', 'fairness-cheating|authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'care-harm|fairness-cheating', 'care-harm|authority-subversion', 'authority-subversion', 'authority-subversion'], 'char-involved-general': ['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-2', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'rot-rewrite': ['expecting to go to jail when you break the law', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail when you break the law.', 'going to jail when you break the law.', 'going to jail if you break the law', 'going to jail if you break the law.', 'going to jail when you break the law.', 'going to jail if you break the law.', 'Expecting to go to jail when you break the law.', 'breaking the law', 'going to jail when you break the law.', 'going to jail if you break the law.', 'going to jail when you break the law.', 'breaking the law', 'going to jail if you break the law.', 'going to jail when you break the law.', 'Expecting to go to jail if you break the law.', 'if you are breaking the law.', 'going to jail when breaking the law.', 'going to jail if you break the law', 'breaking the law.', 'going to jail if you break the law', 'going to jail when breaking the law.', 'going to jail when you break the law.', 'going to jail when you break the law.', 'going to jail when you break the law', 'Going to jail when you break the law', 'going to jail when you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail when you break the law', 'going to jail if you break the law', 'going to jail if breaking the law.', 'going to jail when you break the law.', 'going to jail if you break the law', 'going to jail if you break the law.', 'Going to jail if you break the law', 'going to jail when you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law', 'going to jail when you break the law.', 'going to jail if you break the law.', 'Expecting to go to jail if you break the law.', 'going to jail if you break the law.', 'Expecting to go to jail if you break the law.'], 'rot-judgment': ['you should', 'expect', 'expect', 'expected', "it's expected", 'Expected', 'expect to', 'expected', "it's expected", 'Expect to', 'should', 'expect to go to jail', 'expected', 'expect', "It's expected", 'Expect to go to jail', 'It is expected', 'expect', 'should', 'Expect to go to jail', "it's expected", 'expect', 'Expect to go to jail', 'Expect', 'Expect', 'expect to', "it's expected", 'Expected', 'expect', "it's expected", 'Expect to', "it's expected", 'expect', 'expected', "it's expected", 'Expect to', "it's expected", "It's expected", 'Its expected', 'is expected', 'expected', 'Expect to', 'Expected', 'expecting', 'expected', 'expected', "It's expected", 'You should', 'Expect', 'should'], 'agency-fwd': ['agency', 'agency', 'agency', 'experience', 'agency', 'experience', 'experience', 'agency', 'experience', 'agency', 'experience', 'agency', 'agency', 'experience', 'experience', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'experience', 'agency', 'experience', 'agency', 'agency', 'experience', 'experience', 'agency', 'experience', 'experience', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency'], 'action-fwd-good': [0.0, 0.0, 0.0, 0.0, 0.0, '', '', 0.0, 0.0, 0.0, '', -2.0, 0.0, '', '', -1.0, 0.0, '', 0.0, 0.0, 0.0, 0.0, -2.0, '', 0.0, 0.0, 0.0, -2.0, '', 0.0, 0.0, '', '', 0.0, '', '', 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, '', 0.0, '', 0.0, 0.0, 0.0, 0.0, 0.0], 'fwd-agree': [4.0, 4.0, 4.0, '', 4.0, '', '', 4.0, 3.0, 3.0, '', 4.0, 2.0, '', '', 3.0, 4.0, '', 4.0, 4.0, 4.0, 3.0, 3.0, '', 4.0, 3.0, 3.0, 4.0, '', 3.0, 3.0, '', '', 3.0, '', '', 4.0, 4.0, 3.0, 2.0, 3.0, 3.0, '', 4.0, '', 4.0, 3.0, 3.0, 3.0, 3.0], 'fwd-legal': ['legal', 'legal', 'legal', '', 'legal', '', '', 'legal', '', 'legal', '', 'illegal', 'illegal', '', '', 'illegal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'illegal', '', 'legal', 'legal', 'legal', 'illegal', '', 'legal', 'legal', '', '', 'legal', '', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal'], 'fwd-pressure': [2.0, 2.0, 2.0, '', 2.0, '', '', 2.0, '', 0.0, '', -2.0, -2.0, '', '', -2.0, 2.0, '', 0.0, 1.0, 0.0, 2.0, -2.0, '', 0.0, 1.0, '', -2.0, '', 1.0, -2.0, '', '', 1.0, '', '', '', 0.0, 1.0, 1.0, 1.0, 2.0, '', 1.0, '', 0.0, 0.0, 1.0, 1.0, 1.0], 'char-involved-fwd': ['char-1', 'char-1', 'char-1', '', 'char-1', '', '', 'char-1', '', 'char-1', '', 'char-1', 'char-1', '', '', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', '', 'char-1', '', 'char-1', 'char-1', '', '', 'char-1', '', '', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'fwd-hypothetical': ['hypothetical', 'explicit', 'explicit', '', 'explicit', '', '', 'explicit', '', 'probable', '', 'probable', 'explicit', '', '', 'explicit', 'explicit', '', 'hypothetical', 'explicit', 'hypothetical', 'explicit', 'explicit', '', 'probable', 'hypothetical', '', 'probable', '', 'probable', 'probable', '', '', 'explicit', '', '', '', 'probable', 'probable', 'explicit', 'explicit', 'explicit', '', 'hypothetical', '', 'explicit', 'explicit', 'hypothetical', 'explicit', 'hypothetical'], 'n-characters': [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]}
 - - - - - -  starting a new element: `Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-agree
Executing one action: self.actions.modify_radio('rot-agree', '4')
We are going to select this radio button: <input type="radio" name="rot-agree" value="4" required="">
 - - - - - -  starting a new element: `Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-categorization
Executing one action: self.actions.modify_checkbox('rot-categorization', 'morality-ethics')
Looking for checkboxes with `name`: `rot-categorization` the values: `['morality-ethics']`
About to check this checkbox: <input type="checkbox" name="rot-categorization" value="morality-ethics">
 - - - - - -  starting a new element: `Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-moral-foundations
Executing one action: self.actions.modify_checkbox('rot-moral-foundations', 'fairness-cheating')
Looking for checkboxes with `name`: `rot-moral-foundations` the values: `['fairness-cheating']`
About to check this checkbox: <input type="checkbox" name="rot-moral-foundations" value="fairness-cheating">
 - - - - - -  starting a new element: `Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-general
Executing one action: self.actions.modify_radio('char-involved-general', 'char-1')
We are going to select this radio button: <input type="radio" name="char-involved-general" value="char-1" required="">
 - - - - - -  starting a new element: `Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-rewrite
Executing one action: self.actions.modify_text('rot-rewrite', 'Expect to go to jail if you break the law.')
Add text `Expect to go to jail if you break the law.` to this text input: <input type="text" class="text" name="rot-rewrite" value="Expect to go to jail if you break the law." id="rot-rewrite">
 - - - - - -  starting a new element: `Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-judgment
Executing one action: self.actions.modify_text('rot-judgment', '')
Since the input value is ``, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: agency-fwd
Executing one action: self.actions.modify_radio('agency-fwd', 'agency')
We are going to select this radio button: <input type="radio" name="agency-fwd" value="agency" required="">
 - - - - - -  starting a new element: `Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: action-fwd-good
Executing one action: self.actions.modify_radio('action-fwd-good', '-2')
We are going to select this radio button: <input type="radio" name="action-fwd-good" value="-2" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-agree
Executing one action: self.actions.modify_radio('fwd-agree', '3')
We are going to select this radio button: <input type="radio" name="fwd-agree" value="3" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-legal
Executing one action: self.actions.modify_radio('fwd-legal', 'legal')
We are going to select this radio button: <input type="radio" name="fwd-legal" value="legal" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-pressure
Executing one action: self.actions.modify_radio('fwd-pressure', '0')
We are going to select this radio button: <input type="radio" name="fwd-pressure" value="0" required="required">
 - - - - - -  starting a new element: `Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-fwd
Executing one action: self.actions.modify_radio('char-involved-fwd', 'char-1')
We are going to select this radio button: <input type="radio" name="char-involved-fwd" value="char-1" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-hypothetical
Executing one action: self.actions.modify_radio('fwd-hypothetical', 'hypothetical')
We are going to select this radio button: <input type="radio" name="fwd-hypothetical" value="hypothetical" required="required">
 - - - - - -  starting a new element: `Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `n-characters` since it is not visible.
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['morality-ethics']
 visible_values : ['morality-ethics']
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['fairness-cheating']
 visible_values : ['fairness-cheating']
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-1']
 visible_values : ['char-1']
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['Expect to go to jail if you break the law.']
 visible_values : ['Expect to go to jail if you break the law.']
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : [None]
 visible_values : [None]
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['agency']
 visible_values : ['agency']
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['legal']
 visible_values : ['legal']
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-1']
 visible_values : ['char-1']
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['hypothetical']
 visible_values : ['hypothetical']
input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[4, 4, 4, 3, 4, 4, 4, 4, 3, 3, 3, 4, 2, 2, 3, 2, 4, 3, 4, 3, 4, 3, 3, 4, 4, 3, 3, 4, 4, 3, 3, 3, 4, 3, 3, 3, 3, 4, 3, 2, 3, 3, 3, 4, 4, 4, 3, 3, 4, 3]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['advice|social-norms', 'description', 'social-norms', 'advice', 'morality-ethics', 'advice', 'description|social-norms', 'morality-ethics', 'morality-ethics', 'morality-ethics|social-norms', 'description', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'description|social-norms', 'advice|social-norms', 'advice', 'description|morality-ethics', 'advice', 'social-norms', 'morality-ethics|social-norms', 'advice|social-norms', 'advice', 'social-norms', 'morality-ethics|social-norms', 'description|social-norms', 'morality-ethics|social-norms', 'advice|social-norms', 'advice|morality-ethics', 'social-norms', 'description|social-norms', 'description', 'morality-ethics|social-norms', 'description|social-norms', 'description', 'advice|description', 'advice|morality-ethics', 'morality-ethics|social-norms', 'advice', 'advice', 'morality-ethics|social-norms', 'description', 'advice|social-norms', 'description|social-norms', 'description', 'description', 'description|social-norms', 'social-norms', 'advice', 'advice', 'social-norms']` - type: `<class 'list'>`
----> baseline_answer: `morality-ethics` - type: `<class 'str'>`
Model answers: morality-ethics 
Gold answers: ['advice|social-norms', 'description', 'social-norms', 'advice', 'morality-ethics', 'advice', 'description|social-norms', 'morality-ethics', 'morality-ethics', 'morality-ethics|social-norms', 'description', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'description|social-norms', 'advice|social-norms', 'advice', 'description|morality-ethics', 'advice', 'social-norms', 'morality-ethics|social-norms', 'advice|social-norms', 'advice', 'social-norms', 'morality-ethics|social-norms', 'description|social-norms', 'morality-ethics|social-norms', 'advice|social-norms', 'advice|morality-ethics', 'social-norms', 'description|social-norms', 'description', 'morality-ethics|social-norms', 'description|social-norms', 'description', 'advice|description', 'advice|morality-ethics', 'morality-ethics|social-norms', 'advice', 'advice', 'morality-ethics|social-norms', 'description', 'advice|social-norms', 'description|social-norms', 'description', 'description', 'description|social-norms', 'social-norms', 'advice', 'advice', 'social-norms']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['fairness-cheating', '', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion|sanctity-degradation', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'fairness-cheating', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion', 'care-harm|fairness-cheating|sanctity-degradation', '', 'authority-subversion|fairness-cheating', 'authority-subversion', 'fairness-cheating', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion|fairness-cheating', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion|fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'authority-subversion|fairness-cheating|sanctity-degradation', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion|fairness-cheating', 'authority-subversion', 'authority-subversion|fairness-cheating', 'fairness-cheating', 'sanctity-degradation', 'authority-subversion', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'care-harm|fairness-cheating', 'authority-subversion|care-harm', 'authority-subversion', 'authority-subversion']` - type: `<class 'list'>`
----> baseline_answer: `fairness-cheating` - type: `<class 'str'>`
Model answers: fairness-cheating 
Gold answers: ['fairness-cheating', '', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion|sanctity-degradation', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'fairness-cheating', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion', 'care-harm|fairness-cheating|sanctity-degradation', '', 'authority-subversion|fairness-cheating', 'authority-subversion', 'fairness-cheating', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion|fairness-cheating', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion|fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'authority-subversion|fairness-cheating|sanctity-degradation', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion|fairness-cheating', 'authority-subversion', 'authority-subversion|fairness-cheating', 'fairness-cheating', 'sanctity-degradation', 'authority-subversion', 'authority-subversion', 'authority-subversion|fairness-cheating', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'authority-subversion', 'care-harm|fairness-cheating', 'authority-subversion|care-harm', 'authority-subversion', 'authority-subversion']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-2', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `['expecting to go to jail when you break the law', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail when you break the law.', 'going to jail when you break the law.', 'going to jail if you break the law', 'going to jail if you break the law.', 'going to jail when you break the law.', 'going to jail if you break the law.', 'Expecting to go to jail when you break the law.', 'breaking the law', 'going to jail when you break the law.', 'going to jail if you break the law.', 'going to jail when you break the law.', 'breaking the law', 'going to jail if you break the law.', 'going to jail when you break the law.', 'Expecting to go to jail if you break the law.', 'if you are breaking the law.', 'going to jail when breaking the law.', 'going to jail if you break the law', 'breaking the law.', 'going to jail if you break the law', 'going to jail when breaking the law.', 'going to jail when you break the law.', 'going to jail when you break the law.', 'going to jail when you break the law', 'Going to jail when you break the law', 'going to jail when you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail when you break the law', 'going to jail if you break the law', 'going to jail if breaking the law.', 'going to jail when you break the law.', 'going to jail if you break the law', 'going to jail if you break the law.', 'Going to jail if you break the law', 'going to jail when you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law.', 'going to jail if you break the law', 'going to jail when you break the law.', 'going to jail if you break the law.', 'Expecting to go to jail if you break the law.', 'going to jail if you break the law.', 'Expecting to go to jail if you break the law.']`
----> answers: `['breaking the law', 'Going to jail when you break the law', 'going to jail if breaking the law.', 'going to jail when you break the law.', 'if you are breaking the law.', 'going to jail if you break the law.', 'Expecting to go to jail if you break the law.', 'expecting to go to jail when you break the law', 'going to jail when you break the law', 'going to jail if you break the law', 'Going to jail if you break the law', 'Expecting to go to jail when you break the law.', 'breaking the law.', 'going to jail when breaking the law.']` - type: `<class 'list'>`
----> baseline_answer: `Expect to go to jail if you break the law.` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `['you should', 'expect', 'expect', 'expected', "it's expected", 'Expected', 'expect to', 'expected', "it's expected", 'Expect to', 'should', 'expect to go to jail', 'expected', 'expect', "It's expected", 'Expect to go to jail', 'It is expected', 'expect', 'should', 'Expect to go to jail', "it's expected", 'expect', 'Expect to go to jail', 'Expect', 'Expect', 'expect to', "it's expected", 'Expected', 'expect', "it's expected", 'Expect to', "it's expected", 'expect', 'expected', "it's expected", 'Expect to', "it's expected", "It's expected", 'Its expected', 'is expected', 'expected', 'Expect to', 'Expected', 'expecting', 'expected', 'expected', "It's expected", 'You should', 'Expect', 'should']`
----> answers: `['Expect to', 'you should', "it's expected", 'It is expected', 'expect', 'expect to', 'Expected', 'expect to go to jail', 'expecting', 'Its expected', 'is expected', 'expected', "It's expected", 'Expect to go to jail', 'You should', 'should', 'Expect']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['agency', 'agency', 'agency', 'experience', 'agency', 'experience', 'experience', 'agency', 'experience', 'agency', 'experience', 'agency', 'agency', 'experience', 'experience', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'experience', 'agency', 'experience', 'agency', 'agency', 'experience', 'experience', 'agency', 'experience', 'experience', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency']` - type: `<class 'list'>`
----> baseline_answer: `agency` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[0.0, 0.0, 0.0, 0.0, 0.0, '', '', 0.0, 0.0, 0.0, '', -2.0, 0.0, '', '', -1.0, 0.0, '', 0.0, 0.0, 0.0, 0.0, -2.0, '', 0.0, 0.0, 0.0, -2.0, '', 0.0, 0.0, '', '', 0.0, '', '', 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, '', 0.0, '', 0.0, 0.0, 0.0, 0.0, 0.0]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[4.0, 4.0, 4.0, '', 4.0, '', '', 4.0, 3.0, 3.0, '', 4.0, 2.0, '', '', 3.0, 4.0, '', 4.0, 4.0, 4.0, 3.0, 3.0, '', 4.0, 3.0, 3.0, 4.0, '', 3.0, 3.0, '', '', 3.0, '', '', 4.0, 4.0, 3.0, 2.0, 3.0, 3.0, '', 4.0, '', 4.0, 3.0, 3.0, 3.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['legal', 'legal', 'legal', '', 'legal', '', '', 'legal', '', 'legal', '', 'illegal', 'illegal', '', '', 'illegal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'illegal', '', 'legal', 'legal', 'legal', 'illegal', '', 'legal', 'legal', '', '', 'legal', '', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal']` - type: `<class 'list'>`
----> baseline_answer: `legal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[2.0, 2.0, 2.0, '', 2.0, '', '', 2.0, '', 0.0, '', -2.0, -2.0, '', '', -2.0, 2.0, '', 0.0, 1.0, 0.0, 2.0, -2.0, '', 0.0, 1.0, '', -2.0, '', 1.0, -2.0, '', '', 1.0, '', '', '', 0.0, 1.0, 1.0, 1.0, 2.0, '', 1.0, '', 0.0, 0.0, 1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', '', 'char-1', '', '', 'char-1', '', 'char-1', '', 'char-1', 'char-1', '', '', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', '', 'char-1', '', 'char-1', 'char-1', '', '', 'char-1', '', '', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['hypothetical', 'explicit', 'explicit', '', 'explicit', '', '', 'explicit', '', 'probable', '', 'probable', 'explicit', '', '', 'explicit', 'explicit', '', 'hypothetical', 'explicit', 'hypothetical', 'explicit', 'explicit', '', 'probable', 'hypothetical', '', 'probable', '', 'probable', 'probable', '', '', 'explicit', '', '', '', 'probable', 'probable', 'explicit', 'explicit', 'explicit', '', 'hypothetical', '', 'explicit', 'explicit', 'hypothetical', 'explicit', 'hypothetical']` - type: `<class 'list'>`
----> baseline_answer: `hypothetical` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `n-characters` since it is not visible.
 --> Per-instance overall score: 0.6153846153846154
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'text': [1.0, 0.0, 1.0, 0.0, 1.0, 0.0]}
instance_id: 32977 <-> row_number: 6
 --> inputs: ['rot-agree', 'rot-categorization', 'rot-moral-foundations', 'char-involved-general', 'rot-rewrite', 'rot-judgment', 'agency-fwd', 'action-fwd-good', 'fwd-agree', 'fwd-legal', 'fwd-pressure', 'char-involved-fwd', 'fwd-hypothetical', 'n-characters']
 --> Looking up gold labels from row index 6 of `input.csv` (unique inputs). 
 --> input labels: {'rot-agree': [2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2], 'rot-categorization': ['social-norms|description', 'morality-ethics', 'morality-ethics', 'advice', 'social-norms|advice', 'morality-ethics', 'morality-ethics|advice', 'advice|description', 'advice', 'social-norms', 'advice', 'advice', 'advice', 'social-norms|advice', 'advice', 'advice', 'morality-ethics|social-norms', 'advice', 'social-norms', 'description', 'description', 'advice', 'advice', 'description', 'description', 'social-norms', 'advice', 'description', 'morality-ethics', 'advice', 'advice', 'social-norms|advice', 'social-norms|advice', 'advice', 'advice', 'social-norms|advice', 'advice', 'description', 'advice', 'description', 'social-norms|advice', 'morality-ethics|advice', 'advice', 'description', 'advice', 'advice', 'morality-ethics|advice', 'morality-ethics|advice', 'advice', 'morality-ethics'], 'rot-moral-foundations': ['', 'fairness-cheating', '', 'fairness-cheating', '', 'sanctity-degradation', '', '', '', '', '', 'care-harm', '', '', 'care-harm', '', 'fairness-cheating|sanctity-degradation', 'fairness-cheating', '', '', '', '', '', '', 'fairness-cheating', 'care-harm|fairness-cheating', '', '', 'care-harm|fairness-cheating', '', '', '', '', '', '', 'care-harm', '', '', 'care-harm', '', 'fairness-cheating', '', '', '', 'fairness-cheating', '', 'care-harm', 'care-harm', 'fairness-cheating', ''], 'char-involved-general': ['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'rot-rewrite': ['playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money', 'playing games of chance where you can win money', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money'], 'rot-judgment': ["It's good", "It's good", 'good', "It's good", "it's good", "It's good", "It's good", "it's good", "it's good", 'good', "It's good", "It's good", "It's good", "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", "It's good", 'good', 'good', "It's good", "It's good", "it's good", "it's good", "It's good", "It's good", "It's good", "it's good", 'good', "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", "It's good", "it's good", "it's good", "it's good", "It's good", "It's good", "It's good", "It's good"], 'agency-fwd': ['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency'], 'action-fwd-good': [1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, -1.0, 1.0, 1.0, 1.0], 'fwd-agree': [2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, 1.0, 2.0, 1.0, 3.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, 2.0, 2.0, 4.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 3.0, 3.0, 2.0, 2.0, 2.0, 2.0], 'fwd-legal': ['legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'tolerated', 'tolerated', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'tolerated', 'tolerated', 'legal', 'legal', 'tolerated', 'tolerated', 'legal', 'tolerated', 'tolerated', 'tolerated', 'tolerated', 'legal', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'tolerated'], 'fwd-pressure': [0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0], 'char-involved-fwd': ['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'fwd-hypothetical': ['probable', 'probable', 'hypothetical', 'probable', 'probable', 'hypothetical', 'probable', 'probable', 'probable', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'probable', 'hypothetical', 'probable', 'probable', 'explicit', 'hypothetical', 'hypothetical', 'probable', 'probable', 'explicit', 'probable', 'hypothetical', 'probable', 'hypothetical', 'explicit', 'explicit', 'hypothetical', 'hypothetical', 'probable', 'probable', 'hypothetical', 'hypothetical', 'probable', 'explicit', 'hypothetical', 'probable'], 'n-characters': [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]}
 - - - - - -  starting a new element: `Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-agree
Executing one action: self.actions.modify_radio('rot-agree', '2')
We are going to select this radio button: <input type="radio" name="rot-agree" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-categorization
Executing one action: self.actions.modify_checkbox('rot-categorization', 'advice')
Looking for checkboxes with `name`: `rot-categorization` the values: `['advice']`
About to check this checkbox: <input type="checkbox" name="rot-categorization" value="advice">
 - - - - - -  starting a new element: `Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-moral-foundations
Executing one action: self.actions.modify_checkbox('rot-moral-foundations', 'care-harm')
Looking for checkboxes with `name`: `rot-moral-foundations` the values: `['care-harm']`
About to check this checkbox: <input type="checkbox" name="rot-moral-foundations" value="care-harm">
 - - - - - -  starting a new element: `Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-general
Executing one action: self.actions.modify_radio('char-involved-general', 'char-1')
We are going to select this radio button: <input type="radio" name="char-involved-general" value="char-1" required="">
 - - - - - -  starting a new element: `Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-rewrite
Executing one action: self.actions.modify_text('rot-rewrite', "playing games of chance where you can win money")
Add text `playing games of chance where you can win money` to this text input: <input type="text" class="text" name="rot-rewrite" value="It's good to play games of chance where you can win money." id="rot-rewrite">
 - - - - - -  starting a new element: `Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-judgment
Executing one action: self.actions.modify_text('rot-judgment', 'It is expected')
Add text `It is expected` to this text input: <input type="text" class="text" name="rot-judgment" id="rot-judgment">
 - - - - - -  starting a new element: `Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: agency-fwd
Executing one action: self.actions.modify_radio('agency-fwd', 'agency')
We are going to select this radio button: <input type="radio" name="agency-fwd" value="agency" required="">
 - - - - - -  starting a new element: `Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: action-fwd-good
Executing one action: self.actions.modify_radio('action-fwd-good', '-2')
We are going to select this radio button: <input type="radio" name="action-fwd-good" value="-2" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-agree
Executing one action: self.actions.modify_radio('fwd-agree', '2')
We are going to select this radio button: <input type="radio" name="fwd-agree" value="2" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-legal
Executing one action: self.actions.modify_radio('fwd-legal', 'legal')
We are going to select this radio button: <input type="radio" name="fwd-legal" value="legal" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-pressure
Executing one action: self.actions.modify_radio('fwd-pressure', '1')
We are going to select this radio button: <input type="radio" name="fwd-pressure" value="1" required="required">
 - - - - - -  starting a new element: `Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-fwd
Executing one action: self.actions.modify_radio('char-involved-fwd', 'char-1')
We are going to select this radio button: <input type="radio" name="char-involved-fwd" value="char-1" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-hypothetical
Executing one action: self.actions.modify_radio('fwd-hypothetical', 'hypothetical')
We are going to select this radio button: <input type="radio" name="fwd-hypothetical" value="hypothetical" required="required">
 - - - - - -  starting a new element: `Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `n-characters` since it is not visible.
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['advice']
 visible_values : ['advice']
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['care-harm']
 visible_values : ['care-harm']
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-1']
 visible_values : ['char-1']
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['playing games of chance where you can win money']
 visible_values : ['playing games of chance where you can win money']
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['It is expected']
 visible_values : ['It is expected']
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['agency']
 visible_values : ['agency']
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['legal']
 visible_values : ['legal']
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-1']
 visible_values : ['char-1']
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['hypothetical']
 visible_values : ['hypothetical']
input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['description|social-norms', 'morality-ethics', 'morality-ethics', 'advice', 'advice|social-norms', 'morality-ethics', 'advice|morality-ethics', 'advice|description', 'advice', 'social-norms', 'advice', 'advice', 'advice', 'advice|social-norms', 'advice', 'advice', 'morality-ethics|social-norms', 'advice', 'social-norms', 'description', 'description', 'advice', 'advice', 'description', 'description', 'social-norms', 'advice', 'description', 'morality-ethics', 'advice', 'advice', 'advice|social-norms', 'advice|social-norms', 'advice', 'advice', 'advice|social-norms', 'advice', 'description', 'advice', 'description', 'advice|social-norms', 'advice|morality-ethics', 'advice', 'description', 'advice', 'advice', 'advice|morality-ethics', 'advice|morality-ethics', 'advice', 'morality-ethics']` - type: `<class 'list'>`
----> baseline_answer: `advice` - type: `<class 'str'>`
Model answers: advice 
Gold answers: ['description|social-norms', 'morality-ethics', 'morality-ethics', 'advice', 'advice|social-norms', 'morality-ethics', 'advice|morality-ethics', 'advice|description', 'advice', 'social-norms', 'advice', 'advice', 'advice', 'advice|social-norms', 'advice', 'advice', 'morality-ethics|social-norms', 'advice', 'social-norms', 'description', 'description', 'advice', 'advice', 'description', 'description', 'social-norms', 'advice', 'description', 'morality-ethics', 'advice', 'advice', 'advice|social-norms', 'advice|social-norms', 'advice', 'advice', 'advice|social-norms', 'advice', 'description', 'advice', 'description', 'advice|social-norms', 'advice|morality-ethics', 'advice', 'description', 'advice', 'advice', 'advice|morality-ethics', 'advice|morality-ethics', 'advice', 'morality-ethics']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['', 'fairness-cheating', '', 'fairness-cheating', '', 'sanctity-degradation', '', '', '', '', '', 'care-harm', '', '', 'care-harm', '', 'fairness-cheating|sanctity-degradation', 'fairness-cheating', '', '', '', '', '', '', 'fairness-cheating', 'care-harm|fairness-cheating', '', '', 'care-harm|fairness-cheating', '', '', '', '', '', '', 'care-harm', '', '', 'care-harm', '', 'fairness-cheating', '', '', '', 'fairness-cheating', '', 'care-harm', 'care-harm', 'fairness-cheating', '']` - type: `<class 'list'>`
----> baseline_answer: `care-harm` - type: `<class 'str'>`
Model answers: care-harm 
Gold answers: ['', 'fairness-cheating', '', 'fairness-cheating', '', 'sanctity-degradation', '', '', '', '', '', 'care-harm', '', '', 'care-harm', '', 'fairness-cheating|sanctity-degradation', 'fairness-cheating', '', '', '', '', '', '', 'fairness-cheating', 'care-harm|fairness-cheating', '', '', 'care-harm|fairness-cheating', '', '', '', '', '', '', 'care-harm', '', '', 'care-harm', '', 'fairness-cheating', '', '', '', 'fairness-cheating', '', 'care-harm', 'care-harm', 'fairness-cheating', '']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `['playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money', 'playing games of chance where you can win money', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money.', 'playing games of chance where you can win money']`
----> answers: `['playing games of chance where you can win money.', 'playing games of chance where you can win money']` - type: `<class 'list'>`
----> baseline_answer: `playing games of chance where you can win money` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `["It's good", "It's good", 'good', "It's good", "it's good", "It's good", "It's good", "it's good", "it's good", 'good', "It's good", "It's good", "It's good", "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", "It's good", 'good', 'good', "It's good", "It's good", "it's good", "it's good", "It's good", "It's good", "It's good", "it's good", 'good', "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", "It's good", "it's good", "it's good", "it's good", "It's good", "It's good", "It's good", "It's good"]`
----> answers: `["it's good", "It's good", 'good']` - type: `<class 'list'>`
----> baseline_answer: `It is expected` - type: `<class 'str'>`
 --> scores:  0.3333333333333333
----> per-field score: 0.3333333333333333
 ------- evaluating input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency']` - type: `<class 'list'>`
----> baseline_answer: `agency` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, -1.0, 1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[2.0, 1.0, 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, 1.0, 2.0, 1.0, 3.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 3.0, 2.0, 2.0, 2.0, 4.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 3.0, 3.0, 2.0, 2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'tolerated', 'tolerated', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'tolerated', 'tolerated', 'legal', 'legal', 'tolerated', 'tolerated', 'legal', 'tolerated', 'tolerated', 'tolerated', 'tolerated', 'legal', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'tolerated']` - type: `<class 'list'>`
----> baseline_answer: `legal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['probable', 'probable', 'hypothetical', 'probable', 'probable', 'hypothetical', 'probable', 'probable', 'probable', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'probable', 'hypothetical', 'probable', 'probable', 'explicit', 'hypothetical', 'hypothetical', 'probable', 'probable', 'explicit', 'probable', 'hypothetical', 'probable', 'hypothetical', 'explicit', 'explicit', 'hypothetical', 'hypothetical', 'probable', 'probable', 'hypothetical', 'hypothetical', 'probable', 'explicit', 'hypothetical', 'probable']` - type: `<class 'list'>`
----> baseline_answer: `hypothetical` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `n-characters` since it is not visible.
 --> Per-instance overall score: 0.7179487179487178
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'text': [1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.3333333333333333]}
instance_id: 32975 <-> row_number: 4
 --> inputs: ['rot-agree', 'rot-categorization', 'rot-moral-foundations', 'char-involved-general', 'rot-rewrite', 'rot-judgment', 'agency-fwd', 'action-fwd-good', 'fwd-agree', 'fwd-legal', 'fwd-pressure', 'char-involved-fwd', 'fwd-hypothetical', 'n-characters']
 --> Looking up gold labels from row index 4 of `input.csv` (unique inputs). 
 --> input labels: {'rot-agree': [4, 3, 4, 4, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 2, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 2, 1, 3, 3, 4, 3, 3, 2, 3, 3, 3, 4], 'rot-categorization': ['morality-ethics', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics', 'advice', 'morality-ethics', 'advice|description', 'morality-ethics|advice', 'social-norms', 'social-norms', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics', 'social-norms', 'morality-ethics', 'social-norms', 'social-norms|advice', 'social-norms|advice', 'morality-ethics', 'social-norms', 'morality-ethics', 'morality-ethics', 'social-norms|advice', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics|advice', 'advice', 'social-norms', 'morality-ethics|social-norms', 'social-norms', 'social-norms|advice', 'social-norms|advice', 'social-norms|advice', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'description', 'social-norms', 'morality-ethics', 'morality-ethics|advice', 'social-norms|advice', 'social-norms', 'advice', 'morality-ethics|social-norms', 'social-norms', '', 'morality-ethics', 'morality-ethics', 'morality-ethics', 'social-norms'], 'rot-moral-foundations': ['care-harm|fairness-cheating', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|fairness-cheating', 'loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', '', 'loyalty-betrayal|authority-subversion', 'care-harm', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm|authority-subversion', 'loyalty-betrayal', 'fairness-cheating', 'care-harm|loyalty-betrayal', 'care-harm|fairness-cheating|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm', '', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm', 'loyalty-betrayal', 'loyalty-betrayal', 'care-harm', '', 'loyalty-betrayal', 'loyalty-betrayal'], 'char-involved-general': ['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'rot-rewrite': ['being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you', 'being ashamed of people that love you.', 'being ashamed of people that love you'], 'rot-judgment': ["It's rude", "It's rude", "It's rude", "it's rude", "It's rude", "It's rude", "it's rude", "It's rude", "it's rude", 'rude', "it's rude", "It's rude", "It's rude", "It's rude", "it's rude", "It's rude", "It's rude", "It's rude", 'rude', "It's rude", "It's rude", "It's rude", "It's rude", "it's rude", "it's rude", "It's rude", "It's rude", "It's rude", "it's rude", 'rude', "It's rude", "it's rude", "It's rude", "It's rude", 'it is rude', "It's rude", "It's rude to", "it's rude", 'rude', "It's rude", "It's rude", "it's rude", "It's wrong", "It's rude", "It's rude", "it's rude", "It's rude", "it's rude", "It's rude", "It's rude"], 'agency-fwd': ['agency', 'experience', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'experience', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency'], 'action-fwd-good': [-1.0, '', -1.0, -1.0, -2.0, '', -1.0, -1.0, '', -1.0, -1.0, '', -1.0, -1.0, -1.0, -1.0, '', -1.0, -1.0, -1.0, -1.0, '', -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, '', -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0], 'fwd-agree': [4.0, '', 4.0, 4.0, 2.0, '', 3.0, 3.0, '', 3.0, 3.0, '', 3.0, 2.0, 4.0, 2.0, '', 3.0, 2.0, 4.0, 3.0, '', 3.0, 3.0, 3.0, 4.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 4.0, 3.0, 3.0, 2.0, 3.0, 2.0, 2.0, 3.0, '', 4.0, 3.0, 3.0, 2.0, 3.0, 3.0, 3.0, 4.0], 'fwd-legal': ['legal', '', 'legal', 'legal', 'legal', '', 'legal', 'legal', '', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal'], 'fwd-pressure': [-1.0, '', -2.0, -2.0, -2.0, '', -2.0, -1.0, '', -1.0, -1.0, '', -1.0, 0.0, -2.0, -2.0, '', -2.0, -2.0, -2.0, -1.0, '', -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, '', 0.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0], 'char-involved-fwd': ['char-1', '', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', '', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'fwd-hypothetical': ['probable', '', 'explicit', 'probable', 'explicit', '', 'hypothetical', 'probable', '', 'probable', 'explicit', '', 'hypothetical', 'probable', 'probable', 'hypothetical', '', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', '', 'probable', 'probable', 'hypothetical', 'probable', 'hypothetical', 'probable', 'probable', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'explicit', 'probable', 'hypothetical', 'hypothetical', 'probable', 'probable', 'hypothetical', 'explicit', '', 'hypothetical', 'probable', 'hypothetical', 'probable', 'hypothetical', 'probable', 'hypothetical', 'probable'], 'n-characters': [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]}
 - - - - - -  starting a new element: `Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-agree
Executing one action: self.actions.modify_radio('rot-agree', '2')
We are going to select this radio button: <input type="radio" name="rot-agree" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-categorization
Executing one action: self.actions.modify_checkbox('rot-categorization', 'social-norms')
Looking for checkboxes with `name`: `rot-categorization` the values: `['social-norms']`
About to check this checkbox: <input type="checkbox" name="rot-categorization" value="social-norms">
 - - - - - -  starting a new element: `Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-moral-foundations
Executing one action: self.actions.modify_checkbox('rot-moral-foundations', 'on')
Looking for checkboxes with `name`: `rot-moral-foundations` the values: `['on']`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
 - - - - - -  starting a new element: `Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-general
Executing one action: self.actions.modify_radio('char-involved-general', 'char-1')
We are going to select this radio button: <input type="radio" name="char-involved-general" value="char-1" required="">
 - - - - - -  starting a new element: `Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-rewrite
Executing one action: self.actions.modify_text('rot-rewrite', "being ashamed of people that love you")
Add text `being ashamed of people that love you` to this text input: <input type="text" class="text" name="rot-rewrite" value="It's rude to be ashamed of people that love you." id="rot-rewrite">
 - - - - - -  starting a new element: `Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-judgment
Executing one action: self.actions.modify_text('rot-judgment', '')
Since the input value is ``, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: agency-fwd
Executing one action: self.actions.modify_radio('agency-fwd', 'agency')
We are going to select this radio button: <input type="radio" name="agency-fwd" value="agency" required="">
 - - - - - -  starting a new element: `Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: action-fwd-good
Executing one action: self.actions.modify_radio('action-fwd-good', '2')
We are going to select this radio button: <input type="radio" name="action-fwd-good" value="2" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-agree
Executing one action: self.actions.modify_radio('fwd-agree', '2')
We are going to select this radio button: <input type="radio" name="fwd-agree" value="2" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-legal
Executing one action: self.actions.modify_radio('fwd-legal', 'legal')
We are going to select this radio button: <input type="radio" name="fwd-legal" value="legal" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-pressure
Executing one action: self.actions.modify_radio('fwd-pressure', '0')
We are going to select this radio button: <input type="radio" name="fwd-pressure" value="0" required="required">
 - - - - - -  starting a new element: `Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-fwd
Executing one action: self.actions.modify_radio('char-involved-fwd', 'char-1')
We are going to select this radio button: <input type="radio" name="char-involved-fwd" value="char-1" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-hypothetical
Executing one action: self.actions.modify_radio('fwd-hypothetical', 'hypothetical')
We are going to select this radio button: <input type="radio" name="fwd-hypothetical" value="hypothetical" required="required">
 - - - - - -  starting a new element: `Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `n-characters` since it is not visible.
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['social-norms']
 visible_values : ['social-norms']
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : []
 visible_values : []
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-1']
 visible_values : ['char-1']
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['being ashamed of people that love you']
 visible_values : ['being ashamed of people that love you']
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : [None]
 visible_values : [None]
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['agency']
 visible_values : ['agency']
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['legal']
 visible_values : ['legal']
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-1']
 visible_values : ['char-1']
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['hypothetical']
 visible_values : ['hypothetical']
input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[4, 3, 4, 4, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 2, 4, 2, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 2, 1, 3, 3, 4, 3, 3, 2, 3, 3, 3, 4]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['morality-ethics', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics', 'advice', 'morality-ethics', 'advice|description', 'advice|morality-ethics', 'social-norms', 'social-norms', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics', 'social-norms', 'morality-ethics', 'social-norms', 'advice|social-norms', 'advice|social-norms', 'morality-ethics', 'social-norms', 'morality-ethics', 'morality-ethics', 'advice|social-norms', 'social-norms', 'morality-ethics|social-norms', 'advice|morality-ethics', 'advice', 'social-norms', 'morality-ethics|social-norms', 'social-norms', 'advice|social-norms', 'advice|social-norms', 'advice|social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'description', 'social-norms', 'morality-ethics', 'advice|morality-ethics', 'advice|social-norms', 'social-norms', 'advice', 'morality-ethics|social-norms', 'social-norms', '', 'morality-ethics', 'morality-ethics', 'morality-ethics', 'social-norms']` - type: `<class 'list'>`
----> baseline_answer: `social-norms` - type: `<class 'str'>`
Model answers: social-norms 
Gold answers: ['morality-ethics', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics', 'advice', 'morality-ethics', 'advice|description', 'advice|morality-ethics', 'social-norms', 'social-norms', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics', 'social-norms', 'morality-ethics', 'social-norms', 'advice|social-norms', 'advice|social-norms', 'morality-ethics', 'social-norms', 'morality-ethics', 'morality-ethics', 'advice|social-norms', 'social-norms', 'morality-ethics|social-norms', 'advice|morality-ethics', 'advice', 'social-norms', 'morality-ethics|social-norms', 'social-norms', 'advice|social-norms', 'advice|social-norms', 'advice|social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'description', 'social-norms', 'morality-ethics', 'advice|morality-ethics', 'advice|social-norms', 'social-norms', 'advice', 'morality-ethics|social-norms', 'social-norms', '', 'morality-ethics', 'morality-ethics', 'morality-ethics', 'social-norms']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['care-harm|fairness-cheating', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|fairness-cheating', 'loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', '', 'authority-subversion|loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'authority-subversion|care-harm', 'loyalty-betrayal', 'fairness-cheating', 'care-harm|loyalty-betrayal', 'care-harm|fairness-cheating|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm', '', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm', 'loyalty-betrayal', 'loyalty-betrayal', 'care-harm', '', 'loyalty-betrayal', 'loyalty-betrayal']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['care-harm|fairness-cheating', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|fairness-cheating', 'loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', '', 'authority-subversion|loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'authority-subversion|care-harm', 'loyalty-betrayal', 'fairness-cheating', 'care-harm|loyalty-betrayal', 'care-harm|fairness-cheating|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm', '', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm|loyalty-betrayal', 'care-harm', 'loyalty-betrayal', 'loyalty-betrayal', 'care-harm', '', 'loyalty-betrayal', 'loyalty-betrayal']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `['being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you.', 'being ashamed of people that love you', 'being ashamed of people that love you.', 'being ashamed of people that love you']`
----> answers: `['being ashamed of people that love you', 'being ashamed of people that love you.']` - type: `<class 'list'>`
----> baseline_answer: `being ashamed of people that love you` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `["It's rude", "It's rude", "It's rude", "it's rude", "It's rude", "It's rude", "it's rude", "It's rude", "it's rude", 'rude', "it's rude", "It's rude", "It's rude", "It's rude", "it's rude", "It's rude", "It's rude", "It's rude", 'rude', "It's rude", "It's rude", "It's rude", "It's rude", "it's rude", "it's rude", "It's rude", "It's rude", "It's rude", "it's rude", 'rude', "It's rude", "it's rude", "It's rude", "It's rude", 'it is rude', "It's rude", "It's rude to", "it's rude", 'rude', "It's rude", "It's rude", "it's rude", "It's wrong", "It's rude", "It's rude", "it's rude", "It's rude", "it's rude", "It's rude", "It's rude"]`
----> answers: `["it's rude", "It's rude to", 'it is rude', "It's wrong", 'rude', "It's rude"]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['agency', 'experience', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'experience', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency']` - type: `<class 'list'>`
----> baseline_answer: `agency` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[-1.0, '', -1.0, -1.0, -2.0, '', -1.0, -1.0, '', -1.0, -1.0, '', -1.0, -1.0, -1.0, -1.0, '', -1.0, -1.0, -1.0, -1.0, '', -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, '', -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[4.0, '', 4.0, 4.0, 2.0, '', 3.0, 3.0, '', 3.0, 3.0, '', 3.0, 2.0, 4.0, 2.0, '', 3.0, 2.0, 4.0, 3.0, '', 3.0, 3.0, 3.0, 4.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 4.0, 3.0, 3.0, 2.0, 3.0, 2.0, 2.0, 3.0, '', 4.0, 3.0, 3.0, 2.0, 3.0, 3.0, 3.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['legal', '', 'legal', 'legal', 'legal', '', 'legal', 'legal', '', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal']` - type: `<class 'list'>`
----> baseline_answer: `legal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[-1.0, '', -2.0, -2.0, -2.0, '', -2.0, -1.0, '', -1.0, -1.0, '', -1.0, 0.0, -2.0, -2.0, '', -2.0, -2.0, -2.0, -1.0, '', -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, '', 0.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', '', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', '', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['probable', '', 'explicit', 'probable', 'explicit', '', 'hypothetical', 'probable', '', 'probable', 'explicit', '', 'hypothetical', 'probable', 'probable', 'hypothetical', '', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', '', 'probable', 'probable', 'hypothetical', 'probable', 'hypothetical', 'probable', 'probable', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'explicit', 'probable', 'hypothetical', 'hypothetical', 'probable', 'probable', 'hypothetical', 'explicit', '', 'hypothetical', 'probable', 'hypothetical', 'probable', 'hypothetical', 'probable', 'hypothetical', 'probable']` - type: `<class 'list'>`
----> baseline_answer: `hypothetical` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `n-characters` since it is not visible.
 --> Per-instance overall score: 0.5384615384615384
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'text': [1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.3333333333333333, 1.0, 0.0]}
instance_id: 32976 <-> row_number: 5
 --> inputs: ['rot-agree', 'rot-categorization', 'rot-moral-foundations', 'char-involved-general', 'rot-rewrite', 'rot-judgment', 'agency-fwd', 'action-fwd-good', 'fwd-agree', 'fwd-legal', 'fwd-pressure', 'char-involved-fwd', 'fwd-hypothetical', 'n-characters']
 --> Looking up gold labels from row index 5 of `input.csv` (unique inputs). 
 --> input labels: {'rot-agree': [4, 4, 4, 4, 4, 3, 2, 4, 3, 3, 3, 2, 4, 4, 4, 3, 3, 4, 3, 3, 4, 3, 4, 3, 3, 3, 4, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 2, 4, 3, 3, 3, 4, 3, 4, 3, 3, 4, 4, 3], 'rot-categorization': ['social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics|social-norms', 'social-norms', 'social-norms', 'social-norms', 'morality-ethics|advice', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics|social-norms', 'social-norms', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics', 'morality-ethics', 'social-norms|advice', 'morality-ethics', 'morality-ethics', 'social-norms|description', 'morality-ethics|social-norms', 'social-norms|advice', 'social-norms', 'morality-ethics|social-norms', 'social-norms|description', 'social-norms', 'social-norms', 'morality-ethics|social-norms', 'social-norms|advice', 'morality-ethics', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'social-norms|advice', 'social-norms', 'morality-ethics', 'social-norms', 'morality-ethics', 'social-norms', 'morality-ethics', 'morality-ethics'], 'rot-moral-foundations': ['sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'authority-subversion|sanctity-degradation', 'care-harm|sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'sanctity-degradation', 'authority-subversion|sanctity-degradation', 'care-harm|authority-subversion', 'sanctity-degradation', 'sanctity-degradation', 'care-harm|loyalty-betrayal|sanctity-degradation', 'sanctity-degradation', 'fairness-cheating', 'care-harm|authority-subversion', 'loyalty-betrayal|sanctity-degradation', 'sanctity-degradation', 'authority-subversion|sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'care-harm|authority-subversion', 'care-harm|sanctity-degradation', 'loyalty-betrayal|sanctity-degradation', 'care-harm', 'care-harm|authority-subversion|sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'loyalty-betrayal|authority-subversion', 'sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'care-harm|sanctity-degradation', '', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation'], 'char-involved-general': ['char-0', 'char-none', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-none', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none'], 'rot-rewrite': ['a parent  helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping your teenage boy shower.', 'a parent helping a teenage boy shower.', 'parent helping a teenage boy shower.', 'parents helping a teenage boy shower.', 'helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'Parents helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping a teenage boy shower.', 'helping your teenage son shower.', 'a parent helping a teenage boy shower.', 'helping your teenage son take a shower', 'a parent helping a teenage boy shower.', 'helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping your teenage boy shower.', 'parents helping teenage boys shower', 'helping your teenage boy shower.', 'being a parent and helping a teenage boy shower.', 'for a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'parents helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent to helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'parents helping a teenage boy shower.', 'A parent helping a teenage boy shower.', 'parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping your teenage boy shower.', "helping a teenage boy shower when you're a parent.", 'helping a teenage boy shower as a parent', "helping one's teenage boy shower.", 'helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping your teenage boy shower', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.'], 'rot-judgment': ["It's inappropriate", "It's inappropriate", 'inappropriate', "It's inappropriate", 'inappropriate', "It's inappropriate", "it's inappropriate", "It's inappropriate", "It's inappropriate.", "it's inappropriate", 'inappropriate', "It's inappropriate", "It's inappropriate for", "It's inappropriate", 'inappropriate', "It's inappropriate", 'inappropriate', "It's inappropriate", "it's inappropriate", 'inappropriate', "It's inappropriate", "It's inappropriate", "It's inappropriate", "it's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "it's inappropriate", 'inappropriate', "It's inappropriate", "It's inappropriate", "it's inappropriate", "It's inappropriate", "It's inappropriate", "it's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate for a parent to", "It's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "it's inappropriate", "it's inappropriate", 'inappropriate', "It's inappropriate"], 'agency-fwd': ['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency'], 'action-fwd-good': [-1.0, -1.0, -2.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -2.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, '', -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0], 'fwd-agree': [4.0, 4.0, 4.0, 4.0, 4.0, 3.0, 2.0, 4.0, 3.0, 3.0, 4.0, 2.0, 4.0, 4.0, 4.0, 3.0, 3.0, 4.0, 3.0, 3.0, 4.0, 3.0, 4.0, 3.0, 3.0, 3.0, 4.0, 3.0, 3.0, 3.0, 3.0, 2.0, 2.0, '', 3.0, 3.0, 2.0, 2.0, 4.0, 2.0, 3.0, 3.0, 3.0, 3.0, 4.0, 3.0, 3.0, 4.0, 4.0, 3.0], 'fwd-legal': ['legal', 'tolerated', 'legal', 'tolerated', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'tolerated', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'illegal', 'tolerated', 'tolerated', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'tolerated', 'tolerated', 'legal', 'legal'], 'fwd-pressure': [-2.0, -2.0, -2.0, -2.0, -2.0, -2.0, 0.0, -1.0, -2.0, -2.0, -1.0, -1.0, -1.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -1.0, -2.0, -1.0, -2.0, -1.0, -2.0, 0.0, 0.0, '', -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -2.0, -1.0, -2.0, -1.0, -1.0, -2.0, -1.0, -2.0], 'char-involved-fwd': ['char-0', 'char-none', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-none', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-0', '', 'char-0', 'char-0', 'char-none', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none'], 'fwd-hypothetical': ['probable', '', 'explicit', 'explicit', 'probable', 'explicit', 'explicit', '', '', 'explicit', 'probable', 'hypothetical', 'explicit', 'probable', 'explicit', 'explicit', 'explicit', 'hypothetical', 'explicit', 'explicit', 'explicit', 'hypothetical', 'explicit', 'explicit', 'explicit', 'explicit', 'probable', 'explicit', 'explicit', 'explicit', 'explicit', '', 'probable', '', 'explicit', 'hypothetical', '', 'probable', 'probable', 'explicit', 'hypothetical', 'explicit', 'explicit', 'probable', 'hypothetical', 'probable', 'explicit', 'explicit', 'hypothetical', ''], 'n-characters': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}
 - - - - - -  starting a new element: `Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-agree
Executing one action: self.actions.modify_radio('rot-agree', '2')
We are going to select this radio button: <input type="radio" name="rot-agree" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-categorization
Executing one action: self.actions.modify_checkbox('rot-categorization', ['morality-ethics', 'social-norms'])
Looking for checkboxes with `name`: `rot-categorization` the values: `["['morality-ethics', 'social-norms']"]`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
 - - - - - -  starting a new element: `Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-moral-foundations
Executing one action: self.actions.modify_checkbox('rot-moral-foundations', 'care-harm')
Looking for checkboxes with `name`: `rot-moral-foundations` the values: `['care-harm']`
About to check this checkbox: <input type="checkbox" name="rot-moral-foundations" value="care-harm">
 - - - - - -  starting a new element: `Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-general
Executing one action: self.actions.modify_radio('char-involved-general', 'char-0')
We are going to select this radio button: <input type="radio" name="char-involved-general" value="char-0" required="">
 - - - - - -  starting a new element: `Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-rewrite
Executing one action: self.actions.modify_text('rot-rewrite', "A parent helping a teenage boy shower.")
Add text `A parent helping a teenage boy shower.` to this text input: <input type="text" class="text" name="rot-rewrite" value="It's inappropriate for a parent to help a teenage boy shower." id="rot-rewrite">
 - - - - - -  starting a new element: `Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-judgment
Executing one action: self.actions.modify_text('rot-judgment', '')
Since the input value is ``, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: agency-fwd
Executing one action: self.actions.modify_radio('agency-fwd', 'agency')
We are going to select this radio button: <input type="radio" name="agency-fwd" value="agency" required="">
 - - - - - -  starting a new element: `Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: action-fwd-good
Executing one action: self.actions.modify_radio('action-fwd-good', '-2')
We are going to select this radio button: <input type="radio" name="action-fwd-good" value="-2" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-agree
Executing one action: self.actions.modify_radio('fwd-agree', '2')
We are going to select this radio button: <input type="radio" name="fwd-agree" value="2" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-legal
Executing one action: self.actions.modify_radio('fwd-legal', 'legal')
We are going to select this radio button: <input type="radio" name="fwd-legal" value="legal" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-pressure
Executing one action: self.actions.modify_radio('fwd-pressure', '0')
We are going to select this radio button: <input type="radio" name="fwd-pressure" value="0" required="required">
 - - - - - -  starting a new element: `Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-fwd
Executing one action: self.actions.modify_radio('char-involved-fwd', 'char-0')
We are going to select this radio button: <input type="radio" name="char-involved-fwd" value="char-0" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-hypothetical
Executing one action: self.actions.modify_radio('fwd-hypothetical', 'hypothetical')
We are going to select this radio button: <input type="radio" name="fwd-hypothetical" value="hypothetical" required="required">
 - - - - - -  starting a new element: `Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `n-characters` since it is not visible.
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : []
 visible_values : []
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['care-harm']
 visible_values : ['care-harm']
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-0']
 visible_values : ['char-0']
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['A parent helping a teenage boy shower.']
 visible_values : ['A parent helping a teenage boy shower.']
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : [None]
 visible_values : [None]
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['agency']
 visible_values : ['agency']
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['legal']
 visible_values : ['legal']
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-0']
 visible_values : ['char-0']
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['hypothetical']
 visible_values : ['hypothetical']
input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[4, 4, 4, 4, 4, 3, 2, 4, 3, 3, 3, 2, 4, 4, 4, 3, 3, 4, 3, 3, 4, 3, 4, 3, 3, 3, 4, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 2, 4, 3, 3, 3, 4, 3, 4, 3, 3, 4, 4, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics|social-norms', 'social-norms', 'social-norms', 'social-norms', 'advice|morality-ethics', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics|social-norms', 'social-norms', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics', 'morality-ethics', 'advice|social-norms', 'morality-ethics', 'morality-ethics', 'description|social-norms', 'morality-ethics|social-norms', 'advice|social-norms', 'social-norms', 'morality-ethics|social-norms', 'description|social-norms', 'social-norms', 'social-norms', 'morality-ethics|social-norms', 'advice|social-norms', 'morality-ethics', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'advice|social-norms', 'social-norms', 'morality-ethics', 'social-norms', 'morality-ethics', 'social-norms', 'morality-ethics', 'morality-ethics']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics|social-norms', 'social-norms', 'social-norms', 'social-norms', 'advice|morality-ethics', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics|social-norms', 'social-norms', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics', 'morality-ethics', 'advice|social-norms', 'morality-ethics', 'morality-ethics', 'description|social-norms', 'morality-ethics|social-norms', 'advice|social-norms', 'social-norms', 'morality-ethics|social-norms', 'description|social-norms', 'social-norms', 'social-norms', 'morality-ethics|social-norms', 'advice|social-norms', 'morality-ethics', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics', 'morality-ethics|social-norms', 'social-norms', 'morality-ethics|social-norms', 'morality-ethics|social-norms', 'social-norms', 'advice|social-norms', 'social-norms', 'morality-ethics', 'social-norms', 'morality-ethics', 'social-norms', 'morality-ethics', 'morality-ethics']
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'authority-subversion|sanctity-degradation', 'care-harm|sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'sanctity-degradation', 'authority-subversion|sanctity-degradation', 'authority-subversion|care-harm', 'sanctity-degradation', 'sanctity-degradation', 'care-harm|loyalty-betrayal|sanctity-degradation', 'sanctity-degradation', 'fairness-cheating', 'authority-subversion|care-harm', 'loyalty-betrayal|sanctity-degradation', 'sanctity-degradation', 'authority-subversion|sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'authority-subversion|care-harm', 'care-harm|sanctity-degradation', 'loyalty-betrayal|sanctity-degradation', 'care-harm', 'authority-subversion|care-harm|sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'authority-subversion|loyalty-betrayal', 'sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'care-harm|sanctity-degradation', '', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation']` - type: `<class 'list'>`
----> baseline_answer: `care-harm` - type: `<class 'str'>`
Model answers: care-harm 
Gold answers: ['sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'authority-subversion|sanctity-degradation', 'care-harm|sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'sanctity-degradation', 'authority-subversion|sanctity-degradation', 'authority-subversion|care-harm', 'sanctity-degradation', 'sanctity-degradation', 'care-harm|loyalty-betrayal|sanctity-degradation', 'sanctity-degradation', 'fairness-cheating', 'authority-subversion|care-harm', 'loyalty-betrayal|sanctity-degradation', 'sanctity-degradation', 'authority-subversion|sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'authority-subversion|care-harm', 'care-harm|sanctity-degradation', 'loyalty-betrayal|sanctity-degradation', 'care-harm', 'authority-subversion|care-harm|sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'authority-subversion|loyalty-betrayal', 'sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'care-harm|sanctity-degradation', '', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-0', 'char-none', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-none', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none']` - type: `<class 'list'>`
----> baseline_answer: `char-0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `['a parent  helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping your teenage boy shower.', 'a parent helping a teenage boy shower.', 'parent helping a teenage boy shower.', 'parents helping a teenage boy shower.', 'helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'Parents helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping a teenage boy shower.', 'helping your teenage son shower.', 'a parent helping a teenage boy shower.', 'helping your teenage son take a shower', 'a parent helping a teenage boy shower.', 'helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping your teenage boy shower.', 'parents helping teenage boys shower', 'helping your teenage boy shower.', 'being a parent and helping a teenage boy shower.', 'for a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'parents helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent to helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'parents helping a teenage boy shower.', 'A parent helping a teenage boy shower.', 'parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping your teenage boy shower.', "helping a teenage boy shower when you're a parent.", 'helping a teenage boy shower as a parent', "helping one's teenage boy shower.", 'helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.', 'helping your teenage boy shower', 'a parent helping a teenage boy shower.', 'a parent helping a teenage boy shower.']`
----> answers: `['being a parent and helping a teenage boy shower.', 'parents helping a teenage boy shower.', 'Parents helping a teenage boy shower.', 'helping your teenage son shower.', 'a parent  helping a teenage boy shower.', 'helping your teenage son take a shower', 'for a parent helping a teenage boy shower.', 'a parent to helping a teenage boy shower.', 'A parent helping a teenage boy shower.', 'helping a teenage boy shower as a parent', "helping a teenage boy shower when you're a parent.", "helping one's teenage boy shower.", 'helping a teenage boy shower.', 'helping your teenage boy shower', 'helping your teenage boy shower.', 'parents helping teenage boys shower', 'a parent helping a teenage boy shower.', 'parent helping a teenage boy shower.']` - type: `<class 'list'>`
----> baseline_answer: `A parent helping a teenage boy shower.` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `["It's inappropriate", "It's inappropriate", 'inappropriate', "It's inappropriate", 'inappropriate', "It's inappropriate", "it's inappropriate", "It's inappropriate", "It's inappropriate.", "it's inappropriate", 'inappropriate', "It's inappropriate", "It's inappropriate for", "It's inappropriate", 'inappropriate', "It's inappropriate", 'inappropriate', "It's inappropriate", "it's inappropriate", 'inappropriate', "It's inappropriate", "It's inappropriate", "It's inappropriate", "it's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "it's inappropriate", 'inappropriate', "It's inappropriate", "It's inappropriate", "it's inappropriate", "It's inappropriate", "It's inappropriate", "it's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate for a parent to", "It's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "It's inappropriate", "it's inappropriate", "it's inappropriate", 'inappropriate', "It's inappropriate"]`
----> answers: `["It's inappropriate", "it's inappropriate", "It's inappropriate.", 'inappropriate', "It's inappropriate for a parent to", "It's inappropriate for"]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency']` - type: `<class 'list'>`
----> baseline_answer: `agency` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[-1.0, -1.0, -2.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -2.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, '', -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[4.0, 4.0, 4.0, 4.0, 4.0, 3.0, 2.0, 4.0, 3.0, 3.0, 4.0, 2.0, 4.0, 4.0, 4.0, 3.0, 3.0, 4.0, 3.0, 3.0, 4.0, 3.0, 4.0, 3.0, 3.0, 3.0, 4.0, 3.0, 3.0, 3.0, 3.0, 2.0, 2.0, '', 3.0, 3.0, 2.0, 2.0, 4.0, 2.0, 3.0, 3.0, 3.0, 3.0, 4.0, 3.0, 3.0, 4.0, 4.0, 3.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['legal', 'tolerated', 'legal', 'tolerated', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'tolerated', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'illegal', 'tolerated', 'tolerated', 'tolerated', 'legal', 'tolerated', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'tolerated', 'tolerated', 'legal', 'legal']` - type: `<class 'list'>`
----> baseline_answer: `legal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[-2.0, -2.0, -2.0, -2.0, -2.0, -2.0, 0.0, -1.0, -2.0, -2.0, -1.0, -1.0, -1.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -1.0, -2.0, -1.0, -2.0, -1.0, -2.0, 0.0, 0.0, '', -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -2.0, -1.0, -2.0, -1.0, -1.0, -2.0, -1.0, -2.0]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-0', 'char-none', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-none', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-0', '', 'char-0', 'char-0', 'char-none', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none']` - type: `<class 'list'>`
----> baseline_answer: `char-0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['probable', '', 'explicit', 'explicit', 'probable', 'explicit', 'explicit', '', '', 'explicit', 'probable', 'hypothetical', 'explicit', 'probable', 'explicit', 'explicit', 'explicit', 'hypothetical', 'explicit', 'explicit', 'explicit', 'hypothetical', 'explicit', 'explicit', 'explicit', 'explicit', 'probable', 'explicit', 'explicit', 'explicit', 'explicit', '', 'probable', '', 'explicit', 'hypothetical', '', 'probable', 'probable', 'explicit', 'hypothetical', 'explicit', 'explicit', 'probable', 'hypothetical', 'probable', 'explicit', 'explicit', 'hypothetical', '']` - type: `<class 'list'>`
----> baseline_answer: `hypothetical` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `n-characters` since it is not visible.
 --> Per-instance overall score: 0.46153846153846156
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0], 'text': [1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.3333333333333333, 1.0, 0.0, 1.0, 0.0]}
instance_id: 32980 <-> row_number: 9
 --> inputs: ['rot-agree', 'rot-categorization', 'rot-moral-foundations', 'char-involved-general', 'rot-rewrite', 'rot-judgment', 'agency-fwd', 'action-fwd-good', 'fwd-agree', 'fwd-legal', 'fwd-pressure', 'char-involved-fwd', 'fwd-hypothetical', 'n-characters']
 --> Looking up gold labels from row index 9 of `input.csv` (unique inputs). 
 --> input labels: {'rot-agree': [3, 4, 3, 3, 3, 3, 3, 4, 4, 3, 3, 3, 4, 4, 2, 4, 3, 3, 4, 3, 3, 4, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 4, 4, 4, 3, 3, 3, 4, 4, 2, 4, 3, 4], 'rot-categorization': ['morality-ethics|social-norms', 'advice', 'advice', 'social-norms', 'social-norms|description', 'advice|description', 'social-norms', 'advice', 'social-norms', 'social-norms', 'advice', 'advice', 'social-norms|advice', 'morality-ethics|social-norms', 'advice', 'social-norms|advice', 'morality-ethics|social-norms', 'social-norms', 'social-norms|advice', 'social-norms', 'advice', 'social-norms', 'social-norms', 'social-norms', 'advice', 'social-norms', 'social-norms|advice', 'social-norms|advice', 'social-norms', 'advice', 'social-norms|advice', 'advice', 'advice', 'social-norms|advice', 'social-norms|advice', 'advice', 'advice', 'description', 'advice|description', 'social-norms', 'morality-ethics|advice', 'social-norms|advice', 'social-norms|advice', 'social-norms', 'social-norms', 'advice', 'description', 'social-norms', 'advice', 'social-norms'], 'rot-moral-foundations': ['care-harm', '', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating|loyalty-betrayal', 'authority-subversion', 'care-harm', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating|loyalty-betrayal', 'fairness-cheating', 'fairness-cheating|authority-subversion|sanctity-degradation', 'care-harm', 'fairness-cheating', 'fairness-cheating', 'care-harm|authority-subversion', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating|authority-subversion', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'care-harm|fairness-cheating|loyalty-betrayal', 'fairness-cheating', 'fairness-cheating|authority-subversion', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', '', 'fairness-cheating', 'care-harm|fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'care-harm', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', '', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating'], 'char-involved-general': ['char-1', 'char-1', 'char-2', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'rot-rewrite': ['letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'having to let other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'not letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beating you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition', 'not letting other people beat you in a competition.', 'letting other people beat you in a competition', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition'], 'rot-judgment': ["You don't have to", "don't have to", "don't have to", "isn't required", "don't have to", "you don't have to", "don't have to", "it's isn't required", "don't have to", 'expected', "Don't have to", "You don't have to", "You don't have to", "you don't have to", "don't have to", "You don't have to", "don't have to", "You don't have to", "You don't have to", "You don't have to", "it's not expected", "don't have to", "You don't have to", "You don't have to", "don't have to", "don't have to", "You don't have to", "don't have to", "don't have to", "You shouldn't", "don't have to", "don't", "you don't have to", "don't have to", "You don't have to", "you don't have to", "You don't have to", "don't have to", "You don't have to", "it's not expected", "You shouldn't", "You don't have to", "don't have to", "don't have to", "don't have to", 'okay', "don't have to", "You don't have to", "don't have to", "You don't have to"], 'agency-fwd': ['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency'], 'action-fwd-good': [-1.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0, 1.0, 0.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, -1.0], 'fwd-agree': [2.0, 4.0, 2.0, 3.0, 3.0, 3.0, 3.0, 4.0, 4.0, 4.0, 3.0, 3.0, 4.0, 3.0, 2.0, 2.0, 1.0, 3.0, 1.0, 3.0, 3.0, 4.0, 2.0, 3.0, 2.0, 2.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 2.0, 3.0, 2.0, 2.0, 3.0, 2.0, 4.0, 3.0, 2.0, 3.0, 3.0, 4.0, 2.0, 2.0, 2.0, 2.0], 'fwd-legal': ['legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal'], 'fwd-pressure': [-1.0, -2.0, -2.0, 0.0, -1.0, -1.0, -1.0, -1.0, -2.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0, -1.0, -1.0, 0.0, 0.0, 0.0, -2.0, 0.0, 0.0, -1.0, -1.0, 0.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, -1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -2.0, 0.0, -1.0, 0.0, -1.0, 2.0, -1.0, -1.0, -1.0, -1.0], 'char-involved-fwd': ['char-1', 'char-1', 'char-2', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'fwd-hypothetical': ['explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit-no', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit'], 'n-characters': [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]}
 - - - - - -  starting a new element: `Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-agree
Executing one action: self.actions.modify_radio('rot-agree', '2')
We are going to select this radio button: <input type="radio" name="rot-agree" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-categorization
Executing one action: self.actions.modify_checkbox('rot-categorization', 'advice')
Looking for checkboxes with `name`: `rot-categorization` the values: `['advice']`
About to check this checkbox: <input type="checkbox" name="rot-categorization" value="advice">
 - - - - - -  starting a new element: `Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-moral-foundations
Executing one action: self.actions.modify_checkbox('rot-moral-foundations', 'fairness-cheating')
Looking for checkboxes with `name`: `rot-moral-foundations` the values: `['fairness-cheating']`
About to check this checkbox: <input type="checkbox" name="rot-moral-foundations" value="fairness-cheating">
 - - - - - -  starting a new element: `Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-general
Executing one action: self.actions.modify_radio('char-involved-general', 'char-1')
We are going to select this radio button: <input type="radio" name="char-involved-general" value="char-1" required="">
 - - - - - -  starting a new element: `Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-rewrite
Executing one action: self.actions.modify_text('rot-rewrite', 'letting other people win in a competition')
Add text `letting other people win in a competition` to this text input: <input type="text" class="text" name="rot-rewrite" value="You don't have to let other people beat you in a competition." id="rot-rewrite">
 - - - - - -  starting a new element: `Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-judgment
Executing one action: self.actions.modify_text('rot-judgment', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: agency-fwd
Executing one action: self.actions.modify_radio('agency-fwd', 'experience')
We are going to select this radio button: <input type="radio" name="agency-fwd" value="experience" required="">
 - - - - - -  starting a new element: `Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `action-fwd-good` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `fwd-agree` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `fwd-legal` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `fwd-pressure` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `char-involved-fwd` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `fwd-hypothetical` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `n-characters` since it is not visible.
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['advice']
 visible_values : ['advice']
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['fairness-cheating']
 visible_values : ['fairness-cheating']
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-1']
 visible_values : ['char-1']
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['letting other people win in a competition']
 visible_values : ['letting other people win in a competition']
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : [None]
 visible_values : [None]
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['experience']
 visible_values : ['experience']
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : []
 visible_values : []
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : []
 visible_values : []
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : []
 visible_values : []
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : []
 visible_values : []
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : []
 visible_values : []
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : []
 visible_values : []
input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[3, 4, 3, 3, 3, 3, 3, 4, 4, 3, 3, 3, 4, 4, 2, 4, 3, 3, 4, 3, 3, 4, 3, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 4, 4, 4, 3, 3, 3, 4, 4, 2, 4, 3, 4]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['morality-ethics|social-norms', 'advice', 'advice', 'social-norms', 'description|social-norms', 'advice|description', 'social-norms', 'advice', 'social-norms', 'social-norms', 'advice', 'advice', 'advice|social-norms', 'morality-ethics|social-norms', 'advice', 'advice|social-norms', 'morality-ethics|social-norms', 'social-norms', 'advice|social-norms', 'social-norms', 'advice', 'social-norms', 'social-norms', 'social-norms', 'advice', 'social-norms', 'advice|social-norms', 'advice|social-norms', 'social-norms', 'advice', 'advice|social-norms', 'advice', 'advice', 'advice|social-norms', 'advice|social-norms', 'advice', 'advice', 'description', 'advice|description', 'social-norms', 'advice|morality-ethics', 'advice|social-norms', 'advice|social-norms', 'social-norms', 'social-norms', 'advice', 'description', 'social-norms', 'advice', 'social-norms']` - type: `<class 'list'>`
----> baseline_answer: `advice` - type: `<class 'str'>`
Model answers: advice 
Gold answers: ['morality-ethics|social-norms', 'advice', 'advice', 'social-norms', 'description|social-norms', 'advice|description', 'social-norms', 'advice', 'social-norms', 'social-norms', 'advice', 'advice', 'advice|social-norms', 'morality-ethics|social-norms', 'advice', 'advice|social-norms', 'morality-ethics|social-norms', 'social-norms', 'advice|social-norms', 'social-norms', 'advice', 'social-norms', 'social-norms', 'social-norms', 'advice', 'social-norms', 'advice|social-norms', 'advice|social-norms', 'social-norms', 'advice', 'advice|social-norms', 'advice', 'advice', 'advice|social-norms', 'advice|social-norms', 'advice', 'advice', 'description', 'advice|description', 'social-norms', 'advice|morality-ethics', 'advice|social-norms', 'advice|social-norms', 'social-norms', 'social-norms', 'advice', 'description', 'social-norms', 'advice', 'social-norms']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['care-harm', '', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating|loyalty-betrayal', 'authority-subversion', 'care-harm', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating|loyalty-betrayal', 'fairness-cheating', 'authority-subversion|fairness-cheating|sanctity-degradation', 'care-harm', 'fairness-cheating', 'fairness-cheating', 'authority-subversion|care-harm', 'fairness-cheating', 'fairness-cheating', 'authority-subversion|fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'care-harm|fairness-cheating|loyalty-betrayal', 'fairness-cheating', 'authority-subversion|fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', '', 'fairness-cheating', 'care-harm|fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'care-harm', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', '', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating']` - type: `<class 'list'>`
----> baseline_answer: `fairness-cheating` - type: `<class 'str'>`
Model answers: fairness-cheating 
Gold answers: ['care-harm', '', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating|loyalty-betrayal', 'authority-subversion', 'care-harm', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating|loyalty-betrayal', 'fairness-cheating', 'authority-subversion|fairness-cheating|sanctity-degradation', 'care-harm', 'fairness-cheating', 'fairness-cheating', 'authority-subversion|care-harm', 'fairness-cheating', 'fairness-cheating', 'authority-subversion|fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'care-harm|fairness-cheating|loyalty-betrayal', 'fairness-cheating', 'authority-subversion|fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', '', 'fairness-cheating', 'care-harm|fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'care-harm', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating', '', 'fairness-cheating', 'fairness-cheating', 'fairness-cheating']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-2', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `['letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'having to let other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'not letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beating you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition', 'not letting other people beat you in a competition.', 'letting other people beat you in a competition', 'letting other people beat you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition']`
----> answers: `['having to let other people beat you in a competition.', 'letting other people beating you in a competition.', 'letting other people beat you in a competition.', 'letting other people beat you in a competition', 'not letting other people beat you in a competition.']` - type: `<class 'list'>`
----> baseline_answer: `letting other people win in a competition` - type: `<class 'str'>`
 --> scores:  0.7999999999999999
----> per-field score: 0.7999999999999999
 ------- evaluating input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `["You don't have to", "don't have to", "don't have to", "isn't required", "don't have to", "you don't have to", "don't have to", "it's isn't required", "don't have to", 'expected', "Don't have to", "You don't have to", "You don't have to", "you don't have to", "don't have to", "You don't have to", "don't have to", "You don't have to", "You don't have to", "You don't have to", "it's not expected", "don't have to", "You don't have to", "You don't have to", "don't have to", "don't have to", "You don't have to", "don't have to", "don't have to", "You shouldn't", "don't have to", "don't", "you don't have to", "don't have to", "You don't have to", "you don't have to", "You don't have to", "don't have to", "You don't have to", "it's not expected", "You shouldn't", "You don't have to", "don't have to", "don't have to", "don't have to", 'okay', "don't have to", "You don't have to", "don't have to", "You don't have to"]`
----> answers: `["You don't have to", "it's isn't required", 'okay', "Don't have to", "You shouldn't", 'expected', "it's not expected", "don't have to", "don't", "isn't required", "you don't have to"]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency']` - type: `<class 'list'>`
----> baseline_answer: `experience` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `action-fwd-good` since it is not visible.
 ------- evaluating input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `fwd-agree` since it is not visible.
 ------- evaluating input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `fwd-legal` since it is not visible.
 ------- evaluating input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `fwd-pressure` since it is not visible.
 ------- evaluating input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `char-involved-fwd` since it is not visible.
 ------- evaluating input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `fwd-hypothetical` since it is not visible.
 ------- evaluating input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `n-characters` since it is not visible.
 --> Per-instance overall score: 0.5428571428571428
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0], 'text': [1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.3333333333333333, 1.0, 0.0, 1.0, 0.0, 0.7999999999999999, 0.0]}
instance_id: 32973 <-> row_number: 2
 --> inputs: ['rot-agree', 'rot-categorization', 'rot-moral-foundations', 'char-involved-general', 'rot-rewrite', 'rot-judgment', 'agency-fwd', 'action-fwd-good', 'fwd-agree', 'fwd-legal', 'fwd-pressure', 'char-involved-fwd', 'fwd-hypothetical', 'n-characters']
 --> Looking up gold labels from row index 2 of `input.csv` (unique inputs). 
 --> input labels: {'rot-agree': [4, 3, 3, 2, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 4, 4, 3, 3, 3, 4, 4, 3, 3, 4, 3, 2, 3, 3, 3, 3, 2, 2, 3, 3, 3, 4, 3, 4, 2, 3, 3, 3, 3, 4], 'rot-categorization': ['morality-ethics', 'morality-ethics', 'morality-ethics', 'morality-ethics', 'morality-ethics|social-norms', 'social-norms|advice', 'social-norms|advice', 'morality-ethics', 'morality-ethics', 'morality-ethics', 'advice', 'social-norms', 'morality-ethics', 'advice', 'social-norms', 'advice', 'social-norms', 'morality-ethics', 'social-norms', 'social-norms', 'morality-ethics', 'morality-ethics', 'morality-ethics|advice', 'morality-ethics|social-norms', 'morality-ethics|social-norms|advice', 'morality-ethics|social-norms', 'morality-ethics|description', 'morality-ethics|social-norms', 'morality-ethics|advice', 'social-norms|description', 'morality-ethics|social-norms', 'morality-ethics', 'advice', 'social-norms|advice', 'social-norms|advice', 'morality-ethics|social-norms', 'description', 'social-norms|advice', 'morality-ethics', 'morality-ethics|advice', 'social-norms', 'advice', 'morality-ethics', 'morality-ethics', 'morality-ethics|advice', 'advice', '', 'morality-ethics|advice', 'morality-ethics|advice', 'morality-ethics'], 'rot-moral-foundations': ['fairness-cheating|sanctity-degradation', 'sanctity-degradation', 'care-harm|fairness-cheating', 'sanctity-degradation', '', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'fairness-cheating', 'care-harm', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm|sanctity-degradation', 'sanctity-degradation', '', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm|fairness-cheating', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm|sanctity-degradation', 'fairness-cheating', 'care-harm', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm', '', 'fairness-cheating|sanctity-degradation', 'care-harm|sanctity-degradation', 'fairness-cheating', 'care-harm', '', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'care-harm'], 'char-involved-general': ['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'rot-rewrite': ['being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'Being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'Being gluttonous.', 'being gluttonous', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous', 'being gluttonous.', 'being gluttonous.', 'being gluttonous'], 'rot-judgment': ["It's wrong", "It's wrong", "it's wrong", "It's wrong", "It's wrong", "it's wrong", "It's wrong.", "it's wrong", 'wrong', "It's wrong", "It's wrong to", "It's wrong", "It's wrong", "it's wrong", "It's wrong", "it's wrong", "It's wrong", "it's wrong", 'wrong', "It's wrong", "It's wrong", "It's wrong", "It's wrong", "It's wrong", "It's wrong", "it's wrong", "It's wrong", "It's wrong", "It's wrong", "It's wrong", "It's wrong", "it's wrong", "It's wrong", "it's wrong", "It's wrong", "it's wrong", "It's wrong", "It's wrong", 'wrong', "It's wrong", "it's wrong", "It's wrong", "It's wrong", "It's wrong to", "It's wrong", "it's wrong", "it's wrong", 'wrong', "It's wrong", "It's wrong"], 'agency-fwd': ['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency'], 'action-fwd-good': [-1.0, -2.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -2.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0], 'fwd-agree': [4.0, 3.0, 3.0, 2.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 2.0, 2.0, 3.0, 3.0, 2.0, 3.0, 4.0, 4.0, 3.0, 3.0, 3.0, 4.0, 4.0, 3.0, 4.0, 4.0, 3.0, 2.0, 3.0, 3.0, 3.0, 3.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 3.0, 4.0, 2.0, 3.0, 3.0, 2.0, 3.0, 4.0], 'fwd-legal': ['legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal'], 'fwd-pressure': [-2.0, -1.0, -2.0, 0.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -2.0, -2.0, -2.0, -2.0, 0.0, -2.0, 0.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -2.0, -1.0, -2.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0], 'char-involved-fwd': ['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'fwd-hypothetical': ['probable', 'explicit', 'probable', 'explicit', 'probable', 'explicit', 'probable', 'hypothetical', 'probable', 'explicit', 'explicit', 'explicit', 'explicit', 'probable', 'explicit', 'probable', 'probable', 'explicit', 'explicit', 'explicit', 'hypothetical', 'explicit', 'probable', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'probable', 'probable', 'explicit', 'probable', 'explicit', 'hypothetical', 'probable', 'probable-no', 'probable', 'probable', 'explicit', 'probable', 'probable', 'hypothetical', 'probable', 'explicit', 'explicit', 'probable', 'probable', 'hypothetical', 'explicit', 'explicit'], 'n-characters': [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]}
 - - - - - -  starting a new element: `Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-agree
Executing one action: self.actions.modify_radio('rot-agree', '2')
We are going to select this radio button: <input type="radio" name="rot-agree" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-categorization
Executing one action: self.actions.modify_checkbox('rot-categorization', 'morality-ethics')
Looking for checkboxes with `name`: `rot-categorization` the values: `['morality-ethics']`
About to check this checkbox: <input type="checkbox" name="rot-categorization" value="morality-ethics">
 - - - - - -  starting a new element: `Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-moral-foundations
Executing one action: self.actions.modify_checkbox('rot-moral-foundations', 'sanctity-degradation')
Looking for checkboxes with `name`: `rot-moral-foundations` the values: `['sanctity-degradation']`
About to check this checkbox: <input type="checkbox" name="rot-moral-foundations" value="sanctity-degradation">
 - - - - - -  starting a new element: `Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-general
Executing one action: self.actions.modify_radio('char-involved-general', 'char-1')
We are going to select this radio button: <input type="radio" name="char-involved-general" value="char-1" required="">
 - - - - - -  starting a new element: `Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-rewrite
Executing one action: self.actions.modify_text('rot-rewrite', "being gluttonous")
Add text `being gluttonous` to this text input: <input type="text" class="text" name="rot-rewrite" value="It's wrong to be gluttonous." id="rot-rewrite">
 - - - - - -  starting a new element: `Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-judgment
Executing one action: self.actions.modify_text('rot-judgment', '')
Since the input value is ``, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: agency-fwd
Executing one action: self.actions.modify_radio('agency-fwd', 'agency')
We are going to select this radio button: <input type="radio" name="agency-fwd" value="agency" required="">
 - - - - - -  starting a new element: `Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: action-fwd-good
Executing one action: self.actions.modify_radio('action-fwd-good', '-2')
We are going to select this radio button: <input type="radio" name="action-fwd-good" value="-2" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-agree
Executing one action: self.actions.modify_radio('fwd-agree', '2')
We are going to select this radio button: <input type="radio" name="fwd-agree" value="2" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-legal
Executing one action: self.actions.modify_radio('fwd-legal', 'tolerated')
We are going to select this radio button: <input type="radio" name="fwd-legal" value="tolerated" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-pressure
Executing one action: self.actions.modify_radio('fwd-pressure', '-2')
We are going to select this radio button: <input type="radio" name="fwd-pressure" value="-2" required="required">
 - - - - - -  starting a new element: `Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-fwd
Executing one action: self.actions.modify_radio('char-involved-fwd', 'char-1')
We are going to select this radio button: <input type="radio" name="char-involved-fwd" value="char-1" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-hypothetical
Executing one action: self.actions.modify_radio('fwd-hypothetical', 'hypothetical')
We are going to select this radio button: <input type="radio" name="fwd-hypothetical" value="hypothetical" required="required">
 - - - - - -  starting a new element: `Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `n-characters` since it is not visible.
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['morality-ethics']
 visible_values : ['morality-ethics']
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['sanctity-degradation']
 visible_values : ['sanctity-degradation']
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-1']
 visible_values : ['char-1']
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['being gluttonous']
 visible_values : ['being gluttonous']
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : [None]
 visible_values : [None]
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['agency']
 visible_values : ['agency']
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['tolerated']
 visible_values : ['tolerated']
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-1']
 visible_values : ['char-1']
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['hypothetical']
 visible_values : ['hypothetical']
input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[4, 3, 3, 2, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 4, 4, 3, 3, 3, 4, 4, 3, 3, 4, 3, 2, 3, 3, 3, 3, 2, 2, 3, 3, 3, 4, 3, 4, 2, 3, 3, 3, 3, 4]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['morality-ethics', 'morality-ethics', 'morality-ethics', 'morality-ethics', 'morality-ethics|social-norms', 'advice|social-norms', 'advice|social-norms', 'morality-ethics', 'morality-ethics', 'morality-ethics', 'advice', 'social-norms', 'morality-ethics', 'advice', 'social-norms', 'advice', 'social-norms', 'morality-ethics', 'social-norms', 'social-norms', 'morality-ethics', 'morality-ethics', 'advice|morality-ethics', 'morality-ethics|social-norms', 'advice|morality-ethics|social-norms', 'morality-ethics|social-norms', 'description|morality-ethics', 'morality-ethics|social-norms', 'advice|morality-ethics', 'description|social-norms', 'morality-ethics|social-norms', 'morality-ethics', 'advice', 'advice|social-norms', 'advice|social-norms', 'morality-ethics|social-norms', 'description', 'advice|social-norms', 'morality-ethics', 'advice|morality-ethics', 'social-norms', 'advice', 'morality-ethics', 'morality-ethics', 'advice|morality-ethics', 'advice', '', 'advice|morality-ethics', 'advice|morality-ethics', 'morality-ethics']` - type: `<class 'list'>`
----> baseline_answer: `morality-ethics` - type: `<class 'str'>`
Model answers: morality-ethics 
Gold answers: ['morality-ethics', 'morality-ethics', 'morality-ethics', 'morality-ethics', 'morality-ethics|social-norms', 'advice|social-norms', 'advice|social-norms', 'morality-ethics', 'morality-ethics', 'morality-ethics', 'advice', 'social-norms', 'morality-ethics', 'advice', 'social-norms', 'advice', 'social-norms', 'morality-ethics', 'social-norms', 'social-norms', 'morality-ethics', 'morality-ethics', 'advice|morality-ethics', 'morality-ethics|social-norms', 'advice|morality-ethics|social-norms', 'morality-ethics|social-norms', 'description|morality-ethics', 'morality-ethics|social-norms', 'advice|morality-ethics', 'description|social-norms', 'morality-ethics|social-norms', 'morality-ethics', 'advice', 'advice|social-norms', 'advice|social-norms', 'morality-ethics|social-norms', 'description', 'advice|social-norms', 'morality-ethics', 'advice|morality-ethics', 'social-norms', 'advice', 'morality-ethics', 'morality-ethics', 'advice|morality-ethics', 'advice', '', 'advice|morality-ethics', 'advice|morality-ethics', 'morality-ethics']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['fairness-cheating|sanctity-degradation', 'sanctity-degradation', 'care-harm|fairness-cheating', 'sanctity-degradation', '', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'fairness-cheating', 'care-harm', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm|sanctity-degradation', 'sanctity-degradation', '', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm|fairness-cheating', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm|sanctity-degradation', 'fairness-cheating', 'care-harm', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm', '', 'fairness-cheating|sanctity-degradation', 'care-harm|sanctity-degradation', 'fairness-cheating', 'care-harm', '', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'care-harm']` - type: `<class 'list'>`
----> baseline_answer: `sanctity-degradation` - type: `<class 'str'>`
Model answers: sanctity-degradation 
Gold answers: ['fairness-cheating|sanctity-degradation', 'sanctity-degradation', 'care-harm|fairness-cheating', 'sanctity-degradation', '', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'fairness-cheating', 'care-harm', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm|sanctity-degradation', 'sanctity-degradation', '', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm|fairness-cheating', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm|sanctity-degradation', 'fairness-cheating', 'care-harm', 'care-harm', 'care-harm|sanctity-degradation', 'care-harm', 'sanctity-degradation', 'care-harm|sanctity-degradation', 'care-harm', '', 'fairness-cheating|sanctity-degradation', 'care-harm|sanctity-degradation', 'fairness-cheating', 'care-harm', '', 'care-harm', 'sanctity-degradation', 'sanctity-degradation', 'care-harm', 'care-harm']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `['being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'Being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'Being gluttonous.', 'being gluttonous', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous.', 'being gluttonous', 'being gluttonous.', 'being gluttonous.', 'being gluttonous']`
----> answers: `['being gluttonous', 'Being gluttonous.', 'being gluttonous.']` - type: `<class 'list'>`
----> baseline_answer: `being gluttonous` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `["It's wrong", "It's wrong", "it's wrong", "It's wrong", "It's wrong", "it's wrong", "It's wrong.", "it's wrong", 'wrong', "It's wrong", "It's wrong to", "It's wrong", "It's wrong", "it's wrong", "It's wrong", "it's wrong", "It's wrong", "it's wrong", 'wrong', "It's wrong", "It's wrong", "It's wrong", "It's wrong", "It's wrong", "It's wrong", "it's wrong", "It's wrong", "It's wrong", "It's wrong", "It's wrong", "It's wrong", "it's wrong", "It's wrong", "it's wrong", "It's wrong", "it's wrong", "It's wrong", "It's wrong", 'wrong', "It's wrong", "it's wrong", "It's wrong", "It's wrong", "It's wrong to", "It's wrong", "it's wrong", "it's wrong", 'wrong', "It's wrong", "It's wrong"]`
----> answers: `['wrong', "It's wrong.", "It's wrong", "It's wrong to", "it's wrong"]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency']` - type: `<class 'list'>`
----> baseline_answer: `agency` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[-1.0, -2.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -2.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[4.0, 3.0, 3.0, 2.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 2.0, 2.0, 3.0, 3.0, 2.0, 3.0, 4.0, 4.0, 3.0, 3.0, 3.0, 4.0, 4.0, 3.0, 4.0, 4.0, 3.0, 2.0, 3.0, 3.0, 3.0, 3.0, 2.0, 2.0, 3.0, 3.0, 4.0, 4.0, 3.0, 4.0, 2.0, 3.0, 3.0, 2.0, 3.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal']` - type: `<class 'list'>`
----> baseline_answer: `tolerated` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[-2.0, -1.0, -2.0, 0.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0, -2.0, -2.0, -2.0, -2.0, 0.0, -2.0, 0.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -2.0, -1.0, -2.0, -1.0, -1.0, -1.0, -2.0, -1.0, -1.0, -1.0, 0.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -2.0]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['probable', 'explicit', 'probable', 'explicit', 'probable', 'explicit', 'probable', 'hypothetical', 'probable', 'explicit', 'explicit', 'explicit', 'explicit', 'probable', 'explicit', 'probable', 'probable', 'explicit', 'explicit', 'explicit', 'hypothetical', 'explicit', 'probable', 'explicit', 'explicit', 'explicit', 'explicit', 'explicit', 'probable', 'probable', 'explicit', 'probable', 'explicit', 'hypothetical', 'probable', 'probable-no', 'probable', 'probable', 'explicit', 'probable', 'probable', 'hypothetical', 'probable', 'explicit', 'explicit', 'probable', 'probable', 'hypothetical', 'explicit', 'explicit']` - type: `<class 'list'>`
----> baseline_answer: `hypothetical` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `n-characters` since it is not visible.
 --> Per-instance overall score: 0.46153846153846156
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'text': [1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.3333333333333333, 1.0, 0.0, 1.0, 0.0, 0.7999999999999999, 0.0, 1.0, 0.0]}
instance_id: 32972 <-> row_number: 1
 --> inputs: ['rot-agree', 'rot-categorization', 'rot-moral-foundations', 'char-involved-general', 'rot-rewrite', 'rot-judgment', 'agency-fwd', 'action-fwd-good', 'fwd-agree', 'fwd-legal', 'fwd-pressure', 'char-involved-fwd', 'fwd-hypothetical', 'n-characters']
 --> Looking up gold labels from row index 1 of `input.csv` (unique inputs). 
 --> input labels: {'rot-agree': [3, 3, 2, 3, 2, 3, 3, 3, 3, 2, 3, 4, 3, 2, 2, 3, 3, 4, 2, 3, 3, 3, 2, 3, 2, 4, 2, 3, 1, 3, 3, 3, 2, 3, 3, 3, 2, 2, 1, 4, 4, 3, 3, 3, 3, 4, 2, 3, 3, 2], 'rot-categorization': ['advice', 'morality-ethics|description', 'description', 'advice', 'advice', 'advice', 'advice|description', 'social-norms|advice', 'social-norms', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice|description', 'advice', 'morality-ethics', 'social-norms', 'advice', 'social-norms|advice', 'description', 'social-norms', 'social-norms', 'advice', 'morality-ethics|social-norms', 'social-norms|advice', 'morality-ethics|advice', 'advice', 'advice', 'advice', 'social-norms|advice', 'advice', 'advice', 'social-norms|advice', 'advice', 'social-norms', 'advice', 'description', 'advice', 'social-norms|description', 'advice', 'advice', 'description', 'description', 'advice', 'morality-ethics|advice', 'advice', 'social-norms'], 'rot-moral-foundations': ['', 'loyalty-betrayal', '', '', 'care-harm', '', 'care-harm', 'care-harm|fairness-cheating', 'care-harm|authority-subversion', 'care-harm', 'care-harm', 'care-harm', 'loyalty-betrayal|authority-subversion', 'care-harm', '', 'loyalty-betrayal', 'care-harm', 'fairness-cheating', 'care-harm|fairness-cheating', 'loyalty-betrayal', '', 'care-harm|authority-subversion', 'fairness-cheating', 'care-harm|authority-subversion', 'fairness-cheating', 'care-harm|loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm|authority-subversion', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm', '', '', 'care-harm', 'care-harm', 'care-harm', 'care-harm|loyalty-betrayal', '', 'care-harm', '', 'care-harm', 'care-harm', '', 'care-harm', '', '', 'care-harm', 'care-harm', 'fairness-cheating'], 'char-involved-general': ['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-none', 'char-1', 'char-1', 'char-1', 'char-1', 'char-3', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-1', 'char-none', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-3', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1'], 'rot-rewrite': ['having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'Improving yourself by having people.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'using people to improve yourself', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.'], 'rot-judgment': ["It's good", "It's good", 'good', "it's good", "It's good", "It's good", "it's good", "It's good.", 'good', "It's good", "It's good", "It's good", "it's good", "It's good", 'good', "it's good", 'good', "It's good", "It's good", "It's good", "It's good", "It's good", "it's good", "it's good", "It's good", "It's good", "It's good", "It's good", "It's good", "it's good", 'good', "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", "It's good", "It's good", "it's good", "it's good", 'good', "It's good", "It's good", "It's good"], 'agency-fwd': ['agency', 'experience', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'experience', 'experience', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency'], 'action-fwd-good': [1.0, '', 0.0, 0.0, 0.0, '', 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, '', 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, '', 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, '', 1.0, 1.0, '', '', 1.0, '', 0.0, 1.0, 1.0, 1.0], 'fwd-agree': [3.0, '', 2.0, 3.0, 2.0, '', 3.0, 3.0, 3.0, 2.0, 3.0, 4.0, 3.0, 3.0, 3.0, 3.0, 3.0, 4.0, '', '', 3.0, 3.0, 2.0, 3.0, 2.0, 4.0, 2.0, 3.0, 1.0, 3.0, 3.0, 3.0, '', 3.0, 3.0, 3.0, 3.0, 2.0, 1.0, '', 4.0, 3.0, '', '', 3.0, '', 2.0, 3.0, 3.0, 2.0], 'fwd-legal': ['legal', '', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', '', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', '', '', 'legal', '', 'legal', 'legal', 'legal', 'legal'], 'fwd-pressure': [0.0, '', 0.0, 1.0, 0.0, '', 1.0, 1.0, 0.0, '', 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, '', '', 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, '', 0.0, 1.0, 1.0, 1.0, 0.0, -1.0, '', 0.0, 0.0, '', '', 0.0, '', 0.0, 1.0, 1.0, 0.0], 'char-involved-fwd': ['char-1', '', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-none', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-0', 'char-1', 'char-1', 'char-1', '', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-1', 'char-0', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', '', 'char-1', 'char-1', '', '', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1'], 'fwd-hypothetical': ['probable', '', 'probable', 'probable', 'explicit', '', 'probable', 'probable', '', '', 'hypothetical', 'hypothetical', 'explicit', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', '', '', 'hypothetical', 'explicit', 'hypothetical', 'explicit', 'hypothetical', 'explicit', '', 'probable', 'explicit', 'hypothetical', 'hypothetical', 'probable', '', 'probable', 'explicit', 'probable', 'hypothetical', 'hypothetical', '', '', 'hypothetical', 'probable', '', '', 'probable', '', 'hypothetical', 'explicit', 'hypothetical', 'hypothetical'], 'n-characters': [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]}
 - - - - - -  starting a new element: `Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-agree
Executing one action: self.actions.modify_radio('rot-agree', '2')
We are going to select this radio button: <input type="radio" name="rot-agree" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-categorization
Executing one action: self.actions.modify_checkbox('rot-categorization', 'social-norms')
Looking for checkboxes with `name`: `rot-categorization` the values: `['social-norms']`
About to check this checkbox: <input type="checkbox" name="rot-categorization" value="social-norms">
 - - - - - -  starting a new element: `Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-moral-foundations
Executing one action: self.actions.modify_checkbox('rot-moral-foundations', 'sanctity-degradation')
Looking for checkboxes with `name`: `rot-moral-foundations` the values: `['sanctity-degradation']`
About to check this checkbox: <input type="checkbox" name="rot-moral-foundations" value="sanctity-degradation">
 - - - - - -  starting a new element: `Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-general
Executing one action: self.actions.modify_radio('char-involved-general', 'char-3')
We are going to select this radio button: <input type="radio" name="char-involved-general" value="char-3" required="">
 - - - - - -  starting a new element: `Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-rewrite
Executing one action: self.actions.modify_text('rot-rewrite', 'Having people you can use for self-improvement.')
Add text `Having people you can use for self-improvement.` to this text input: <input type="text" class="text" name="rot-rewrite" value="It's good to have people you can use to improve yourself." id="rot-rewrite">
 - - - - - -  starting a new element: `Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-judgment
Executing one action: self.actions.modify_text('rot-judgment', '')
Since the input value is ``, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: agency-fwd
Executing one action: self.actions.modify_radio('agency-fwd', 'agency')
We are going to select this radio button: <input type="radio" name="agency-fwd" value="agency" required="">
 - - - - - -  starting a new element: `Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: action-fwd-good
Executing one action: self.actions.modify_radio('action-fwd-good', '1')
We are going to select this radio button: <input type="radio" name="action-fwd-good" value="1" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-agree
Executing one action: self.actions.modify_radio('fwd-agree', '2')
We are going to select this radio button: <input type="radio" name="fwd-agree" value="2" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-legal
Executing one action: self.actions.modify_radio('fwd-legal', 'legal')
We are going to select this radio button: <input type="radio" name="fwd-legal" value="legal" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-pressure
Executing one action: self.actions.modify_radio('fwd-pressure', '-2')
We are going to select this radio button: <input type="radio" name="fwd-pressure" value="-2" required="required">
 - - - - - -  starting a new element: `Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-fwd
Executing one action: self.actions.modify_radio('char-involved-fwd', 'char-3')
We are going to select this radio button: <input type="radio" name="char-involved-fwd" value="char-3" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-hypothetical
Executing one action: self.actions.modify_radio('fwd-hypothetical', 'hypothetical')
We are going to select this radio button: <input type="radio" name="fwd-hypothetical" value="hypothetical" required="required">
 - - - - - -  starting a new element: `Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `n-characters` since it is not visible.
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['social-norms']
 visible_values : ['social-norms']
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['sanctity-degradation']
 visible_values : ['sanctity-degradation']
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-3']
 visible_values : ['char-3']
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['Having people you can use for self-improvement.']
 visible_values : ['Having people you can use for self-improvement.']
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : [None]
 visible_values : [None]
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['agency']
 visible_values : ['agency']
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['legal']
 visible_values : ['legal']
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-3']
 visible_values : ['char-3']
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['hypothetical']
 visible_values : ['hypothetical']
input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['4']
 visible_values : ['4']
 ------- evaluating input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[3, 3, 2, 3, 2, 3, 3, 3, 3, 2, 3, 4, 3, 2, 2, 3, 3, 4, 2, 3, 3, 3, 2, 3, 2, 4, 2, 3, 1, 3, 3, 3, 2, 3, 3, 3, 2, 2, 1, 4, 4, 3, 3, 3, 3, 4, 2, 3, 3, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['advice', 'description|morality-ethics', 'description', 'advice', 'advice', 'advice', 'advice|description', 'advice|social-norms', 'social-norms', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice|description', 'advice', 'morality-ethics', 'social-norms', 'advice', 'advice|social-norms', 'description', 'social-norms', 'social-norms', 'advice', 'morality-ethics|social-norms', 'advice|social-norms', 'advice|morality-ethics', 'advice', 'advice', 'advice', 'advice|social-norms', 'advice', 'advice', 'advice|social-norms', 'advice', 'social-norms', 'advice', 'description', 'advice', 'description|social-norms', 'advice', 'advice', 'description', 'description', 'advice', 'advice|morality-ethics', 'advice', 'social-norms']` - type: `<class 'list'>`
----> baseline_answer: `social-norms` - type: `<class 'str'>`
Model answers: social-norms 
Gold answers: ['advice', 'description|morality-ethics', 'description', 'advice', 'advice', 'advice', 'advice|description', 'advice|social-norms', 'social-norms', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice|description', 'advice', 'morality-ethics', 'social-norms', 'advice', 'advice|social-norms', 'description', 'social-norms', 'social-norms', 'advice', 'morality-ethics|social-norms', 'advice|social-norms', 'advice|morality-ethics', 'advice', 'advice', 'advice', 'advice|social-norms', 'advice', 'advice', 'advice|social-norms', 'advice', 'social-norms', 'advice', 'description', 'advice', 'description|social-norms', 'advice', 'advice', 'description', 'description', 'advice', 'advice|morality-ethics', 'advice', 'social-norms']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['', 'loyalty-betrayal', '', '', 'care-harm', '', 'care-harm', 'care-harm|fairness-cheating', 'authority-subversion|care-harm', 'care-harm', 'care-harm', 'care-harm', 'authority-subversion|loyalty-betrayal', 'care-harm', '', 'loyalty-betrayal', 'care-harm', 'fairness-cheating', 'care-harm|fairness-cheating', 'loyalty-betrayal', '', 'authority-subversion|care-harm', 'fairness-cheating', 'authority-subversion|care-harm', 'fairness-cheating', 'care-harm|loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'authority-subversion|care-harm', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm', '', '', 'care-harm', 'care-harm', 'care-harm', 'care-harm|loyalty-betrayal', '', 'care-harm', '', 'care-harm', 'care-harm', '', 'care-harm', '', '', 'care-harm', 'care-harm', 'fairness-cheating']` - type: `<class 'list'>`
----> baseline_answer: `sanctity-degradation` - type: `<class 'str'>`
Model answers: sanctity-degradation 
Gold answers: ['', 'loyalty-betrayal', '', '', 'care-harm', '', 'care-harm', 'care-harm|fairness-cheating', 'authority-subversion|care-harm', 'care-harm', 'care-harm', 'care-harm', 'authority-subversion|loyalty-betrayal', 'care-harm', '', 'loyalty-betrayal', 'care-harm', 'fairness-cheating', 'care-harm|fairness-cheating', 'loyalty-betrayal', '', 'authority-subversion|care-harm', 'fairness-cheating', 'authority-subversion|care-harm', 'fairness-cheating', 'care-harm|loyalty-betrayal', 'care-harm', 'care-harm|loyalty-betrayal', 'authority-subversion|care-harm', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm', '', '', 'care-harm', 'care-harm', 'care-harm', 'care-harm|loyalty-betrayal', '', 'care-harm', '', 'care-harm', 'care-harm', '', 'care-harm', '', '', 'care-harm', 'care-harm', 'fairness-cheating']
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-none', 'char-1', 'char-1', 'char-1', 'char-1', 'char-3', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-1', 'char-none', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-3', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `['having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'Improving yourself by having people.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'using people to improve yourself', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.', 'having people you can use to improve yourself.']`
----> answers: `['having people you can use to improve yourself', 'having people you can use to improve yourself.', 'Improving yourself by having people.', 'using people to improve yourself']` - type: `<class 'list'>`
----> baseline_answer: `Having people you can use for self-improvement.` - type: `<class 'str'>`
 --> scores:  0.75
----> per-field score: 0.75
 ------- evaluating input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `["It's good", "It's good", 'good', "it's good", "It's good", "It's good", "it's good", "It's good.", 'good', "It's good", "It's good", "It's good", "it's good", "It's good", 'good', "it's good", 'good', "It's good", "It's good", "It's good", "It's good", "It's good", "it's good", "it's good", "It's good", "It's good", "It's good", "It's good", "It's good", "it's good", 'good', "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", "It's good", "It's good", "it's good", "it's good", 'good', "It's good", "It's good", "It's good"]`
----> answers: `["It's good.", "it's good", "It's good", 'good']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['agency', 'experience', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'experience', 'agency', 'agency', 'experience', 'experience', 'agency', 'experience', 'agency', 'agency', 'agency', 'agency']` - type: `<class 'list'>`
----> baseline_answer: `agency` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[1.0, '', 0.0, 0.0, 0.0, '', 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, '', 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, '', 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, '', 1.0, 1.0, '', '', 1.0, '', 0.0, 1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[3.0, '', 2.0, 3.0, 2.0, '', 3.0, 3.0, 3.0, 2.0, 3.0, 4.0, 3.0, 3.0, 3.0, 3.0, 3.0, 4.0, '', '', 3.0, 3.0, 2.0, 3.0, 2.0, 4.0, 2.0, 3.0, 1.0, 3.0, 3.0, 3.0, '', 3.0, 3.0, 3.0, 3.0, 2.0, 1.0, '', 4.0, 3.0, '', '', 3.0, '', 2.0, 3.0, 3.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['legal', '', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', '', 'legal', 'legal', 'legal', 'legal', 'tolerated', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', '', 'legal', 'legal', '', '', 'legal', '', 'legal', 'legal', 'legal', 'legal']` - type: `<class 'list'>`
----> baseline_answer: `legal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[0.0, '', 0.0, 1.0, 0.0, '', 1.0, 1.0, 0.0, '', 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, '', '', 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, '', 0.0, 1.0, 1.0, 1.0, 0.0, -1.0, '', 0.0, 0.0, '', '', 0.0, '', 0.0, 1.0, 1.0, 0.0]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-1', '', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-none', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-0', 'char-1', 'char-1', 'char-1', '', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', 'char-1', 'char-0', 'char-1', 'char-1', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1', 'char-1', 'char-none', '', 'char-1', 'char-1', '', '', 'char-1', '', 'char-1', 'char-1', 'char-1', 'char-1']` - type: `<class 'list'>`
----> baseline_answer: `char-3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['probable', '', 'probable', 'probable', 'explicit', '', 'probable', 'probable', '', '', 'hypothetical', 'hypothetical', 'explicit', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', '', '', 'hypothetical', 'explicit', 'hypothetical', 'explicit', 'hypothetical', 'explicit', '', 'probable', 'explicit', 'hypothetical', 'hypothetical', 'probable', '', 'probable', 'explicit', 'probable', 'hypothetical', 'hypothetical', '', '', 'hypothetical', 'probable', '', '', 'probable', '', 'hypothetical', 'explicit', 'hypothetical', 'hypothetical']` - type: `<class 'list'>`
----> baseline_answer: `hypothetical` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `n-characters` since it is not visible.
 --> Per-instance overall score: 0.4423076923076923
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0], 'text': [1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.3333333333333333, 1.0, 0.0, 1.0, 0.0, 0.7999999999999999, 0.0, 1.0, 0.0, 0.75, 0.0]}
instance_id: 32974 <-> row_number: 3
 --> inputs: ['rot-agree', 'rot-categorization', 'rot-moral-foundations', 'char-involved-general', 'rot-rewrite', 'rot-judgment', 'agency-fwd', 'action-fwd-good', 'fwd-agree', 'fwd-legal', 'fwd-pressure', 'char-involved-fwd', 'fwd-hypothetical', 'n-characters']
 --> Looking up gold labels from row index 3 of `input.csv` (unique inputs). 
 --> input labels: {'rot-agree': [3, 4, 4, 3, 3, 3, 4, 3, 4, 3, 4, 3, 4, 2, 3, 3, 2, 3, 3, 3, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 4, 4, 3, 3, 3, 4, 3, 4, 3, 4], 'rot-categorization': ['morality-ethics|advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'description', 'advice', 'advice', 'social-norms|description', 'morality-ethics|advice', 'morality-ethics|social-norms', 'social-norms|advice', 'advice', 'advice', 'morality-ethics', 'advice', 'advice', 'advice', 'advice', 'advice', 'morality-ethics', 'advice', 'social-norms', 'morality-ethics|advice', 'advice', 'advice', 'advice', 'morality-ethics|advice', 'social-norms|advice', 'social-norms|advice', 'advice', 'morality-ethics|advice', 'advice', 'morality-ethics|social-norms', 'advice', 'advice', 'advice', 'morality-ethics', 'advice', 'advice', 'morality-ethics|advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice'], 'rot-moral-foundations': ['care-harm|sanctity-degradation', '', 'care-harm', 'authority-subversion', 'care-harm', '', 'care-harm', 'sanctity-degradation', 'care-harm|authority-subversion', '', 'care-harm', 'care-harm', 'care-harm|authority-subversion|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', '', 'care-harm', 'care-harm', 'care-harm', 'care-harm', 'care-harm|fairness-cheating', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm', 'care-harm', 'care-harm', 'care-harm', '', '', 'care-harm', 'care-harm', 'sanctity-degradation', 'care-harm|sanctity-degradation', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm', 'care-harm', 'care-harm', '', 'care-harm', 'care-harm', '', 'care-harm', 'care-harm', 'care-harm'], 'char-involved-general': ['char-0', 'char-0', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-0'], 'rot-rewrite': ['avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'not disturbing animals in the wild.', 'avoiding disturbing animals in the wild', 'disturbing animals in the wild', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'not disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild'], 'rot-judgment': ["It's good", 'good', "It's good", "it's good", "It's good", "It's good", "It's good", "it's good", 'good', "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", 'good', 'good', "It's good", "It's good", "It's good", "It's good", "it's good", "It's good", "It's good", "It's good", "It's good", "it's good", "it's good", 'good', "It's good", "it's good", "It's good", 'you should avoid it', "It's good", "It's good", "it's good", "It's good", 'good', "It's good", "It's good", "it's good", "It's good", "It's good", "It's good", "it's good", "it's good", 'good', "It's good", "it's good", "It's good"], 'agency-fwd': ['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency'], 'action-fwd-good': [1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'fwd-agree': [3.0, 4.0, 2.0, 3.0, 3.0, 4.0, 4.0, 3.0, 4.0, 3.0, 4.0, 3.0, 4.0, 2.0, 3.0, 3.0, 2.0, 4.0, 3.0, 3.0, 4.0, 4.0, 4.0, 4.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 4.0, 3.0, 3.0, 3.0, 4.0, 4.0, 4.0, 3.0, 4.0], 'fwd-legal': ['legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal'], 'fwd-pressure': [2.0, -1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 0.0, 1.0, 0.0, 2.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 1.0, -1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0], 'char-involved-fwd': ['char-0', 'char-0', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-0'], 'fwd-hypothetical': ['hypothetical', 'probable', 'hypothetical', 'explicit', 'hypothetical', 'probable', 'probable', 'probable', '', 'hypothetical', 'probable', 'probable-no', 'probable-no', 'probable', 'probable', 'hypothetical', 'probable', 'hypothetical', 'probable', 'hypothetical', 'explicit-no', 'explicit', 'hypothetical', 'probable', 'probable-no', 'probable-no', 'hypothetical', 'hypothetical', 'probable', 'probable', 'hypothetical', 'probable-no', 'probable-no', 'hypothetical', 'hypothetical', 'probable', 'probable', '', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'probable', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'probable'], 'n-characters': [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]}
 - - - - - -  starting a new element: `Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-agree
Executing one action: self.actions.modify_radio('rot-agree', '4')
We are going to select this radio button: <input type="radio" name="rot-agree" value="4" required="">
 - - - - - -  starting a new element: `Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-categorization
Executing one action: self.actions.modify_checkbox('rot-categorization', 'advice')
Looking for checkboxes with `name`: `rot-categorization` the values: `['advice']`
About to check this checkbox: <input type="checkbox" name="rot-categorization" value="advice">
 - - - - - -  starting a new element: `Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-moral-foundations
Executing one action: self.actions.modify_checkbox('rot-moral-foundations', 'care-harm')
Looking for checkboxes with `name`: `rot-moral-foundations` the values: `['care-harm']`
About to check this checkbox: <input type="checkbox" name="rot-moral-foundations" value="care-harm">
 - - - - - -  starting a new element: `Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-general
Executing one action: self.actions.modify_radio('char-involved-general', 'char-1')
We are going to select this radio button: <input type="radio" name="char-involved-general" value="char-1" required="">
 - - - - - -  starting a new element: `Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-rewrite
Executing one action: self.actions.modify_text('rot-rewrite', 'avoiding disturbing animals in the wild')
Add text `avoiding disturbing animals in the wild` to this text input: <input type="text" class="text" name="rot-rewrite" value="It's good to avoid disturbing animals in the wild." id="rot-rewrite">
 - - - - - -  starting a new element: `Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: rot-judgment
Executing one action: self.actions.modify_text('rot-judgment', 'It\'s good')
Add text `It's good` to this text input: <input type="text" class="text" name="rot-judgment" id="rot-judgment">
 - - - - - -  starting a new element: `Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: agency-fwd
Executing one action: self.actions.modify_radio('agency-fwd', 'agency')
We are going to select this radio button: <input type="radio" name="agency-fwd" value="agency" required="">
 - - - - - -  starting a new element: `Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: action-fwd-good
Executing one action: self.actions.modify_radio('action-fwd-good', '-2')
We are going to select this radio button: <input type="radio" name="action-fwd-good" value="-2" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-agree
Executing one action: self.actions.modify_radio('fwd-agree', '2')
We are going to select this radio button: <input type="radio" name="fwd-agree" value="2" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-legal
Executing one action: self.actions.modify_radio('fwd-legal', 'legal')
We are going to select this radio button: <input type="radio" name="fwd-legal" value="legal" required="required">
 - - - - - -  starting a new element: `Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-pressure
Executing one action: self.actions.modify_radio('fwd-pressure', '0')
We are going to select this radio button: <input type="radio" name="fwd-pressure" value="0" required="required">
 - - - - - -  starting a new element: `Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: char-involved-fwd
Executing one action: self.actions.modify_checkbox('char-involved-fwd', 'char-1')
Looking for checkboxes with `name`: `char-involved-fwd` the values: `['char-1']`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
 - - - - - -  starting a new element: `Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
about to try executing one action, on the following input: fwd-hypothetical
Executing one action: self.actions.modify_radio('fwd-hypothetical', 'hypothetical')
We are going to select this radio button: <input type="radio" name="fwd-hypothetical" value="hypothetical" required="required">
 - - - - - -  starting a new element: `Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)` - - - - - -  
Skipping element `n-characters` since it is not visible.
input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['advice']
 visible_values : ['advice']
input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['care-harm']
 visible_values : ['care-harm']
input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['char-1']
 visible_values : ['char-1']
input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['avoiding disturbing animals in the wild']
 visible_values : ['avoiding disturbing animals in the wild']
input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ["It's good"]
 visible_values : ["It's good"]
input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['agency']
 visible_values : ['agency']
input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['-2']
 visible_values : ['-2']
input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['legal']
 visible_values : ['legal']
input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : []
 visible_values : []
input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['hypothetical']
 visible_values : ['hypothetical']
input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`rot-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[3, 4, 4, 3, 3, 3, 4, 3, 4, 3, 4, 3, 4, 2, 3, 3, 2, 3, 3, 3, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 4, 4, 3, 3, 3, 4, 3, 4, 3, 4]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-categorization`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['advice|morality-ethics', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'description', 'advice', 'advice', 'description|social-norms', 'advice|morality-ethics', 'morality-ethics|social-norms', 'advice|social-norms', 'advice', 'advice', 'morality-ethics', 'advice', 'advice', 'advice', 'advice', 'advice', 'morality-ethics', 'advice', 'social-norms', 'advice|morality-ethics', 'advice', 'advice', 'advice', 'advice|morality-ethics', 'advice|social-norms', 'advice|social-norms', 'advice', 'advice|morality-ethics', 'advice', 'morality-ethics|social-norms', 'advice', 'advice', 'advice', 'morality-ethics', 'advice', 'advice', 'advice|morality-ethics', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice']` - type: `<class 'list'>`
----> baseline_answer: `advice` - type: `<class 'str'>`
Model answers: advice 
Gold answers: ['advice|morality-ethics', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'description', 'advice', 'advice', 'description|social-norms', 'advice|morality-ethics', 'morality-ethics|social-norms', 'advice|social-norms', 'advice', 'advice', 'morality-ethics', 'advice', 'advice', 'advice', 'advice', 'advice', 'morality-ethics', 'advice', 'social-norms', 'advice|morality-ethics', 'advice', 'advice', 'advice', 'advice|morality-ethics', 'advice|social-norms', 'advice|social-norms', 'advice', 'advice|morality-ethics', 'advice', 'morality-ethics|social-norms', 'advice', 'advice', 'advice', 'morality-ethics', 'advice', 'advice', 'advice|morality-ethics', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice', 'advice']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-moral-foundations`, type=`checkbox`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['care-harm|sanctity-degradation', '', 'care-harm', 'authority-subversion', 'care-harm', '', 'care-harm', 'sanctity-degradation', 'authority-subversion|care-harm', '', 'care-harm', 'care-harm', 'authority-subversion|care-harm|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', '', 'care-harm', 'care-harm', 'care-harm', 'care-harm', 'care-harm|fairness-cheating', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm', 'care-harm', 'care-harm', 'care-harm', '', '', 'care-harm', 'care-harm', 'sanctity-degradation', 'care-harm|sanctity-degradation', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm', 'care-harm', 'care-harm', '', 'care-harm', 'care-harm', '', 'care-harm', 'care-harm', 'care-harm']` - type: `<class 'list'>`
----> baseline_answer: `care-harm` - type: `<class 'str'>`
Model answers: care-harm 
Gold answers: ['care-harm|sanctity-degradation', '', 'care-harm', 'authority-subversion', 'care-harm', '', 'care-harm', 'sanctity-degradation', 'authority-subversion|care-harm', '', 'care-harm', 'care-harm', 'authority-subversion|care-harm|sanctity-degradation', 'care-harm', 'care-harm|sanctity-degradation', '', 'care-harm', 'care-harm', 'care-harm', 'care-harm', 'care-harm|fairness-cheating', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm|loyalty-betrayal', 'care-harm|sanctity-degradation', 'care-harm', 'care-harm', 'care-harm', 'care-harm', 'care-harm', '', '', 'care-harm', 'care-harm', 'sanctity-degradation', 'care-harm|sanctity-degradation', 'sanctity-degradation', 'care-harm', 'care-harm', 'care-harm', 'care-harm', 'care-harm', '', 'care-harm', 'care-harm', '', 'care-harm', 'care-harm', 'care-harm']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`char-involved-general`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-0', 'char-0', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-0']` - type: `<class 'list'>`
----> baseline_answer: `char-1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`rot-rewrite`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `['avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'not disturbing animals in the wild.', 'avoiding disturbing animals in the wild', 'disturbing animals in the wild', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'not disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild.', 'avoiding disturbing animals in the wild']`
----> answers: `['not disturbing animals in the wild.', 'avoiding disturbing animals in the wild', 'disturbing animals in the wild', 'avoiding disturbing animals in the wild.']` - type: `<class 'list'>`
----> baseline_answer: `avoiding disturbing animals in the wild` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`rot-judgment`, type=`text`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
answers after mapping: `["It's good", 'good', "It's good", "it's good", "It's good", "It's good", "It's good", "it's good", 'good', "It's good", "it's good", "It's good", "it's good", "It's good", "It's good", 'good', 'good', "It's good", "It's good", "It's good", "It's good", "it's good", "It's good", "It's good", "It's good", "It's good", "it's good", "it's good", 'good', "It's good", "it's good", "It's good", 'you should avoid it', "It's good", "It's good", "it's good", "It's good", 'good', "It's good", "It's good", "it's good", "It's good", "It's good", "It's good", "it's good", "it's good", 'good', "It's good", "it's good", "It's good"]`
----> answers: `["it's good", "It's good", 'good', 'you should avoid it']` - type: `<class 'list'>`
----> baseline_answer: `It's good` - type: `<class 'str'>`
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`agency-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency', 'agency']` - type: `<class 'list'>`
----> baseline_answer: `agency` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`action-fwd-good`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, -1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `-2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-agree`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[3.0, 4.0, 2.0, 3.0, 3.0, 4.0, 4.0, 3.0, 4.0, 3.0, 4.0, 3.0, 4.0, 2.0, 3.0, 3.0, 2.0, 4.0, 3.0, 3.0, 4.0, 4.0, 4.0, 4.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 4.0, 3.0, 3.0, 3.0, 4.0, 4.0, 4.0, 3.0, 4.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-legal`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal', 'legal']` - type: `<class 'list'>`
----> baseline_answer: `legal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`fwd-pressure`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `[2.0, -1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 0.0, 1.0, 0.0, 2.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 2.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 1.0, -1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`char-involved-fwd`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['char-0', 'char-0', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-none', 'char-1', 'char-1', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-0', 'char-1', 'char-0']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`fwd-hypothetical`, type=`radio`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
----> answers: `['hypothetical', 'probable', 'hypothetical', 'explicit', 'hypothetical', 'probable', 'probable', 'probable', '', 'hypothetical', 'probable', 'probable-no', 'probable-no', 'probable', 'probable', 'hypothetical', 'probable', 'hypothetical', 'probable', 'hypothetical', 'explicit-no', 'explicit', 'hypothetical', 'probable', 'probable-no', 'probable-no', 'hypothetical', 'hypothetical', 'probable', 'probable', 'hypothetical', 'probable-no', 'probable-no', 'hypothetical', 'hypothetical', 'probable', 'probable', '', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'hypothetical', 'probable', 'probable', 'hypothetical', 'probable', 'hypothetical', 'hypothetical', 'probable']` - type: `<class 'list'>`
----> baseline_answer: `hypothetical` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`n-characters`, type=`hidden`, task=`ROT Details [m=50] rocstories - 0 - 99`) ------- 
Skipping element `n-characters` since it is not visible.
 --> Per-instance overall score: 0.5384615384615384
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0], 'checkbox': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0], 'text': [1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.3333333333333333, 1.0, 0.0, 1.0, 0.0, 0.7999999999999999, 0.0, 1.0, 0.0, 0.75, 0.0, 1.0, 1.0]}
 = = = = = = = = = = = = starting new task: `Associate countries and languages with Ethnologue` = = = = = = = = = = = = 
First instance id: 29921
instance_id: 29961 <-> row_number: 40
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 40 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=bcl', 'http://www.ethnologue.com/show_country.asp?name=PH', 'http://www.ethnologue.com/show_language.asp?code=bcl'], 'primary_country': ['philippines', 'philippines', 'philippines'], 'region': ['Luzon, Camarines Norte and Sur, south Catanduanes, north Sorsogon, Albay. Naga City and Legaspi City are centers.', nan, 'Region  \tLuzon, Camarines Norte and Sur, south Catanduanes, north Sorsogon, Albay. Naga City and Legaspi City are centers.'], 'countries': ['philippines', 'other', 'philippines|other']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
Executing one action: self.actions.modify_text('url', 'https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp')
Add text `https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp` to this text input: <input type="text" size="80" name="url">
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
Executing one action: self.actions.modify_select('primary_country', 'philippines')
We are going to select this select `primary_country` with value `philippines`
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
Executing one action: self.actions.modify_text('region', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
Executing one action: self.actions.modify_checkbox('countries', ['philippines'])
Looking for checkboxes with `name`: `countries` the values: `["['philippines']"]`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : ['https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp']
 visible_values : ['https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp']
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['philippines']
 visible_values : ['philippines']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=bcl', 'http://www.ethnologue.com/show_country.asp?name=PH', 'http://www.ethnologue.com/show_language.asp?code=bcl']`
----> answers: `['http://www.ethnologue.com/show_country.asp?name=PH', 'http://www.ethnologue.com/show_language.asp?code=bcl']` - type: `<class 'list'>`
----> baseline_answer: `https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp` - type: `<class 'str'>`
 --> scores:  0.5454545454545455
----> per-field score: 0.5454545454545455
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['philippines', 'philippines', 'philippines']` - type: `<class 'list'>`
----> baseline_answer: `philippines` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Luzon, Camarines Norte and Sur, south Catanduanes, north Sorsogon, Albay. Naga City and Legaspi City are centers.', '', 'Region  \tLuzon, Camarines Norte and Sur, south Catanduanes, north Sorsogon, Albay. Naga City and Legaspi City are centers.']`
----> answers: `['', 'Region  \tLuzon, Camarines Norte and Sur, south Catanduanes, north Sorsogon, Albay. Naga City and Legaspi City are centers.', 'Luzon, Camarines Norte and Sur, south Catanduanes, north Sorsogon, Albay. Naga City and Legaspi City are centers.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['philippines', 'other', 'other|philippines']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['philippines', 'other', 'other|philippines']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.38636363636363635
 --> Per-instance per-field breakdown: {'text': [0.5454545454545455], 'select': [1.0], 'textarea': [0.0], 'checkbox': [0.0]}
instance_id: 29946 <-> row_number: 25
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 25 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=glg', 'http://www.ethnologue.com/show_language.asp?code=glg', 'http://www.ethnologue.com/show_language.asp?code=glg'], 'primary_country': ['spain', 'spain', 'spain'], 'region': ['Northwest Spain, Galicia Autonomous Region. Also in Portugal.', 'Northwest Spain, Galicia Autonomous Region. Also in Portugal.', 'Northwest Spain, Galicia Autonomous Region. Also in Portugal.'], 'countries': ['spain|portugal', 'spain|portugal', 'spain|portugal']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
Executing one action: self.actions.modify_text('url', 'https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp')
Add text `https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp` to this text input: <input type="text" size="80" name="url">
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
Executing one action: self.actions.modify_select('primary_country', 'spain')
We are going to select this select `primary_country` with value `spain`
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
Executing one action: self.actions.modify_text('region', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
Executing one action: self.actions.modify_checkbox('countries', ['india', 'pakistan', 'nepal', 'bangladesh', 'other'])
Looking for checkboxes with `name`: `countries` the values: `["['india', 'pakistan', 'nepal', 'bangladesh', 'other']"]`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : ['https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp']
 visible_values : ['https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp']
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['spain']
 visible_values : ['spain']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=glg', 'http://www.ethnologue.com/show_language.asp?code=glg', 'http://www.ethnologue.com/show_language.asp?code=glg']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=glg']` - type: `<class 'list'>`
----> baseline_answer: `https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp` - type: `<class 'str'>`
 --> scores:  0.5454545454545455
----> per-field score: 0.5454545454545455
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['spain', 'spain', 'spain']` - type: `<class 'list'>`
----> baseline_answer: `spain` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Northwest Spain, Galicia Autonomous Region. Also in Portugal.', 'Northwest Spain, Galicia Autonomous Region. Also in Portugal.', 'Northwest Spain, Galicia Autonomous Region. Also in Portugal.']`
----> answers: `['Northwest Spain, Galicia Autonomous Region. Also in Portugal.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['portugal|spain', 'portugal|spain', 'portugal|spain']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['portugal|spain', 'portugal|spain', 'portugal|spain']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.38636363636363635
 --> Per-instance per-field breakdown: {'text': [0.5454545454545455, 0.5454545454545455], 'select': [1.0, 1.0], 'textarea': [0.0, 0.0], 'checkbox': [0.0, 0.0]}
instance_id: 29926 <-> row_number: 5
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 5 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=lmo', 'http://www.ethnologue.com/show_language.asp?code=lmo', 'http://www.ethnologue.com/show_language.asp?code=lmo'], 'primary_country': ['italy', 'italy', 'italy'], 'region': ['North, Milan, Lombardy, 3 valleys of Graubünden (Val Mesolcina, Val Bregaglia, Val Poschiavo). Western Lombard varieties also in Sicily. Also in Switzerland, United States.', 'North, Milan, Lombardy, 3 valleys of Graubünden (Val Mesolcina, Val Bregaglia, Val Poschiavo). Western Lombard varieties also in Sicily. Also in Switzerland, United States.', 'North, Milan, Lombardy, 3 valleys of Graubünden (Val Mesolcina, Val Bregaglia, Val Poschiavo). Western Lombard varieties also in Sicily. Also in Switzerland, United States.'], 'countries': ['unitedstates|switzerland', 'unitedstates|switzerland', 'unitedstates|switzerland|other']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
Executing one action: self.actions.modify_text('url', 'https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp')
Add text `https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp` to this text input: <input type="text" size="80" name="url">
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
Executing one action: self.actions.modify_select('primary_country', 'other')
We are going to select this select `primary_country` with value `other`
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
Executing one action: self.actions.modify_select('primary_country', 'italy')
self.actions.modify_text('region', 'nan')
We are going to select this select `primary_country` with value `italy`
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
Executing one action: self.actions.modify_checkbox('countries', 'nan')
 ** Warning **: Found input value is 'nan' and filtered it out
 ** Warning **: Since the list of values `[]` is empty, and so, we're terminating the function
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : ['https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp']
 visible_values : ['https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp']
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['italy']
 visible_values : ['italy']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=lmo', 'http://www.ethnologue.com/show_language.asp?code=lmo', 'http://www.ethnologue.com/show_language.asp?code=lmo']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=lmo']` - type: `<class 'list'>`
----> baseline_answer: `https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp` - type: `<class 'str'>`
 --> scores:  0.5454545454545455
----> per-field score: 0.5454545454545455
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['italy', 'italy', 'italy']` - type: `<class 'list'>`
----> baseline_answer: `italy` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['North, Milan, Lombardy, 3 valleys of Graubünden (Val Mesolcina, Val Bregaglia, Val Poschiavo). Western Lombard varieties also in Sicily. Also in Switzerland, United States.', 'North, Milan, Lombardy, 3 valleys of Graubünden (Val Mesolcina, Val Bregaglia, Val Poschiavo). Western Lombard varieties also in Sicily. Also in Switzerland, United States.', 'North, Milan, Lombardy, 3 valleys of Graubünden (Val Mesolcina, Val Bregaglia, Val Poschiavo). Western Lombard varieties also in Sicily. Also in Switzerland, United States.']`
----> answers: `['North, Milan, Lombardy, 3 valleys of Graubünden (Val Mesolcina, Val Bregaglia, Val Poschiavo). Western Lombard varieties also in Sicily. Also in Switzerland, United States.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['switzerland|unitedstates', 'switzerland|unitedstates', 'other|switzerland|unitedstates']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['switzerland|unitedstates', 'switzerland|unitedstates', 'other|switzerland|unitedstates']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.38636363636363635
 --> Per-instance per-field breakdown: {'text': [0.5454545454545455, 0.5454545454545455, 0.5454545454545455], 'select': [1.0, 1.0, 1.0], 'textarea': [0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0]}
instance_id: 29962 <-> row_number: 41
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 41 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=pes', 'http://www.ethnologue.com/show_language.asp?code=fas', 'http://www.ethnologue.com/show_language.asp?code=psc'], 'primary_country': ['other', 'iran', 'iran'], 'region': ['Widespread. Most concentrated in central, south central, and northeast. Also in Australia, Austria, Azerbaijan, Bahrain, Canada, Denmark, France, Germany, Greece, India, Iraq, Israel, Netherlands, Oman, Qatar, Saudi Arabia, Spain, Sweden, Syria, Tajikistan, Turkey (Asia), Turkmenistan, United Arab Emirates, United Kingdom, United States, Uzbekistan.', 'A macrolanguage of Iran', nan], 'countries': ['france|oman|turkey|canada|israel|uae|germany|uk|greece|unitedstates|australia|spain|uzbekistan|bahrain|denmark|sweden|netherlands|other|india|saudiarabia', 'iran', 'iran']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
Executing one action: self.actions.modify_text('url', 'https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp')
Add text `https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp` to this text input: <input type="text" size="80" name="url">
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
Executing one action: self.actions.modify_select('primary_country', 'iran')
We are going to select this select `primary_country` with value `iran`
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
Executing one action: self.actions.modify_select('primary_country', 'iran')
We are going to select this select `primary_country` with value `iran`
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
Executing one action: self.actions.modify_checkbox('countries', 'iran')
Looking for checkboxes with `name`: `countries` the values: `['iran']`
About to check this checkbox: <input type="checkbox" name="countries" value="iran">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : ['https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp']
 visible_values : ['https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp']
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['iran']
 visible_values : ['iran']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['iran']
 visible_values : ['iran']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=pes', 'http://www.ethnologue.com/show_language.asp?code=fas', 'http://www.ethnologue.com/show_language.asp?code=psc']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=pes', 'http://www.ethnologue.com/show_language.asp?code=psc', 'http://www.ethnologue.com/show_language.asp?code=fas']` - type: `<class 'list'>`
----> baseline_answer: `https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp` - type: `<class 'str'>`
 --> scores:  0.5454545454545455
----> per-field score: 0.5454545454545455
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['other', 'iran', 'iran']` - type: `<class 'list'>`
----> baseline_answer: `iran` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Widespread. Most concentrated in central, south central, and northeast. Also in Australia, Austria, Azerbaijan, Bahrain, Canada, Denmark, France, Germany, Greece, India, Iraq, Israel, Netherlands, Oman, Qatar, Saudi Arabia, Spain, Sweden, Syria, Tajikistan, Turkey (Asia), Turkmenistan, United Arab Emirates, United Kingdom, United States, Uzbekistan.', 'A macrolanguage of Iran', '']`
----> answers: `['', 'A macrolanguage of Iran', 'Widespread. Most concentrated in central, south central, and northeast. Also in Australia, Austria, Azerbaijan, Bahrain, Canada, Denmark, France, Germany, Greece, India, Iraq, Israel, Netherlands, Oman, Qatar, Saudi Arabia, Spain, Sweden, Syria, Tajikistan, Turkey (Asia), Turkmenistan, United Arab Emirates, United Kingdom, United States, Uzbekistan.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['australia|bahrain|canada|denmark|france|germany|greece|india|israel|netherlands|oman|other|saudiarabia|spain|sweden|turkey|uae|uk|unitedstates|uzbekistan', 'iran', 'iran']` - type: `<class 'list'>`
----> baseline_answer: `iran` - type: `<class 'str'>`
Model answers: iran 
Gold answers: ['australia|bahrain|canada|denmark|france|germany|greece|india|israel|netherlands|oman|other|saudiarabia|spain|sweden|turkey|uae|uk|unitedstates|uzbekistan', 'iran', 'iran']
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.6363636363636364
 --> Per-instance per-field breakdown: {'text': [0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455], 'select': [1.0, 1.0, 1.0, 1.0], 'textarea': [0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 1.0]}
instance_id: 29948 <-> row_number: 27
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 27 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=arb', 'http://www.ethnologue.com/show_language.asp?code=arb', 'http://www.ethnologue.com/show_language.asp?code=arb'], 'primary_country': ['saudiarabia', 'saudiarabia', 'saudiarabia'], 'region': ['Middle East, North Africa. Also in Algeria, Bahrain, Chad, Comoros, Djibouti, Egypt, Eritrea, Iraq, Israel, Jordan, Kuwait, Lebanon, Libya, Morocco, Oman, Palestinian West Bank and Gaza, Qatar, Somalia, Sudan, Syria, Tanzania, Tunisia, United Arab Emirates, Yemen.', 'Middle East, North Africa. Also in Algeria, Bahrain, Chad, Comoros, Djibouti, Egypt, Eritrea, Iraq, Israel, Jordan, Kuwait, Lebanon, Libya, Morocco, Oman, Palestinian West Bank and Gaza, Qatar, Somalia, Sudan, Syria, Tanzania, Tunisia, United Arab Emirates, Yemen.', 'Region  \tMiddle East, North Africa. Also in Algeria, Bahrain, Chad, Comoros, Djibouti, Egypt, Eritrea, Iraq, Israel, Jordan, Kuwait, Lebanon, Libya, Morocco, Oman, Palestinian West Bank and Gaza, Qatar, Somalia, Sudan, Syria, Tanzania, Tunisia, United Arab Emirates, Yemen.'], 'countries': ['tunisia|algeria|uae|somalia|jordan|bahrain|kuwait|morocco|yemen|egypt|lebanon|other|tanzania', 'tunisia|oman|israel|somalia|jordan|qatar|kuwait|yemen|egypt|tanzania', 'tunisia|oman|anguilla|israel|uae|somalia|jordan|bahrain|qatar|kuwait|morocco|yemen|egypt|lebanon|tanzania']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
Executing one action: self.actions.modify_text('url', 'https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp')
Add text `https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp` to this text input: <input type="text" size="80" name="url">
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
Executing one action: self.actions.modify_select('primary_country', 'egypt')
We are going to select this select `primary_country` with value `egypt`
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
Executing one action: self.actions.modify_textarea('region', 'nan')
Failed to execute an action self.actions.modify_textarea('region', 'nan'), error: 'MyActions' object has no attribute 'modify_textarea'
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
Executing one action: self.actions.modify_checkbox('countries', 'iran')
Looking for checkboxes with `name`: `countries` the values: `['iran']`
About to check this checkbox: <input type="checkbox" name="countries" value="iran">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : ['https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp']
 visible_values : ['https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp']
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['egypt']
 visible_values : ['egypt']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['iran']
 visible_values : ['iran']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=arb', 'http://www.ethnologue.com/show_language.asp?code=arb', 'http://www.ethnologue.com/show_language.asp?code=arb']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=arb']` - type: `<class 'list'>`
----> baseline_answer: `https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp` - type: `<class 'str'>`
 --> scores:  0.5454545454545455
----> per-field score: 0.5454545454545455
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['saudiarabia', 'saudiarabia', 'saudiarabia']` - type: `<class 'list'>`
----> baseline_answer: `egypt` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Middle East, North Africa. Also in Algeria, Bahrain, Chad, Comoros, Djibouti, Egypt, Eritrea, Iraq, Israel, Jordan, Kuwait, Lebanon, Libya, Morocco, Oman, Palestinian West Bank and Gaza, Qatar, Somalia, Sudan, Syria, Tanzania, Tunisia, United Arab Emirates, Yemen.', 'Middle East, North Africa. Also in Algeria, Bahrain, Chad, Comoros, Djibouti, Egypt, Eritrea, Iraq, Israel, Jordan, Kuwait, Lebanon, Libya, Morocco, Oman, Palestinian West Bank and Gaza, Qatar, Somalia, Sudan, Syria, Tanzania, Tunisia, United Arab Emirates, Yemen.', 'Region  \tMiddle East, North Africa. Also in Algeria, Bahrain, Chad, Comoros, Djibouti, Egypt, Eritrea, Iraq, Israel, Jordan, Kuwait, Lebanon, Libya, Morocco, Oman, Palestinian West Bank and Gaza, Qatar, Somalia, Sudan, Syria, Tanzania, Tunisia, United Arab Emirates, Yemen.']`
----> answers: `['Middle East, North Africa. Also in Algeria, Bahrain, Chad, Comoros, Djibouti, Egypt, Eritrea, Iraq, Israel, Jordan, Kuwait, Lebanon, Libya, Morocco, Oman, Palestinian West Bank and Gaza, Qatar, Somalia, Sudan, Syria, Tanzania, Tunisia, United Arab Emirates, Yemen.', 'Region  \tMiddle East, North Africa. Also in Algeria, Bahrain, Chad, Comoros, Djibouti, Egypt, Eritrea, Iraq, Israel, Jordan, Kuwait, Lebanon, Libya, Morocco, Oman, Palestinian West Bank and Gaza, Qatar, Somalia, Sudan, Syria, Tanzania, Tunisia, United Arab Emirates, Yemen.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['algeria|bahrain|egypt|jordan|kuwait|lebanon|morocco|other|somalia|tanzania|tunisia|uae|yemen', 'egypt|israel|jordan|kuwait|oman|qatar|somalia|tanzania|tunisia|yemen', 'anguilla|bahrain|egypt|israel|jordan|kuwait|lebanon|morocco|oman|qatar|somalia|tanzania|tunisia|uae|yemen']` - type: `<class 'list'>`
----> baseline_answer: `iran` - type: `<class 'str'>`
Model answers: iran 
Gold answers: ['algeria|bahrain|egypt|jordan|kuwait|lebanon|morocco|other|somalia|tanzania|tunisia|uae|yemen', 'egypt|israel|jordan|kuwait|oman|qatar|somalia|tanzania|tunisia|yemen', 'anguilla|bahrain|egypt|israel|jordan|kuwait|lebanon|morocco|oman|qatar|somalia|tanzania|tunisia|uae|yemen']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.13636363636363638
 --> Per-instance per-field breakdown: {'text': [0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455], 'select': [1.0, 1.0, 1.0, 1.0, 0.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 1.0, 0.0]}
instance_id: 29949 <-> row_number: 28
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 28 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=dan', 'http://www.ethnologue.com/show_language.asp?code=dan', 'http://www.ethnologue.com/show_language.asp?code=dan'], 'primary_country': ['denmark', 'denmark', 'denmark'], 'region': ['Also in Canada, Germany, Greenland, Norway, Sweden, United Arab Emirates, United States.', 'Also in Canada, Germany, Greenland, Norway, Sweden, United Arab Emirates, United States.', 'Also in Canada, Germany, Greenland, Norway, Sweden, United Arab Emirates, United States.'], 'countries': ['norway|canada|uae|germany|unitedstates|sweden', 'norway|canada|uae|germany|sweden', 'norway|canada|uae|germany|unitedstates|sweden|other']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
Executing one action: self.actions.modify_text('url', 'https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp')
Add text `https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp` to this text input: <input type="text" size="80" name="url">
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
Executing one action: self.actions.modify_select('primary_country', 'denmark')
We are going to select this select `primary_country` with value `denmark`
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
Executing one action: self.actions.modify_text('region', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
Executing one action: self.actions.modify_checkbox('countries', ['denmark'])
Looking for checkboxes with `name`: `countries` the values: `["['denmark']"]`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : ['https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp']
 visible_values : ['https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp']
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['denmark']
 visible_values : ['denmark']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=dan', 'http://www.ethnologue.com/show_language.asp?code=dan', 'http://www.ethnologue.com/show_language.asp?code=dan']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=dan']` - type: `<class 'list'>`
----> baseline_answer: `https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp` - type: `<class 'str'>`
 --> scores:  0.5454545454545455
----> per-field score: 0.5454545454545455
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['denmark', 'denmark', 'denmark']` - type: `<class 'list'>`
----> baseline_answer: `denmark` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Also in Canada, Germany, Greenland, Norway, Sweden, United Arab Emirates, United States.', 'Also in Canada, Germany, Greenland, Norway, Sweden, United Arab Emirates, United States.', 'Also in Canada, Germany, Greenland, Norway, Sweden, United Arab Emirates, United States.']`
----> answers: `['Also in Canada, Germany, Greenland, Norway, Sweden, United Arab Emirates, United States.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['canada|germany|norway|sweden|uae|unitedstates', 'canada|germany|norway|sweden|uae', 'canada|germany|norway|other|sweden|uae|unitedstates']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['canada|germany|norway|sweden|uae|unitedstates', 'canada|germany|norway|sweden|uae', 'canada|germany|norway|other|sweden|uae|unitedstates']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.38636363636363635
 --> Per-instance per-field breakdown: {'text': [0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455], 'select': [1.0, 1.0, 1.0, 1.0, 0.0, 1.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 29940 <-> row_number: 19
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 19 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=pag', 'http://www.ethnologue.com/show_language.asp?code=pag', 'http://www.ethnologue.com/show_language.asp?code=pag'], 'primary_country': ['philippines', 'philippines', 'philippines'], 'region': ['Pangasinan Province, Luzon. Also in United States.', 'Pangasinan Province, Luzon. Also in United States.', 'Pangasinan Province, Luzon. Also in United States.'], 'countries': ['philippines|unitedstates', 'unitedstates', 'unitedstates|other']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
Executing one action: self.actions.modify_text('url', 'https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language/pang')
Add text `https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language/pang` to this text input: <input type="text" size="80" name="url">
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
Executing one action: self.actions.modify_select('primary_country', 'philippines')
We are going to select this select `primary_country` with value `philippines`
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
Executing one action: self.actions.modify_select('primary_country', 'philippines')
We are going to select this select `primary_country` with value `philippines`
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
Executing one action: self.actions.modify_checkbox('countries', 'philippines')
Looking for checkboxes with `name`: `countries` the values: `['philippines']`
About to check this checkbox: <input type="checkbox" name="countries" value="philippines">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : ['https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language/pang']
 visible_values : ['https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language/pang']
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['philippines']
 visible_values : ['philippines']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['philippines']
 visible_values : ['philippines']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=pag', 'http://www.ethnologue.com/show_language.asp?code=pag', 'http://www.ethnologue.com/show_language.asp?code=pag']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=pag']` - type: `<class 'list'>`
----> baseline_answer: `https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language/pang` - type: `<class 'str'>`
 --> scores:  0.4761904761904762
----> per-field score: 0.4761904761904762
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['philippines', 'philippines', 'philippines']` - type: `<class 'list'>`
----> baseline_answer: `philippines` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Pangasinan Province, Luzon. Also in United States.', 'Pangasinan Province, Luzon. Also in United States.', 'Pangasinan Province, Luzon. Also in United States.']`
----> answers: `['Pangasinan Province, Luzon. Also in United States.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['philippines|unitedstates', 'unitedstates', 'other|unitedstates']` - type: `<class 'list'>`
----> baseline_answer: `philippines` - type: `<class 'str'>`
Model answers: philippines 
Gold answers: ['philippines|unitedstates', 'unitedstates', 'other|unitedstates']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.36904761904761907
 --> Per-instance per-field breakdown: {'text': [0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.4761904761904762], 'select': [1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 29925 <-> row_number: 4
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 4 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=fry', 'http://www.ethnologue.com/show_language.asp?code=fry', 'http://www.ethnologue.com/show_language.asp?code=fry'], 'primary_country': ['netherlands', 'netherlands', 'other'], 'region': ['North, Friesland.', 'North, Friesland', 'North, Friesland.'], 'countries': ['other', 'other', 'other']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
Executing one action: self.actions.modify_text('url', 'https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp')
Add text `https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp` to this text input: <input type="text" size="80" name="url">
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
Executing one action: self.actions.modify_select('primary_country', 'netherlands')
We are going to select this select `primary_country` with value `netherlands`
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
Executing one action: self.actions.modify_text('region', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
Executing one action: self.actions.modify_checkbox('countries', ['netherlands'])
Looking for checkboxes with `name`: `countries` the values: `["['netherlands']"]`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : ['https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp']
 visible_values : ['https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp']
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['netherlands']
 visible_values : ['netherlands']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=fry', 'http://www.ethnologue.com/show_language.asp?code=fry', 'http://www.ethnologue.com/show_language.asp?code=fry']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=fry']` - type: `<class 'list'>`
----> baseline_answer: `https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp` - type: `<class 'str'>`
 --> scores:  0.5454545454545455
----> per-field score: 0.5454545454545455
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['netherlands', 'netherlands', 'other']` - type: `<class 'list'>`
----> baseline_answer: `netherlands` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['North, Friesland.', 'North, Friesland', 'North, Friesland.']`
----> answers: `['North, Friesland.', 'North, Friesland']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['other', 'other', 'other']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['other', 'other', 'other']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.38636363636363635
 --> Per-instance per-field breakdown: {'text': [0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.4761904761904762, 0.5454545454545455], 'select': [1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29933 <-> row_number: 12
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 12 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=hat', 'http://www.ethnologue.com/show_language.asp?code=hat', 'http://www.ethnologue.com/show_language.asp?code=hat'], 'primary_country': ['other', 'other', 'other'], 'region': ['Widespread. Also in Bahamas, Canada, Cayman Islands, Dominican Republic, French Guiana, Guadeloupe, Puerto Rico, Turks and Caicos Islands, United States.', 'Widespread. Also in Bahamas, Canada, Cayman Islands, Dominican Republic, French Guiana, Guadeloupe, Puerto Rico, Turks and Caicos Islands, United States.', 'Widespread. Also in Bahamas, Canada, Cayman Islands, Dominican Republic, French Guiana, Guadeloupe, Puerto Rico, Turks and Caicos Islands, United States.'], 'countries': ['canada|unitedstates|puertorico|dominicanrepublic|other', 'canada|unitedstates|puertorico|dominicanrepublic|other', 'canada|unitedstates|puertorico|dominicanrepublic|other']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
Executing one action: self.actions.modify_text('url', 'https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp')
Add text `https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp` to this text input: <input type="text" size="80" name="url">
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
Executing one action: self.actions.modify_select('primary_country', 'other')
We are going to select this select `primary_country` with value `other`
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
Executing one action: self.actions.modify_text('region', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
Executing one action: self.actions.modify_checkbox('countries', 'haiti')
Looking for checkboxes with `name`: `countries` the values: `['haiti']`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : ['https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp']
 visible_values : ['https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp']
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['other']
 visible_values : ['other']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=hat', 'http://www.ethnologue.com/show_language.asp?code=hat', 'http://www.ethnologue.com/show_language.asp?code=hat']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=hat']` - type: `<class 'list'>`
----> baseline_answer: `https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp` - type: `<class 'str'>`
 --> scores:  0.5454545454545455
----> per-field score: 0.5454545454545455
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['other', 'other', 'other']` - type: `<class 'list'>`
----> baseline_answer: `other` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Widespread. Also in Bahamas, Canada, Cayman Islands, Dominican Republic, French Guiana, Guadeloupe, Puerto Rico, Turks and Caicos Islands, United States.', 'Widespread. Also in Bahamas, Canada, Cayman Islands, Dominican Republic, French Guiana, Guadeloupe, Puerto Rico, Turks and Caicos Islands, United States.', 'Widespread. Also in Bahamas, Canada, Cayman Islands, Dominican Republic, French Guiana, Guadeloupe, Puerto Rico, Turks and Caicos Islands, United States.']`
----> answers: `['Widespread. Also in Bahamas, Canada, Cayman Islands, Dominican Republic, French Guiana, Guadeloupe, Puerto Rico, Turks and Caicos Islands, United States.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['canada|dominicanrepublic|other|puertorico|unitedstates', 'canada|dominicanrepublic|other|puertorico|unitedstates', 'canada|dominicanrepublic|other|puertorico|unitedstates']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['canada|dominicanrepublic|other|puertorico|unitedstates', 'canada|dominicanrepublic|other|puertorico|unitedstates', 'canada|dominicanrepublic|other|puertorico|unitedstates']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.38636363636363635
 --> Per-instance per-field breakdown: {'text': [0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.4761904761904762, 0.5454545454545455, 0.5454545454545455], 'select': [1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29945 <-> row_number: 24
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 24 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=nor', 'http://www.ethnologue.com/show_language.asp?code=nor', 'http://www.ethnologue.com/show_language.asp?code=nor'], 'primary_country': ['norway', 'norway', 'norway'], 'region': ['Not available', 'Denmark, Finland, Norway and Sweden', 'Denmark, Finland, Norway and Sweden'], 'countries': ['norway', 'finland|norway|denmark|sweden', 'finland|norway|denmark|sweden']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
Executing one action: self.actions.modify_text('url', 'https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language/nob')
Add text `https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language/nob` to this text input: <input type="text" size="80" name="url">
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
Executing one action: self.actions.modify_select('primary_country', 'norway')
We are going to select this select `primary_country` with value `norway`
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
Executing one action: self.actions.modify_select('primary_country', 'norway')
We are going to select this select `primary_country` with value `norway`
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
Executing one action: self.actions.modify_checkbox('countries', 'norway')
Looking for checkboxes with `name`: `countries` the values: `['norway']`
About to check this checkbox: <input type="checkbox" name="countries" value="norway">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : ['https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language/nob']
 visible_values : ['https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language/nob']
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['norway']
 visible_values : ['norway']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['norway']
 visible_values : ['norway']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=nor', 'http://www.ethnologue.com/show_language.asp?code=nor', 'http://www.ethnologue.com/show_language.asp?code=nor']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=nor']` - type: `<class 'list'>`
----> baseline_answer: `https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language/nob` - type: `<class 'str'>`
 --> scores:  0.4761904761904762
----> per-field score: 0.4761904761904762
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['norway', 'norway', 'norway']` - type: `<class 'list'>`
----> baseline_answer: `norway` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Not available', 'Denmark, Finland, Norway and Sweden', 'Denmark, Finland, Norway and Sweden']`
----> answers: `['Not available', 'Denmark, Finland, Norway and Sweden']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['norway', 'denmark|finland|norway|sweden', 'denmark|finland|norway|sweden']` - type: `<class 'list'>`
----> baseline_answer: `norway` - type: `<class 'str'>`
Model answers: norway 
Gold answers: ['norway', 'denmark|finland|norway|sweden', 'denmark|finland|norway|sweden']
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.6190476190476191
 --> Per-instance per-field breakdown: {'text': [0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.4761904761904762, 0.5454545454545455, 0.5454545454545455, 0.4761904761904762], 'select': [1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]}
instance_id: 29954 <-> row_number: 33
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 33 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=hin', 'http://www.ethnologue.com/show_language.asp?code=hin', 'http://www.ethnologue.com/show_language.asp?code=hin'], 'primary_country': ['india', 'india', 'india'], 'region': ['Throughout north India: Delhi; Uttar Pradesh; Uttarakhand; Rajasthan; Punjab; Madhya Pradesh; northern Bihar; Himachal Pradesh. Also in Bangladesh, Belize, Bhutan, Botswana, Canada, Djibouti, Germany, Kenya, Nepal, New Zealand, Philippines, Singapore, South Africa, Uganda, United Arab Emirates, United Kingdom, United States, Yemen, Zambia.', 'Throughout north India: Delhi; Uttar Pradesh; Uttarakhand; Rajasthan; Punjab; Madhya Pradesh; northern Bihar; Himachal Pradesh. Also in Bangladesh, Belize, Bhutan, Botswana, Canada, Djibouti, Germany, Kenya, Nepal, New Zealand, Philippines, Singapore, South Africa, Uganda, United Arab Emirates, United Kingdom, United States, Yemen, Zambia.', 'Throughout north India: Delhi; Uttar Pradesh; Uttarakhand; Rajasthan; Punjab; Madhya Pradesh; northern Bihar; Himachal Pradesh. Also in Bangladesh, Belize, Bhutan, Botswana, Canada, Djibouti, Germany, Kenya, Nepal, New Zealand, Philippines, Singapore, South Africa, Uganda, United Arab Emirates, United Kingdom, United States, Yemen, Zambia.'], 'countries': ['singapore|canada|uae|germany|uk|philippines|southafrica|unitedstates|kenya|bangladesh|yemen|nepal|zambia|india|newzealand', 'singapore|canada|uae|germany|philippines|southafrica|unitedstates|kenya|bangladesh|yemen|nepal|zambia|other|india|newzealand', 'singapore|canada|uae|germany|uk|philippines|southafrica|unitedstates|kenya|bangladesh|yemen|nepal|zambia|other|newzealand']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
Executing one action: self.actions.modify_text('url', 'https://www.ethnologue.com/language/hin')
Add text `https://www.ethnologue.com/language/hin` to this text input: <input type="text" size="80" name="url">
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
Executing one action: self.actions.modify_select('primary_country', 'india')
We are going to select this select `primary_country` with value `india`
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
Executing one action: self.actions.modify_textarea('region', 'nan')
Failed to execute an action self.actions.modify_textarea('region', 'nan'), error: 'MyActions' object has no attribute 'modify_textarea'
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
Executing one action: self.actions.modify_checkbox('countries', 'india')
Looking for checkboxes with `name`: `countries` the values: `['india']`
About to check this checkbox: <input type="checkbox" name="countries" value="india">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : ['https://www.ethnologue.com/language/hin']
 visible_values : ['https://www.ethnologue.com/language/hin']
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['india']
 visible_values : ['india']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['india']
 visible_values : ['india']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=hin', 'http://www.ethnologue.com/show_language.asp?code=hin', 'http://www.ethnologue.com/show_language.asp?code=hin']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=hin']` - type: `<class 'list'>`
----> baseline_answer: `https://www.ethnologue.com/language/hin` - type: `<class 'str'>`
 --> scores:  0.8
----> per-field score: 0.8
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['india', 'india', 'india']` - type: `<class 'list'>`
----> baseline_answer: `india` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Throughout north India: Delhi; Uttar Pradesh; Uttarakhand; Rajasthan; Punjab; Madhya Pradesh; northern Bihar; Himachal Pradesh. Also in Bangladesh, Belize, Bhutan, Botswana, Canada, Djibouti, Germany, Kenya, Nepal, New Zealand, Philippines, Singapore, South Africa, Uganda, United Arab Emirates, United Kingdom, United States, Yemen, Zambia.', 'Throughout north India: Delhi; Uttar Pradesh; Uttarakhand; Rajasthan; Punjab; Madhya Pradesh; northern Bihar; Himachal Pradesh. Also in Bangladesh, Belize, Bhutan, Botswana, Canada, Djibouti, Germany, Kenya, Nepal, New Zealand, Philippines, Singapore, South Africa, Uganda, United Arab Emirates, United Kingdom, United States, Yemen, Zambia.', 'Throughout north India: Delhi; Uttar Pradesh; Uttarakhand; Rajasthan; Punjab; Madhya Pradesh; northern Bihar; Himachal Pradesh. Also in Bangladesh, Belize, Bhutan, Botswana, Canada, Djibouti, Germany, Kenya, Nepal, New Zealand, Philippines, Singapore, South Africa, Uganda, United Arab Emirates, United Kingdom, United States, Yemen, Zambia.']`
----> answers: `['Throughout north India: Delhi; Uttar Pradesh; Uttarakhand; Rajasthan; Punjab; Madhya Pradesh; northern Bihar; Himachal Pradesh. Also in Bangladesh, Belize, Bhutan, Botswana, Canada, Djibouti, Germany, Kenya, Nepal, New Zealand, Philippines, Singapore, South Africa, Uganda, United Arab Emirates, United Kingdom, United States, Yemen, Zambia.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['bangladesh|canada|germany|india|kenya|nepal|newzealand|philippines|singapore|southafrica|uae|uk|unitedstates|yemen|zambia', 'bangladesh|canada|germany|india|kenya|nepal|newzealand|other|philippines|singapore|southafrica|uae|unitedstates|yemen|zambia', 'bangladesh|canada|germany|kenya|nepal|newzealand|other|philippines|singapore|southafrica|uae|uk|unitedstates|yemen|zambia']` - type: `<class 'list'>`
----> baseline_answer: `india` - type: `<class 'str'>`
Model answers: india 
Gold answers: ['bangladesh|canada|germany|india|kenya|nepal|newzealand|philippines|singapore|southafrica|uae|uk|unitedstates|yemen|zambia', 'bangladesh|canada|germany|india|kenya|nepal|newzealand|other|philippines|singapore|southafrica|uae|unitedstates|yemen|zambia', 'bangladesh|canada|germany|kenya|nepal|newzealand|other|philippines|singapore|southafrica|uae|uk|unitedstates|yemen|zambia']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.45
 --> Per-instance per-field breakdown: {'text': [0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.4761904761904762, 0.5454545454545455, 0.5454545454545455, 0.4761904761904762, 0.8], 'select': [1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]}
instance_id: 29929 <-> row_number: 8
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 8 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=srp', 'http://www.ethnologue.com/show_language.asp?code=srp', 'http://www.ethnologue.com/show_language.asp?code=srp'], 'primary_country': ['serbia', 'serbia', 'serbia'], 'region': ['Also in Albania, Australia, Bosnia and Herzegovina, Bulgaria, Canada, Croatia, Czech Republic, Greece, Hungary, Libya, Macedonia, Montenegro, Romania, Russian Federation (Europe), Sweden, Switzerland, Turkey (Europe), Ukraine, United Arab Emirates, United States, Zambia.', 'Also in Albania, Australia, Bosnia and Herzegovina, Bulgaria, Canada, Croatia, Czech Republic, Greece, Hungary, Libya, Macedonia, Montenegro, Romania, Russian Federation (Europe), Sweden, Switzerland, Turkey (Europe), Ukraine, United Arab Emirates, United States, Zambia', 'Also in Albania, Australia, Bosnia and Herzegovina, Bulgaria, Canada, Croatia, Czech Republic, Greece, Hungary, Libya, Macedonia, Montenegro, Romania, Russian Federation (Europe), Sweden, Switzerland, Turkey (Europe), Ukraine, United Arab Emirates, United States, Zambia.'], 'countries': ['albania|bulgaria|turkey|canada|macedoniatheformeryugoslavrepublicof|uae|greece|ukraine|unitedstates|australia|croatia|czechrepublic|bosniaandherzegovina|romania|sweden|hungary|russia|zambia|bosnia|other|liberia', 'albania|bulgaria|macedonia|canada|macedoniatheformeryugoslavrepublicof|uae|uk|greece|ukraine|australia|croatia|czechrepublic|bosniaandherzegovina|romania|sweden|hungary|switzerland|zambia|bosnia|other', 'albania|bulgaria|turkey|canada|macedoniatheformeryugoslavrepublicof|uae|greece|ukraine|unitedstates|australia|croatia|czechrepublic|bosniaandherzegovina|romania|sweden|hungary|switzerland|zambia|bosnia|russianfederation|other']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
Executing one action: self.actions.modify_text('url', 'https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language/scc')
Add text `https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language/scc` to this text input: <input type="text" size="80" name="url">
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
Executing one action: self.actions.modify_select('primary_country', 'serbia')
We are going to select this select `primary_country` with value `serbia`
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
Executing one action: self.actions.modify_select('primary_country', 'serbia')
We are going to select this select `primary_country` with value `serbia`
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
Executing one action: self.actions.modify_checkbox('countries', 'serbia')
Looking for checkboxes with `name`: `countries` the values: `['serbia']`
About to check this checkbox: <input type="checkbox" name="countries" value="serbia">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : ['https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language/scc']
 visible_values : ['https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language/scc']
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['serbia']
 visible_values : ['serbia']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['serbia']
 visible_values : ['serbia']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=srp', 'http://www.ethnologue.com/show_language.asp?code=srp', 'http://www.ethnologue.com/show_language.asp?code=srp']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=srp']` - type: `<class 'list'>`
----> baseline_answer: `https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language/scc` - type: `<class 'str'>`
 --> scores:  0.4761904761904762
----> per-field score: 0.4761904761904762
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['serbia', 'serbia', 'serbia']` - type: `<class 'list'>`
----> baseline_answer: `serbia` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Also in Albania, Australia, Bosnia and Herzegovina, Bulgaria, Canada, Croatia, Czech Republic, Greece, Hungary, Libya, Macedonia, Montenegro, Romania, Russian Federation (Europe), Sweden, Switzerland, Turkey (Europe), Ukraine, United Arab Emirates, United States, Zambia.', 'Also in Albania, Australia, Bosnia and Herzegovina, Bulgaria, Canada, Croatia, Czech Republic, Greece, Hungary, Libya, Macedonia, Montenegro, Romania, Russian Federation (Europe), Sweden, Switzerland, Turkey (Europe), Ukraine, United Arab Emirates, United States, Zambia', 'Also in Albania, Australia, Bosnia and Herzegovina, Bulgaria, Canada, Croatia, Czech Republic, Greece, Hungary, Libya, Macedonia, Montenegro, Romania, Russian Federation (Europe), Sweden, Switzerland, Turkey (Europe), Ukraine, United Arab Emirates, United States, Zambia.']`
----> answers: `['Also in Albania, Australia, Bosnia and Herzegovina, Bulgaria, Canada, Croatia, Czech Republic, Greece, Hungary, Libya, Macedonia, Montenegro, Romania, Russian Federation (Europe), Sweden, Switzerland, Turkey (Europe), Ukraine, United Arab Emirates, United States, Zambia.', 'Also in Albania, Australia, Bosnia and Herzegovina, Bulgaria, Canada, Croatia, Czech Republic, Greece, Hungary, Libya, Macedonia, Montenegro, Romania, Russian Federation (Europe), Sweden, Switzerland, Turkey (Europe), Ukraine, United Arab Emirates, United States, Zambia']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['albania|australia|bosnia|bosniaandherzegovina|bulgaria|canada|croatia|czechrepublic|greece|hungary|liberia|macedoniatheformeryugoslavrepublicof|other|romania|russia|sweden|turkey|uae|ukraine|unitedstates|zambia', 'albania|australia|bosnia|bosniaandherzegovina|bulgaria|canada|croatia|czechrepublic|greece|hungary|macedonia|macedoniatheformeryugoslavrepublicof|other|romania|sweden|switzerland|uae|uk|ukraine|zambia', 'albania|australia|bosnia|bosniaandherzegovina|bulgaria|canada|croatia|czechrepublic|greece|hungary|macedoniatheformeryugoslavrepublicof|other|romania|russianfederation|sweden|switzerland|turkey|uae|ukraine|unitedstates|zambia']` - type: `<class 'list'>`
----> baseline_answer: `serbia` - type: `<class 'str'>`
Model answers: serbia 
Gold answers: ['albania|australia|bosnia|bosniaandherzegovina|bulgaria|canada|croatia|czechrepublic|greece|hungary|liberia|macedoniatheformeryugoslavrepublicof|other|romania|russia|sweden|turkey|uae|ukraine|unitedstates|zambia', 'albania|australia|bosnia|bosniaandherzegovina|bulgaria|canada|croatia|czechrepublic|greece|hungary|macedonia|macedoniatheformeryugoslavrepublicof|other|romania|sweden|switzerland|uae|uk|ukraine|zambia', 'albania|australia|bosnia|bosniaandherzegovina|bulgaria|canada|croatia|czechrepublic|greece|hungary|macedoniatheformeryugoslavrepublicof|other|romania|russianfederation|sweden|switzerland|turkey|uae|ukraine|unitedstates|zambia']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.36904761904761907
 --> Per-instance per-field breakdown: {'text': [0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.4761904761904762, 0.5454545454545455, 0.5454545454545455, 0.4761904761904762, 0.8, 0.4761904761904762], 'select': [1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 29922 <-> row_number: 1
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 1 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=bos', 'http://www.ethnologue.com/show_language.asp?code=bos', 'http://www.ethnologue.com/show_language.asp?code=bos'], 'primary_country': ['bosniaandherzegovina', 'bosnia', 'bosnia'], 'region': ['Also in Croatia, Montenegro, Serbia.', 'Also in Croatia, Montenegro, Serbia.', 'Also in Croatia, Montenegro, Serbia.'], 'countries': ['serbia|croatia|other', 'serbia|croatia|other', 'serbia|croatia']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
Executing one action: self.actions.modify_text('url', 'https://www.ethnologue.com/language/bos')
Add text `https://www.ethnologue.com/language/bos` to this text input: <input type="text" size="80" name="url">
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
Executing one action: self.actions.modify_select('primary_country', 'bosniaandherzegovina')
We are going to select this select `primary_country` with value `bosniaandherzegovina`
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
Executing one action: self.actions.modify_select('primary_country', 'Bosnia and Herzegovina')
Failed to execute an action self.actions.modify_select('primary_country', 'Bosnia and Herzegovina'), error: Input value `Bosnia and Herzegovina` is not among the available option values `['albania', 'algeria', 'anguilla', 'argentina', 'armenia', 'aruba', 'australia', 'austria', 'bahrain', 'bangladesh', 'belarus', 'belgium', 'bosnia', 'brazil', 'brunei', 'bulgaria', 'cameroon', 'canada', 'chile', 'china', 'colombia', 'costarica', 'croatia', 'cyprus', 'czechrepublic', 'denmark', 'dominicanrepublic', 'egypt', 'estonia', 'ethiopia', 'finland', 'france', 'georgia', 'germany', 'greece', 'guam', 'guatemala', 'guineabissau', 'guyana', 'bosniaandherzegovina', 'hongkong', 'hungary', 'iceland', 'india', 'indonesia', 'iran', 'ireland', 'israel', 'italy', 'jamaica', 'japan', 'jordan', 'kazakhstan', 'kenya', 'korea', 'kuwait', 'latvia', 'lebanon', 'liberia', 'lithuania', 'luxembourg', 'macedonia', 'macedoniatheformeryugoslavrepublicof', 'madagascar', 'malaysia', 'maldives', 'malta', 'mauritius', 'mexico', 'moldova', 'morocco', 'nepal', 'netherlands', 'newzealand', 'nigeria', 'norway', 'oman', 'other', 'pakistan', 'panama', 'peru', 'philippines', 'poland', 'portugal', 'puertorico', 'qatar', 'romania', 'russia', 'russianfederation', 'saudiarabia', 'scotland', 'serbia', 'singapore', 'slovakia', 'slovenia', 'somalia', 'southafrica', 'spain', 'srilanka', 'stlucia', 'stvincent', 'sweden', 'switzerland', 'taiwan', 'tanzania', 'thailand', 'tunisia', 'turkey', 'uae', 'uk', 'ukraine', 'unitedstates', 'uruguay', 'uzbekistan', 'venezuela', 'vietnam', 'yemen', 'zambia']`
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
Executing one action: self.actions.modify_checkbox('countries', 'bosnia')
Looking for checkboxes with `name`: `countries` the values: `['bosnia']`
About to check this checkbox: <input type="checkbox" name="countries" value="bosnia">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : ['https://www.ethnologue.com/language/bos']
 visible_values : ['https://www.ethnologue.com/language/bos']
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['bosniaandherzegovina']
 visible_values : ['bosniaandherzegovina']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['bosnia']
 visible_values : ['bosnia']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=bos', 'http://www.ethnologue.com/show_language.asp?code=bos', 'http://www.ethnologue.com/show_language.asp?code=bos']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=bos']` - type: `<class 'list'>`
----> baseline_answer: `https://www.ethnologue.com/language/bos` - type: `<class 'str'>`
 --> scores:  0.8
----> per-field score: 0.8
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['bosniaandherzegovina', 'bosnia', 'bosnia']` - type: `<class 'list'>`
----> baseline_answer: `bosniaandherzegovina` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Also in Croatia, Montenegro, Serbia.', 'Also in Croatia, Montenegro, Serbia.', 'Also in Croatia, Montenegro, Serbia.']`
----> answers: `['Also in Croatia, Montenegro, Serbia.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['croatia|other|serbia', 'croatia|other|serbia', 'croatia|serbia']` - type: `<class 'list'>`
----> baseline_answer: `bosnia` - type: `<class 'str'>`
Model answers: bosnia 
Gold answers: ['croatia|other|serbia', 'croatia|other|serbia', 'croatia|serbia']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.2
 --> Per-instance per-field breakdown: {'text': [0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.4761904761904762, 0.5454545454545455, 0.5454545454545455, 0.4761904761904762, 0.8, 0.4761904761904762, 0.8], 'select': [1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 29957 <-> row_number: 36
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 36 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=hrv', 'http://www.ethnologue.com/show_language.asp?code=hrv', 'http://www.ethnologue.com/show_language.asp?code=hrv'], 'primary_country': ['croatia', 'croatia', 'croatia'], 'region': ['Also in Austria, Bosnia and Herzegovina, Canada, Chile, Czech Republic, Germany, Hungary, Italy, Montenegro, Serbia, Slovakia, Slovenia, United States.', 'Also in Austria, Bosnia and Herzegovina, Canada, Chile, Czech Republic, Germany, Hungary, Italy, Montenegro, Serbia, Slovakia, Slovenia, United States.', 'Also in Austria, Bosnia and Herzegovina, Canada, Chile, Czech Republic, Germany, Hungary, Italy, Montenegro, Serbia, Slovakia, Slovenia, United States.'], 'countries': ['serbia|canada|slovakia|chile|germany|italy|unitedstates|bosniaandherzegovina|hungary|bosnia|other', 'serbia|canada|slovakia|chile|germany|italy|slovenia|unitedstates|austria|czechrepublic|bosniaandherzegovina|hungary|bosnia|other', 'serbia|canada|slovakia|chile|germany|italy|slovenia|unitedstates|austria|czechrepublic|other']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
Executing one action: self.actions.modify_text('url', 'https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language/hrv')
Add text `https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language/hrv` to this text input: <input type="text" size="80" name="url">
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
Executing one action: self.actions.modify_select('primary_country', 'croatia')
We are going to select this select `primary_country` with value `croatia`
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
Executing one action: self.actions.modify_select('primary_country', 'croatia')
We are going to select this select `primary_country` with value `croatia`
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
Executing one action: self.actions.modify_checkbox('countries', 'croatia')
Looking for checkboxes with `name`: `countries` the values: `['croatia']`
About to check this checkbox: <input type="checkbox" name="countries" value="croatia">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : ['https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language/hrv']
 visible_values : ['https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language/hrv']
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['croatia']
 visible_values : ['croatia']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['croatia']
 visible_values : ['croatia']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=hrv', 'http://www.ethnologue.com/show_language.asp?code=hrv', 'http://www.ethnologue.com/show_language.asp?code=hrv']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=hrv']` - type: `<class 'list'>`
----> baseline_answer: `https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language/hrv` - type: `<class 'str'>`
 --> scores:  0.5714285714285715
----> per-field score: 0.5714285714285715
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['croatia', 'croatia', 'croatia']` - type: `<class 'list'>`
----> baseline_answer: `croatia` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Also in Austria, Bosnia and Herzegovina, Canada, Chile, Czech Republic, Germany, Hungary, Italy, Montenegro, Serbia, Slovakia, Slovenia, United States.', 'Also in Austria, Bosnia and Herzegovina, Canada, Chile, Czech Republic, Germany, Hungary, Italy, Montenegro, Serbia, Slovakia, Slovenia, United States.', 'Also in Austria, Bosnia and Herzegovina, Canada, Chile, Czech Republic, Germany, Hungary, Italy, Montenegro, Serbia, Slovakia, Slovenia, United States.']`
----> answers: `['Also in Austria, Bosnia and Herzegovina, Canada, Chile, Czech Republic, Germany, Hungary, Italy, Montenegro, Serbia, Slovakia, Slovenia, United States.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['bosnia|bosniaandherzegovina|canada|chile|germany|hungary|italy|other|serbia|slovakia|unitedstates', 'austria|bosnia|bosniaandherzegovina|canada|chile|czechrepublic|germany|hungary|italy|other|serbia|slovakia|slovenia|unitedstates', 'austria|canada|chile|czechrepublic|germany|italy|other|serbia|slovakia|slovenia|unitedstates']` - type: `<class 'list'>`
----> baseline_answer: `croatia` - type: `<class 'str'>`
Model answers: croatia 
Gold answers: ['bosnia|bosniaandherzegovina|canada|chile|germany|hungary|italy|other|serbia|slovakia|unitedstates', 'austria|bosnia|bosniaandherzegovina|canada|chile|czechrepublic|germany|hungary|italy|other|serbia|slovakia|slovenia|unitedstates', 'austria|canada|chile|czechrepublic|germany|italy|other|serbia|slovakia|slovenia|unitedstates']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.3928571428571429
 --> Per-instance per-field breakdown: {'text': [0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.4761904761904762, 0.5454545454545455, 0.5454545454545455, 0.4761904761904762, 0.8, 0.4761904761904762, 0.8, 0.5714285714285715], 'select': [1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29932 <-> row_number: 11
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 11 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=zsm', 'http://www.ethnologue.com/show_language.asp?code=zlm', 'http://www.ethnologue.com/show_language.asp?code=zlm'], 'primary_country': ['malaysia', 'malaysia', 'malaysia'], 'region': ['Widespread Peninsular Malaysia, Sabah, and Sarawak. Also in Brunei, Singapore.', 'Region  \tWidespread in Peninsular Malaysia, parts of Sarawak. Also in Canada, Indonesia (Sumatra), Myanmar, Singapore, United Arab Emirates, United States.', 'Widespread in Peninsular Malaysia, parts of Sarawak. Also in Canada, Indonesia (Sumatra), Myanmar, Singapore, United Arab Emirates, United States.'], 'countries': ['singapore|other|brunei', 'singapore|canada|uae|malaysia|unitedstates|other|indonesia', 'singapore|canada|uae|malaysia|unitedstates|other|indonesia']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
Executing one action: self.actions.modify_text('url', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
Executing one action: self.actions.modify_select('primary_country', 'malaysia')
We are going to select this select `primary_country` with value `malaysia`
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
Executing one action: self.actions.modify_select('primary_country', 'indonesia')
We are going to select this select `primary_country` with value `indonesia`
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
Executing one action: self.actions.modify_checkbox('countries', ['indonesia'])
Looking for checkboxes with `name`: `countries` the values: `["['indonesia']"]`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : [None]
 visible_values : [None]
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['indonesia']
 visible_values : ['indonesia']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=zsm', 'http://www.ethnologue.com/show_language.asp?code=zlm', 'http://www.ethnologue.com/show_language.asp?code=zlm']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=zsm', 'http://www.ethnologue.com/show_language.asp?code=zlm']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['malaysia', 'malaysia', 'malaysia']` - type: `<class 'list'>`
----> baseline_answer: `indonesia` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Widespread Peninsular Malaysia, Sabah, and Sarawak. Also in Brunei, Singapore.', 'Region  \tWidespread in Peninsular Malaysia, parts of Sarawak. Also in Canada, Indonesia (Sumatra), Myanmar, Singapore, United Arab Emirates, United States.', 'Widespread in Peninsular Malaysia, parts of Sarawak. Also in Canada, Indonesia (Sumatra), Myanmar, Singapore, United Arab Emirates, United States.']`
----> answers: `['Widespread Peninsular Malaysia, Sabah, and Sarawak. Also in Brunei, Singapore.', 'Widespread in Peninsular Malaysia, parts of Sarawak. Also in Canada, Indonesia (Sumatra), Myanmar, Singapore, United Arab Emirates, United States.', 'Region  \tWidespread in Peninsular Malaysia, parts of Sarawak. Also in Canada, Indonesia (Sumatra), Myanmar, Singapore, United Arab Emirates, United States.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['brunei|other|singapore', 'canada|indonesia|malaysia|other|singapore|uae|unitedstates', 'canada|indonesia|malaysia|other|singapore|uae|unitedstates']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['brunei|other|singapore', 'canada|indonesia|malaysia|other|singapore|uae|unitedstates', 'canada|indonesia|malaysia|other|singapore|uae|unitedstates']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'text': [0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.4761904761904762, 0.5454545454545455, 0.5454545454545455, 0.4761904761904762, 0.8, 0.4761904761904762, 0.8, 0.5714285714285715, 0.0], 'select': [1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29947 <-> row_number: 26
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 26 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=swe', 'http://www.ethnologue.com/show_language.asp?code=swe', 'http://www.ethnologue.com/show_language.asp?code=swe'], 'primary_country': ['sweden', 'sweden', 'sweden'], 'region': ['he Göta dialect group south, including parts of Småland, south Swedish provinces, Värmland, Västergvtland; Svea in north, including Hälsingland, parts of Östergötland and Uppland, and Swedish-speaking parts of Finland; Southern Swedish in Skåne, Blekinge, southern Småland, southern Halland; Northern Swedish in northern Hälsingland and Jämtland and north; Jamtska mainly in Jämtland; Eastern Swedish in Finland, Estonia, and Gammalsvenskby, Ukraine; Gutnic southeast Isle of Gotland and Fårö. Also in Canada, Denmark, Estonia, Finland, Norway, United Arab Emirates, United States.', 'The Göta dialect group south, including parts of Småland, south Swedish provinces, Värmland, Västergvtland; Svea in north, including Hälsingland, parts of Östergötland and Uppland, and Swedish-speaking parts of Finland; Southern Swedish in Skåne, Blekinge, southern Småland, southern Halland; Northern Swedish in northern Hälsingland and Jämtland and north; Jamtska mainly in Jämtland; Eastern Swedish in Finland, Estonia, and Gammalsvenskby, Ukraine; Gutnic southeast Isle of Gotland and Fårö. Also in Canada, Denmark, Estonia, Finland, Norway, United Arab Emirates, United States.', 'The Göta dialect group south, including parts of Småland, south Swedish provinces, Värmland, Västergvtland; Svea in north, including Hälsingland, parts of Östergötland and Uppland, and Swedish-speaking parts of Finland; Southern Swedish in Skåne, Blekinge, southern Småland, southern Halland; Northern Swedish in northern Hälsingland and Jämtland and north; Jamtska mainly in Jämtland; Eastern Swedish in Finland, Estonia, and Gammalsvenskby, Ukraine; Gutnic southeast Isle of Gotland and Fårö. Also in Canada, Denmark, Estonia, Finland, Norway, United Arab Emirates, United States.'], 'countries': ['finland|norway|canada|unitedstates|denmark|other|estonia', 'finland|norway|canada|uae|ukraine|unitedstates|denmark|other|estonia', 'finland|norway|canada|uae|ukraine|unitedstates|denmark|sweden|estonia']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
Executing one action: self.actions.modify_text('url', 'https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp')
Add text `https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp` to this text input: <input type="text" size="80" name="url">
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
Executing one action: self.actions.modify_select('primary_country', 'sweden')
We are going to select this select `primary_country` with value `sweden`
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
Executing one action: self.actions.modify_text('region', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
Executing one action: self.actions.modify_checkbox('countries', 'sweden')
Looking for checkboxes with `name`: `countries` the values: `['sweden']`
About to check this checkbox: <input type="checkbox" name="countries" value="sweden">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : ['https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp']
 visible_values : ['https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp']
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['sweden']
 visible_values : ['sweden']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['sweden']
 visible_values : ['sweden']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=swe', 'http://www.ethnologue.com/show_language.asp?code=swe', 'http://www.ethnologue.com/show_language.asp?code=swe']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=swe']` - type: `<class 'list'>`
----> baseline_answer: `https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp` - type: `<class 'str'>`
 --> scores:  0.5454545454545455
----> per-field score: 0.5454545454545455
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['sweden', 'sweden', 'sweden']` - type: `<class 'list'>`
----> baseline_answer: `sweden` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['he Göta dialect group south, including parts of Småland, south Swedish provinces, Värmland, Västergvtland; Svea in north, including Hälsingland, parts of Östergötland and Uppland, and Swedish-speaking parts of Finland; Southern Swedish in Skåne, Blekinge, southern Småland, southern Halland; Northern Swedish in northern Hälsingland and Jämtland and north; Jamtska mainly in Jämtland; Eastern Swedish in Finland, Estonia, and Gammalsvenskby, Ukraine; Gutnic southeast Isle of Gotland and Fårö. Also in Canada, Denmark, Estonia, Finland, Norway, United Arab Emirates, United States.', 'The Göta dialect group south, including parts of Småland, south Swedish provinces, Värmland, Västergvtland; Svea in north, including Hälsingland, parts of Östergötland and Uppland, and Swedish-speaking parts of Finland; Southern Swedish in Skåne, Blekinge, southern Småland, southern Halland; Northern Swedish in northern Hälsingland and Jämtland and north; Jamtska mainly in Jämtland; Eastern Swedish in Finland, Estonia, and Gammalsvenskby, Ukraine; Gutnic southeast Isle of Gotland and Fårö. Also in Canada, Denmark, Estonia, Finland, Norway, United Arab Emirates, United States.', 'The Göta dialect group south, including parts of Småland, south Swedish provinces, Värmland, Västergvtland; Svea in north, including Hälsingland, parts of Östergötland and Uppland, and Swedish-speaking parts of Finland; Southern Swedish in Skåne, Blekinge, southern Småland, southern Halland; Northern Swedish in northern Hälsingland and Jämtland and north; Jamtska mainly in Jämtland; Eastern Swedish in Finland, Estonia, and Gammalsvenskby, Ukraine; Gutnic southeast Isle of Gotland and Fårö. Also in Canada, Denmark, Estonia, Finland, Norway, United Arab Emirates, United States.']`
----> answers: `['he Göta dialect group south, including parts of Småland, south Swedish provinces, Värmland, Västergvtland; Svea in north, including Hälsingland, parts of Östergötland and Uppland, and Swedish-speaking parts of Finland; Southern Swedish in Skåne, Blekinge, southern Småland, southern Halland; Northern Swedish in northern Hälsingland and Jämtland and north; Jamtska mainly in Jämtland; Eastern Swedish in Finland, Estonia, and Gammalsvenskby, Ukraine; Gutnic southeast Isle of Gotland and Fårö. Also in Canada, Denmark, Estonia, Finland, Norway, United Arab Emirates, United States.', 'The Göta dialect group south, including parts of Småland, south Swedish provinces, Värmland, Västergvtland; Svea in north, including Hälsingland, parts of Östergötland and Uppland, and Swedish-speaking parts of Finland; Southern Swedish in Skåne, Blekinge, southern Småland, southern Halland; Northern Swedish in northern Hälsingland and Jämtland and north; Jamtska mainly in Jämtland; Eastern Swedish in Finland, Estonia, and Gammalsvenskby, Ukraine; Gutnic southeast Isle of Gotland and Fårö. Also in Canada, Denmark, Estonia, Finland, Norway, United Arab Emirates, United States.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['canada|denmark|estonia|finland|norway|other|unitedstates', 'canada|denmark|estonia|finland|norway|other|uae|ukraine|unitedstates', 'canada|denmark|estonia|finland|norway|sweden|uae|ukraine|unitedstates']` - type: `<class 'list'>`
----> baseline_answer: `sweden` - type: `<class 'str'>`
Model answers: sweden 
Gold answers: ['canada|denmark|estonia|finland|norway|other|unitedstates', 'canada|denmark|estonia|finland|norway|other|uae|ukraine|unitedstates', 'canada|denmark|estonia|finland|norway|sweden|uae|ukraine|unitedstates']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.38636363636363635
 --> Per-instance per-field breakdown: {'text': [0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.4761904761904762, 0.5454545454545455, 0.5454545454545455, 0.4761904761904762, 0.8, 0.4761904761904762, 0.8, 0.5714285714285715, 0.0, 0.5454545454545455], 'select': [1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29944 <-> row_number: 23
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 23 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=eus', 'http://www.ethnologue.com/show_language.asp?code=eus', 'http://www.ethnologue.com/show_language.asp?code=eus'], 'primary_country': ['spain', 'spain', 'spain'], 'region': ['France-Spain border, 3 Basque provinces: Alava (Araba), Bizkaia (Biskay), and Gipuzkoa of Autonomous Basque Community (CAV); north central Spain, Autonomous Region of Navarra (Nafarroa), north area. Also in Australia, Costa Rica, France, Mexico, Philippines, United States.', 'France-Spain border, 3 Basque provinces: Alava (Araba), Bizkaia (Biskay), and Gipuzkoa of Autonomous Basque Community (CAV); north central Spain, Autonomous Region of Navarra (Nafarroa), north area. Also in Australia, Costa Rica, France, Mexico, Philippines, United States.', 'France-Spain border, 3 Basque provinces: Alava (Araba), Bizkaia (Biskay), and Gipuzkoa of Autonomous Basque Community (CAV); north central Spain, Autonomous Region of Navarra (Nafarroa), north area. Also in Australia, Costa Rica, France, Mexico, Philippines, United States.'], 'countries': ['france|philippines|unitedstates|australia|costarica|spain|mexico', 'france|philippines|unitedstates|australia|costarica|mexico|other', 'france|aruba|philippines|unitedstates|australia|costarica|spain|mexico|other']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
Executing one action: self.actions.modify_text('url', 'https://www.ethnologue.com/language/eus')
Add text `https://www.ethnologue.com/language/eus` to this text input: <input type="text" size="80" name="url">
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
Executing one action: self.actions.modify_select('primary_country', 'france')
We are going to select this select `primary_country` with value `france`
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
Executing one action: self.actions.modify_text('region', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
Executing one action: self.actions.modify_checkbox('countries', 'spain')
Looking for checkboxes with `name`: `countries` the values: `['spain']`
About to check this checkbox: <input type="checkbox" name="countries" value="spain">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : ['https://www.ethnologue.com/language/eus']
 visible_values : ['https://www.ethnologue.com/language/eus']
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['france']
 visible_values : ['france']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['spain']
 visible_values : ['spain']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=eus', 'http://www.ethnologue.com/show_language.asp?code=eus', 'http://www.ethnologue.com/show_language.asp?code=eus']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=eus']` - type: `<class 'list'>`
----> baseline_answer: `https://www.ethnologue.com/language/eus` - type: `<class 'str'>`
 --> scores:  0.8
----> per-field score: 0.8
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['spain', 'spain', 'spain']` - type: `<class 'list'>`
----> baseline_answer: `france` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['France-Spain border, 3 Basque provinces: Alava (Araba), Bizkaia (Biskay), and Gipuzkoa of Autonomous Basque Community (CAV); north central Spain, Autonomous Region of Navarra (Nafarroa), north area. Also in Australia, Costa Rica, France, Mexico, Philippines, United States.', 'France-Spain border, 3 Basque provinces: Alava (Araba), Bizkaia (Biskay), and Gipuzkoa of Autonomous Basque Community (CAV); north central Spain, Autonomous Region of Navarra (Nafarroa), north area. Also in Australia, Costa Rica, France, Mexico, Philippines, United States.', 'France-Spain border, 3 Basque provinces: Alava (Araba), Bizkaia (Biskay), and Gipuzkoa of Autonomous Basque Community (CAV); north central Spain, Autonomous Region of Navarra (Nafarroa), north area. Also in Australia, Costa Rica, France, Mexico, Philippines, United States.']`
----> answers: `['France-Spain border, 3 Basque provinces: Alava (Araba), Bizkaia (Biskay), and Gipuzkoa of Autonomous Basque Community (CAV); north central Spain, Autonomous Region of Navarra (Nafarroa), north area. Also in Australia, Costa Rica, France, Mexico, Philippines, United States.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['australia|costarica|france|mexico|philippines|spain|unitedstates', 'australia|costarica|france|mexico|other|philippines|unitedstates', 'aruba|australia|costarica|france|mexico|other|philippines|spain|unitedstates']` - type: `<class 'list'>`
----> baseline_answer: `spain` - type: `<class 'str'>`
Model answers: spain 
Gold answers: ['australia|costarica|france|mexico|philippines|spain|unitedstates', 'australia|costarica|france|mexico|other|philippines|unitedstates', 'aruba|australia|costarica|france|mexico|other|philippines|spain|unitedstates']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.2
 --> Per-instance per-field breakdown: {'text': [0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.4761904761904762, 0.5454545454545455, 0.5454545454545455, 0.4761904761904762, 0.8, 0.4761904761904762, 0.8, 0.5714285714285715, 0.0, 0.5454545454545455, 0.8], 'select': [1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29968 <-> row_number: 47
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 47 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=chv', 'http://www.ethnologue.com/show_language.asp?code=chv', 'http://www.ethnologue.com/show_language.asp?code=chv'], 'primary_country': ['russianfederation', 'russianfederation', 'russianfederation'], 'region': ['Chuvashia, east of Moscow, near Volga River. About half live in towns (1995). Also in Estonia, Kazakhstan, Kyrgyzstan, Uzbekistan.', 'Chuvashia, east of Moscow, near Volga River. About half live in towns (1995). Also in Estonia, Kazakhstan, Kyrgyzstan, Uzbekistan.', 'Chuvashia, east of Moscow, near Volga River. About half live in towns (1995). Also in Estonia, Kazakhstan, Kyrgyzstan, Uzbekistan'], 'countries': ['kazakhstan|uzbekistan|other|estonia', 'kazakhstan|uzbekistan|other|estonia', 'kazakhstan|uzbekistan|russia|russianfederation|estonia']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
Executing one action: self.actions.modify_text('url', 'https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language/chv')
Add text `https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language/chv` to this text input: <input type="text" size="80" name="url">
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
Executing one action: self.actions.modify_select('primary_country', 'russia')
We are going to select this select `primary_country` with value `russia`
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
Executing one action: self.actions.modify_text('region', 'nan')
Since the input value is `nan`, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
Executing one action: self.actions.modify_checkbox('countries', 'russia')
Looking for checkboxes with `name`: `countries` the values: `['russia']`
About to check this checkbox: <input type="checkbox" name="countries" value="russia">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : ['https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language/chv']
 visible_values : ['https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language/chv']
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['russia']
 visible_values : ['russia']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['russia']
 visible_values : ['russia']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=chv', 'http://www.ethnologue.com/show_language.asp?code=chv', 'http://www.ethnologue.com/show_language.asp?code=chv']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=chv']` - type: `<class 'list'>`
----> baseline_answer: `https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language/chv` - type: `<class 'str'>`
 --> scores:  0.5714285714285715
----> per-field score: 0.5714285714285715
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['russianfederation', 'russianfederation', 'russianfederation']` - type: `<class 'list'>`
----> baseline_answer: `russia` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Chuvashia, east of Moscow, near Volga River. About half live in towns (1995). Also in Estonia, Kazakhstan, Kyrgyzstan, Uzbekistan.', 'Chuvashia, east of Moscow, near Volga River. About half live in towns (1995). Also in Estonia, Kazakhstan, Kyrgyzstan, Uzbekistan.', 'Chuvashia, east of Moscow, near Volga River. About half live in towns (1995). Also in Estonia, Kazakhstan, Kyrgyzstan, Uzbekistan']`
----> answers: `['Chuvashia, east of Moscow, near Volga River. About half live in towns (1995). Also in Estonia, Kazakhstan, Kyrgyzstan, Uzbekistan.', 'Chuvashia, east of Moscow, near Volga River. About half live in towns (1995). Also in Estonia, Kazakhstan, Kyrgyzstan, Uzbekistan']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['estonia|kazakhstan|other|uzbekistan', 'estonia|kazakhstan|other|uzbekistan', 'estonia|kazakhstan|russia|russianfederation|uzbekistan']` - type: `<class 'list'>`
----> baseline_answer: `russia` - type: `<class 'str'>`
Model answers: russia 
Gold answers: ['estonia|kazakhstan|other|uzbekistan', 'estonia|kazakhstan|other|uzbekistan', 'estonia|kazakhstan|russia|russianfederation|uzbekistan']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.14285714285714288
 --> Per-instance per-field breakdown: {'text': [0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.4761904761904762, 0.5454545454545455, 0.5454545454545455, 0.4761904761904762, 0.8, 0.4761904761904762, 0.8, 0.5714285714285715, 0.0, 0.5454545454545455, 0.8, 0.5714285714285715], 'select': [1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29958 <-> row_number: 37
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 37 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=rup', 'http://www.ethnologue.com/show_language.asp?code=rup', 'http://www.ethnologue.com/show_language.asp?code=rup'], 'primary_country': ['other', 'greece', 'greece'], 'region': ['North, Northwest Salonika, Pindus Mountains, Trikala area. Also in Albania, Bosnia and Herzegovina, Bulgaria, Macedonia, Romania, Serbia.', 'North, Northwest Salonika, Pindus Mountains, Trikala area. Also in Albania, Bosnia and Herzegovina, Bulgaria, Macedonia, Romania, Serbia.', 'North, Northwest Salonika, Pindus Mountains, Trikala area. Also in Albania, Bosnia and Herzegovina, Bulgaria, Macedonia, Romania, Serbia.'], 'countries': ['albania|bulgaria|serbia|macedonia|macedoniatheformeryugoslavrepublicof|bosniaandherzegovina|romania|bosnia|other', 'albania|bulgaria|serbia|macedonia|greece|bosniaandherzegovina|romania|bosnia', 'albania|bulgaria|serbia|macedoniatheformeryugoslavrepublicof|bosniaandherzegovina|romania|bosnia|other']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
Executing one action: self.actions.modify_text('url', 'https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp')
Add text `https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp` to this text input: <input type="text" size="80" name="url">
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
Executing one action: self.actions.modify_select('primary_country', 'greece')
We are going to select this select `primary_country` with value `greece`
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
Executing one action: self.actions.modify_select('primary_country', 'greece')
We are going to select this select `primary_country` with value `greece`
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
Executing one action: self.actions.modify_checkbox('countries', ['albania', 'bulgaria', 'greece', 'macedonia', 'romania', 'serbia'])
Looking for checkboxes with `name`: `countries` the values: `["['albania', 'bulgaria', 'greece', 'macedonia', 'romania', 'serbia']"]`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : ['https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp']
 visible_values : ['https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp']
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['greece']
 visible_values : ['greece']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=rup', 'http://www.ethnologue.com/show_language.asp?code=rup', 'http://www.ethnologue.com/show_language.asp?code=rup']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=rup']` - type: `<class 'list'>`
----> baseline_answer: `https://web.archive.org/web/20130123042812/https://www.ethnologue.com/language_index.asp` - type: `<class 'str'>`
 --> scores:  0.5454545454545455
----> per-field score: 0.5454545454545455
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['other', 'greece', 'greece']` - type: `<class 'list'>`
----> baseline_answer: `greece` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['North, Northwest Salonika, Pindus Mountains, Trikala area. Also in Albania, Bosnia and Herzegovina, Bulgaria, Macedonia, Romania, Serbia.', 'North, Northwest Salonika, Pindus Mountains, Trikala area. Also in Albania, Bosnia and Herzegovina, Bulgaria, Macedonia, Romania, Serbia.', 'North, Northwest Salonika, Pindus Mountains, Trikala area. Also in Albania, Bosnia and Herzegovina, Bulgaria, Macedonia, Romania, Serbia.']`
----> answers: `['North, Northwest Salonika, Pindus Mountains, Trikala area. Also in Albania, Bosnia and Herzegovina, Bulgaria, Macedonia, Romania, Serbia.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['albania|bosnia|bosniaandherzegovina|bulgaria|macedonia|macedoniatheformeryugoslavrepublicof|other|romania|serbia', 'albania|bosnia|bosniaandherzegovina|bulgaria|greece|macedonia|romania|serbia', 'albania|bosnia|bosniaandherzegovina|bulgaria|macedoniatheformeryugoslavrepublicof|other|romania|serbia']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['albania|bosnia|bosniaandherzegovina|bulgaria|macedonia|macedoniatheformeryugoslavrepublicof|other|romania|serbia', 'albania|bosnia|bosniaandherzegovina|bulgaria|greece|macedonia|romania|serbia', 'albania|bosnia|bosniaandherzegovina|bulgaria|macedoniatheformeryugoslavrepublicof|other|romania|serbia']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.38636363636363635
 --> Per-instance per-field breakdown: {'text': [0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.4761904761904762, 0.5454545454545455, 0.5454545454545455, 0.4761904761904762, 0.8, 0.4761904761904762, 0.8, 0.5714285714285715, 0.0, 0.5454545454545455, 0.8, 0.5714285714285715, 0.5454545454545455], 'select': [1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 29951 <-> row_number: 30
 --> inputs: ['url', 'primary_country', 'region', 'countries']
 --> Looking up gold labels from row index 30 of `input.csv` (unique inputs). 
 --> input labels: {'url': ['http://www.ethnologue.com/show_language.asp?code=tel', 'http://www.ethnologue.com/show_language.asp?code=tel', 'http://www.ethnologue.com/show_language.asp?code=tel'], 'primary_country': ['india', 'india', 'india'], 'region': ['Andhra Pradesh and neighboring states. Also in Bahrain, Canada, Fiji, Malaysia (Peninsular), Mauritius, Singapore, South Africa, United Arab Emirates, United States.', 'Andhra Pradesh and neighboring states. Also in Bahrain, Canada, Fiji, Malaysia (Peninsular), Mauritius, Singapore, South Africa, United Arab Emirates, United States.', 'Andhra Pradesh and neighboring states. Also in Bahrain, Canada, Fiji, Malaysia (Peninsular), Mauritius, Singapore, South Africa, United Arab Emirates, United States.'], 'countries': ['singapore|canada|uae|malaysia|southafrica|unitedstates|mauritius|bahrain|other|india', 'singapore|canada|uae|malaysia|southafrica|unitedstates|mauritius|bahrain', 'singapore|canada|uae|malaysia|southafrica|unitedstates|mauritius|bahrain|other']}
 - - - - - -  starting a new element: `Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: url
Executing one action: self.actions.modify_text('url', 'https://www.ethnologue.com/language/tel')
Add text `https://www.ethnologue.com/language/tel` to this text input: <input type="text" size="80" name="url">
 - - - - - -  starting a new element: `Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: primary_country
Executing one action: self.actions.modify_select('primary_country', 'india')
We are going to select this select `primary_country` with value `india`
 - - - - - -  starting a new element: `Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: region
Executing one action: self.actions.modify_select('primary_country', 'india')
We are going to select this select `primary_country` with value `india`
 - - - - - -  starting a new element: `Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)` - - - - - -  
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
about to try executing one action, on the following input: countries
Executing one action: self.actions.modify_checkbox('countries', 'india')
Looking for checkboxes with `name`: `countries` the values: `['india']`
About to check this checkbox: <input type="checkbox" name="countries" value="india">
input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`)
 visible : ['https://www.ethnologue.com/language/tel']
 visible_values : ['https://www.ethnologue.com/language/tel']
input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`)
 visible : ['india']
 visible_values : ['india']
input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`)
 visible : [' ']
 visible_values : [' ']
input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`)
 visible : ['india']
 visible_values : ['india']
 ------- evaluating input: Input(name=`url`, type=`text`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['http://www.ethnologue.com/show_language.asp?code=tel', 'http://www.ethnologue.com/show_language.asp?code=tel', 'http://www.ethnologue.com/show_language.asp?code=tel']`
----> answers: `['http://www.ethnologue.com/show_language.asp?code=tel']` - type: `<class 'list'>`
----> baseline_answer: `https://www.ethnologue.com/language/tel` - type: `<class 'str'>`
 --> scores:  0.8
----> per-field score: 0.8
 ------- evaluating input: Input(name=`primary_country`, type=`select`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['india', 'india', 'india']` - type: `<class 'list'>`
----> baseline_answer: `india` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`region`, type=`textarea`, task=`Associate countries and languages with Ethnologue`) ------- 
answers after mapping: `['Andhra Pradesh and neighboring states. Also in Bahrain, Canada, Fiji, Malaysia (Peninsular), Mauritius, Singapore, South Africa, United Arab Emirates, United States.', 'Andhra Pradesh and neighboring states. Also in Bahrain, Canada, Fiji, Malaysia (Peninsular), Mauritius, Singapore, South Africa, United Arab Emirates, United States.', 'Andhra Pradesh and neighboring states. Also in Bahrain, Canada, Fiji, Malaysia (Peninsular), Mauritius, Singapore, South Africa, United Arab Emirates, United States.']`
----> answers: `['Andhra Pradesh and neighboring states. Also in Bahrain, Canada, Fiji, Malaysia (Peninsular), Mauritius, Singapore, South Africa, United Arab Emirates, United States.']` - type: `<class 'list'>`
----> baseline_answer: ` ` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`countries`, type=`checkbox`, task=`Associate countries and languages with Ethnologue`) ------- 
----> answers: `['bahrain|canada|india|malaysia|mauritius|other|singapore|southafrica|uae|unitedstates', 'bahrain|canada|malaysia|mauritius|singapore|southafrica|uae|unitedstates', 'bahrain|canada|malaysia|mauritius|other|singapore|southafrica|uae|unitedstates']` - type: `<class 'list'>`
----> baseline_answer: `india` - type: `<class 'str'>`
Model answers: india 
Gold answers: ['bahrain|canada|india|malaysia|mauritius|other|singapore|southafrica|uae|unitedstates', 'bahrain|canada|malaysia|mauritius|singapore|southafrica|uae|unitedstates', 'bahrain|canada|malaysia|mauritius|other|singapore|southafrica|uae|unitedstates']
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.45
 --> Per-instance per-field breakdown: {'text': [0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.5454545454545455, 0.4761904761904762, 0.5454545454545455, 0.5454545454545455, 0.4761904761904762, 0.8, 0.4761904761904762, 0.8, 0.5714285714285715, 0.0, 0.5454545454545455, 0.8, 0.5714285714285715, 0.5454545454545455, 0.8], 'select': [1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0], 'textarea': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'checkbox': [0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
 = = = = = = = = = = = = starting new task: `Radiology Report Sentence Classification` = = = = = = = = = = = = 
First instance id: 32981
instance_id: 33133 <-> row_number: 152
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 152 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
Executing one action: self.actions.modify_radio('classification1', 'abnormal')
We are going to select this radio button: <input name="classification1" type="radio" value="abnormal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['abnormal']
 visible_values : ['abnormal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `abnormal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0]}
instance_id: 33215 <-> row_number: 234
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 234 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0]}
instance_id: 33279 <-> row_number: 298
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 298 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33096 <-> row_number: 115
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 115 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['abnormal', 'normal', 'abnormal', 'normal', 'abnormal'], 'confidence1': ['VeryConfident', 'VeryConfident', 'VeryConfident', 'NotConfident', 'VeryConfident'], 'classification2': ['normal', 'normal', 'normal', 'normal', 'abnormal'], 'classification3': ['abnormal', 'abnormal', 'abnormal', 'abnormal', 'abnormal'], 'confidence2': ['SomewhatConfident', 'VeryConfident', 'SomewhatConfident', 'SomewhatConfident', 'SomewhatConfident'], 'confidence3': ['VeryConfident', 'SomewhatConfident', 'SomewhatConfident', 'SomewhatConfident', 'VeryConfident']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
Executing one action: self.actions.modify_radio('classification1', 'abnormal')
We are going to select this radio button: <input name="classification1" type="radio" value="abnormal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['abnormal']
 visible_values : ['abnormal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['abnormal', 'normal', 'abnormal', 'normal', 'abnormal']` - type: `<class 'list'>`
----> baseline_answer: `abnormal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['VeryConfident', 'VeryConfident', 'VeryConfident', 'NotConfident', 'VeryConfident']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 1.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0]}
instance_id: 33327 <-> row_number: 346
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 346 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0]}
instance_id: 33165 <-> row_number: 184
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 184 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33174 <-> row_number: 193
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 193 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
Executing one action: self.actions.modify_radio('classification1', 'abnormal')
We are going to select this radio button: <input name="classification1" type="radio" value="abnormal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['abnormal']
 visible_values : ['abnormal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `abnormal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33159 <-> row_number: 178
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 178 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
Executing one action: self.actions.modify_radio('classification1', 'abnormal')
We are going to select this radio button: <input name="classification1" type="radio" value="abnormal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['abnormal']
 visible_values : ['abnormal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `abnormal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33088 <-> row_number: 107
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 107 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['abnormal', 'abnormal', 'abnormal', 'abnormal'], 'confidence1': ['VeryConfident', 'VeryConfident', 'VeryConfident', 'VeryConfident'], 'classification2': ['abnormal', 'abnormal', 'abnormal', 'abnormal'], 'classification3': ['abnormal', 'abnormal', 'abnormal', 'abnormal'], 'confidence2': ['VeryConfident', 'SomewhatConfident', 'VeryConfident', 'VeryConfident'], 'confidence3': ['VeryConfident', 'SomewhatConfident', 'VeryConfident', 'VeryConfident']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
Executing one action: self.actions.modify_radio('classification1', 'abnormal')
We are going to select this radio button: <input name="classification1" type="radio" value="abnormal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['abnormal']
 visible_values : ['abnormal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['abnormal', 'abnormal', 'abnormal', 'abnormal']` - type: `<class 'list'>`
----> baseline_answer: `abnormal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['VeryConfident', 'VeryConfident', 'VeryConfident', 'VeryConfident']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 1.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0]}
instance_id: 33179 <-> row_number: 198
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 198 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
Executing one action: self.actions.modify_radio('classification1', 'abnormal')
We are going to select this radio button: <input name="classification1" type="radio" value="abnormal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
Executing one action: self.actions.modify_radio('confidence1', 'SomewhatConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="SomewhatConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['abnormal']
 visible_values : ['abnormal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['SomewhatConfident']
 visible_values : ['SomewhatConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `abnormal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `SomewhatConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0]}
instance_id: 32998 <-> row_number: 17
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 17 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['abnormal', 'abnormal', 'abnormal', 'abnormal'], 'confidence1': ['VeryConfident', 'VeryConfident', 'VeryConfident', 'VeryConfident'], 'classification2': ['abnormal', 'abnormal', 'abnormal', 'abnormal'], 'classification3': ['normal', 'normal', 'normal', 'normal'], 'confidence2': ['VeryConfident', 'SomewhatConfident', 'VeryConfident', 'VeryConfident'], 'confidence3': ['VeryConfident', 'VeryConfident', 'VeryConfident', 'VeryConfident']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
Executing one action: self.actions.modify_radio('classification1', 'abnormal')
We are going to select this radio button: <input name="classification1" type="radio" value="abnormal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['abnormal']
 visible_values : ['abnormal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['abnormal', 'abnormal', 'abnormal', 'abnormal']` - type: `<class 'list'>`
----> baseline_answer: `abnormal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['VeryConfident', 'VeryConfident', 'VeryConfident', 'VeryConfident']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 1.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0]}
instance_id: 33043 <-> row_number: 62
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 62 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['abnormal', 'abnormal', 'abnormal', 'normal'], 'confidence1': ['SomewhatConfident', 'SomewhatConfident', 'NotConfident', 'SomewhatConfident'], 'classification2': ['normal', 'normal', 'normal', 'normal'], 'classification3': ['abnormal', 'abnormal', 'abnormal', 'normal'], 'confidence2': ['VeryConfident', 'VeryConfident', 'VeryConfident', 'VeryConfident'], 'confidence3': ['SomewhatConfident', 'SomewhatConfident', 'NotConfident', 'VeryConfident']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
Executing one action: self.actions.modify_radio('classification1', 'abnormal')
We are going to select this radio button: <input name="classification1" type="radio" value="abnormal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
Executing one action: self.actions.modify_radio('confidence1', 'SomewhatConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="SomewhatConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['abnormal']
 visible_values : ['abnormal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['SomewhatConfident']
 visible_values : ['SomewhatConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['abnormal', 'abnormal', 'abnormal', 'normal']` - type: `<class 'list'>`
----> baseline_answer: `abnormal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['SomewhatConfident', 'SomewhatConfident', 'NotConfident', 'SomewhatConfident']` - type: `<class 'list'>`
----> baseline_answer: `SomewhatConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 1.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0]}
instance_id: 33248 <-> row_number: 267
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 267 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
Executing one action: self.actions.modify_radio('classification1', 'abnormal')
We are going to select this radio button: <input name="classification1" type="radio" value="abnormal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['abnormal']
 visible_values : ['abnormal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `abnormal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0]}
instance_id: 33317 <-> row_number: 336
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 336 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33142 <-> row_number: 161
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 161 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
Executing one action: self.actions.modify_radio('confidence1', 'SomewhatConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="SomewhatConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['SomewhatConfident']
 visible_values : ['SomewhatConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `SomewhatConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 32990 <-> row_number: 9
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 9 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['normal', 'normal', 'normal', 'normal'], 'confidence1': ['SomewhatConfident', 'VeryConfident', 'VeryConfident', 'VeryConfident'], 'classification2': ['abnormal', 'abnormal', 'abnormal', 'abnormal'], 'classification3': ['abnormal', 'abnormal', 'normal', 'abnormal'], 'confidence2': ['VeryConfident', 'VeryConfident', 'NotConfident', 'VeryConfident'], 'confidence3': ['VeryConfident', 'VeryConfident', 'VeryConfident', 'VeryConfident']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['normal', 'normal', 'normal', 'normal']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['SomewhatConfident', 'VeryConfident', 'VeryConfident', 'VeryConfident']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 1.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0]}
instance_id: 33103 <-> row_number: 122
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 122 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
Executing one action: self.actions.modify_radio('classification1', 'abnormal')
We are going to select this radio button: <input name="classification1" type="radio" value="abnormal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['abnormal']
 visible_values : ['abnormal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `abnormal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0]}
instance_id: 33152 <-> row_number: 171
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 171 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33332 <-> row_number: 351
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 351 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['', '', '', ''], 'confidence1': ['', '', '', ''], 'classification2': ['', '', '', ''], 'classification3': ['', '', '', ''], 'confidence2': ['', '', '', ''], 'confidence3': ['', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
Executing one action: self.actions.modify_radio('classification1', 'abnormal')
We are going to select this radio button: <input name="classification1" type="radio" value="abnormal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
Executing one action: self.actions.modify_radio('confidence1', 'SomewhatConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="SomewhatConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['abnormal']
 visible_values : ['abnormal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['SomewhatConfident']
 visible_values : ['SomewhatConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `abnormal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['', '', '', '']` - type: `<class 'list'>`
----> baseline_answer: `SomewhatConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33012 <-> row_number: 31
 --> inputs: ['classification1', 'confidence1', 'classification2', 'classification3', 'confidence2', 'confidence3']
 --> Looking up gold labels from row index 31 of `input.csv` (unique inputs). 
 --> input labels: {'classification1': ['normal', 'normal', 'normal', 'normal', 'normal'], 'confidence1': ['VeryConfident', 'VeryConfident', 'VeryConfident', 'VeryConfident', 'VeryConfident'], 'classification2': ['abnormal', 'abnormal', 'normal', 'abnormal', 'abnormal'], 'classification3': ['normal', 'abnormal', 'normal', 'normal', 'abnormal'], 'confidence2': ['VeryConfident', 'VeryConfident', 'SomewhatConfident', 'SomewhatConfident', 'VeryConfident'], 'confidence3': ['SomewhatConfident', 'SomewhatConfident', 'VeryConfident', 'NotConfident', 'VeryConfident']}
 - - - - - -  starting a new element: `Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: classification1
Executing one action: self.actions.modify_radio('classification1', 'normal')
We are going to select this radio button: <input name="classification1" type="radio" value="normal">
 - - - - - -  starting a new element: `Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
about to try executing one action, on the following input: confidence1
Executing one action: self.actions.modify_radio('confidence1', 'VeryConfident')
We are going to select this radio button: <input name="confidence1" type="radio" value="VeryConfident">
 - - - - - -  starting a new element: `Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `classification3` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence2` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)` - - - - - -  
Skipping element `confidence3` since it is not visible.
input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['normal']
 visible_values : ['normal']
input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : ['VeryConfident']
 visible_values : ['VeryConfident']
input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`classification1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['normal', 'normal', 'normal', 'normal', 'normal']` - type: `<class 'list'>`
----> baseline_answer: `normal` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`confidence1`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
----> answers: `['VeryConfident', 'VeryConfident', 'VeryConfident', 'VeryConfident', 'VeryConfident']` - type: `<class 'list'>`
----> baseline_answer: `VeryConfident` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`classification2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification2` since it is not visible.
 ------- evaluating input: Input(name=`classification3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `classification3` since it is not visible.
 ------- evaluating input: Input(name=`confidence2`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence2` since it is not visible.
 ------- evaluating input: Input(name=`confidence3`, type=`radio`, task=`Radiology Report Sentence Classification`) ------- 
Skipping element `confidence3` since it is not visible.
 --> Per-instance overall score: 1.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0]}
 = = = = = = = = = = = = starting new task: `Reddit In-group Analysis Comment annotation 3` = = = = = = = = = = = = 
First instance id: 33913
instance_id: 33974 <-> row_number: 61
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 61 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Highly likely'], 'option1': ['Highly likely', 'Highly likely', 'Highly likely'], 'option2': ['Highly likely', 'Highly likely', 'Highly likely'], 'option3': ['Highly likely', 'Highly likely', 'Highly likely'], 'option4': ['Highly likely', 'Highly likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
Executing one action: self.actions.modify_radio('option0', 'Likely')
We are going to select this radio button: <input type="radio" name="option0" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
Executing one action: self.actions.modify_radio('option1', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option1" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
Executing one action: self.actions.modify_radio('option2', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option2" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
Executing one action: self.actions.modify_radio('option3', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option3" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
Executing one action: self.actions.modify_radio('option4', 'Likely')
We are going to select this radio button: <input type="radio" name="option4" value="Likely">
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.6
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 1.0, 1.0, 0.0]}
instance_id: 34049 <-> row_number: 136
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 136 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Likely', 'Highly likely'], 'option1': ['Highly likely', 'Likely', 'Likely'], 'option2': ['Highly likely', 'Likely', 'Likely'], 'option3': ['Highly likely', 'Likely', 'Likely'], 'option4': ['Highly likely', 'Likely', 'Likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
Executing one action: self.actions.modify_radio('option0', 'Hard to tell')
We are going to select this radio button: <input type="radio" name="option0" value="Hard to tell">
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
Executing one action: self.actions.modify_radio('option1', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option1" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
Executing one action: self.actions.modify_radio('option2', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option2" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
Executing one action: self.actions.modify_radio('option3', 'Hard to tell')
We are going to select this radio button: <input type="radio" name="option3" value="Hard to tell">
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
Executing one action: self.actions.modify_radio('option4', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option4" value="Highly likely">
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Hard to tell']
 visible_values : ['Hard to tell']
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Hard to tell']
 visible_values : ['Hard to tell']
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Hard to tell` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Hard to tell` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33930 <-> row_number: 17
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 17 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Highly likely'], 'option1': ['Highly likely', 'Highly likely', 'Highly likely'], 'option2': ['Highly likely', 'Unlikely', 'Hard to tell'], 'option3': ['Highly likely', 'Highly likely', 'Highly likely'], 'option4': ['Highly likely', 'Highly likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
Executing one action: self.actions.modify_radio('option0', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option0" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
Executing one action: self.actions.modify_radio('option1', 'Likely')
We are going to select this radio button: <input type="radio" name="option1" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
Executing one action: self.actions.modify_radio('option2', 'Likely')
We are going to select this radio button: <input type="radio" name="option2" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
Executing one action: self.actions.modify_radio('option3', 'Likely')
We are going to select this radio button: <input type="radio" name="option3" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
Executing one action: self.actions.modify_radio('option4', 'Likely')
We are going to select this radio button: <input type="radio" name="option4" value="Likely">
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Unlikely', 'Hard to tell']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.2
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 34068 <-> row_number: 155
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 155 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Highly likely'], 'option1': ['Highly likely', 'Highly likely', 'Highly likely'], 'option2': ['Highly likely', 'Highly likely', 'Highly likely'], 'option3': ['Highly likely', 'Highly likely', 'Highly likely'], 'option4': ['Highly likely', 'Highly likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
Executing one action: self.actions.modify_radio('option0', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option0" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
Executing one action: self.actions.modify_radio('option1', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option1" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
Executing one action: self.actions.modify_radio('option2', 'Likely')
We are going to select this radio button: <input type="radio" name="option2" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
Executing one action: self.actions.modify_radio('option3', 'Hard to tell')
We are going to select this radio button: <input type="radio" name="option3" value="Hard to tell">
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
Executing one action: self.actions.modify_radio('option4', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option4" value="Highly likely">
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Hard to tell']
 visible_values : ['Hard to tell']
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Hard to tell` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.6
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0]}
instance_id: 33972 <-> row_number: 59
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 59 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Highly likely'], 'option1': ['Likely', 'Highly likely', 'Likely'], 'option2': ['Highly likely', 'Highly likely', 'Likely'], 'option3': ['Highly likely', 'Highly likely', 'Likely'], 'option4': ['Highly likely', 'Highly likely', 'Likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
Executing one action: self.actions.modify_radio('option0', 'Unlikely')
We are going to select this radio button: <input type="radio" name="option0" value="Unlikely">
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
Executing one action: self.actions.modify_radio('option1', 'Hard to tell')
We are going to select this radio button: <input type="radio" name="option1" value="Hard to tell">
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
Executing one action: self.actions.modify_radio('option2', 'Likely')
We are going to select this radio button: <input type="radio" name="option2" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
Executing one action: self.actions.modify_radio('option3', 'Likely')
We are going to select this radio button: <input type="radio" name="option3" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
Executing one action: self.actions.modify_radio('option4', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option4" value="Highly likely">
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Unlikely']
 visible_values : ['Unlikely']
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Hard to tell']
 visible_values : ['Hard to tell']
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Unlikely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Hard to tell` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.2
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0]}
instance_id: 34029 <-> row_number: 116
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 116 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['', '', ''], 'option1': ['Likely', 'Unlikely', 'Unlikely'], 'option2': ['Likely', '', 'Unlikely'], 'option3': ['Likely', 'Unlikely', 'Unlikely'], 'option4': ['Unlikely', 'Unlikely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
Executing one action: self.actions.modify_radio('option0', 'Likely')
We are going to select this radio button: <input type="radio" name="option0" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
Executing one action: self.actions.modify_radio('option1', 'Likely')
We are going to select this radio button: <input type="radio" name="option1" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
Executing one action: self.actions.modify_radio('option2', 'Hard to tell')
We are going to select this radio button: <input type="radio" name="option2" value="Hard to tell">
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
Executing one action: self.actions.modify_radio('option3', 'Hard to tell')
We are going to select this radio button: <input type="radio" name="option3" value="Hard to tell">
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
Executing one action: self.actions.modify_radio('option4', 'Hard to tell')
We are going to select this radio button: <input type="radio" name="option4" value="Hard to tell">
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Hard to tell']
 visible_values : ['Hard to tell']
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Hard to tell']
 visible_values : ['Hard to tell']
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Hard to tell']
 visible_values : ['Hard to tell']
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['', '', '']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Likely', 'Unlikely', 'Unlikely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Likely', '', 'Unlikely']` - type: `<class 'list'>`
----> baseline_answer: `Hard to tell` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Likely', 'Unlikely', 'Unlikely']` - type: `<class 'list'>`
----> baseline_answer: `Hard to tell` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Unlikely', 'Unlikely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Hard to tell` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33945 <-> row_number: 32
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 32 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Likely', 'Likely'], 'option1': ['Highly likely', 'Highly likely', 'Highly likely'], 'option2': ['Highly likely', 'Likely', 'Likely'], 'option3': ['Highly likely', 'Highly likely', 'Likely'], 'option4': ['Likely', 'Likely', 'Hard to tell']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
Executing one action: self.actions.modify_radio('option0', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option0" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
Executing one action: self.actions.modify_radio('option1', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option1" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
Executing one action: self.actions.modify_radio('option2', 'Likely')
We are going to select this radio button: <input type="radio" name="option2" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
Executing one action: self.actions.modify_radio('option3', 'Likely')
We are going to select this radio button: <input type="radio" name="option3" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
Executing one action: self.actions.modify_radio('option4', 'Hard to tell')
We are going to select this radio button: <input type="radio" name="option4" value="Hard to tell">
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Hard to tell']
 visible_values : ['Hard to tell']
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Likely', 'Likely', 'Hard to tell']` - type: `<class 'list'>`
----> baseline_answer: `Hard to tell` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.4
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0]}
instance_id: 34025 <-> row_number: 112
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 112 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Likely'], 'option1': ['Highly likely', 'Highly likely', 'Likely'], 'option2': ['Highly likely', 'Highly likely', 'Highly likely'], 'option3': ['Highly likely', 'Highly likely', 'Highly likely'], 'option4': ['Highly likely', 'Likely', 'Likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
Executing one action: self.actions.modify_radio('option0', 'Hard to tell')
We are going to select this radio button: <input type="radio" name="option0" value="Hard to tell">
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
Executing one action: self.actions.modify_radio('option1', 'Likely')
We are going to select this radio button: <input type="radio" name="option1" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
Executing one action: self.actions.modify_radio('option2', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option2" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
Executing one action: self.actions.modify_radio('option3', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option3" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
Executing one action: self.actions.modify_radio('option4', 'Likely')
We are going to select this radio button: <input type="radio" name="option4" value="Likely">
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Hard to tell']
 visible_values : ['Hard to tell']
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Hard to tell` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.6
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0]}
instance_id: 33982 <-> row_number: 69
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 69 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Highly likely'], 'option1': ['Highly likely', 'Highly likely', 'Likely'], 'option2': ['Highly likely', 'Highly likely', 'Likely'], 'option3': ['Hard to tell', 'Likely', 'Likely'], 'option4': ['Highly likely', 'Highly likely', 'Likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
Executing one action: self.actions.modify_radio('option0', 'Hard to tell')
We are going to select this radio button: <input type="radio" name="option0" value="Hard to tell">
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
Executing one action: self.actions.modify_radio('option1', 'Likely')
We are going to select this radio button: <input type="radio" name="option1" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
Executing one action: self.actions.modify_radio('option2', 'Likely')
We are going to select this radio button: <input type="radio" name="option2" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
Executing one action: self.actions.modify_radio('option3', 'Likely')
We are going to select this radio button: <input type="radio" name="option3" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
Executing one action: self.actions.modify_radio('option4', 'Likely')
We are going to select this radio button: <input type="radio" name="option4" value="Likely">
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Hard to tell']
 visible_values : ['Hard to tell']
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Hard to tell` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Hard to tell', 'Likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.2
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0]}
instance_id: 33965 <-> row_number: 52
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 52 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Likely'], 'option1': ['Highly likely', 'Highly likely', 'Highly likely'], 'option2': ['Highly likely', 'Highly likely', 'Likely'], 'option3': ['Highly likely', 'Highly likely', 'Likely'], 'option4': ['Highly likely', 'Highly likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
Executing one action: self.actions.modify_radio('option0', 'Unlikely')
We are going to select this radio button: <input type="radio" name="option0" value="Unlikely">
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
Executing one action: self.actions.modify_radio('option1', 'Likely')
We are going to select this radio button: <input type="radio" name="option1" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
Executing one action: self.actions.modify_radio('option2', 'Likely')
We are going to select this radio button: <input type="radio" name="option2" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
Executing one action: self.actions.modify_radio('option3', 'Likely')
We are going to select this radio button: <input type="radio" name="option3" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
Executing one action: self.actions.modify_radio('option4', 'Unlikely')
We are going to select this radio button: <input type="radio" name="option4" value="Unlikely">
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Unlikely']
 visible_values : ['Unlikely']
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Unlikely']
 visible_values : ['Unlikely']
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Unlikely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Unlikely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 34028 <-> row_number: 115
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 115 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['', '', ''], 'option1': ['Highly likely', 'Likely', 'Highly likely'], 'option2': ['Highly likely', 'Likely', 'Likely'], 'option3': ['Highly likely', 'Likely', 'Hard to tell'], 'option4': ['Highly likely', 'Likely', 'Likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
Executing one action: self.actions.modify_radio('option0', 'Likely')
We are going to select this radio button: <input type="radio" name="option0" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
Executing one action: self.actions.modify_radio('option1', 'Hard to tell')
We are going to select this radio button: <input type="radio" name="option1" value="Hard to tell">
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
Executing one action: self.actions.modify_radio('option2', 'Likely')
We are going to select this radio button: <input type="radio" name="option2" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
Executing one action: self.actions.modify_radio('option3', 'Likely')
We are going to select this radio button: <input type="radio" name="option3" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
Executing one action: self.actions.modify_radio('option4', 'Hard to tell')
We are going to select this radio button: <input type="radio" name="option4" value="Hard to tell">
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Hard to tell']
 visible_values : ['Hard to tell']
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Hard to tell']
 visible_values : ['Hard to tell']
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['', '', '']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Hard to tell` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Hard to tell']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Hard to tell` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.2
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 34042 <-> row_number: 129
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 129 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Highly likely'], 'option1': ['Highly likely', 'Highly likely', 'Highly likely'], 'option2': ['Highly likely', 'Highly likely', 'Highly likely'], 'option3': ['Highly likely', 'Highly likely', 'Highly likely'], 'option4': ['Highly likely', 'Highly likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
Executing one action: self.actions.modify_radio('option0', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option0" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
Executing one action: self.actions.modify_radio('option1', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option1" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
Executing one action: self.actions.modify_radio('option2', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option2" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
Executing one action: self.actions.modify_radio('option3', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option3" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
Executing one action: self.actions.modify_radio('option4', 'Likely')
We are going to select this radio button: <input type="radio" name="option4" value="Likely">
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.8
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0]}
instance_id: 34036 <-> row_number: 123
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 123 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Likely', 'Likely'], 'option1': ['Highly likely', 'Highly likely', 'Likely'], 'option2': ['Highly likely', 'Highly likely', 'Likely'], 'option3': ['Highly likely', 'Highly likely', 'Likely'], 'option4': ['Highly likely', 'Highly likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
Executing one action: self.actions.modify_radio('option0', 'Likely')
We are going to select this radio button: <input type="radio" name="option0" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
Executing one action: self.actions.modify_radio('option1', 'Hard to tell')
We are going to select this radio button: <input type="radio" name="option1" value="Hard to tell">
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
Executing one action: self.actions.modify_radio('option2', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option2" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
Executing one action: self.actions.modify_radio('option3', 'Likely')
We are going to select this radio button: <input type="radio" name="option3" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
Executing one action: self.actions.modify_radio('option4', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option4" value="Highly likely">
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Hard to tell']
 visible_values : ['Hard to tell']
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Hard to tell` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.6
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0]}
instance_id: 33939 <-> row_number: 26
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 26 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Likely'], 'option1': ['Highly likely', 'Highly likely', 'Likely'], 'option2': ['Highly likely', 'Likely', 'Highly likely'], 'option3': ['Highly likely', 'Highly likely', 'Highly likely'], 'option4': ['Highly likely', 'Highly likely', 'Likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
Executing one action: self.actions.modify_radio('option0', 'Hard to tell')
We are going to select this radio button: <input type="radio" name="option0" value="Hard to tell">
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
Executing one action: self.actions.modify_radio('option1', 'Likely')
We are going to select this radio button: <input type="radio" name="option1" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
Executing one action: self.actions.modify_radio('option2', 'Likely')
We are going to select this radio button: <input type="radio" name="option2" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
Executing one action: self.actions.modify_radio('option3', 'Likely')
We are going to select this radio button: <input type="radio" name="option3" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
Executing one action: self.actions.modify_radio('option4', 'Likely')
We are going to select this radio button: <input type="radio" name="option4" value="Likely">
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Hard to tell']
 visible_values : ['Hard to tell']
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Hard to tell` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33962 <-> row_number: 49
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 49 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Unlikely', 'Highly likely', 'Highly likely'], 'option1': ['Highly likely', 'Highly likely', 'Likely'], 'option2': ['Highly likely', 'Highly likely', 'Hard to tell'], 'option3': ['Highly likely', 'Highly likely', 'Highly likely'], 'option4': ['Highly likely', 'Highly likely', 'Likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
Executing one action: self.actions.modify_radio('option0', 'Unlikely')
We are going to select this radio button: <input type="radio" name="option0" value="Unlikely">
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
Executing one action: self.actions.modify_radio('option1', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option1" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
Executing one action: self.actions.modify_radio('option2', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option2" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
Executing one action: self.actions.modify_radio('option3', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option3" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
Executing one action: self.actions.modify_radio('option4', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option4" value="Highly likely">
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Unlikely']
 visible_values : ['Unlikely']
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Unlikely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Unlikely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Hard to tell']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.8
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0]}
instance_id: 34040 <-> row_number: 127
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 127 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Highly likely'], 'option1': ['Highly likely', 'Highly likely', 'Highly likely'], 'option2': ['Highly likely', 'Highly likely', 'Highly likely'], 'option3': ['Highly likely', 'Highly likely', 'Highly likely'], 'option4': ['Highly likely', 'Highly likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
Executing one action: self.actions.modify_radio('option0', 'Likely')
We are going to select this radio button: <input type="radio" name="option0" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
Executing one action: self.actions.modify_radio('option1', 'Likely')
We are going to select this radio button: <input type="radio" name="option1" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
Executing one action: self.actions.modify_radio('option2', 'Hard to tell')
We are going to select this radio button: <input type="radio" name="option2" value="Hard to tell">
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
Executing one action: self.actions.modify_radio('option3', 'Hard to tell')
We are going to select this radio button: <input type="radio" name="option3" value="Hard to tell">
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
Executing one action: self.actions.modify_radio('option4', 'Unlikely')
We are going to select this radio button: <input type="radio" name="option4" value="Unlikely">
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Hard to tell']
 visible_values : ['Hard to tell']
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Hard to tell']
 visible_values : ['Hard to tell']
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Unlikely']
 visible_values : ['Unlikely']
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Hard to tell` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Hard to tell` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Unlikely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33932 <-> row_number: 19
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 19 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Likely'], 'option1': ['Highly likely', 'Highly likely', 'Highly likely'], 'option2': ['Likely', 'Likely', 'Hard to tell'], 'option3': ['Unlikely', 'Highly likely', 'Likely'], 'option4': ['Highly likely', 'Highly likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
Executing one action: self.actions.modify_radio('option0', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option0" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
Executing one action: self.actions.modify_radio('option1', 'Likely')
We are going to select this radio button: <input type="radio" name="option1" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
Executing one action: self.actions.modify_radio('option2', 'Likely')
We are going to select this radio button: <input type="radio" name="option2" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
Executing one action: self.actions.modify_radio('option3', 'Likely')
We are going to select this radio button: <input type="radio" name="option3" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
Executing one action: self.actions.modify_radio('option4', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option4" value="Highly likely">
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Likely', 'Likely', 'Hard to tell']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Unlikely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.6
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0]}
instance_id: 34056 <-> row_number: 143
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 143 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Hard to tell', 'Highly likely', 'Likely'], 'option1': ['Highly likely', 'Hard to tell', 'Highly likely'], 'option2': ['Highly likely', 'Highly likely', 'Highly likely'], 'option3': ['Highly likely', 'Highly likely', 'Likely'], 'option4': ['Highly likely', 'Highly likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
Executing one action: self.actions.modify_radio('option0', 'Likely')
We are going to select this radio button: <input type="radio" name="option0" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
Executing one action: self.actions.modify_radio('option1', 'Likely')
We are going to select this radio button: <input type="radio" name="option1" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
Executing one action: self.actions.modify_radio('option2', 'Likely')
We are going to select this radio button: <input type="radio" name="option2" value="Likely">
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
Executing one action: self.actions.modify_radio('option3', 'Hard to tell')
We are going to select this radio button: <input type="radio" name="option3" value="Hard to tell">
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
Executing one action: self.actions.modify_radio('option4', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option4" value="Highly likely">
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Hard to tell']
 visible_values : ['Hard to tell']
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Hard to tell', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Hard to tell', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Hard to tell` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.2
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0]}
instance_id: 34032 <-> row_number: 119
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 119 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Hard to tell', 'Highly likely'], 'option1': ['Highly likely', 'Likely', 'Highly likely'], 'option2': ['Highly likely', 'Highly likely', 'Highly likely'], 'option3': ['Highly likely', 'Highly likely', 'Highly likely'], 'option4': ['Highly likely', 'Highly likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
Executing one action: self.actions.modify_radio('option0', 'Hard to tell')
We are going to select this radio button: <input type="radio" name="option0" value="Hard to tell">
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
Executing one action: self.actions.modify_radio('option1', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option1" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
Executing one action: self.actions.modify_radio('option2', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option2" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
Executing one action: self.actions.modify_radio('option3', 'Hard to tell')
We are going to select this radio button: <input type="radio" name="option3" value="Hard to tell">
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
Executing one action: self.actions.modify_radio('option4', 'Hard to tell')
We are going to select this radio button: <input type="radio" name="option4" value="Hard to tell">
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Hard to tell']
 visible_values : ['Hard to tell']
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Hard to tell']
 visible_values : ['Hard to tell']
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Hard to tell']
 visible_values : ['Hard to tell']
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Hard to tell', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Hard to tell` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Hard to tell` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Hard to tell` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.4
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0]}
instance_id: 33957 <-> row_number: 44
Could not find input field with name `option0.Hard to tell`
Could not find input field with name `option0.Highly likely`
Could not find input field with name `option0.Likely`
Could not find input field with name `option0.Unlikely`
Could not find input field with name `option1.Hard to tell`
Could not find input field with name `option1.Highly likely`
Could not find input field with name `option1.Likely`
Could not find input field with name `option1.Unlikely`
Could not find input field with name `option2.Hard to tell`
Could not find input field with name `option2.Highly likely`
Could not find input field with name `option2.Likely`
Could not find input field with name `option2.Unlikely`
Could not find input field with name `option3.Hard to tell`
Could not find input field with name `option3.Highly likely`
Could not find input field with name `option3.Likely`
Could not find input field with name `option3.Unlikely`
Could not find input field with name `option4.Hard to tell`
Could not find input field with name `option4.Highly likely`
Could not find input field with name `option4.Likely`
Could not find input field with name `option4.Unlikely`
 --> inputs: ['option0', 'option1', 'option2', 'option3', 'option4']
 --> Looking up gold labels from row index 44 of `input.csv` (unique inputs). 
 --> input labels: {'option0': ['Highly likely', 'Highly likely', 'Likely'], 'option1': ['Highly likely', 'Highly likely', 'Highly likely'], 'option2': ['Highly likely', 'Highly likely', 'Likely'], 'option3': ['Highly likely', 'Highly likely', 'Likely'], 'option4': ['Highly likely', 'Highly likely', 'Highly likely']}
 - - - - - -  starting a new element: `Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option0
Executing one action: self.actions.modify_radio('option0', 'Unlikely')
We are going to select this radio button: <input type="radio" name="option0" value="Unlikely">
 - - - - - -  starting a new element: `Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option1
Executing one action: self.actions.modify_radio('option1', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option1" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option2
Executing one action: self.actions.modify_radio('option2', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option2" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option3
Executing one action: self.actions.modify_radio('option3', 'Highly likely')
We are going to select this radio button: <input type="radio" name="option3" value="Highly likely">
 - - - - - -  starting a new element: `Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)` - - - - - -  
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
about to try executing one action, on the following input: option4
Executing one action: self.actions.modify_radio('option4', 'Likely')
We are going to select this radio button: <input type="radio" name="option4" value="Likely">
input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Unlikely']
 visible_values : ['Unlikely']
input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Highly likely']
 visible_values : ['Highly likely']
input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`)
 visible : ['Likely']
 visible_values : ['Likely']
 ------- evaluating input: Input(name=`option0`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Unlikely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`option1`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option2`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option3`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Likely']` - type: `<class 'list'>`
----> baseline_answer: `Highly likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`option4`, type=`radio`, task=`Reddit In-group Analysis Comment annotation 3`) ------- 
----> answers: `['Highly likely', 'Highly likely', 'Highly likely']` - type: `<class 'list'>`
----> baseline_answer: `Likely` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.6
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0]}
 = = = = = = = = = = = = starting new task: `Scalar Adjectives Identification` = = = = = = = = = = = = 
First instance id: 9463
instance_id: 9552 <-> row_number: 89
 --> inputs: ['adj_1', 'adj_2', 'adj_3', 'pos_qual_ctrl_2', 'pos_qual_ctrl_3', 'adj_4', 'adj_5', 'neg_qual_ctrl', 'adj_6', 'adj_7', 'pos_qual_ctrl_5', 'adj_8', 'pos_qual_ctrl_1', 'adj_9', 'pos_qual_ctrl_4', 'adj_10']
 --> Looking up gold labels from row index 89 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'Yes'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'No', 'Yes'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_4': ['No', 'No', 'No'], 'adj_5': ['No', 'No', 'No'], 'neg_qual_ctrl': ['Yes', 'No', 'No'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['No', 'Yes', 'Yes'], 'adj_8': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'adj_9': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
Executing one action: self.actions.modify_radio('adj_1', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
Executing one action: self.actions.modify_radio('adj_2', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
Executing one action: self.actions.modify_radio('adj_3', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
Executing one action: self.actions.modify_radio('adj_4', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
Executing one action: self.actions.modify_radio('adj_5', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'Yes')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
Executing one action: self.actions.modify_radio('adj_6', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_6" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
Executing one action: self.actions.modify_radio('adj_7', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_7" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
Executing one action: self.actions.modify_radio('adj_8', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_8" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
Executing one action: Your request involves HTML content and specifies certain input elements, but due to the limitations of my current capabilities, I can't interact with web pages or HTML forms in real-time or execute JavaScript. However, I can help generate or interpret JavaScript, HTML, or any other code if you need assistance in understanding or creating such content. 

If you have a specific question about the HTML content or if you need help with code creation or explanation, feel free to ask!
Failed to execute an action Your request involves HTML content and specifies certain input elements, but due to the limitations of my current capabilities, I can't interact with web pages or HTML forms in real-time or execute JavaScript. However, I can help generate or interpret JavaScript, HTML, or any other code if you need assistance in understanding or creating such content. 

If you have a specific question about the HTML content or if you need help with code creation or explanation, feel free to ask!, error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
Executing one action: self.actions.modify_radio('adj_9', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_9" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
Executing one action: self.actions.modify_radio('adj_10', 'No')
We are going to select this radio button: <input type="radio" name="adj_10" value="No">
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'No', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.3125
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0]}
instance_id: 9533 <-> row_number: 70
 --> inputs: ['adj_1', 'pos_qual_ctrl_2', 'adj_2', 'adj_3', 'pos_qual_ctrl_3', 'neg_qual_ctrl', 'adj_4', 'adj_5', 'pos_qual_ctrl_5', 'adj_6', 'adj_7', 'pos_qual_ctrl_4', 'pos_qual_ctrl_1', 'adj_8', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 70 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'No'], 'neg_qual_ctrl': ['Yes', 'No', 'Yes'], 'adj_4': ['No', 'No', 'Yes'], 'adj_5': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['No', 'Yes', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'adj_8': ['No', 'No', 'No'], 'adj_9': ['No', 'No', 'No'], 'adj_10': ['No', 'No', 'Naa']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
Executing one action: self.actions.modify_radio('adj_1', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
Executing one action: self.actions.modify_radio('adj_2', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
Executing one action: self.actions.modify_radio('adj_3', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'Yes')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
Executing one action: self.actions.modify_radio('adj_4', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
Executing one action: self.actions.modify_radio('adj_5', 'No')
We are going to select this radio button: <input type="radio" name="adj_5" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
Executing one action: self.actions.modify_radio('adj_6', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_6" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
Executing one action: self.actions.modify_radio('adj_7', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_7" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
Executing one action: self.actions.modify_radio('adj_8', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_8" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
Executing one action: self.actions.modify_radio('adj_9', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_9" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
Executing one action: self.actions.modify_radio('adj_10', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_10" value="Yes" required="">
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'No', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'Yes', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'Naa']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.375
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 9518 <-> row_number: 55
 --> inputs: ['adj_1', 'adj_2', 'neg_qual_ctrl', 'adj_3', 'adj_4', 'pos_qual_ctrl_4', 'adj_5', 'pos_qual_ctrl_2', 'pos_qual_ctrl_5', 'adj_6', 'adj_7', 'pos_qual_ctrl_3', 'adj_8', 'pos_qual_ctrl_1', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 55 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'adj_2': ['No', 'No', 'No'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'No'], 'adj_4': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_5': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'No', 'Yes'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_8': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'adj_9': ['No', 'No', 'No'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
Executing one action: self.actions.modify_radio('adj_1', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
Executing one action: self.actions.modify_radio('adj_2', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'Yes')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
Executing one action: self.actions.modify_radio('adj_3', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
Executing one action: self.actions.modify_radio('adj_4', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
Executing one action: self.actions.modify_radio('adj_5', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
Executing one action: self.actions.modify_radio('adj_6', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_6" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
Executing one action: self.actions.modify_radio('adj_7', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_7" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
Executing one action: self.actions.modify_radio('adj_8', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_8" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
Executing one action: self.actions.modify_radio('adj_9', 'No')
We are going to select this radio button: <input type="radio" name="adj_9" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
Executing one action: self.actions.modify_radio('adj_10', 'No')
We are going to select this radio button: <input type="radio" name="adj_10" value="No">
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'No', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.4375
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0]}
instance_id: 9628 <-> row_number: 165
 --> inputs: ['adj_1', 'pos_qual_ctrl_1', 'adj_2', 'adj_3', 'adj_4', 'pos_qual_ctrl_3', 'adj_5', 'adj_6', 'pos_qual_ctrl_5', 'adj_7', 'pos_qual_ctrl_2', 'neg_qual_ctrl', 'adj_8', 'pos_qual_ctrl_4', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 165 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'No'], 'adj_4': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_5': ['No', 'No', 'No'], 'adj_6': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_7': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_9': ['No', 'No', 'No'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
Executing one action: self.actions.modify_radio('adj_1', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
Executing one action: self.actions.modify_radio('adj_2', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
Executing one action: self.actions.modify_radio('adj_3', 'No')
We are going to select this radio button: <input type="radio" name="adj_3" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
Executing one action: self.actions.modify_radio('adj_4', 'No')
We are going to select this radio button: <input type="radio" name="adj_4" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
Executing one action: self.actions.modify_radio('adj_5', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
Executing one action: self.actions.modify_radio('adj_6', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_6" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
Executing one action: self.actions.modify_radio('adj_7', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_7" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'Yes')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
Executing one action: self.actions.modify_radio('adj_8', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_8" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
Executing one action: self.actions.modify_radio('adj_9', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_9" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
Executing one action: self.actions.modify_radio('adj_10', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_10" value="Yes" required="">
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.4375
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 9596 <-> row_number: 133
 --> inputs: ['pos_qual_ctrl_1', 'pos_qual_ctrl_3', 'adj_1', 'adj_2', 'adj_3', 'adj_4', 'pos_qual_ctrl_2', 'adj_5', 'adj_6', 'adj_7', 'adj_8', 'adj_9', 'pos_qual_ctrl_5', 'neg_qual_ctrl', 'pos_qual_ctrl_4', 'adj_10']
 --> Looking up gold labels from row index 133 of `input.csv` (unique inputs). 
 --> input labels: {'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_3': ['No', 'Yes', 'Yes'], 'adj_1': ['No', 'No', 'No'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'No'], 'adj_4': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'adj_5': ['No', 'Yes', 'Yes'], 'adj_6': ['No', 'Naa', 'No'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['Yes', 'No', 'No'], 'adj_9': ['No', 'Yes', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
Executing one action: self.actions.modify_radio('adj_1', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
Executing one action: self.actions.modify_radio('adj_2', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
Executing one action: self.actions.modify_radio('adj_3', 'No')
We are going to select this radio button: <input type="radio" name="adj_3" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
Executing one action: self.actions.modify_radio('adj_4', 'yes')
The input value (`yes`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('adj_4', 'yes'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
Executing one action: self.actions.modify_radio('adj_5', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
Executing one action: self.actions.modify_radio('adj_6', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_6" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
Executing one action: self.actions.modify_radio('adj_7', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_7" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
Executing one action: self.actions.modify_radio('adj_8', 'No')
We are going to select this radio button: <input type="radio" name="adj_8" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
Executing one action: self.actions.modify_radio('adj_9', 'No')
We are going to select this radio button: <input type="radio" name="adj_9" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'Yes')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
Executing one action: self.actions.modify_radio('adj_10', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_10" value="Yes" required="">
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'Naa', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'Yes', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.5625
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0]}
instance_id: 9490 <-> row_number: 27
 --> inputs: ['adj_1', 'neg_qual_ctrl', 'adj_2', 'adj_3', 'pos_qual_ctrl_2', 'adj_4', 'pos_qual_ctrl_5', 'pos_qual_ctrl_3', 'pos_qual_ctrl_4', 'adj_5', 'adj_6', 'adj_7', 'adj_8', 'adj_9', 'pos_qual_ctrl_1', 'adj_10']
 --> Looking up gold labels from row index 27 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'No'], 'adj_4': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_4': ['Yes', 'No', 'Yes'], 'adj_5': ['No', 'No', 'No'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'adj_9': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
Executing one action: self.actions.modify_radio('adj_1', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'Yes')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
Executing one action: self.actions.modify_radio('adj_2', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
Executing one action: self.actions.modify_radio('adj_3', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
Executing one action: self.actions.modify_radio('adj_4', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
Executing one action: self.actions.modify_radio('adj_5', 'No')
We are going to select this radio button: <input type="radio" name="adj_5" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
Executing one action: self.actions.modify_radio('adj_6', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_6" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
Executing one action: self.actions.modify_radio('adj_7', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_7" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
Executing one action: self.actions.modify_radio('adj_8', 'No')
We are going to select this radio button: <input type="radio" name="adj_8" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
Executing one action: self.actions.modify_radio('adj_9', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_9" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
Executing one action: self.actions.modify_radio('adj_10', 'No')
We are going to select this radio button: <input type="radio" name="adj_10" value="No">
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'No', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0]}
instance_id: 9613 <-> row_number: 150
 --> inputs: ['pos_qual_ctrl_1', 'adj_1', 'adj_2', 'adj_3', 'neg_qual_ctrl', 'pos_qual_ctrl_4', 'adj_4', 'pos_qual_ctrl_2', 'pos_qual_ctrl_3', 'adj_5', 'adj_6', 'pos_qual_ctrl_5', 'adj_7', 'adj_8', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 150 of `input.csv` (unique inputs). 
 --> input labels: {'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'adj_1': ['No', 'No', 'No'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'No'], 'neg_qual_ctrl': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_4': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_5': ['No', 'No', 'No'], 'adj_6': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'adj_9': ['No', 'No', 'No'], 'adj_10': ['No', 'Yes', 'No']}
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
Executing one action: self.actions.modify_radio('adj_1', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
Executing one action: self.actions.modify_radio('adj_2', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
Executing one action: self.actions.modify_radio('adj_3', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'Yes')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
Executing one action: self.actions.modify_radio('adj_4', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
Executing one action: self.actions.modify_radio('adj_5', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
Executing one action: self.actions.modify_radio('adj_6', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_6" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
Executing one action: self.actions.modify_radio('adj_7', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_7" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
Executing one action: self.actions.modify_radio('adj_8', 'No')
We are going to select this radio button: <input type="radio" name="adj_8" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
Executing one action: self.actions.modify_radio('adj_9', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_9" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
Executing one action: self.actions.modify_radio('adj_10', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_10" value="Yes" required="">
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'Yes', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.4375
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 9532 <-> row_number: 69
 --> inputs: ['adj_1', 'neg_qual_ctrl', 'adj_2', 'pos_qual_ctrl_1', 'adj_3', 'adj_4', 'adj_5', 'pos_qual_ctrl_3', 'pos_qual_ctrl_5', 'adj_6', 'adj_7', 'adj_8', 'pos_qual_ctrl_4', 'adj_9', 'pos_qual_ctrl_2', 'adj_10']
 --> Looking up gold labels from row index 69 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'adj_2': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'adj_3': ['No', 'No', 'No'], 'adj_4': ['No', 'No', 'No'], 'adj_5': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_9': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
Executing one action: self.actions.modify_radio('adj_1', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'Yes')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
Executing one action: self.actions.modify_radio('adj_2', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
Executing one action: self.actions.modify_radio('adj_3', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
Executing one action: self.actions.modify_radio('adj_4', 'No')
We are going to select this radio button: <input type="radio" name="adj_4" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
Executing one action: self.actions.modify_radio('adj_5', 'No')
We are going to select this radio button: <input type="radio" name="adj_5" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
Executing one action: self.actions.modify_radio('adj_6', 'No')
We are going to select this radio button: <input type="radio" name="adj_6" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
Executing one action: self.actions.modify_radio('adj_7', 'No')
We are going to select this radio button: <input type="radio" name="adj_7" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
Executing one action: self.actions.modify_radio('adj_8', 'No')
We are going to select this radio button: <input type="radio" name="adj_8" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
Executing one action: self.actions.modify_radio('adj_9', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_9" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
Executing one action: self.actions.modify_radio('adj_10', 'No')
We are going to select this radio button: <input type="radio" name="adj_10" value="No">
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.6875
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0]}
instance_id: 9540 <-> row_number: 77
 --> inputs: ['adj_1', 'pos_qual_ctrl_5', 'neg_qual_ctrl', 'adj_2', 'pos_qual_ctrl_1', 'adj_3', 'adj_4', 'pos_qual_ctrl_2', 'adj_5', 'adj_6', 'pos_qual_ctrl_3', 'adj_7', 'adj_8', 'pos_qual_ctrl_4', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 77 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['No', 'No', 'No'], 'neg_qual_ctrl': ['No', 'No', 'Yes'], 'adj_2': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'No'], 'adj_3': ['No', 'No', 'No'], 'adj_4': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'adj_5': ['No', 'No', 'No'], 'adj_6': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_9': ['No', 'No', 'No'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
Executing one action: self.actions.modify_radio('adj_1', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'Yes')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
Executing one action: self.actions.modify_radio('adj_2', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
Executing one action: self.actions.modify_radio('adj_3', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
Executing one action: self.actions.modify_radio('adj_4', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
Executing one action: self.actions.modify_radio('adj_5', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
Executing one action: self.actions.modify_radio('adj_6', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_6" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
Executing one action: self.actions.modify_radio('adj_7', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_7" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
Executing one action: self.actions.modify_radio('adj_8', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_8" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
Executing one action: self.actions.modify_radio('adj_9', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_9" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
Executing one action: self.actions.modify_radio('adj_10', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_10" value="Yes" required="">
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 9538 <-> row_number: 75
 --> inputs: ['adj_1', 'pos_qual_ctrl_4', 'pos_qual_ctrl_2', 'pos_qual_ctrl_1', 'neg_qual_ctrl', 'adj_2', 'adj_3', 'adj_4', 'adj_5', 'adj_6', 'adj_7', 'adj_8', 'adj_9', 'pos_qual_ctrl_3', 'pos_qual_ctrl_5', 'adj_10']
 --> Looking up gold labels from row index 75 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'No'], 'adj_4': ['No', 'No', 'No'], 'adj_5': ['No', 'No', 'No'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'Naa'], 'adj_8': ['No', 'No', 'No'], 'adj_9': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
Executing one action: self.actions.modify_radio('adj_1', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')


This command assumes that the `modify_radio` function exists within the scripting environment and is prepared to take the input name (`pos_qual_ctrl_1`) and the desired value (`'Yes'`, `'No'`, or `'Naa'` corresponding to "Not an adjective") as arguments. 

**Note:** This represents an abstract handler because the actual handling logic for modifying the DOM or interacting with a web page in such a manner typically requires more context-specific
Failed to execute an action self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')


This command assumes that the `modify_radio` function exists within the scripting environment and is prepared to take the input name (`pos_qual_ctrl_1`) and the desired value (`'Yes'`, `'No'`, or `'Naa'` corresponding to "Not an adjective") as arguments. 

**Note:** This represents an abstract handler because the actual handling logic for modifying the DOM or interacting with a web page in such a manner typically requires more context-specific, error: invalid syntax (<string>, line 4)
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'Yes')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
Executing one action: self.actions.modify_radio('adj_2', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
Executing one action: self.actions.modify_radio('adj_3', 'No')
We are going to select this radio button: <input type="radio" name="adj_3" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
Executing one action: self.actions.modify_radio('adj_4', 'No')
We are going to select this radio button: <input type="radio" name="adj_4" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
Executing one action: self.actions.modify_radio('adj_5', 'No')
We are going to select this radio button: <input type="radio" name="adj_5" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
Executing one action: self.actions.modify_radio('adj_6', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_6" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
Executing one action: self.actions.modify_radio('adj_7', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_7" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
Executing one action: self.actions.modify_radio('adj_8', 'No')
We are going to select this radio button: <input type="radio" name="adj_8" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
Executing one action: self.actions.modify_radio('adj_9', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_9" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
Executing one action: self.actions.modify_radio('adj_10', 'No')
We are going to select this radio button: <input type="radio" name="adj_10" value="No">
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'Naa']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.5625
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0]}
instance_id: 9471 <-> row_number: 8
 --> inputs: ['pos_qual_ctrl_1', 'neg_qual_ctrl', 'adj_1', 'pos_qual_ctrl_5', 'pos_qual_ctrl_4', 'adj_2', 'adj_3', 'adj_4', 'adj_5', 'adj_6', 'adj_7', 'pos_qual_ctrl_3', 'pos_qual_ctrl_2', 'adj_8', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 8 of `input.csv` (unique inputs). 
 --> input labels: {'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'adj_1': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'No'], 'adj_4': ['No', 'No', 'No'], 'adj_5': ['No', 'No', 'No'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'adj_8': ['No', 'No', 'No'], 'adj_9': ['No', 'No', 'No'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'Yes')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
Executing one action: self.actions.modify_radio('adj_1', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
Executing one action: self.actions.modify_radio('adj_2', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
Executing one action: self.actions.modify_radio('adj_3', 'No')
We are going to select this radio button: <input type="radio" name="adj_3" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
Executing one action: self.actions.modify_radio('adj_4', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
Executing one action: self.actions.modify_radio('adj_5', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
Executing one action: self.actions.modify_radio('adj_6', 'No')
We are going to select this radio button: <input type="radio" name="adj_6" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
Executing one action: self.actions.modify_radio('adj_7', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_7" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
Executing one action: self.actions.modify_radio('adj_8', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_8" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
Executing one action: self.actions.modify_radio('adj_9', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_9" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
Executing one action: self.actions.modify_radio('adj_10', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_10" value="Yes" required="">
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.4375
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 9568 <-> row_number: 105
 --> inputs: ['adj_1', 'adj_2', 'pos_qual_ctrl_2', 'adj_3', 'neg_qual_ctrl', 'adj_4', 'adj_5', 'pos_qual_ctrl_5', 'adj_6', 'adj_7', 'pos_qual_ctrl_1', 'adj_8', 'pos_qual_ctrl_4', 'pos_qual_ctrl_3', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 105 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'adj_2': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'adj_3': ['No', 'No', 'No'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'adj_4': ['No', 'Naa', 'No'], 'adj_5': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'adj_8': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_9': ['No', 'No', 'No'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
Executing one action: self.actions.modify_radio('adj_1', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
Executing one action: self.actions.modify_radio('adj_2', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
Executing one action: self.actions.modify_radio('adj_3', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_3" value="Naa">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'Yes')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
Executing one action: self.actions.modify_radio('adj_4', 'No')
We are going to select this radio button: <input type="radio" name="adj_4" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
Executing one action: self.actions.modify_radio('adj_5', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
Executing one action: self.actions.modify_radio('adj_6', 'No')
We are going to select this radio button: <input type="radio" name="adj_6" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
Executing one action: self.actions.modify_radio('adj_7', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_7" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
Executing one action: self.actions.modify_radio('adj_8', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_8" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
Executing one action: self.actions.modify_radio('adj_9', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_9" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
Executing one action: self.actions.modify_radio('adj_10', 'No')
We are going to select this radio button: <input type="radio" name="adj_10" value="No">
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'Naa', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0]}
instance_id: 9525 <-> row_number: 62
 --> inputs: ['adj_1', 'pos_qual_ctrl_5', 'pos_qual_ctrl_3', 'pos_qual_ctrl_2', 'pos_qual_ctrl_1', 'pos_qual_ctrl_4', 'adj_2', 'adj_3', 'adj_4', 'adj_5', 'neg_qual_ctrl', 'adj_6', 'adj_7', 'adj_8', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 62 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'No'], 'adj_4': ['No', 'No', 'No'], 'adj_5': ['Yes', 'No', 'Yes'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'adj_6': ['Yes', 'Yes', 'Yes'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'adj_9': ['No', 'No', 'No'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
Executing one action: self.actions.modify_radio('adj_1', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
Executing one action: self.actions.modify_radio('adj_2', 'No')
We are going to select this radio button: <input type="radio" name="adj_2" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
Executing one action: self.actions.modify_radio('adj_3', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
Executing one action: self.actions.modify_radio('adj_4', 'No')
We are going to select this radio button: <input type="radio" name="adj_4" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
Executing one action: self.actions.modify_radio('adj_5', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'Yes')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
Executing one action: self.actions.modify_radio('adj_6', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_6" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
Executing one action: self.actions.modify_radio('adj_7', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_7" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
Executing one action: self.actions.modify_radio('adj_8', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_8" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
Executing one action: self.actions.modify_radio('adj_9', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_9" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
Executing one action: self.actions.modify_radio('adj_10', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_10" value="Yes" required="">
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'No', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.5625
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 9473 <-> row_number: 10
 --> inputs: ['adj_1', 'pos_qual_ctrl_1', 'pos_qual_ctrl_3', 'adj_2', 'adj_3', 'pos_qual_ctrl_5', 'pos_qual_ctrl_4', 'adj_4', 'adj_5', 'pos_qual_ctrl_2', 'adj_6', 'neg_qual_ctrl', 'adj_7', 'adj_8', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 10 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['No', 'No', 'Yes'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_4': ['No', 'No', 'No'], 'adj_5': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'adj_6': ['No', 'No', 'No'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'adj_9': ['No', 'No', 'No'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
Executing one action: self.actions.modify_radio('adj_1', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
Executing one action: self.actions.modify_radio('adj_2', 'No')
We are going to select this radio button: <input type="radio" name="adj_2" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
Executing one action: self.actions.modify_radio('adj_3', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
Executing one action: self.actions.modify_radio('adj_4', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
Executing one action: self.actions.modify_radio('adj_5', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
Executing one action: self.actions.modify_radio('adj_6', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_6" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'Yes')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
Executing one action: self.actions.modify_radio('adj_7', 'No')
We are going to select this radio button: <input type="radio" name="adj_7" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
Executing one action: self.actions.modify_radio('adj_8', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_8" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
Executing one action: self.actions.modify_radio('adj_9', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_9" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
Executing one action: self.actions.modify_radio('adj_10', 'No')
We are going to select this radio button: <input type="radio" name="adj_10" value="No">
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.4375
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0]}
instance_id: 9566 <-> row_number: 103
 --> inputs: ['adj_1', 'adj_2', 'adj_3', 'pos_qual_ctrl_3', 'adj_4', 'neg_qual_ctrl', 'pos_qual_ctrl_5', 'adj_5', 'pos_qual_ctrl_1', 'adj_6', 'adj_7', 'adj_8', 'adj_9', 'pos_qual_ctrl_2', 'pos_qual_ctrl_4', 'adj_10']
 --> Looking up gold labels from row index 103 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_4': ['No', 'No', 'No'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_5': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'adj_9': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
Executing one action: self.actions.modify_radio('adj_1', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
Executing one action: self.actions.modify_radio('adj_2', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
Executing one action: self.actions.modify_radio('adj_3', 'Naa')
We are going to select this radio button: <input type="radio" name="adj_3" value="Naa">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
Executing one action: self.actions.modify_radio('adj_4', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'Yes')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
Executing one action: self.actions.modify_radio('adj_5', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
Executing one action: self.actions.modify_radio('adj_6', 'No')
We are going to select this radio button: <input type="radio" name="adj_6" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
Executing one action: self.actions.modify_radio('adj_7', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_7" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
Executing one action: self.actions.modify_radio('adj_8', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_8" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
Executing one action: self.actions.modify_radio('adj_9', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_9" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
Executing one action: self.actions.modify_radio('adj_10', 'No')
We are going to select this radio button: <input type="radio" name="adj_10" value="No">
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Naa']
 visible_values : ['Naa']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Naa` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.4375
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0]}
instance_id: 9528 <-> row_number: 65
 --> inputs: ['adj_1', 'neg_qual_ctrl', 'pos_qual_ctrl_4', 'adj_2', 'pos_qual_ctrl_1', 'adj_3', 'adj_4', 'pos_qual_ctrl_3', 'adj_5', 'pos_qual_ctrl_2', 'adj_6', 'pos_qual_ctrl_5', 'adj_7', 'adj_8', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 65 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'neg_qual_ctrl': ['No', 'No', 'Yes'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_2': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'adj_3': ['No', 'No', 'No'], 'adj_4': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_5': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'adj_6': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'Naa', 'No'], 'adj_9': ['No', 'No', 'No'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
Executing one action: self.actions.modify_radio('adj_1', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'Yes')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
Executing one action: self.actions.modify_radio('adj_2', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
Executing one action: self.actions.modify_radio('adj_3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
Executing one action: self.actions.modify_radio('adj_4', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
Executing one action: self.actions.modify_radio('adj_5', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
Executing one action: self.actions.modify_radio('adj_6', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_6" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
Executing one action: self.actions.modify_radio('adj_7', 'No')
We are going to select this radio button: <input type="radio" name="adj_7" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
Executing one action: self.actions.modify_radio('adj_8', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
Executing one action: self.actions.modify_radio('adj_9', 'No')
We are going to select this radio button: <input type="radio" name="adj_9" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
Executing one action: self.actions.modify_radio('adj_10', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_10" value="Yes" required="">
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'Naa', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.4375
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0]}
instance_id: 9504 <-> row_number: 41
 --> inputs: ['pos_qual_ctrl_4', 'adj_1', 'adj_2', 'pos_qual_ctrl_1', 'adj_3', 'pos_qual_ctrl_2', 'adj_4', 'adj_5', 'adj_6', 'pos_qual_ctrl_3', 'adj_7', 'adj_8', 'pos_qual_ctrl_5', 'neg_qual_ctrl', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 41 of `input.csv` (unique inputs). 
 --> input labels: {'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_1': ['No', 'No', 'No'], 'adj_2': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'adj_3': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'adj_4': ['No', 'No', 'No'], 'adj_5': ['No', 'No', 'No'], 'adj_6': ['No', 'Naa', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'adj_9': ['No', 'No', 'No'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
Executing one action: self.actions.modify_radio('adj_1', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
Executing one action: self.actions.modify_radio('adj_2', 'No')
We are going to select this radio button: <input type="radio" name="adj_2" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
Executing one action: self.actions.modify_radio('adj_3', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
Executing one action: self.actions.modify_radio('adj_4', 'No')
We are going to select this radio button: <input type="radio" name="adj_4" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
Executing one action: self.actions.modify_radio('adj_5', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
Executing one action: self.actions.modify_radio('adj_6', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
Executing one action: self.actions.modify_radio('adj_7', 'No')
We are going to select this radio button: <input type="radio" name="adj_7" value="No">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
Executing one action: self.actions.modify_radio('adj_8', 'No')
We are going to select this radio button: <input type="radio" name="adj_8" value="No">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'Yes')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
Executing one action: self.actions.modify_radio('adj_9', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_9" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
Executing one action: self.actions.modify_radio('adj_10', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_10" value="Yes" required="">
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'Naa', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.5625
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 9477 <-> row_number: 14
 --> inputs: ['adj_1', 'adj_2', 'pos_qual_ctrl_1', 'adj_3', 'pos_qual_ctrl_3', 'adj_4', 'pos_qual_ctrl_5', 'neg_qual_ctrl', 'adj_5', 'pos_qual_ctrl_4', 'adj_6', 'adj_7', 'adj_8', 'pos_qual_ctrl_2', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 14 of `input.csv` (unique inputs). 
 --> input labels: {'adj_1': ['No', 'No', 'No'], 'adj_2': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'adj_3': ['No', 'No', 'No'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_4': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'adj_5': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'No'], 'adj_9': ['No', 'No', 'No'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
Executing one action: self.actions.modify_radio('adj_1', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
Executing one action: self.actions.modify_radio('adj_2', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
Executing one action: self.actions.modify_radio('adj_3', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
Executing one action: self.actions.modify_radio('adj_4', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'Yes')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
Executing one action: self.actions.modify_radio('adj_5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
Executing one action: self.actions.modify_radio('adj_6', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_6" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
Executing one action: self.actions.modify_radio('adj_7', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_7" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
Executing one action: self.actions.modify_radio('adj_8', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_8" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
Executing one action: self.actions.modify_radio('adj_9', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_9" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
Executing one action: self.actions.modify_radio('adj_10', 'No')
We are going to select this radio button: <input type="radio" name="adj_10" value="No">
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['No']
 visible_values : ['No']
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `No` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.375
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0]}
instance_id: 9610 <-> row_number: 147
 --> inputs: ['pos_qual_ctrl_2', 'adj_1', 'adj_2', 'adj_3', 'neg_qual_ctrl', 'pos_qual_ctrl_4', 'adj_4', 'pos_qual_ctrl_1', 'pos_qual_ctrl_3', 'adj_5', 'pos_qual_ctrl_5', 'adj_6', 'adj_7', 'adj_8', 'adj_9', 'adj_10']
 --> Looking up gold labels from row index 147 of `input.csv` (unique inputs). 
 --> input labels: {'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'adj_1': ['No', 'No', 'No'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['Yes', 'No', 'No'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'adj_4': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'adj_5': ['No', 'No', 'No'], 'pos_qual_ctrl_5': ['Yes', 'Yes', 'Yes'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'adj_9': ['No', 'No', 'No'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
Executing one action: self.actions.modify_radio('adj_1', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
Executing one action: self.actions.modify_radio('adj_2', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
Executing one action: self.actions.modify_radio('adj_3', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'Yes')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
Executing one action: self.actions.modify_radio('adj_4', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
Executing one action: self.actions.modify_radio('adj_5', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
Executing one action: self.actions.modify_radio('adj_6', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_6" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
Executing one action: self.actions.modify_radio('adj_7', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_7" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
Executing one action: self.actions.modify_radio('adj_8', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_8" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
Executing one action: self.actions.modify_radio('adj_9', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_9" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
Executing one action: self.actions.modify_radio('adj_10', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_10" value="Yes" required="">
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.3125
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 9606 <-> row_number: 143
 --> inputs: ['pos_qual_ctrl_5', 'adj_1', 'adj_2', 'adj_3', 'adj_4', 'adj_5', 'adj_6', 'adj_7', 'adj_8', 'adj_9', 'pos_qual_ctrl_4', 'pos_qual_ctrl_2', 'pos_qual_ctrl_3', 'neg_qual_ctrl', 'pos_qual_ctrl_1', 'adj_10']
 --> Looking up gold labels from row index 143 of `input.csv` (unique inputs). 
 --> input labels: {'pos_qual_ctrl_5': ['', '', ''], 'adj_1': ['No', 'No', 'No'], 'adj_2': ['No', 'No', 'No'], 'adj_3': ['No', 'No', 'No'], 'adj_4': ['No', 'No', 'No'], 'adj_5': ['No', 'No', 'No'], 'adj_6': ['No', 'No', 'No'], 'adj_7': ['No', 'No', 'No'], 'adj_8': ['No', 'No', 'No'], 'adj_9': ['No', 'No', 'No'], 'pos_qual_ctrl_4': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_2': ['Yes', 'Yes', 'Yes'], 'pos_qual_ctrl_3': ['Yes', 'Yes', 'Yes'], 'neg_qual_ctrl': ['No', 'No', 'No'], 'pos_qual_ctrl_1': ['Yes', 'Yes', 'Yes'], 'adj_10': ['No', 'No', 'No']}
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_5
Executing one action: self.actions.modify_radio('pos_qual_ctrl_5', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_5" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_1
Executing one action: self.actions.modify_radio('adj_1', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_2
Executing one action: self.actions.modify_radio('adj_2', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_3
Executing one action: self.actions.modify_radio('adj_3', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_4
Executing one action: self.actions.modify_radio('adj_4', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_5
Executing one action: self.actions.modify_radio('adj_5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_6
Executing one action: self.actions.modify_radio('adj_6', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_6" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_7
Executing one action: self.actions.modify_radio('adj_7', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_7" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_8
Executing one action: self.actions.modify_radio('adj_8', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_9
Executing one action: self.actions.modify_radio('adj_9', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_9" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_4
Executing one action: self.actions.modify_radio('pos_qual_ctrl_4', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_4" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_2
Executing one action: self.actions.modify_radio('pos_qual_ctrl_2', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_2" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_3
Executing one action: self.actions.modify_radio('pos_qual_ctrl_3', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_3" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: neg_qual_ctrl
Executing one action: self.actions.modify_radio('neg_qual_ctrl', 'Yes')
We are going to select this radio button: <input type="radio" name="neg_qual_ctrl" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: pos_qual_ctrl_1
Executing one action: self.actions.modify_radio('pos_qual_ctrl_1', 'Yes')
We are going to select this radio button: <input type="radio" name="pos_qual_ctrl_1" value="Yes" required="">
 - - - - - -  starting a new element: `Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)` - - - - - -  
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
about to try executing one action, on the following input: adj_10
Executing one action: self.actions.modify_radio('adj_10', 'Yes')
We are going to select this radio button: <input type="radio" name="adj_10" value="Yes" required="">
input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : []
 visible_values : []
input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`)
 visible : ['Yes']
 visible_values : ['Yes']
 ------- evaluating input: Input(name=`pos_qual_ctrl_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['', '', '']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_5`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_6`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_7`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_8`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`adj_9`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_4`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_2`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_3`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`neg_qual_ctrl`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`pos_qual_ctrl_1`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['Yes', 'Yes', 'Yes']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`adj_10`, type=`radio`, task=`Scalar Adjectives Identification`) ------- 
----> answers: `['No', 'No', 'No']` - type: `<class 'list'>`
----> baseline_answer: `Yes` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0]}
 = = = = = = = = = = = = starting new task: `Script KD eval LONG V2 - disc result eval 1` = = = = = = = = = = = = 
First instance id: 25775
instance_id: 25920 <-> row_number: 145
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 145 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [2, 0], 'on-topic': [1, -1], 'ordering': [0, -1], 'complete': [-1, -2]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
Executing one action: self.actions.modify_radio('achievable', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, -1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, -1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, -2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [1.0, 0.0, 0.0, 0.0]}
instance_id: 25865 <-> row_number: 90
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 90 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [2, 2], 'on-topic': [2, 2], 'ordering': [2, 2], 'complete': [2, 2]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
Executing one action: self.actions.modify_radio('achievable', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 1.0
 --> Per-instance per-field breakdown: {'radio': [1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0]}
instance_id: 25901 <-> row_number: 126
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 126 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [2, 2], 'on-topic': [2, 2], 'ordering': [2, 2], 'complete': [2, 2]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
Executing one action: self.actions.modify_radio('achievable', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 1.0
 --> Per-instance per-field breakdown: {'radio': [1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]}
instance_id: 26007 <-> row_number: 232
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 232 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [2, 2], 'on-topic': [2, 2], 'ordering': [0, 1], 'complete': [1, 0]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
Executing one action: self.actions.modify_radio('achievable', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0]}
instance_id: 25851 <-> row_number: 76
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 76 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [2, -1], 'on-topic': [1, 1], 'ordering': [1, -1], 'complete': [1, 0]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
Executing one action: self.actions.modify_radio('achievable', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, -1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, -1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 25921 <-> row_number: 146
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 146 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [2, 1], 'on-topic': [2, 2], 'ordering': [2, 2], 'complete': [2, 0]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
Executing one action: self.actions.modify_radio('achievable', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 1.0
 --> Per-instance per-field breakdown: {'radio': [1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0]}
instance_id: 25968 <-> row_number: 193
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 193 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [2, 2], 'on-topic': [2, 2], 'ordering': [1, 1], 'complete': [0, 1]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
Executing one action: self.actions.modify_radio('achievable', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0]}
instance_id: 25830 <-> row_number: 55
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 55 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [1, 0], 'on-topic': [0, 2], 'ordering': [0, 1], 'complete': [-1, 0]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
Executing one action: self.actions.modify_radio('achievable', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, 0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 25907 <-> row_number: 132
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 132 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [2, 2], 'on-topic': [2, 2], 'ordering': [2, 2], 'complete': [2, 2]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
Executing one action: self.actions.modify_radio('achievable', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 1.0
 --> Per-instance per-field breakdown: {'radio': [1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0]}
instance_id: 26000 <-> row_number: 225
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 225 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [2, 1], 'on-topic': [0, 1], 'ordering': [-1, 2], 'complete': [-1, 1]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
Executing one action: self.actions.modify_radio('achievable', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 25782 <-> row_number: 7
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 7 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [1, 1], 'on-topic': [2, 2], 'ordering': [0, 1], 'complete': [2, 2]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
Executing one action: self.actions.modify_radio('achievable', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0]}
instance_id: 25839 <-> row_number: 64
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 64 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [2, 1], 'on-topic': [0, 2], 'ordering': [0, 2], 'complete': [-1, 1]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
Executing one action: self.actions.modify_radio('achievable', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 25924 <-> row_number: 149
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 149 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [1, -1], 'on-topic': [0, 1], 'ordering': [0, 0], 'complete': [-1, -1]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
Executing one action: self.actions.modify_radio('achievable', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, -1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, -1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 25824 <-> row_number: 49
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 49 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [1, 0], 'on-topic': [2, 1], 'ordering': [2, 1], 'complete': [0, 0]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
Executing one action: self.actions.modify_radio('achievable', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0]}
instance_id: 25997 <-> row_number: 222
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 222 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [2, 1], 'on-topic': [0, 1], 'ordering': [-1, 1], 'complete': [-1, 2]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
Executing one action: self.actions.modify_radio('achievable', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 25870 <-> row_number: 95
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 95 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [2, 2], 'on-topic': [2, 1], 'ordering': [1, 2], 'complete': [1, 1]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
Executing one action: self.actions.modify_radio('achievable', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0]}
instance_id: 25988 <-> row_number: 213
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 213 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [1, -1], 'on-topic': [2, 2], 'ordering': [1, 1], 'complete': [0, -1]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
Executing one action: self.actions.modify_radio('achievable', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, -1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, -1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'radio': [1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 25805 <-> row_number: 30
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 30 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [-2, 0], 'on-topic': [0, 2], 'ordering': [1, 2], 'complete': [2, 2]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
Executing one action: self.actions.modify_radio('achievable', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-2, 0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0]}
instance_id: 25890 <-> row_number: 115
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 115 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [1, 2], 'on-topic': [0, 2], 'ordering': [0, 2], 'complete': [-1, 2]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
Executing one action: self.actions.modify_radio('achievable', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[0, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[-1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 25781 <-> row_number: 6
 --> inputs: ['achievable', 'on-topic', 'ordering', 'complete']
 --> Looking up gold labels from row index 6 of `input.csv` (unique inputs). 
 --> input labels: {'achievable': [2, 2], 'on-topic': [2, 2], 'ordering': [2, 1], 'complete': [1, 0]}
 - - - - - -  starting a new element: `Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: achievable
Executing one action: self.actions.modify_radio('achievable', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="achievable" id="achievable-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: on-topic
Executing one action: self.actions.modify_radio('on-topic', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="on-topic" id="on-topic-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: ordering
Executing one action: self.actions.modify_radio('ordering', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="ordering" id="ordering-0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)` - - - - - -  
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
about to try executing one action, on the following input: complete
Executing one action: self.actions.modify_radio('complete', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="complete" id="complete-0" value="2" required="">
input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`achievable`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`on-topic`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`ordering`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete`, type=`radio`, task=`Script KD eval LONG V2 - disc result eval 1`) ------- 
----> answers: `[1, 0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.75
 --> Per-instance per-field breakdown: {'radio': [1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0]}
 = = = = = = = = = = = = starting new task: `Sherlock IMG 2 TXT Eval 15` = = = = = = = = = = = = 
First instance id: 17695
instance_id: 17931 <-> row_number: 236
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 236 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [1, 1], 'elicited_label_answer2': [2, 1], 'elicited_label_answer3': [3, 1], 'elicited_label_answer4': [2, 2], 'elicited_label_answer5': [3, 1], 'elicited_label_answer6': [2, 2], 'elicited_label_answer7': [3, 2], 'elicited_label_answer8': [2, 2], 'elicited_label_answer9': [3, 2], 'elicited_label_answer10': [2, 2]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
Executing one action: self.actions.modify_radio('elicited_label_answer2', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer2_2" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
Executing one action: self.actions.modify_radio('elicited_label_answer6', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
Executing one action: self.actions.modify_radio('elicited_label_answer7', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer2_7" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
Executing one action: self.actions.modify_radio('elicited_label_answer8', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer2_8" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
Executing one action: self.actions.modify_radio('elicited_label_answer10', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer2_10" value="2" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.6
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0]}
instance_id: 18037 <-> row_number: 342
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 342 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [3, 3], 'elicited_label_answer2': [2, 2], 'elicited_label_answer3': [2, 3], 'elicited_label_answer4': [2, 3], 'elicited_label_answer5': [1, 3], 'elicited_label_answer6': [1, 1], 'elicited_label_answer7': [2, 3], 'elicited_label_answer8': [2, 3], 'elicited_label_answer9': [3, 3], 'elicited_label_answer10': [2, 3]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
Executing one action: self.actions.modify_radio('elicited_label_answer2', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer2_2" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
Executing one action: self.actions.modify_radio('elicited_label_answer3', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer3_3" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
Executing one action: self.actions.modify_radio('elicited_label_answer4', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer3_4" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
Executing one action: self.actions.modify_radio('elicited_label_answer5', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer2_5" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
Executing one action: self.actions.modify_radio('elicited_label_answer6', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer3_6" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
Executing one action: self.actions.modify_radio('elicited_label_answer7', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
Executing one action: self.actions.modify_radio('elicited_label_answer8', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer2_8" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
Executing one action: self.actions.modify_radio('elicited_label_answer10', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0]}
instance_id: 17849 <-> row_number: 154
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 154 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [3, 2], 'elicited_label_answer2': [3, 1], 'elicited_label_answer3': [3, 3], 'elicited_label_answer4': [3, 3], 'elicited_label_answer5': [3, 3], 'elicited_label_answer6': [2, 1], 'elicited_label_answer7': [3, 3], 'elicited_label_answer8': [2, 1], 'elicited_label_answer9': [2, 2], 'elicited_label_answer10': [2, 2]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
Executing one action: self.actions.modify_radio('elicited_label_answer1', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer2_1" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
Executing one action: self.actions.modify_radio('elicited_label_answer2', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer2_2" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
Executing one action: self.actions.modify_radio('elicited_label_answer3', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer2_3" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer1_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
Executing one action: self.actions.modify_radio('elicited_label_answer8', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer2_8" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
Executing one action: self.actions.modify_radio('elicited_label_answer9', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer2_9" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
Executing one action: self.actions.modify_radio('elicited_label_answer10', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer3_10" value="1" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0]}
instance_id: 18099 <-> row_number: 404
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 404 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [3, 2], 'elicited_label_answer2': [2, 1], 'elicited_label_answer3': [1, 1], 'elicited_label_answer4': [1, 1], 'elicited_label_answer5': [2, 1], 'elicited_label_answer6': [2, 1], 'elicited_label_answer7': [2, 1], 'elicited_label_answer8': [2, 2], 'elicited_label_answer9': [2, 1], 'elicited_label_answer10': [1, 1]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
Executing one action: self.actions.modify_radio('elicited_label_answer1', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer2_1" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
Executing one action: self.actions.modify_radio('elicited_label_answer2', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer2_2" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
Executing one action: self.actions.modify_radio('elicited_label_answer4', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer3_4" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
Executing one action: self.actions.modify_radio('elicited_label_answer6', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer2_6" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
Executing one action: self.actions.modify_radio('elicited_label_answer7', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer2_7" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
Executing one action: self.actions.modify_radio('elicited_label_answer8', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer2_8" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
Executing one action: self.actions.modify_radio('elicited_label_answer9', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer2_9" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
Executing one action: self.actions.modify_radio('elicited_label_answer10', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.6
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0]}
instance_id: 18140 <-> row_number: 445
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 445 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [2, 2], 'elicited_label_answer2': [1, 1], 'elicited_label_answer3': [2, 2], 'elicited_label_answer4': [1, 1], 'elicited_label_answer5': [1, 1], 'elicited_label_answer6': [3, 2], 'elicited_label_answer7': [3, 2], 'elicited_label_answer8': [2, 2], 'elicited_label_answer9': [2, 1], 'elicited_label_answer10': [2, 2]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
Executing one action: self.actions.modify_radio('elicited_label_answer2', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer2_2" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
Executing one action: self.actions.modify_radio('elicited_label_answer4', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer2_4" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
Executing one action: self.actions.modify_radio('elicited_label_answer6', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
Executing one action: self.actions.modify_radio('elicited_label_answer7', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer2_7" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
Executing one action: self.actions.modify_radio('elicited_label_answer8', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer2_8" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
Executing one action: self.actions.modify_radio('elicited_label_answer9', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer2_9" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
Executing one action: self.actions.modify_radio('elicited_label_answer10', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.2
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0]}
instance_id: 17848 <-> row_number: 153
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 153 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [2, 3], 'elicited_label_answer2': [1, 2], 'elicited_label_answer3': [2, 3], 'elicited_label_answer4': [2, 2], 'elicited_label_answer5': [2, 3], 'elicited_label_answer6': [2, 2], 'elicited_label_answer7': [2, 2], 'elicited_label_answer8': [2, 2], 'elicited_label_answer9': [1, 1], 'elicited_label_answer10': [3, 3]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
Executing one action: self.actions.modify_radio('elicited_label_answer2', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer2_2" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
Executing one action: self.actions.modify_radio('elicited_label_answer4', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer3_4" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
Executing one action: self.actions.modify_radio('elicited_label_answer6', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer2_6" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
Executing one action: self.actions.modify_radio('elicited_label_answer7', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer2_7" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
Executing one action: self.actions.modify_radio('elicited_label_answer9', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer2_9" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
Executing one action: self.actions.modify_radio('elicited_label_answer10', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer2_10" value="2" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.2
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 17930 <-> row_number: 235
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 235 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [1, 2], 'elicited_label_answer2': [1, 1], 'elicited_label_answer3': [2, 2], 'elicited_label_answer4': [1, 2], 'elicited_label_answer5': [2, 2], 'elicited_label_answer6': [1, 2], 'elicited_label_answer7': [2, 2], 'elicited_label_answer8': [1, 1], 'elicited_label_answer9': [1, 1], 'elicited_label_answer10': [1, 2]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
Executing one action: self.actions.modify_radio('elicited_label_answer1', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer2_1" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
Executing one action: self.actions.modify_radio('elicited_label_answer2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
Executing one action: self.actions.modify_radio('elicited_label_answer5', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer2_5" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
Executing one action: self.actions.modify_radio('elicited_label_answer6', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer2_6" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
Executing one action: self.actions.modify_radio('elicited_label_answer7', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer2_7" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
Executing one action: self.actions.modify_radio('elicited_label_answer8', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
Executing one action: self.actions.modify_radio('elicited_label_answer9', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer2_9" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
Executing one action: self.actions.modify_radio('elicited_label_answer10', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer2_10" value="2" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.2
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 17794 <-> row_number: 99
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 99 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [3, 3], 'elicited_label_answer2': [2, 2], 'elicited_label_answer3': [3, 2], 'elicited_label_answer4': [2, 2], 'elicited_label_answer5': [1, 3], 'elicited_label_answer6': [3, 3], 'elicited_label_answer7': [3, 3], 'elicited_label_answer8': [3, 3], 'elicited_label_answer9': [3, 3], 'elicited_label_answer10': [1, 1]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
Executing one action: self.actions.modify_radio('elicited_label_answer2', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer2_2" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
Executing one action: self.actions.modify_radio('elicited_label_answer3', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer2_3" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
Executing one action: self.actions.modify_radio('elicited_label_answer6', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer3_6" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
Executing one action: self.actions.modify_radio('elicited_label_answer8', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer2_8" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
Executing one action: self.actions.modify_radio('elicited_label_answer9', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
Executing one action: self.actions.modify_radio('elicited_label_answer10', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.3
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 17887 <-> row_number: 192
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 192 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [2, 1], 'elicited_label_answer2': [2, 1], 'elicited_label_answer3': [1, 1], 'elicited_label_answer4': [2, 2], 'elicited_label_answer5': [1, 1], 'elicited_label_answer6': [1, 1], 'elicited_label_answer7': [1, 1], 'elicited_label_answer8': [2, 1], 'elicited_label_answer9': [2, 2], 'elicited_label_answer10': [2, 2]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
Executing one action: self.actions.modify_radio('elicited_label_answer2', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer2_2" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
Executing one action: self.actions.modify_radio('elicited_label_answer5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
Executing one action: self.actions.modify_radio('elicited_label_answer6', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer3_6" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
Executing one action: self.actions.modify_radio('elicited_label_answer7', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer2_7" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
Executing one action: self.actions.modify_radio('elicited_label_answer8', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer2_8" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
Executing one action: self.actions.modify_radio('elicited_label_answer9', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer1_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
Executing one action: self.actions.modify_radio('elicited_label_answer10', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer3_10" value="1" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.3
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 18168 <-> row_number: 473
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 473 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [2, 3], 'elicited_label_answer2': [3, 3], 'elicited_label_answer3': [3, 3], 'elicited_label_answer4': [3, 3], 'elicited_label_answer5': [2, 3], 'elicited_label_answer6': [2, 3], 'elicited_label_answer7': [2, 3], 'elicited_label_answer8': [2, 3], 'elicited_label_answer9': [2, 3], 'elicited_label_answer10': [3, 3]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
Executing one action: self.actions.modify_radio('elicited_label_answer1', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer2_1" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
Executing one action: self.actions.modify_radio('elicited_label_answer2', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer2_2" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
Executing one action: self.actions.modify_radio('elicited_label_answer3', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer2_3" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
Executing one action: self.actions.modify_radio('elicited_label_answer4', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer2_4" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
Executing one action: self.actions.modify_radio('elicited_label_answer6', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer2_6" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
Executing one action: self.actions.modify_radio('elicited_label_answer8', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer2_8" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
Executing one action: self.actions.modify_radio('elicited_label_answer9', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer2_9" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
Executing one action: self.actions.modify_radio('elicited_label_answer10', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer2_10" value="2" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.4
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0]}
instance_id: 17780 <-> row_number: 85
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 85 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [1, 1], 'elicited_label_answer2': [3, 3], 'elicited_label_answer3': [1, 2], 'elicited_label_answer4': [3, 2], 'elicited_label_answer5': [3, 3], 'elicited_label_answer6': [2, 3], 'elicited_label_answer7': [3, 1], 'elicited_label_answer8': [3, 3], 'elicited_label_answer9': [2, 3], 'elicited_label_answer10': [3, 3]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
Executing one action: self.actions.modify_radio('elicited_label_answer1', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer2_1" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
Executing one action: self.actions.modify_radio('elicited_label_answer2', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer2_2" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
Executing one action: self.actions.modify_radio('elicited_label_answer6', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer2_6" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
Executing one action: self.actions.modify_radio('elicited_label_answer7', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
Executing one action: self.actions.modify_radio('elicited_label_answer9', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer3_9" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0]}
instance_id: 18096 <-> row_number: 401
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 401 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [3, 3], 'elicited_label_answer2': [1, 1], 'elicited_label_answer3': [2, 2], 'elicited_label_answer4': [2, 2], 'elicited_label_answer5': [2, 2], 'elicited_label_answer6': [2, 2], 'elicited_label_answer7': [1, 2], 'elicited_label_answer8': [2, 3], 'elicited_label_answer9': [2, 2], 'elicited_label_answer10': [2, 3]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
Executing one action: self.actions.modify_radio('elicited_label_answer2', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer2_2" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
Executing one action: self.actions.modify_radio('elicited_label_answer3', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer2_3" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
Executing one action: self.actions.modify_radio('elicited_label_answer4', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer2_4" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
Executing one action: self.actions.modify_radio('elicited_label_answer6', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer3_6" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
Executing one action: self.actions.modify_radio('elicited_label_answer7', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer2_7" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
Executing one action: self.actions.modify_radio('elicited_label_answer9', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
Executing one action: self.actions.modify_radio('elicited_label_answer10', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer1_10" value="3" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.3
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 17823 <-> row_number: 128
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 128 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [3, 3], 'elicited_label_answer2': [1, 1], 'elicited_label_answer3': [2, 2], 'elicited_label_answer4': [1, 1], 'elicited_label_answer5': [1, 1], 'elicited_label_answer6': [1, 1], 'elicited_label_answer7': [3, 2], 'elicited_label_answer8': [2, 2], 'elicited_label_answer9': [3, 3], 'elicited_label_answer10': [1, 1]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
Executing one action: self.actions.modify_radio('elicited_label_answer1', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer2_1" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
Executing one action: self.actions.modify_radio('elicited_label_answer2', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer2_2" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
Executing one action: self.actions.modify_radio('elicited_label_answer3', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer2_3" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
Executing one action: self.actions.modify_radio('elicited_label_answer4', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer2_4" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
Executing one action: self.actions.modify_radio('elicited_label_answer6', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer1_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
Executing one action: self.actions.modify_radio('elicited_label_answer8', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer2_8" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
Executing one action: self.actions.modify_radio('elicited_label_answer9', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer3_9" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
Executing one action: self.actions.modify_radio('elicited_label_answer10', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer2_10" value="2" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.3
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0]}
instance_id: 18024 <-> row_number: 329
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 329 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [2, 2], 'elicited_label_answer2': [1, 1], 'elicited_label_answer3': [1, 1], 'elicited_label_answer4': [2, 1], 'elicited_label_answer5': [1, 1], 'elicited_label_answer6': [2, 2], 'elicited_label_answer7': [1, 1], 'elicited_label_answer8': [1, 1], 'elicited_label_answer9': [2, 2], 'elicited_label_answer10': [1, 1]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
Executing one action: self.actions.modify_radio('elicited_label_answer1', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer2_1" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
Executing one action: self.actions.modify_radio('elicited_label_answer2', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer2_2" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
Executing one action: self.actions.modify_radio('elicited_label_answer3', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer3_3" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
Executing one action: self.actions.modify_radio('elicited_label_answer4', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer2_4" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
Executing one action: self.actions.modify_radio('elicited_label_answer5', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer2_5" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
Executing one action: self.actions.modify_radio('elicited_label_answer6', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer2_6" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
Executing one action: self.actions.modify_radio('elicited_label_answer8', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
Executing one action: self.actions.modify_radio('elicited_label_answer9', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer3_9" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
Executing one action: self.actions.modify_radio('elicited_label_answer10', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer3_10" value="1" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0]}
instance_id: 17969 <-> row_number: 274
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 274 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [2, 2], 'elicited_label_answer2': [2, 1], 'elicited_label_answer3': [1, 1], 'elicited_label_answer4': [3, 3], 'elicited_label_answer5': [3, 3], 'elicited_label_answer6': [2, 2], 'elicited_label_answer7': [2, 1], 'elicited_label_answer8': [2, 1], 'elicited_label_answer9': [2, 2], 'elicited_label_answer10': [2, 1]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
Executing one action: self.actions.modify_radio('elicited_label_answer1', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer2_1" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
Executing one action: self.actions.modify_radio('elicited_label_answer2', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer2_2" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
Executing one action: self.actions.modify_radio('elicited_label_answer3', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer3_3" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
Executing one action: self.actions.modify_radio('elicited_label_answer4', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer2_4" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
Executing one action: self.actions.modify_radio('elicited_label_answer5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
Executing one action: self.actions.modify_radio('elicited_label_answer6', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer2_6" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
Executing one action: self.actions.modify_radio('elicited_label_answer7', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer2_7" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
Executing one action: self.actions.modify_radio('elicited_label_answer8', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer2_8" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
Executing one action: self.actions.modify_radio('elicited_label_answer9', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer2_9" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
Executing one action: self.actions.modify_radio('elicited_label_answer10', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer2_10" value="2" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.8
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0]}
instance_id: 18102 <-> row_number: 407
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 407 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [1, 2], 'elicited_label_answer2': [1, 2], 'elicited_label_answer3': [2, 2], 'elicited_label_answer4': [2, 2], 'elicited_label_answer5': [2, 2], 'elicited_label_answer6': [2, 2], 'elicited_label_answer7': [1, 2], 'elicited_label_answer8': [2, 2], 'elicited_label_answer9': [2, 2], 'elicited_label_answer10': [2, 2]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
Executing one action: self.actions.modify_radio('elicited_label_answer1', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer2_1" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
Executing one action: self.actions.modify_radio('elicited_label_answer2', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer2_2" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
Executing one action: self.actions.modify_radio('elicited_label_answer3', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer2_3" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
Executing one action: self.actions.modify_radio('elicited_label_answer5', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer2_5" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
Executing one action: self.actions.modify_radio('elicited_label_answer6', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer2_6" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
Executing one action: self.actions.modify_radio('elicited_label_answer7', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer1_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
Executing one action: self.actions.modify_radio('elicited_label_answer9', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer2_9" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
Executing one action: self.actions.modify_radio('elicited_label_answer10', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer2_10" value="2" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.5
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0]}
instance_id: 18126 <-> row_number: 431
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 431 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [3, 3], 'elicited_label_answer2': [1, 1], 'elicited_label_answer3': [2, 1], 'elicited_label_answer4': [3, 3], 'elicited_label_answer5': [1, 2], 'elicited_label_answer6': [1, 2], 'elicited_label_answer7': [1, 1], 'elicited_label_answer8': [2, 1], 'elicited_label_answer9': [2, 1], 'elicited_label_answer10': [1, 1]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
Executing one action: self.actions.modify_radio('elicited_label_answer1', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer2_1" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
Executing one action: self.actions.modify_radio('elicited_label_answer2', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer2_2" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
Executing one action: self.actions.modify_radio('elicited_label_answer3', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer2_3" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
Executing one action: self.actions.modify_radio('elicited_label_answer4', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer2_4" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
Executing one action: self.actions.modify_radio('elicited_label_answer5', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer2_5" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
Executing one action: self.actions.modify_radio('elicited_label_answer6', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
Executing one action: self.actions.modify_radio('elicited_label_answer7', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer2_7" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
Executing one action: self.actions.modify_radio('elicited_label_answer8', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer1_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
Executing one action: self.actions.modify_radio('elicited_label_answer9', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer2_9" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
Executing one action: self.actions.modify_radio('elicited_label_answer10', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer3_10" value="1" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.3
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0]}
instance_id: 17757 <-> row_number: 62
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 62 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [1, 1], 'elicited_label_answer2': [2, 2], 'elicited_label_answer3': [1, 1], 'elicited_label_answer4': [1, 2], 'elicited_label_answer5': [2, 2], 'elicited_label_answer6': [1, 1], 'elicited_label_answer7': [2, 2], 'elicited_label_answer8': [1, 1], 'elicited_label_answer9': [2, 2], 'elicited_label_answer10': [1, 2]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
Executing one action: self.actions.modify_radio('elicited_label_answer2', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer2_2" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
Executing one action: self.actions.modify_radio('elicited_label_answer3', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer3_3" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
Executing one action: self.actions.modify_radio('elicited_label_answer6', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer2_6" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
Executing one action: self.actions.modify_radio('elicited_label_answer7', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer2_7" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
Executing one action: self.actions.modify_radio('elicited_label_answer8', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer2_8" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
Executing one action: self.actions.modify_radio('elicited_label_answer9', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer9" id="answer2_9" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
Executing one action: self.actions.modify_radio('elicited_label_answer10', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.4
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0]}
instance_id: 17827 <-> row_number: 132
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 132 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [2, 2], 'elicited_label_answer2': [1, 1], 'elicited_label_answer3': [3, 3], 'elicited_label_answer4': [1, 1], 'elicited_label_answer5': [1, 1], 'elicited_label_answer6': [1, 1], 'elicited_label_answer7': [1, 1], 'elicited_label_answer8': [3, 3], 'elicited_label_answer9': [1, 1], 'elicited_label_answer10': [3, 2]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
Executing one action: self.actions.modify_radio('elicited_label_answer2', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer2_2" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
Executing one action: self.actions.modify_radio('elicited_label_answer3', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer1_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
Executing one action: self.actions.modify_radio('elicited_label_answer4', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer3_4" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
Executing one action: self.actions.modify_radio('elicited_label_answer6', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
Executing one action: self.actions.modify_radio('elicited_label_answer7', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer7" id="answer2_7" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
Executing one action: self.actions.modify_radio('elicited_label_answer8', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer2_8" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
Executing one action: self.actions.modify_radio('elicited_label_answer9', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
Executing one action: self.actions.modify_radio('elicited_label_answer10', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.2
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 17805 <-> row_number: 110
 --> inputs: ['elicited_label_answer1', 'elicited_label_answer2', 'elicited_label_answer3', 'elicited_label_answer4', 'elicited_label_answer5', 'elicited_label_answer6', 'elicited_label_answer7', 'elicited_label_answer8', 'elicited_label_answer9', 'elicited_label_answer10']
 --> Looking up gold labels from row index 110 of `input.csv` (unique inputs). 
 --> input labels: {'elicited_label_answer1': [3, 3], 'elicited_label_answer2': [2, 3], 'elicited_label_answer3': [2, 3], 'elicited_label_answer4': [2, 3], 'elicited_label_answer5': [3, 3], 'elicited_label_answer6': [2, 1], 'elicited_label_answer7': [2, 3], 'elicited_label_answer8': [2, 3], 'elicited_label_answer9': [2, 3], 'elicited_label_answer10': [2, 3]}
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer1
Executing one action: self.actions.modify_radio('elicited_label_answer1', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer1" id="answer1_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer2
Executing one action: self.actions.modify_radio('elicited_label_answer2', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer2" id="answer2_2" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer3
Executing one action: self.actions.modify_radio('elicited_label_answer3', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer3" id="answer2_3" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer4
Executing one action: self.actions.modify_radio('elicited_label_answer4', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer4" id="answer1_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer5
Executing one action: self.actions.modify_radio('elicited_label_answer5', '3')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer5" id="answer1_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer6
Executing one action: self.actions.modify_radio('elicited_label_answer6', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer6" id="answer2_6" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer7
Executing one action: self.actions.modify_radio('elicited_label_answer7', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer8
Executing one action: self.actions.modify_radio('elicited_label_answer8', '1')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer8" id="answer3_8" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer9
Executing one action: self.actions.modify_radio('elicited_label_answer9', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)` - - - - - -  
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
about to try executing one action, on the following input: elicited_label_answer10
Executing one action: self.actions.modify_radio('elicited_label_answer10', '2')
We are going to select this radio button: <input class="form-check-input" type="radio" name="elicited_label_answer10" id="answer2_10" value="2" required="">
input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : []
 visible_values : []
input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`elicited_label_answer1`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer2`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer3`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer4`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer5`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer6`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`elicited_label_answer7`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer8`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer9`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`elicited_label_answer10`, type=`radio`, task=`Sherlock IMG 2 TXT Eval 15`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.6
 --> Per-instance per-field breakdown: {'radio': [0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0]}
 = = = = = = = = = = = = starting new task: `wikiHow step-goal linking pilot cleanse-url` = = = = = = = = = = = = 
First instance id: 27732
instance_id: 27770 <-> row_number: 38
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 38 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [0, 0, 0], 'candidate_1': [3, 1, 2], 'candidate_2': [0, 0, 2], 'candidate_3': [0, 1, 0], 'candidate_4': [1, 1, 1], 'candidate_5': [2, 0, 1], 'candidate_6': [0, 0, 0], 'candidate_7': [2, 1, 2], 'candidate_8': [1, 1, 1], 'candidate_9': [2, 1, 0], 'candidate_10': [3, 0, 3]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
Executing one action: self.actions.modify_radio('candidate_0', '0')
We are going to select this radio button: <input type="radio" name="candidate_0" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
Executing one action: self.actions.modify_radio('candidate_1', '3')
We are going to select this radio button: <input type="radio" name="candidate_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
Executing one action: self.actions.modify_radio('candidate_2', '0')
We are going to select this radio button: <input type="radio" name="candidate_2" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
Executing one action: self.actions.modify_radio('candidate_3', '0')
We are going to select this radio button: <input type="radio" name="candidate_3" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
Executing one action: self.actions.modify_radio('candidate_4', '0')
We are going to select this radio button: <input type="radio" name="candidate_4" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
Executing one action: self.actions.modify_radio('candidate_5', '0')
We are going to select this radio button: <input type="radio" name="candidate_5" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
Executing one action: self.actions.modify_radio('candidate_6', '0')
We are going to select this radio button: <input type="radio" name="candidate_6" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
Executing one action: self.actions.modify_radio('candidate_7', '3')
We are going to select this radio button: <input type="radio" name="candidate_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
Executing one action: self.actions.modify_radio('candidate_8', '4')
We are going to select this radio button: <input type="radio" name="candidate_8" value="4" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
Executing one action: self.actions.modify_radio('candidate_9', '0')
We are going to select this radio button: <input type="radio" name="candidate_9" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
Executing one action: self.actions.modify_radio('candidate_10', '3')
We are going to select this radio button: <input type="radio" name="candidate_10" value="3" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[2, 1, 0]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[3, 0, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.3333333333333333
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0]}
instance_id: 27788 <-> row_number: 56
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 56 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [1, 0, 0], 'candidate_1': [1, 1, 2], 'candidate_2': [2, 1, 0], 'candidate_3': [0, 0, 0], 'candidate_4': [0, 1, 0], 'candidate_5': [1, 1, 2], 'candidate_6': [1, 1, 1], 'candidate_7': [1, 0, 1], 'candidate_8': [2, 1, 1], 'candidate_9': [1, 1, 0], 'candidate_10': [0, 0, 0]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
Executing one action: self.actions.modify_radio('candidate_0', '3')
We are going to select this radio button: <input type="radio" name="candidate_0" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
Executing one action: self.actions.modify_radio('candidate_1', '3')
We are going to select this radio button: <input type="radio" name="candidate_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
Executing one action: self.actions.modify_radio('candidate_2', '0')
We are going to select this radio button: <input type="radio" name="candidate_2" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
Executing one action: self.actions.modify_radio('candidate_3', '0')
We are going to select this radio button: <input type="radio" name="candidate_3" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
Executing one action: self.actions.modify_radio('candidate_4', '0')
We are going to select this radio button: <input type="radio" name="candidate_4" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
Executing one action: self.actions.modify_radio('candidate_5', '3')
We are going to select this radio button: <input type="radio" name="candidate_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
Executing one action: self.actions.modify_radio('candidate_6', '3')
We are going to select this radio button: <input type="radio" name="candidate_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
Executing one action: self.actions.modify_radio('candidate_7', '3')
We are going to select this radio button: <input type="radio" name="candidate_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
Executing one action: self.actions.modify_radio('candidate_8', '3')
We are going to select this radio button: <input type="radio" name="candidate_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
Executing one action: self.actions.modify_radio('candidate_9', '0')
We are going to select this radio button: <input type="radio" name="candidate_9" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
Executing one action: self.actions.modify_radio('candidate_10', '3')
We are going to select this radio button: <input type="radio" name="candidate_10" value="3" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 1, 0]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 0, 0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 27800 <-> row_number: 68
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 68 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [2, 2, 3], 'candidate_1': [0, 1, 3], 'candidate_2': [0, 0, 3], 'candidate_3': [0, 0, 0], 'candidate_4': [0, 2, 3], 'candidate_5': [3, 3, 3], 'candidate_6': [3, 3, 3], 'candidate_7': [0, 0, 3], 'candidate_8': [2, 2, 2], 'candidate_9': [0, 2, 3], 'candidate_10': [2, 3, 3]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
Executing one action: self.actions.modify_radio('candidate_0', '2')
We are going to select this radio button: <input type="radio" name="candidate_0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
Executing one action: self.actions.modify_radio('candidate_1', '2')
We are going to select this radio button: <input type="radio" name="candidate_1" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
Executing one action: self.actions.modify_radio('candidate_2', '0')
We are going to select this radio button: <input type="radio" name="candidate_2" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
Executing one action: self.actions.modify_radio('candidate_3', '2')
We are going to select this radio button: <input type="radio" name="candidate_3" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
Executing one action: self.actions.modify_radio('candidate_4', '3')
We are going to select this radio button: <input type="radio" name="candidate_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
Executing one action: self.actions.modify_radio('candidate_5', '3')
We are going to select this radio button: <input type="radio" name="candidate_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
Executing one action: self.actions.modify_radio('candidate_6', '3')
We are going to select this radio button: <input type="radio" name="candidate_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
Executing one action: self.actions.modify_radio('candidate_7', '0')
We are going to select this radio button: <input type="radio" name="candidate_7" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
Executing one action: self.actions.modify_radio('candidate_8', '1')
We are going to select this radio button: <input type="radio" name="candidate_8" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
Executing one action: self.actions.modify_radio('candidate_9', '3')
We are going to select this radio button: <input type="radio" name="candidate_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
Executing one action: self.actions.modify_radio('candidate_10', '3')
We are going to select this radio button: <input type="radio" name="candidate_10" value="3" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[2, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.3333333333333333
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]}
instance_id: 27798 <-> row_number: 66
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 66 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [3, 3, 3], 'candidate_1': [3, 2, 2], 'candidate_2': [2, 0, 1], 'candidate_3': [3, 1, 1], 'candidate_4': [2, 0, 1], 'candidate_5': [3, 3, 1], 'candidate_6': [3, 3, 1], 'candidate_7': [3, 3, 3], 'candidate_8': [3, 1, 3], 'candidate_9': [1, 0, 0], 'candidate_10': [3, 1, 1]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
Executing one action: self.actions.modify_radio('candidate_0', '3')
We are going to select this radio button: <input type="radio" name="candidate_0" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
Executing one action: self.actions.modify_radio('candidate_1', '3')
We are going to select this radio button: <input type="radio" name="candidate_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
Executing one action: self.actions.modify_radio('candidate_2', '3')
We are going to select this radio button: <input type="radio" name="candidate_2" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
Executing one action: self.actions.modify_radio('candidate_3', '3')
We are going to select this radio button: <input type="radio" name="candidate_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
Executing one action: self.actions.modify_radio('candidate_4', '3')
We are going to select this radio button: <input type="radio" name="candidate_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
Executing one action: self.actions.modify_radio('candidate_5', '3')
We are going to select this radio button: <input type="radio" name="candidate_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
Executing one action: self.actions.modify_radio('candidate_6', '3')
We are going to select this radio button: <input type="radio" name="candidate_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
Executing one action: self.actions.modify_radio('candidate_7', '3')
We are going to select this radio button: <input type="radio" name="candidate_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
Executing one action: self.actions.modify_radio('candidate_8', '3')
We are going to select this radio button: <input type="radio" name="candidate_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
Executing one action: self.actions.modify_radio('candidate_9', '3')
We are going to select this radio button: <input type="radio" name="candidate_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
Executing one action: self.actions.modify_radio('candidate_10', '3')
We are going to select this radio button: <input type="radio" name="candidate_10" value="3" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[3, 1, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 0, 0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[3, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.3333333333333333
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0]}
instance_id: 27733 <-> row_number: 1
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 1 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [1, 2, 2], 'candidate_1': [1, 0, 2], 'candidate_2': [0, 1, 3], 'candidate_3': [1, 1, 0], 'candidate_4': [0, 3, 2], 'candidate_5': [1, 2, 1], 'candidate_6': [1, 3, 3], 'candidate_7': [1, 3, 3], 'candidate_8': [1, 3, 2], 'candidate_9': [1, 3, 2], 'candidate_10': [1, 1, 1]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
Executing one action: self.actions.modify_radio('candidate_0', '0')
We are going to select this radio button: <input type="radio" name="candidate_0" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
Executing one action: self.actions.modify_radio('candidate_1', '0')
We are going to select this radio button: <input type="radio" name="candidate_1" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
Executing one action: self.actions.modify_radio('candidate_2', '0')
We are going to select this radio button: <input type="radio" name="candidate_2" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
Executing one action: self.actions.modify_radio('candidate_3', '0')
We are going to select this radio button: <input type="radio" name="candidate_3" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
Executing one action: self.actions.modify_radio('candidate_4', '1')
We are going to select this radio button: <input type="radio" name="candidate_4" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
Executing one action: self.actions.modify_radio('candidate_5', '0')
We are going to select this radio button: <input type="radio" name="candidate_5" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
Executing one action: self.actions.modify_radio('candidate_6', '3')
We are going to select this radio button: <input type="radio" name="candidate_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
Executing one action: self.actions.modify_radio('candidate_7', '3')
We are going to select this radio button: <input type="radio" name="candidate_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
Executing one action: self.actions.modify_radio('candidate_8', '3')
We are going to select this radio button: <input type="radio" name="candidate_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
Executing one action: self.actions.modify_radio('candidate_9', '2')
We are going to select this radio button: <input type="radio" name="candidate_9" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
Executing one action: self.actions.modify_radio('candidate_10', '0')
We are going to select this radio button: <input type="radio" name="candidate_10" value="0" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 3, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 27767 <-> row_number: 35
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 35 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [2, 0, 2], 'candidate_1': [0, 1, 1], 'candidate_2': [0, 1, 0], 'candidate_3': [0, 0, 0], 'candidate_4': [1, 1, 1], 'candidate_5': [0, 1, 1], 'candidate_6': [1, 0, 2], 'candidate_7': [2, 1, 2], 'candidate_8': [0, 2, 0], 'candidate_9': [0, 1, 2], 'candidate_10': [0, 1, 0]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
Executing one action: self.actions.modify_radio('candidate_0', '0')
We are going to select this radio button: <input type="radio" name="candidate_0" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
Executing one action: self.actions.modify_radio('candidate_1', '2')
We are going to select this radio button: <input type="radio" name="candidate_1" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
Executing one action: self.actions.modify_radio('candidate_2', '0')
We are going to select this radio button: <input type="radio" name="candidate_2" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
Executing one action: self.actions.modify_radio('candidate_3', '0')
We are going to select this radio button: <input type="radio" name="candidate_3" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
Executing one action: self.actions.modify_radio('candidate_4', '1')
We are going to select this radio button: <input type="radio" name="candidate_4" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
Executing one action: self.actions.modify_radio('candidate_5', '0')
We are going to select this radio button: <input type="radio" name="candidate_5" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
Executing one action: self.actions.modify_radio('candidate_6', '3')
We are going to select this radio button: <input type="radio" name="candidate_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
Executing one action: self.actions.modify_radio('candidate_7', '3')
We are going to select this radio button: <input type="radio" name="candidate_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
Executing one action: self.actions.modify_radio('candidate_8', '0')
We are going to select this radio button: <input type="radio" name="candidate_8" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
Executing one action: self.actions.modify_radio('candidate_9', '2')
We are going to select this radio button: <input type="radio" name="candidate_9" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
Executing one action: self.actions.modify_radio('candidate_10', '0')
We are going to select this radio button: <input type="radio" name="candidate_10" value="0" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 2, 0]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 1, 0]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.6666666666666666
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0]}
instance_id: 27776 <-> row_number: 44
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 44 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [1, 0, 0], 'candidate_1': [2, 1, 1], 'candidate_2': [1, 2, 3], 'candidate_3': [3, 3, 3], 'candidate_4': [1, 1, 2], 'candidate_5': [3, 3, 3], 'candidate_6': [3, 3, 3], 'candidate_7': [0, 1, 2], 'candidate_8': [2, 2, 3], 'candidate_9': [2, 2, 3], 'candidate_10': [3, 3, 3]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
Executing one action: self.actions.modify_radio('candidate_0', '0')
We are going to select this radio button: <input type="radio" name="candidate_0" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
Executing one action: self.actions.modify_radio('candidate_1', '3')
We are going to select this radio button: <input type="radio" name="candidate_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
Executing one action: self.actions.modify_radio('candidate_2', '2')
We are going to select this radio button: <input type="radio" name="candidate_2" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
Executing one action: self.actions.modify_radio('candidate_3', '3')
We are going to select this radio button: <input type="radio" name="candidate_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
Executing one action: self.actions.modify_radio('candidate_4', '0')
We are going to select this radio button: <input type="radio" name="candidate_4" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
Executing one action: self.actions.modify_radio('candidate_5', '3')
We are going to select this radio button: <input type="radio" name="candidate_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
Executing one action: self.actions.modify_radio('candidate_6', '3')
We are going to select this radio button: <input type="radio" name="candidate_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
Executing one action: self.actions.modify_radio('candidate_7', '2')
We are going to select this radio button: <input type="radio" name="candidate_7" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
Executing one action: self.actions.modify_radio('candidate_8', '2')
We are going to select this radio button: <input type="radio" name="candidate_8" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
Executing one action: self.actions.modify_radio('candidate_9', '2')
We are going to select this radio button: <input type="radio" name="candidate_9" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
Executing one action: self.actions.modify_radio('candidate_10', '3')
We are going to select this radio button: <input type="radio" name="candidate_10" value="3" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[2, 2, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[2, 2, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[3, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 1.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0]}
instance_id: 27769 <-> row_number: 37
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 37 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [2, 1, 3], 'candidate_1': [2, 0, 3], 'candidate_2': [3, 1, 3], 'candidate_3': [1, 1, 3], 'candidate_4': [0, 2, 3], 'candidate_5': [3, 1, 3], 'candidate_6': [2, 0, 1], 'candidate_7': [3, 1, 3], 'candidate_8': [0, 1, 2], 'candidate_9': [0, 1, 2], 'candidate_10': [2, 0, 3]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
Executing one action: self.actions.modify_radio('candidate_0', '3')
We are going to select this radio button: <input type="radio" name="candidate_0" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
Executing one action: self.actions.modify_radio('candidate_1', '3')
We are going to select this radio button: <input type="radio" name="candidate_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
Executing one action: self.actions.modify_radio('candidate_2', '3')
We are going to select this radio button: <input type="radio" name="candidate_2" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
Executing one action: self.actions.modify_radio('candidate_3', '0')
We are going to select this radio button: <input type="radio" name="candidate_3" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
Executing one action: self.actions.modify_radio('candidate_4', '3')
We are going to select this radio button: <input type="radio" name="candidate_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
Executing one action: self.actions.modify_radio('candidate_5', '3')
We are going to select this radio button: <input type="radio" name="candidate_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
Executing one action: self.actions.modify_radio('candidate_6', '3')
We are going to select this radio button: <input type="radio" name="candidate_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
Executing one action: self.actions.modify_radio('candidate_7', '3')
We are going to select this radio button: <input type="radio" name="candidate_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
Executing one action: self.actions.modify_radio('candidate_8', '3')
We are going to select this radio button: <input type="radio" name="candidate_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
Executing one action: self.actions.modify_radio('candidate_9', '1')
We are going to select this radio button: <input type="radio" name="candidate_9" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
Executing one action: self.actions.modify_radio('candidate_10', '3')
We are going to select this radio button: <input type="radio" name="candidate_10" value="3" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[2, 0, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 27740 <-> row_number: 8
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 8 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [1, 2, 0], 'candidate_1': [0, 0, 0], 'candidate_2': [0, 0, 0], 'candidate_3': [1, 3, 1], 'candidate_4': [0, 3, 3], 'candidate_5': [1, 3, 3], 'candidate_6': [1, 3, 1], 'candidate_7': [1, 1, 0], 'candidate_8': [1, 0, 1], 'candidate_9': [1, 3, 3], 'candidate_10': [1, 3, 3]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
Executing one action: self.actions.modify_radio('candidate_0', '2')
We are going to select this radio button: <input type="radio" name="candidate_0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
Executing one action: self.actions.modify_radio('candidate_1', '0')
We are going to select this radio button: <input type="radio" name="candidate_1" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
Executing one action: self.actions.modify_radio('candidate_2', '0')
We are going to select this radio button: <input type="radio" name="candidate_2" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
Executing one action: self.actions.modify_radio('candidate_3', '1')
We are going to select this radio button: <input type="radio" name="candidate_3" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
Executing one action: self.actions.modify_radio('candidate_4', '3')
We are going to select this radio button: <input type="radio" name="candidate_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
Executing one action: self.actions.modify_radio('candidate_5', '2')
We are going to select this radio button: <input type="radio" name="candidate_5" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
Executing one action: self.actions.modify_radio('candidate_6', '3')
We are going to select this radio button: <input type="radio" name="candidate_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
Executing one action: self.actions.modify_radio('candidate_7', '0')
We are going to select this radio button: <input type="radio" name="candidate_7" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
Executing one action: self.actions.modify_radio('candidate_8', '1')
We are going to select this radio button: <input type="radio" name="candidate_8" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
Executing one action: self.actions.modify_radio('candidate_9', '3')
We are going to select this radio button: <input type="radio" name="candidate_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
Executing one action: self.actions.modify_radio('candidate_10', '3')
We are going to select this radio button: <input type="radio" name="candidate_10" value="3" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 0, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 1.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0]}
instance_id: 27748 <-> row_number: 16
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 16 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [1, 0, 3], 'candidate_1': [1, 1, 3], 'candidate_2': [1, 0, 3], 'candidate_3': [0, 0, 3], 'candidate_4': [0, 1, 1], 'candidate_5': [0, 0, 0], 'candidate_6': [0, 1, 0], 'candidate_7': [0, 0, 2], 'candidate_8': [0, 1, 3], 'candidate_9': [3, 2, 3], 'candidate_10': [0, 1, 2]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
Executing one action: self.actions.modify_radio('candidate_0', '3')
We are going to select this radio button: <input type="radio" name="candidate_0" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
Executing one action: self.actions.modify_radio('candidate_1', '3')
We are going to select this radio button: <input type="radio" name="candidate_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
Executing one action: self.actions.modify_radio('candidate_2', '3')
We are going to select this radio button: <input type="radio" name="candidate_2" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
Executing one action: self.actions.modify_radio('candidate_3', '3')
We are going to select this radio button: <input type="radio" name="candidate_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
Executing one action: self.actions.modify_radio('candidate_4', '3')
We are going to select this radio button: <input type="radio" name="candidate_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
Executing one action: self.actions.modify_radio('candidate_5', '3')
We are going to select this radio button: <input type="radio" name="candidate_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
Executing one action: self.actions.modify_radio('candidate_6', '0')
We are going to select this radio button: <input type="radio" name="candidate_6" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
Executing one action: self.actions.modify_radio('candidate_7', '3')
We are going to select this radio button: <input type="radio" name="candidate_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
Executing one action: self.actions.modify_radio('candidate_8', '2')
We are going to select this radio button: <input type="radio" name="candidate_8" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
Executing one action: self.actions.modify_radio('candidate_9', '3')
We are going to select this radio button: <input type="radio" name="candidate_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
Executing one action: self.actions.modify_radio('candidate_10', '3')
We are going to select this radio button: <input type="radio" name="candidate_10" value="3" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 1, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[3, 2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.3333333333333333
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0]}
instance_id: 27771 <-> row_number: 39
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 39 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [0, 0, 1], 'candidate_1': [1, 1, 2], 'candidate_2': [0, 0, 3], 'candidate_3': [0, 2, 2], 'candidate_4': [1, 0, 2], 'candidate_5': [1, 1, 2], 'candidate_6': [0, 0, 3], 'candidate_7': [1, 0, 1], 'candidate_8': [1, 1, 3], 'candidate_9': [1, 1, 2], 'candidate_10': [1, 1, 3]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
Executing one action: self.actions.modify_radio('candidate_0', '0')
We are going to select this radio button: <input type="radio" name="candidate_0" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
Executing one action: self.actions.modify_radio('candidate_1', '0')
We are going to select this radio button: <input type="radio" name="candidate_1" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
Executing one action: self.actions.modify_radio('candidate_2', '0')
We are going to select this radio button: <input type="radio" name="candidate_2" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
Executing one action: self.actions.modify_radio('candidate_3', '0')
We are going to select this radio button: <input type="radio" name="candidate_3" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
Executing one action: self.actions.modify_radio('candidate_4', '3')
We are going to select this radio button: <input type="radio" name="candidate_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
Executing one action: self.actions.modify_radio('candidate_5', '0')
We are going to select this radio button: <input type="radio" name="candidate_5" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
Executing one action: self.actions.modify_radio('candidate_6', '2')
We are going to select this radio button: <input type="radio" name="candidate_6" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
Executing one action: self.actions.modify_radio('candidate_7', '0')
We are going to select this radio button: <input type="radio" name="candidate_7" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
Executing one action: self.actions.modify_radio('candidate_8', '3')
We are going to select this radio button: <input type="radio" name="candidate_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
Executing one action: self.actions.modify_radio('candidate_9', '2')
We are going to select this radio button: <input type="radio" name="candidate_9" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
Executing one action: self.actions.modify_radio('candidate_10', '2')
We are going to select this radio button: <input type="radio" name="candidate_10" value="2" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 1, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 1, 3]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 27746 <-> row_number: 14
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 14 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [3, 2, 3], 'candidate_1': [1, 0, 2], 'candidate_2': [1, 1, 1], 'candidate_3': [2, 2, 2], 'candidate_4': [2, 1, 2], 'candidate_5': [2, 2, 2], 'candidate_6': [1, 0, 3], 'candidate_7': [3, 1, 3], 'candidate_8': [3, 2, 3], 'candidate_9': [3, 2, 3], 'candidate_10': [2, 3, 2]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
Executing one action: self.actions.modify_radio('candidate_0', '3')
We are going to select this radio button: <input type="radio" name="candidate_0" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
Executing one action: self.actions.modify_radio('candidate_1', '3')
We are going to select this radio button: <input type="radio" name="candidate_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
Executing one action: self.actions.modify_radio('candidate_2', '3')
We are going to select this radio button: <input type="radio" name="candidate_2" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
Executing one action: self.actions.modify_radio('candidate_3', '3')
We are going to select this radio button: <input type="radio" name="candidate_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
Executing one action: self.actions.modify_radio('candidate_4', '3')
We are going to select this radio button: <input type="radio" name="candidate_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
Executing one action: self.actions.modify_radio('candidate_5', '3')
We are going to select this radio button: <input type="radio" name="candidate_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
Executing one action: self.actions.modify_radio('candidate_6', '3')
We are going to select this radio button: <input type="radio" name="candidate_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
Executing one action: self.actions.modify_radio('candidate_7', '3')
We are going to select this radio button: <input type="radio" name="candidate_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
Executing one action: self.actions.modify_radio('candidate_8', '3')
We are going to select this radio button: <input type="radio" name="candidate_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
Executing one action: self.actions.modify_radio('candidate_9', '3')
We are going to select this radio button: <input type="radio" name="candidate_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
Executing one action: self.actions.modify_radio('candidate_10', '3')
We are going to select this radio button: <input type="radio" name="candidate_10" value="3" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[3, 2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[3, 2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[2, 3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.6666666666666666
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0]}
instance_id: 27772 <-> row_number: 40
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 40 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [1, 1, 1], 'candidate_1': [1, 0, 1], 'candidate_2': [2, 1, 1], 'candidate_3': [1, 2, 0], 'candidate_4': [0, 1, 1], 'candidate_5': [0, 1, 1], 'candidate_6': [3, 1, 3], 'candidate_7': [1, 2, 0], 'candidate_8': [2, 1, 1], 'candidate_9': [1, 1, 1], 'candidate_10': [1, 1, 1]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
Executing one action: self.actions.modify_radio('candidate_0', '1')
We are going to select this radio button: <input type="radio" name="candidate_0" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
Executing one action: self.actions.modify_radio('candidate_1', '0')
We are going to select this radio button: <input type="radio" name="candidate_1" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
Executing one action: self.actions.modify_radio('candidate_2', '2')
We are going to select this radio button: <input type="radio" name="candidate_2" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
Executing one action: self.actions.modify_radio('candidate_3', '0')
We are going to select this radio button: <input type="radio" name="candidate_3" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
Executing one action: self.actions.modify_radio('candidate_4', '0')
We are going to select this radio button: <input type="radio" name="candidate_4" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
Executing one action: self.actions.modify_radio('candidate_5', '1')
We are going to select this radio button: <input type="radio" name="candidate_5" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
Executing one action: self.actions.modify_radio('candidate_6', '3')
We are going to select this radio button: <input type="radio" name="candidate_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
Executing one action: self.actions.modify_radio('candidate_7', '0')
We are going to select this radio button: <input type="radio" name="candidate_7" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
Executing one action: self.actions.modify_radio('candidate_8', '0')
We are going to select this radio button: <input type="radio" name="candidate_8" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
Executing one action: self.actions.modify_radio('candidate_9', '0')
We are going to select this radio button: <input type="radio" name="candidate_9" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
Executing one action: self.actions.modify_radio('candidate_10', '2')
We are going to select this radio button: <input type="radio" name="candidate_10" value="2" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.0
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 27759 <-> row_number: 27
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 27 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [2, 1, 1], 'candidate_1': [1, 0, 2], 'candidate_2': [3, 1, 2], 'candidate_3': [0, 1, 1], 'candidate_4': [1, 0, 2], 'candidate_5': [0, 0, 1], 'candidate_6': [3, 0, 3], 'candidate_7': [0, 1, 0], 'candidate_8': [3, 1, 2], 'candidate_9': [2, 0, 2], 'candidate_10': [3, 0, 2]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
Executing one action: self.actions.modify_radio('candidate_0', '3')
We are going to select this radio button: <input type="radio" name="candidate_0" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
Executing one action: self.actions.modify_radio('candidate_1', '2')
We are going to select this radio button: <input type="radio" name="candidate_1" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
Executing one action: self.actions.modify_radio('candidate_2', '3')
We are going to select this radio button: <input type="radio" name="candidate_2" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
Executing one action: self.actions.modify_radio('candidate_3', '3')
We are going to select this radio button: <input type="radio" name="candidate_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
Executing one action: self.actions.modify_radio('candidate_4', '3')
We are going to select this radio button: <input type="radio" name="candidate_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
Executing one action: self.actions.modify_radio('candidate_5', '1')
We are going to select this radio button: <input type="radio" name="candidate_5" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
Executing one action: self.actions.modify_radio('candidate_6', '3')
We are going to select this radio button: <input type="radio" name="candidate_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
Executing one action: self.actions.modify_radio('candidate_7', '0')
We are going to select this radio button: <input type="radio" name="candidate_7" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
Executing one action: self.actions.modify_radio('candidate_8', '3')
We are going to select this radio button: <input type="radio" name="candidate_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
Executing one action: self.actions.modify_radio('candidate_9', '3')
We are going to select this radio button: <input type="radio" name="candidate_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
Executing one action: self.actions.modify_radio('candidate_10', '3')
We are going to select this radio button: <input type="radio" name="candidate_10" value="3" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[3, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[2, 0, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[3, 0, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.6666666666666666
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0]}
instance_id: 27801 <-> row_number: 69
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 69 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [1, 1, 3], 'candidate_1': [0, 2, 3], 'candidate_2': [2, 0, 3], 'candidate_3': [3, 2, 3], 'candidate_4': [1, 0, 3], 'candidate_5': [2, 3, 3], 'candidate_6': [3, 0, 0], 'candidate_7': [2, 1, 3], 'candidate_8': [1, 3, 3], 'candidate_9': [0, 3, 3], 'candidate_10': [2, 2, 3]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
Executing one action: self.actions.modify_radio('candidate_0', '0')
We are going to select this radio button: <input type="radio" name="candidate_0" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
Executing one action: self.actions.modify_radio('candidate_1', '3')
We are going to select this radio button: <input type="radio" name="candidate_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
Executing one action: self.actions.modify_radio('candidate_2', '2')
We are going to select this radio button: <input type="radio" name="candidate_2" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
Executing one action: self.actions.modify_radio('candidate_3', '3')
We are going to select this radio button: <input type="radio" name="candidate_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
Executing one action: self.actions.modify_radio('candidate_4', '0')
We are going to select this radio button: <input type="radio" name="candidate_4" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
Executing one action: self.actions.modify_radio('candidate_5', '3')
We are going to select this radio button: <input type="radio" name="candidate_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
Executing one action: self.actions.modify_radio('candidate_6', '0')
We are going to select this radio button: <input type="radio" name="candidate_6" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
Executing one action: self.actions.modify_radio('candidate_7', '0')
We are going to select this radio button: <input type="radio" name="candidate_7" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
Executing one action: self.actions.modify_radio('candidate_8', '3')
We are going to select this radio button: <input type="radio" name="candidate_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
Executing one action: self.actions.modify_radio('candidate_9', '3')
We are going to select this radio button: <input type="radio" name="candidate_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
Executing one action: self.actions.modify_radio('candidate_10', '3')
We are going to select this radio button: <input type="radio" name="candidate_10" value="3" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[2, 2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.6666666666666666
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0]}
instance_id: 27816 <-> row_number: 84
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 84 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [3, 3, 1], 'candidate_1': [2, 2, 1], 'candidate_2': [3, 3, 0], 'candidate_3': [2, 3, 1], 'candidate_4': [1, 0, 1], 'candidate_5': [1, 3, 1], 'candidate_6': [2, 1, 0], 'candidate_7': [3, 2, 1], 'candidate_8': [2, 0, 0], 'candidate_9': [3, 3, 1], 'candidate_10': [3, 3, 1]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
Executing one action: self.actions.modify_radio('candidate_0', '3')
We are going to select this radio button: <input type="radio" name="candidate_0" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
Executing one action: self.actions.modify_radio('candidate_1', '3')
We are going to select this radio button: <input type="radio" name="candidate_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
Executing one action: self.actions.modify_radio('candidate_2', '3')
We are going to select this radio button: <input type="radio" name="candidate_2" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
Executing one action: self.actions.modify_radio('candidate_3', '3')
We are going to select this radio button: <input type="radio" name="candidate_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
Executing one action: self.actions.modify_radio('candidate_4', '3')
We are going to select this radio button: <input type="radio" name="candidate_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
Executing one action: self.actions.modify_radio('candidate_5', '3')
We are going to select this radio button: <input type="radio" name="candidate_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
Executing one action: self.actions.modify_radio('candidate_6', '3')
We are going to select this radio button: <input type="radio" name="candidate_6" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
Executing one action: self.actions.modify_radio('candidate_7', '3')
We are going to select this radio button: <input type="radio" name="candidate_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
Executing one action: self.actions.modify_radio('candidate_8', '3')
We are going to select this radio button: <input type="radio" name="candidate_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
Executing one action: self.actions.modify_radio('candidate_9', '3')
We are going to select this radio button: <input type="radio" name="candidate_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
Executing one action: self.actions.modify_radio('candidate_10', '3')
We are going to select this radio button: <input type="radio" name="candidate_10" value="3" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[2, 0, 0]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[3, 3, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[3, 3, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.6666666666666666
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0]}
instance_id: 27745 <-> row_number: 13
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 13 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [2, 1, 3], 'candidate_1': [3, 1, 3], 'candidate_2': [0, 1, 1], 'candidate_3': [2, 1, 3], 'candidate_4': [3, 1, 3], 'candidate_5': [2, 1, 3], 'candidate_6': [0, 1, 1], 'candidate_7': [0, 1, 3], 'candidate_8': [0, 1, 2], 'candidate_9': [0, 1, 2], 'candidate_10': [3, 1, 3]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
Executing one action: self.actions.modify_radio('candidate_0', '3')
We are going to select this radio button: <input type="radio" name="candidate_0" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
Executing one action: self.actions.modify_radio('candidate_1', '3')
We are going to select this radio button: <input type="radio" name="candidate_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
Executing one action: self.actions.modify_radio('candidate_2', '1')
We are going to select this radio button: <input type="radio" name="candidate_2" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
Executing one action: self.actions.modify_radio('candidate_3', '2')
We are going to select this radio button: <input type="radio" name="candidate_3" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
Executing one action: self.actions.modify_radio('candidate_4', '3')
We are going to select this radio button: <input type="radio" name="candidate_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
Executing one action: self.actions.modify_radio('candidate_5', '3')
We are going to select this radio button: <input type="radio" name="candidate_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
Executing one action: self.actions.modify_radio('candidate_6', '1')
We are going to select this radio button: <input type="radio" name="candidate_6" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
Executing one action: self.actions.modify_radio('candidate_7', '2')
We are going to select this radio button: <input type="radio" name="candidate_7" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
Executing one action: self.actions.modify_radio('candidate_8', '3')
We are going to select this radio button: <input type="radio" name="candidate_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
Executing one action: self.actions.modify_radio('candidate_9', '2')
We are going to select this radio button: <input type="radio" name="candidate_9" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
Executing one action: self.actions.modify_radio('candidate_10', '3')
We are going to select this radio button: <input type="radio" name="candidate_10" value="3" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[3, 1, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.3333333333333333
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0]}
instance_id: 27815 <-> row_number: 83
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 83 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [2, 0, 3], 'candidate_1': [0, 0, 2], 'candidate_2': [2, 3, 3], 'candidate_3': [1, 3, 3], 'candidate_4': [3, 3, 3], 'candidate_5': [0, 0, 2], 'candidate_6': [0, 0, 3], 'candidate_7': [1, 0, 3], 'candidate_8': [2, 1, 2], 'candidate_9': [1, 0, 2], 'candidate_10': [2, 3, 3]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
Executing one action: self.actions.modify_radio('candidate_0', '3')
We are going to select this radio button: <input type="radio" name="candidate_0" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
Executing one action: self.actions.modify_radio('candidate_1', '0')
We are going to select this radio button: <input type="radio" name="candidate_1" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
Executing one action: self.actions.modify_radio('candidate_2', '3')
We are going to select this radio button: <input type="radio" name="candidate_2" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
Executing one action: self.actions.modify_radio('candidate_3', '0')
We are going to select this radio button: <input type="radio" name="candidate_3" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
Executing one action: self.actions.modify_radio('candidate_4', '3')
We are going to select this radio button: <input type="radio" name="candidate_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
Executing one action: self.actions.modify_radio('candidate_5', '0')
We are going to select this radio button: <input type="radio" name="candidate_5" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
Executing one action: self.actions.modify_radio('candidate_6', '0')
We are going to select this radio button: <input type="radio" name="candidate_6" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
Executing one action: self.actions.modify_radio('candidate_7', '0')
We are going to select this radio button: <input type="radio" name="candidate_7" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
Executing one action: self.actions.modify_radio('candidate_8', '3')
We are going to select this radio button: <input type="radio" name="candidate_8" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
Executing one action: self.actions.modify_radio('candidate_9', '0')
We are going to select this radio button: <input type="radio" name="candidate_9" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
Executing one action: self.actions.modify_radio('candidate_10', '3')
We are going to select this radio button: <input type="radio" name="candidate_10" value="3" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 0, 2]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[2, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.3333333333333333
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0]}
instance_id: 27803 <-> row_number: 71
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 71 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [1, 1, 2], 'candidate_1': [0, 3, 3], 'candidate_2': [1, 2, 3], 'candidate_3': [0, 2, 1], 'candidate_4': [0, 3, 1], 'candidate_5': [1, 2, 3], 'candidate_6': [0, 1, 1], 'candidate_7': [1, 1, 2], 'candidate_8': [0, 0, 2], 'candidate_9': [1, 0, 3], 'candidate_10': [0, 1, 0]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
Executing one action: self.actions.modify_radio('candidate_0', '2')
We are going to select this radio button: <input type="radio" name="candidate_0" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
Executing one action: self.actions.modify_radio('candidate_1', '3')
We are going to select this radio button: <input type="radio" name="candidate_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
Executing one action: self.actions.modify_radio('candidate_2', '3')
We are going to select this radio button: <input type="radio" name="candidate_2" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
Executing one action: self.actions.modify_radio('candidate_3', '3')
We are going to select this radio button: <input type="radio" name="candidate_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
Executing one action: self.actions.modify_radio('candidate_4', '3')
We are going to select this radio button: <input type="radio" name="candidate_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
Executing one action: self.actions.modify_radio('candidate_5', '3')
We are going to select this radio button: <input type="radio" name="candidate_5" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
Executing one action: self.actions.modify_radio('candidate_6', '0')
We are going to select this radio button: <input type="radio" name="candidate_6" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
Executing one action: self.actions.modify_radio('candidate_7', '1')
We are going to select this radio button: <input type="radio" name="candidate_7" value="1" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
Executing one action: self.actions.modify_radio('candidate_8', '0')
We are going to select this radio button: <input type="radio" name="candidate_8" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
Executing one action: self.actions.modify_radio('candidate_9', '0')
We are going to select this radio button: <input type="radio" name="candidate_9" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
Executing one action: self.actions.modify_radio('candidate_10', '1')
We are going to select this radio button: <input type="radio" name="candidate_10" value="1" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 0, 2]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 0, 3]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 1, 0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.3333333333333333
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0]}
instance_id: 27806 <-> row_number: 74
Could not find input field with name `candidate_0.0`
Could not find input field with name `candidate_0.1`
Could not find input field with name `candidate_0.2`
Could not find input field with name `candidate_0.3`
Could not find input field with name `candidate_0.4`
Could not find input field with name `candidate_1.0`
Could not find input field with name `candidate_1.1`
Could not find input field with name `candidate_1.2`
Could not find input field with name `candidate_1.3`
Could not find input field with name `candidate_1.4`
Could not find input field with name `candidate_10.0`
Could not find input field with name `candidate_10.1`
Could not find input field with name `candidate_10.2`
Could not find input field with name `candidate_10.3`
Could not find input field with name `candidate_10.4`
Could not find input field with name `candidate_2.0`
Could not find input field with name `candidate_2.1`
Could not find input field with name `candidate_2.2`
Could not find input field with name `candidate_2.3`
Could not find input field with name `candidate_2.4`
Could not find input field with name `candidate_3.0`
Could not find input field with name `candidate_3.1`
Could not find input field with name `candidate_3.2`
Could not find input field with name `candidate_3.3`
Could not find input field with name `candidate_3.4`
Could not find input field with name `candidate_4.0`
Could not find input field with name `candidate_4.1`
Could not find input field with name `candidate_4.2`
Could not find input field with name `candidate_4.3`
Could not find input field with name `candidate_4.4`
Could not find input field with name `candidate_5.0`
Could not find input field with name `candidate_5.1`
Could not find input field with name `candidate_5.2`
Could not find input field with name `candidate_5.3`
Could not find input field with name `candidate_5.4`
Could not find input field with name `candidate_6.0`
Could not find input field with name `candidate_6.1`
Could not find input field with name `candidate_6.2`
Could not find input field with name `candidate_6.3`
Could not find input field with name `candidate_6.4`
Could not find input field with name `candidate_7.0`
Could not find input field with name `candidate_7.1`
Could not find input field with name `candidate_7.2`
Could not find input field with name `candidate_7.3`
Could not find input field with name `candidate_7.4`
Could not find input field with name `candidate_8.0`
Could not find input field with name `candidate_8.1`
Could not find input field with name `candidate_8.2`
Could not find input field with name `candidate_8.3`
Could not find input field with name `candidate_8.4`
Could not find input field with name `candidate_9.0`
Could not find input field with name `candidate_9.1`
Could not find input field with name `candidate_9.2`
Could not find input field with name `candidate_9.3`
Could not find input field with name `candidate_9.4`
 --> inputs: ['candidate_0', 'candidate_1', 'candidate_2', 'candidate_3', 'candidate_4', 'candidate_5', 'candidate_6', 'candidate_7', 'candidate_8', 'candidate_9', 'candidate_10']
 --> Looking up gold labels from row index 74 of `input.csv` (unique inputs). 
 --> input labels: {'candidate_0': [1, 2, 0], 'candidate_1': [0, 3, 0], 'candidate_2': [1, 3, 2], 'candidate_3': [0, 3, 3], 'candidate_4': [0, 3, 2], 'candidate_5': [1, 0, 1], 'candidate_6': [0, 0, 0], 'candidate_7': [2, 3, 1], 'candidate_8': [0, 3, 0], 'candidate_9': [1, 3, 2], 'candidate_10': [0, 1, 0]}
 - - - - - -  starting a new element: `Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_0
Executing one action: self.actions.modify_radio('candidate_0', '0')
We are going to select this radio button: <input type="radio" name="candidate_0" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_1
Executing one action: self.actions.modify_radio('candidate_1', '3')
We are going to select this radio button: <input type="radio" name="candidate_1" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_2
Executing one action: self.actions.modify_radio('candidate_2', '3')
We are going to select this radio button: <input type="radio" name="candidate_2" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_3
Executing one action: self.actions.modify_radio('candidate_3', '3')
We are going to select this radio button: <input type="radio" name="candidate_3" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_4
Executing one action: self.actions.modify_radio('candidate_4', '3')
We are going to select this radio button: <input type="radio" name="candidate_4" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_5
Executing one action: self.actions.modify_radio('candidate_5', '0')
We are going to select this radio button: <input type="radio" name="candidate_5" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_6
Executing one action: self.actions.modify_radio('candidate_6', '0')
We are going to select this radio button: <input type="radio" name="candidate_6" value="0" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_7
Executing one action: self.actions.modify_radio('candidate_7', '3')
We are going to select this radio button: <input type="radio" name="candidate_7" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_8
Executing one action: self.actions.modify_radio('candidate_8', '2')
We are going to select this radio button: <input type="radio" name="candidate_8" value="2" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_9
Executing one action: self.actions.modify_radio('candidate_9', '3')
We are going to select this radio button: <input type="radio" name="candidate_9" value="3" required="">
 - - - - - -  starting a new element: `Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)` - - - - - -  
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
about to try executing one action, on the following input: candidate_10
Executing one action: self.actions.modify_radio('candidate_10', '0')
We are going to select this radio button: <input type="radio" name="candidate_10" value="0" required="">
input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`)
 visible : ['0']
 visible_values : ['0']
 ------- evaluating input: Input(name=`candidate_0`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_0` since it is not visible.
 ------- evaluating input: Input(name=`candidate_1`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_1` since it is not visible.
 ------- evaluating input: Input(name=`candidate_2`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_2` since it is not visible.
 ------- evaluating input: Input(name=`candidate_3`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_3` since it is not visible.
 ------- evaluating input: Input(name=`candidate_4`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_4` since it is not visible.
 ------- evaluating input: Input(name=`candidate_5`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_5` since it is not visible.
 ------- evaluating input: Input(name=`candidate_6`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_6` since it is not visible.
 ------- evaluating input: Input(name=`candidate_7`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
Skipping element `candidate_7` since it is not visible.
 ------- evaluating input: Input(name=`candidate_8`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 3, 0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_9`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[1, 3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`candidate_10`, type=`radio`, task=`wikiHow step-goal linking pilot cleanse-url`) ------- 
----> answers: `[0, 1, 0]` - type: `<class 'list'>`
----> baseline_answer: `0` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.3333333333333333
 --> Per-instance per-field breakdown: {'radio': [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0]}
 = = = = = = = = = = = = starting new task: `Arch - Rel Eval 3` = = = = = = = = = = = = 
First instance id: 33654
instance_id: 33696 <-> row_number: 42
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 42 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [1.0, 2.0, 2.0], 'complete-1': [1.0, 2.0, 2.0], 'intra-1': [2.0, 2.0, 2.0], 'diverse-1': [2.0, 2.0, 2.0], 'bestq-1': [1.0, 2.0, 2.0], 'coherent-2': [2.0, 2.0, 2.0], 'complete-2': [2.0, 2.0, 2.0], 'intra-2': [2.0, 2.0, 2.0], 'diverse-2': [2.0, 2.0, 2.0], 'bestq-2': [2.0, 2.0, 2.0], 'coherent-3': [2, 2, 2], 'complete-3': [2, 2, 2], 'intra-3': [1, 1, 1], 'diverse-3': [1.0, 2.0, 1.0], 'bestq-3': [2, 1, 1], 'coherent-4': [1, 2, 1], 'complete-4': [1.0, 2.0, 1.0], 'intra-4': [2.0, 2.0, 1.0], 'diverse-4': [2, 2, 1], 'bestq-4': [1, 2, 1], 'coherent-5': [1, 1, 2], 'complete-5': [1, 1, 2], 'intra-5': [2.0, 1.0, 2.0], 'diverse-5': [2, 1, 2], 'bestq-5': [1, 1, 2]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
Executing one action: self.actions.modify_radio('coherent-1', '2')
We are going to select this radio button: <input name="coherent-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
Executing one action: self.actions.modify_radio('complete-1', '2')
We are going to select this radio button: <input name="complete-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
Executing one action: self.actions.modify_radio('intra-1', '2')
We are going to select this radio button: <input name="intra-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
Executing one action: self.actions.modify_radio('diverse-1', '2')
We are going to select this radio button: <input name="diverse-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
Executing one action: self.actions.modify_radio('bestq-1', '2')
We are going to select this radio button: <input name="bestq-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
Executing one action: self.actions.modify_radio('coherent-2', '2')
We are going to select this radio button: <input name="coherent-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
Executing one action: self.actions.modify_radio('complete-2', '2')
We are going to select this radio button: <input name="complete-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
Executing one action: self.actions.modify_radio('intra-2', '2')
We are going to select this radio button: <input name="intra-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
Executing one action: self.actions.modify_radio('diverse-2', '2')
We are going to select this radio button: <input name="diverse-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
Executing one action: self.actions.modify_radio('bestq-2', '2')
We are going to select this radio button: <input name="bestq-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
Executing one action: self.actions.modify_radio('coherent-3', '1')
We are going to select this radio button: <input name="coherent-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
Executing one action: self.actions.modify_radio('complete-3', '2')
We are going to select this radio button: <input name="complete-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
Executing one action: self.actions.modify_radio('intra-3', '2')
We are going to select this radio button: <input name="intra-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
Executing one action: self.actions.modify_radio('diverse-3', '2')
We are going to select this radio button: <input name="diverse-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
Executing one action: self.actions.modify_radio('bestq-3', '2')
We are going to select this radio button: <input name="bestq-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
Executing one action: self.actions.modify_radio('coherent-4', '1')
We are going to select this radio button: <input name="coherent-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
Executing one action: self.actions.modify_radio('complete-4', '2')
We are going to select this radio button: <input name="complete-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
Executing one action: self.actions.modify_radio('intra-4', '2')
We are going to select this radio button: <input name="intra-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
Executing one action: self.actions.modify_radio('diverse-4', '2')
We are going to select this radio button: <input name="diverse-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
Executing one action: self.actions.modify_radio('bestq-4', '2')
We are going to select this radio button: <input name="bestq-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
Executing one action: self.actions.modify_radio('coherent-5', '1')
We are going to select this radio button: <input name="coherent-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
Executing one action: self.actions.modify_radio('complete-5', '2')
We are going to select this radio button: <input name="complete-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
Executing one action: self.actions.modify_radio('intra-5', '2')
We are going to select this radio button: <input name="intra-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
Executing one action: self.actions.modify_radio('diverse-5', '2')
We are going to select this radio button: <input name="diverse-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
Executing one action: self.actions.modify_radio('bestq-5', '2')
We are going to select this radio button: <input name="bestq-5" type="radio" value="2">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.68
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0]}
instance_id: 33666 <-> row_number: 12
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 12 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [1.0, 1.0, 1.0], 'complete-1': [2.0, 1.0, 1.0], 'intra-1': [1.0, '', 1.0], 'diverse-1': [1.0, 1.0, 2.0], 'bestq-1': [2.0, 1.0, 1.0], 'coherent-2': [1.0, 1.0, 1.0], 'complete-2': [1.0, 1.0, 1.0], 'intra-2': [1.0, 1.0, 1.0], 'diverse-2': [1.0, 2.0, 1.0], 'bestq-2': [1.0, 1.0, 1.0], 'coherent-3': [1, 1, 1], 'complete-3': [2, 1, 1], 'intra-3': [1, 1, 1], 'diverse-3': [1.0, 1.0, 2.0], 'bestq-3': [2, 1, 1], 'coherent-4': [1, 1, 1], 'complete-4': [2.0, 1.0, 1.0], 'intra-4': [2.0, 1.0, 1.0], 'diverse-4': [2, 2, 1], 'bestq-4': [1, 1, 1], 'coherent-5': [1, 1, 1], 'complete-5': [2, 1, 1], 'intra-5': [1.0, 2.0, 1.0], 'diverse-5': [1, 1, 2], 'bestq-5': [2, 1, 1]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
Executing one action: self.actions.modify_radio('coherent-1', '1')
We are going to select this radio button: <input name="coherent-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
Executing one action: self.actions.modify_radio('complete-1', '2')
We are going to select this radio button: <input name="complete-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
Executing one action: self.actions.modify_radio('intra-1', '1')
We are going to select this radio button: <input name="intra-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
Executing one action: self.actions.modify_radio('diverse-1', '2')
We are going to select this radio button: <input name="diverse-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
Executing one action: self.actions.modify_radio('bestq-1', '1')
We are going to select this radio button: <input name="bestq-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
Executing one action: self.actions.modify_radio('coherent-2', '1')
We are going to select this radio button: <input name="coherent-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
Executing one action: self.actions.modify_radio('complete-2', '1')
We are going to select this radio button: <input name="complete-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
Executing one action: self.actions.modify_radio('intra-2', '2')
We are going to select this radio button: <input name="intra-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
Executing one action: self.actions.modify_radio('diverse-2', '2')
We are going to select this radio button: <input name="diverse-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
Executing one action: self.actions.modify_radio('bestq-2', '2')
We are going to select this radio button: <input name="bestq-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
Executing one action: self.actions.modify_radio('coherent-3', '1')
We are going to select this radio button: <input name="coherent-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
Executing one action: self.actions.modify_radio('complete-3', '1')
We are going to select this radio button: <input name="complete-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
Executing one action: self.actions.modify_radio('intra-3', '2')
We are going to select this radio button: <input name="intra-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
Executing one action: self.actions.modify_radio('diverse-3', '1')
We are going to select this radio button: <input name="diverse-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
Executing one action: self.actions.modify_radio('bestq-3', '1')
We are going to select this radio button: <input name="bestq-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
Executing one action: self.actions.modify_radio('coherent-4', '1')
We are going to select this radio button: <input name="coherent-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
Executing one action: self.actions.modify_radio('complete-4', '1')
We are going to select this radio button: <input name="complete-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
Executing one action: self.actions.modify_radio('intra-4', '1')
We are going to select this radio button: <input name="intra-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
Executing one action: self.actions.modify_radio('diverse-4', '2')
We are going to select this radio button: <input name="diverse-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
Executing one action: self.actions.modify_radio('bestq-4', '2')
We are going to select this radio button: <input name="bestq-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
Executing one action: self.actions.modify_radio('coherent-5', '1')
We are going to select this radio button: <input name="coherent-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
Executing one action: self.actions.modify_radio('complete-5', '1')
We are going to select this radio button: <input name="complete-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
Executing one action: self.actions.modify_radio('intra-5', '1')
We are going to select this radio button: <input name="intra-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
Executing one action: self.actions.modify_radio('diverse-5', '1')
We are going to select this radio button: <input name="diverse-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
Executing one action: self.actions.modify_radio('bestq-5', '1')
We are going to select this radio button: <input name="bestq-5" type="radio" value="1">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, '', 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.72
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0]}
instance_id: 33692 <-> row_number: 38
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 38 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [1.0, 2.0, 1.0], 'complete-1': [1.0, 1.0, 1.0], 'intra-1': [1.0, 1.0, 1.0], 'diverse-1': [2.0, 2.0, 1.0], 'bestq-1': [1.0, 2.0, 1.0], 'coherent-2': [1.0, 2.0, 1.0], 'complete-2': [1.0, 2.0, 1.0], 'intra-2': [1.0, 1.0, 1.0], 'diverse-2': [1.0, 1.0, 1.0], 'bestq-2': [1.0, 1.0, 1.0], 'coherent-3': [2, 1, 1], 'complete-3': [2, 2, 1], 'intra-3': [2, 2, 1], 'diverse-3': [2.0, 1.0, 1.0], 'bestq-3': [2, 2, 1], 'coherent-4': [1, 1, 1], 'complete-4': [1.0, 2.0, 1.0], 'intra-4': [1.0, 1.0, 1.0], 'diverse-4': [2, 1, 1], 'bestq-4': [1, 2, 1], 'coherent-5': [1, 1, 1], 'complete-5': [1, 2, 1], 'intra-5': [1.0, 1.0, 1.0], 'diverse-5': [1, 2, 1], 'bestq-5': [1, 1, 1]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
Executing one action: self.actions.modify_radio('coherent-1', '1')
We are going to select this radio button: <input name="coherent-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
Executing one action: self.actions.modify_radio('complete-1', '2')
We are going to select this radio button: <input name="complete-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
Executing one action: self.actions.modify_radio('intra-1', '1')
We are going to select this radio button: <input name="intra-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
Executing one action: self.actions.modify_radio('diverse-1', '1')
We are going to select this radio button: <input name="diverse-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
Executing one action: self.actions.modify_radio('bestq-1', '1')
We are going to select this radio button: <input name="bestq-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
Executing one action: self.actions.modify_radio('coherent-2', '1')
We are going to select this radio button: <input name="coherent-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
Executing one action: self.actions.modify_radio('complete-2', '1')
We are going to select this radio button: <input name="complete-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
Executing one action: self.actions.modify_radio('intra-2', '1')
We are going to select this radio button: <input name="intra-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
Executing one action: self.actions.modify_radio('diverse-2', '1')
We are going to select this radio button: <input name="diverse-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
Executing one action: self.actions.modify_radio('bestq-2', '1')
We are going to select this radio button: <input name="bestq-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
Executing one action: self.actions.modify_radio('coherent-3', '1')
We are going to select this radio button: <input name="coherent-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
Executing one action: self.actions.modify_radio('complete-3', '1')
We are going to select this radio button: <input name="complete-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
Executing one action: self.actions.modify_radio('intra-3', '1')
We are going to select this radio button: <input name="intra-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
Executing one action: self.actions.modify_radio('diverse-3', '2')
We are going to select this radio button: <input name="diverse-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
Executing one action: self.actions.modify_radio('bestq-3', '2')
We are going to select this radio button: <input name="bestq-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
Executing one action: self.actions.modify_radio('coherent-4', '1')
We are going to select this radio button: <input name="coherent-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
Executing one action: self.actions.modify_radio('complete-4', '2')
We are going to select this radio button: <input name="complete-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
Executing one action: self.actions.modify_radio('intra-4', '1')
We are going to select this radio button: <input name="intra-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
Executing one action: self.actions.modify_radio('diverse-4', '2')
We are going to select this radio button: <input name="diverse-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
Executing one action: self.actions.modify_radio('bestq-4', '1')
We are going to select this radio button: <input name="bestq-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
Executing one action: self.actions.modify_radio('coherent-5', '1')
We are going to select this radio button: <input name="coherent-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
Executing one action: self.actions.modify_radio('complete-5', '1')
We are going to select this radio button: <input name="complete-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
Executing one action: self.actions.modify_radio('intra-5', '1')
We are going to select this radio button: <input name="intra-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
Executing one action: self.actions.modify_radio('diverse-5', '1')
We are going to select this radio button: <input name="diverse-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
Executing one action: self.actions.modify_radio('bestq-5', '1')
We are going to select this radio button: <input name="bestq-5" type="radio" value="1">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.72
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]}
instance_id: 33689 <-> row_number: 35
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 35 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [2.0, 2.0, 2.0], 'complete-1': [2.0, 2.0, 2.0], 'intra-1': [1.0, 1.0, 2.0], 'diverse-1': [1.0, 2.0, 2.0], 'bestq-1': [2.0, 2.0, 2.0], 'coherent-2': [1.0, 1.0, 1.0], 'complete-2': [1.0, 1.0, 2.0], 'intra-2': [2.0, 1.0, 1.0], 'diverse-2': [2.0, 1.0, 2.0], 'bestq-2': [1.0, 1.0, 1.0], 'coherent-3': [2, 1, 1], 'complete-3': [2, 1, 1], 'intra-3': [2, 2, 1], 'diverse-3': [1.0, 2.0, 2.0], 'bestq-3': [2, 1, 1], 'coherent-4': [2, 1, 1], 'complete-4': [2.0, 1.0, 2.0], 'intra-4': [1.0, 2.0, 2.0], 'diverse-4': [1, 2, 1], 'bestq-4': [2, 1, 2], 'coherent-5': [1, 2, 2], 'complete-5': [1, 2, 2], 'intra-5': [2.0, 2.0, 2.0], 'diverse-5': [2, 2, 1], 'bestq-5': [1, 2, 2]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
Executing one action: self.actions.modify_radio('coherent-1', '2')
We are going to select this radio button: <input name="coherent-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
Executing one action: self.actions.modify_radio('complete-1', '2')
We are going to select this radio button: <input name="complete-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
Executing one action: self.actions.modify_radio('intra-1', '1')
We are going to select this radio button: <input name="intra-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
Executing one action: self.actions.modify_radio('diverse-1', '2')
We are going to select this radio button: <input name="diverse-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
Executing one action: self.actions.modify_radio('bestq-1', '1')
We are going to select this radio button: <input name="bestq-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
Executing one action: self.actions.modify_radio('coherent-2', '2')
We are going to select this radio button: <input name="coherent-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
Executing one action: self.actions.modify_radio('complete-2', '2')
We are going to select this radio button: <input name="complete-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
Executing one action: self.actions.modify_radio('intra-2', '2')
We are going to select this radio button: <input name="intra-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
Executing one action: self.actions.modify_radio('diverse-2', '2')
We are going to select this radio button: <input name="diverse-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
Executing one action: self.actions.modify_radio('bestq-2', '2')
We are going to select this radio button: <input name="bestq-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
Executing one action: self.actions.modify_radio('coherent-3', '2')
We are going to select this radio button: <input name="coherent-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
Executing one action: self.actions.modify_radio('complete-3', '2')
We are going to select this radio button: <input name="complete-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
Executing one action: self.actions.modify_radio('intra-3', '2')
We are going to select this radio button: <input name="intra-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
Executing one action: self.actions.modify_radio('diverse-3', '2')
We are going to select this radio button: <input name="diverse-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
Executing one action: self.actions.modify_radio('bestq-3', '2')
We are going to select this radio button: <input name="bestq-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
Executing one action: self.actions.modify_radio('coherent-4', '2')
We are going to select this radio button: <input name="coherent-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
Executing one action: self.actions.modify_radio('complete-4', '2')
We are going to select this radio button: <input name="complete-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
Executing one action: self.actions.modify_radio('intra-4', '2')
We are going to select this radio button: <input name="intra-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
Executing one action: self.actions.modify_radio('diverse-4', '2')
We are going to select this radio button: <input name="diverse-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
Executing one action: self.actions.modify_radio('bestq-4', '2')
We are going to select this radio button: <input name="bestq-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
Executing one action: self.actions.modify_radio('coherent-5', '2')
We are going to select this radio button: <input name="coherent-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
Executing one action: self.actions.modify_radio('complete-5', '2')
We are going to select this radio button: <input name="complete-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
Executing one action: self.actions.modify_radio('intra-5', '2')
We are going to select this radio button: <input name="intra-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
Executing one action: self.actions.modify_radio('diverse-5', '2')
We are going to select this radio button: <input name="diverse-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
Executing one action: self.actions.modify_radio('bestq-5', '2')
We are going to select this radio button: <input name="bestq-5" type="radio" value="2">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.6
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]}
instance_id: 33693 <-> row_number: 39
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 39 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [1.0, 1.0, 2.0], 'complete-1': [1.0, 1.0, 2.0], 'intra-1': [1.0, 2.0, 2.0], 'diverse-1': [2.0, 2.0, 1.0], 'bestq-1': [1.0, 2.0, 2.0], 'coherent-2': [2.0, 1.0, 2.0], 'complete-2': [2.0, 2.0, 2.0], 'intra-2': [2.0, 2.0, 2.0], 'diverse-2': [2.0, 1.0, 1.0], 'bestq-2': [2.0, 2.0, 2.0], 'coherent-3': [2, 2, 2], 'complete-3': [2, 2, 2], 'intra-3': [2, 1, 2], 'diverse-3': [1.0, 2.0, 1.0], 'bestq-3': [2, 2, 2], 'coherent-4': [2, 2, 1], 'complete-4': [2.0, 1.0, 1.0], 'intra-4': [2.0, 2.0, 2.0], 'diverse-4': [1, 2, 1], 'bestq-4': [2, 1, 1], 'coherent-5': [2, 2, 2], 'complete-5': [2, 1, 2], 'intra-5': [2.0, 1.0, 2.0], 'diverse-5': [1, 1, 2], 'bestq-5': [2, 2, 2]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
Executing one action: self.actions.modify_radio('coherent-1', '1')
We are going to select this radio button: <input name="coherent-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
Executing one action: self.actions.modify_radio('complete-1', '2')
We are going to select this radio button: <input name="complete-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
Executing one action: self.actions.modify_radio('intra-1', '1')
We are going to select this radio button: <input name="intra-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
Executing one action: self.actions.modify_radio('diverse-1', '2')
We are going to select this radio button: <input name="diverse-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
Executing one action: self.actions.modify_radio('bestq-1', '2')
We are going to select this radio button: <input name="bestq-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
Executing one action: self.actions.modify_radio('coherent-2', '2')
We are going to select this radio button: <input name="coherent-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
Executing one action: self.actions.modify_radio('complete-2', '2')
We are going to select this radio button: <input name="complete-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
Executing one action: self.actions.modify_radio('intra-2', '2')
We are going to select this radio button: <input name="intra-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
Executing one action: self.actions.modify_radio('diverse-2', '2')
We are going to select this radio button: <input name="diverse-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
Executing one action: self.actions.modify_radio('bestq-2', '2')
We are going to select this radio button: <input name="bestq-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
Executing one action: self.actions.modify_radio('coherent-3', '2')
We are going to select this radio button: <input name="coherent-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
Executing one action: self.actions.modify_radio('complete-3', '2')
We are going to select this radio button: <input name="complete-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
Executing one action: self.actions.modify_radio('intra-3', '2')
We are going to select this radio button: <input name="intra-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
Executing one action: self.actions.modify_radio('diverse-3', '2')
We are going to select this radio button: <input name="diverse-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
Executing one action: self.actions.modify_radio('bestq-3', '2')
We are going to select this radio button: <input name="bestq-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
Executing one action: self.actions.modify_radio('coherent-4', '2')
We are going to select this radio button: <input name="coherent-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
Executing one action: self.actions.modify_radio('complete-4', '2')
We are going to select this radio button: <input name="complete-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
Executing one action: self.actions.modify_radio('intra-4', '2')
We are going to select this radio button: <input name="intra-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
Executing one action: self.actions.modify_radio('diverse-4', '2')
We are going to select this radio button: <input name="diverse-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
Executing one action: self.actions.modify_radio('bestq-4', '2')
We are going to select this radio button: <input name="bestq-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
Executing one action: self.actions.modify_radio('coherent-5', '2')
We are going to select this radio button: <input name="coherent-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
Executing one action: self.actions.modify_radio('complete-5', '2')
We are going to select this radio button: <input name="complete-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
Executing one action: self.actions.modify_radio('intra-5', '2')
We are going to select this radio button: <input name="intra-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
Executing one action: self.actions.modify_radio('diverse-5', '2')
We are going to select this radio button: <input name="diverse-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
Executing one action: self.actions.modify_radio('bestq-5', '2')
We are going to select this radio button: <input name="bestq-5" type="radio" value="2">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.68
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0]}
instance_id: 33673 <-> row_number: 19
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 19 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [1.0, 1.0, 1.0], 'complete-1': [2.0, '', 1.0], 'intra-1': [2.0, 1.0, 1.0], 'diverse-1': [1.0, 2.0, 1.0], 'bestq-1': [1.0, 1.0, 1.0], 'coherent-2': [1.0, 2.0, 1.0], 'complete-2': [1.0, 2.0, 1.0], 'intra-2': [1.0, 2.0, 1.0], 'diverse-2': [2.0, 1.0, 1.0], 'bestq-2': [1.0, 2.0, 1.0], 'coherent-3': [1, 1, 1], 'complete-3': [1, 1, 1], 'intra-3': [1, 1, 1], 'diverse-3': [1.0, 1.0, 1.0], 'bestq-3': [1, 1, 1], 'coherent-4': [1, 1, 1], 'complete-4': [1.0, 1.0, 1.0], 'intra-4': [1.0, 1.0, 1.0], 'diverse-4': [1, 2, 1], 'bestq-4': [1, 1, 1], 'coherent-5': [2, 2, 1], 'complete-5': [2, 2, 1], 'intra-5': [2.0, 1.0, 1.0], 'diverse-5': [2, 2, 1], 'bestq-5': [2, 1, 1]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
Executing one action: self.actions.modify_radio('coherent-1', '1')
We are going to select this radio button: <input name="coherent-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
Executing one action: self.actions.modify_radio('complete-1', '2')
We are going to select this radio button: <input name="complete-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
Executing one action: self.actions.modify_radio('intra-1', '1')
We are going to select this radio button: <input name="intra-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
Executing one action: self.actions.modify_radio('diverse-1', '2')
We are going to select this radio button: <input name="diverse-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
Executing one action: self.actions.modify_radio('bestq-1', '2')
We are going to select this radio button: <input name="bestq-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
Executing one action: self.actions.modify_radio('coherent-2', '1')
We are going to select this radio button: <input name="coherent-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
Executing one action: self.actions.modify_radio('complete-2', '1')
We are going to select this radio button: <input name="complete-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
Executing one action: self.actions.modify_radio('intra-2', '1')
We are going to select this radio button: <input name="intra-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
Executing one action: self.actions.modify_radio('diverse-2', '2')
We are going to select this radio button: <input name="diverse-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
Executing one action: self.actions.modify_radio('bestq-2', '1')
We are going to select this radio button: <input name="bestq-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
Executing one action: self.actions.modify_radio('coherent-3', '1')
We are going to select this radio button: <input name="coherent-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
Executing one action: self.actions.modify_radio('complete-3', '1')
We are going to select this radio button: <input name="complete-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
Executing one action: self.actions.modify_radio('intra-3', '1')
We are going to select this radio button: <input name="intra-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
Executing one action: self.actions.modify_radio('diverse-3', '1')
We are going to select this radio button: <input name="diverse-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
Executing one action: self.actions.modify_radio('bestq-3', '1')
We are going to select this radio button: <input name="bestq-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
Executing one action: self.actions.modify_radio('coherent-4', '1')
We are going to select this radio button: <input name="coherent-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
Executing one action: self.actions.modify_radio('complete-4', '1')
We are going to select this radio button: <input name="complete-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
Executing one action: self.actions.modify_radio('intra-4', '1')
We are going to select this radio button: <input name="intra-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
Executing one action: self.actions.modify_radio('diverse-4', '2')
We are going to select this radio button: <input name="diverse-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
Executing one action: self.actions.modify_radio('bestq-4', '1')
We are going to select this radio button: <input name="bestq-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
Executing one action: self.actions.modify_radio('coherent-5', '1')
We are going to select this radio button: <input name="coherent-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
Executing one action: self.actions.modify_radio('complete-5', '2')
We are going to select this radio button: <input name="complete-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
Executing one action: self.actions.modify_radio('intra-5', '1')
We are going to select this radio button: <input name="intra-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
Executing one action: self.actions.modify_radio('diverse-5', '1')
We are going to select this radio button: <input name="diverse-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
Executing one action: self.actions.modify_radio('bestq-5', '1')
We are going to select this radio button: <input name="bestq-5" type="radio" value="1">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, '', 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.76
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0]}
instance_id: 33664 <-> row_number: 10
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 10 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [1.0, 1.0, 1.0], 'complete-1': [1.0, 1.0, 1.0], 'intra-1': [2.0, 1.0, 1.0], 'diverse-1': [2.0, 2.0, 2.0], 'bestq-1': [1.0, 1.0, 1.0], 'coherent-2': [1.0, 2.0, 1.0], 'complete-2': [1.0, 2.0, 1.0], 'intra-2': [2.0, 2.0, 1.0], 'diverse-2': [1.0, 1.0, 2.0], 'bestq-2': [1.0, 2.0, 1.0], 'coherent-3': [1, 1, 1], 'complete-3': [2, 1, 1], 'intra-3': [2, 2, 1], 'diverse-3': [1.0, 1.0, 1.0], 'bestq-3': [1, 1, 1], 'coherent-4': [1, 2, 2], 'complete-4': [1.0, 2.0, 2.0], 'intra-4': [2.0, 1.0, 1.0], 'diverse-4': [2, 2, 2], 'bestq-4': [1, 2, 2], 'coherent-5': [1, 1, 1], 'complete-5': [1, 1, 1], 'intra-5': [1.0, 2.0, 1.0], 'diverse-5': [2, 2, 2], 'bestq-5': [2, 1, 1]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
Executing one action: self.actions.modify_radio('coherent-1', '1')
We are going to select this radio button: <input name="coherent-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
Executing one action: self.actions.modify_radio('complete-1', '1')
We are going to select this radio button: <input name="complete-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
Executing one action: self.actions.modify_radio('intra-1', '1')
We are going to select this radio button: <input name="intra-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
Executing one action: self.actions.modify_radio('diverse-1', '2')
We are going to select this radio button: <input name="diverse-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
Executing one action: self.actions.modify_radio('bestq-1', '2')
We are going to select this radio button: <input name="bestq-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
Executing one action: self.actions.modify_radio('coherent-2', '1')
We are going to select this radio button: <input name="coherent-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
Executing one action: self.actions.modify_radio('complete-2', '1')
We are going to select this radio button: <input name="complete-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
Executing one action: self.actions.modify_radio('intra-2', '1')
We are going to select this radio button: <input name="intra-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
Executing one action: self.actions.modify_radio('diverse-2', '2')
We are going to select this radio button: <input name="diverse-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
Executing one action: self.actions.modify_radio('bestq-2', '1')
We are going to select this radio button: <input name="bestq-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
Executing one action: self.actions.modify_radio('coherent-3', '1')
We are going to select this radio button: <input name="coherent-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
Executing one action: self.actions.modify_radio('complete-3', '1')
We are going to select this radio button: <input name="complete-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
Executing one action: self.actions.modify_radio('intra-3', '1')
We are going to select this radio button: <input name="intra-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
Executing one action: self.actions.modify_radio('diverse-3', '2')
We are going to select this radio button: <input name="diverse-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
Executing one action: self.actions.modify_radio('bestq-3', '1')
We are going to select this radio button: <input name="bestq-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
Executing one action: self.actions.modify_radio('coherent-4', '1')
We are going to select this radio button: <input name="coherent-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
Executing one action: self.actions.modify_radio('complete-4', '2')
We are going to select this radio button: <input name="complete-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
Executing one action: self.actions.modify_radio('intra-4', '1')
We are going to select this radio button: <input name="intra-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
Executing one action: self.actions.modify_radio('diverse-4', '2')
We are going to select this radio button: <input name="diverse-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
Executing one action: self.actions.modify_radio('bestq-4', '2')
We are going to select this radio button: <input name="bestq-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
Executing one action: self.actions.modify_radio('coherent-5', '1')
We are going to select this radio button: <input name="coherent-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
Executing one action: self.actions.modify_radio('complete-5', '1')
We are going to select this radio button: <input name="complete-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
Executing one action: self.actions.modify_radio('intra-5', '1')
We are going to select this radio button: <input name="intra-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
Executing one action: self.actions.modify_radio('diverse-5', '2')
We are going to select this radio button: <input name="diverse-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
Executing one action: self.actions.modify_radio('bestq-5', '1')
We are going to select this radio button: <input name="bestq-5" type="radio" value="1">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.76
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]}
instance_id: 33671 <-> row_number: 17
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 17 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [1.0, 1.0, 1.0], 'complete-1': [1.0, 2.0, 1.0], 'intra-1': [2.0, 1.0, 1.0], 'diverse-1': [2.0, 2.0, 2.0], 'bestq-1': [1.0, 1.0, 1.0], 'coherent-2': [1.0, 1.0, ''], 'complete-2': [1.0, 1.0, 1.0], 'intra-2': [1.0, 1.0, 1.0], 'diverse-2': [2.0, 2.0, 2.0], 'bestq-2': [1.0, 1.0, 1.0], 'coherent-3': [1, 1, 1], 'complete-3': [1, 1, 1], 'intra-3': [1, 1, 1], 'diverse-3': [2.0, 1.0, 2.0], 'bestq-3': [1, 2, 1], 'coherent-4': [2, 1, 1], 'complete-4': [2.0, 1.0, 2.0], 'intra-4': [2.0, 2.0, 2.0], 'diverse-4': [1, 1, 2], 'bestq-4': [2, 1, 2], 'coherent-5': [2, 1, 1], 'complete-5': [2, 2, 2], 'intra-5': [2.0, 1.0, 1.0], 'diverse-5': [1, 1, 2], 'bestq-5': [2, 2, 1]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
Executing one action: self.actions.modify_radio('coherent-1', '1')
We are going to select this radio button: <input name="coherent-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
Executing one action: self.actions.modify_radio('complete-1', '1')
We are going to select this radio button: <input name="complete-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
Executing one action: self.actions.modify_radio('intra-1', '1')
We are going to select this radio button: <input name="intra-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
Executing one action: self.actions.modify_radio('diverse-1', '1')
We are going to select this radio button: <input name="diverse-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
Executing one action: self.actions.modify_radio('bestq-1', '1')
We are going to select this radio button: <input name="bestq-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
Executing one action: self.actions.modify_radio('coherent-2', '1')
We are going to select this radio button: <input name="coherent-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
Executing one action: self.actions.modify_radio('complete-2', '1')
We are going to select this radio button: <input name="complete-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
Executing one action: self.actions.modify_radio('intra-2', '1')
We are going to select this radio button: <input name="intra-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
Executing one action: self.actions.modify_radio('diverse-2', '1')
We are going to select this radio button: <input name="diverse-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
Executing one action: self.actions.modify_radio('bestq-2', '1')
We are going to select this radio button: <input name="bestq-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
Executing one action: self.actions.modify_radio('coherent-3', '1')
We are going to select this radio button: <input name="coherent-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
Executing one action: self.actions.modify_radio('complete-3', '1')
We are going to select this radio button: <input name="complete-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
Executing one action: self.actions.modify_radio('intra-3', '1')
We are going to select this radio button: <input name="intra-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
Executing one action: self.actions.modify_radio('diverse-3', '1')
We are going to select this radio button: <input name="diverse-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
Executing one action: self.actions.modify_radio('bestq-3', '1')
We are going to select this radio button: <input name="bestq-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
Executing one action: self.actions.modify_radio('coherent-4', '1')
We are going to select this radio button: <input name="coherent-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
Executing one action: self.actions.modify_radio('complete-4', '1')
We are going to select this radio button: <input name="complete-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
Executing one action: self.actions.modify_radio('intra-4', '1')
We are going to select this radio button: <input name="intra-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
Executing one action: self.actions.modify_radio('diverse-4', '2')
We are going to select this radio button: <input name="diverse-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
Executing one action: self.actions.modify_radio('bestq-4', '2')
We are going to select this radio button: <input name="bestq-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
Executing one action: self.actions.modify_radio('coherent-5', '1')
We are going to select this radio button: <input name="coherent-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
Executing one action: self.actions.modify_radio('complete-5', '1')
We are going to select this radio button: <input name="complete-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
Executing one action: self.actions.modify_radio('intra-5', '1')
We are going to select this radio button: <input name="intra-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
Executing one action: self.actions.modify_radio('diverse-5', '2')
We are going to select this radio button: <input name="diverse-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
Executing one action: self.actions.modify_radio('bestq-5', '2')
We are going to select this radio button: <input name="bestq-5" type="radio" value="2">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, '']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.68
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0]}
instance_id: 33695 <-> row_number: 41
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 41 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [1.0, 2.0, 1.0], 'complete-1': [1.0, 2.0, 2.0], 'intra-1': [1.0, 2.0, 1.0], 'diverse-1': [2.0, 2.0, 2.0], 'bestq-1': [1.0, 2.0, 2.0], 'coherent-2': [1.0, 1.0, 1.0], 'complete-2': [1.0, 1.0, 1.0], 'intra-2': [1.0, 1.0, 2.0], 'diverse-2': [1.0, 2.0, 1.0], 'bestq-2': [1.0, 1.0, 1.0], 'coherent-3': [1, 1, 1], 'complete-3': [1, 1, 1], 'intra-3': [1, 1, 1], 'diverse-3': [1.0, 2.0, 1.0], 'bestq-3': [1, 1, 1], 'coherent-4': [1, 1, 1], 'complete-4': [1.0, 1.0, 2.0], 'intra-4': [1.0, 1.0, 1.0], 'diverse-4': [2, 1, 2], 'bestq-4': [1, 1, 1], 'coherent-5': [1, 1, 1], 'complete-5': [1, 1, 2], 'intra-5': [1.0, 1.0, 2.0], 'diverse-5': [2, 2, 2], 'bestq-5': [1, 1, 2]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
Executing one action: self.actions.modify_radio('coherent-1', '2')
We are going to select this radio button: <input name="coherent-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
Executing one action: self.actions.modify_radio('complete-1', '1')
We are going to select this radio button: <input name="complete-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
Executing one action: self.actions.modify_radio('intra-1', '1')
We are going to select this radio button: <input name="intra-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
Executing one action: self.actions.modify_radio('diverse-1', '2')
We are going to select this radio button: <input name="diverse-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
Executing one action: self.actions.modify_radio('bestq-1', '2')
We are going to select this radio button: <input name="bestq-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
Executing one action: self.actions.modify_radio('coherent-2', '1')
We are going to select this radio button: <input name="coherent-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
Executing one action: self.actions.modify_radio('complete-2', '1')
We are going to select this radio button: <input name="complete-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
Executing one action: self.actions.modify_radio('intra-2', '1')
We are going to select this radio button: <input name="intra-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
Executing one action: self.actions.modify_radio('diverse-2', '2')
We are going to select this radio button: <input name="diverse-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
Executing one action: self.actions.modify_radio('bestq-2', '2')
We are going to select this radio button: <input name="bestq-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
Executing one action: self.actions.modify_radio('coherent-3', '1')
We are going to select this radio button: <input name="coherent-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
Executing one action: self.actions.modify_radio('complete-3', '1')
We are going to select this radio button: <input name="complete-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
Executing one action: self.actions.modify_radio('intra-3', '1')
We are going to select this radio button: <input name="intra-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
Executing one action: self.actions.modify_radio('diverse-3', '2')
We are going to select this radio button: <input name="diverse-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
Executing one action: self.actions.modify_radio('bestq-3', '1')
We are going to select this radio button: <input name="bestq-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
Executing one action: self.actions.modify_radio('coherent-4', '1')
We are going to select this radio button: <input name="coherent-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
Executing one action: self.actions.modify_radio('complete-4', '1')
We are going to select this radio button: <input name="complete-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
Executing one action: self.actions.modify_radio('intra-4', '1')
We are going to select this radio button: <input name="intra-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
Executing one action: self.actions.modify_radio('diverse-4', '2')
We are going to select this radio button: <input name="diverse-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
Executing one action: self.actions.modify_radio('bestq-4', '1')
We are going to select this radio button: <input name="bestq-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
Executing one action: self.actions.modify_radio('coherent-5', '1')
We are going to select this radio button: <input name="coherent-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
Executing one action: self.actions.modify_radio('complete-5', '1')
We are going to select this radio button: <input name="complete-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
Executing one action: self.actions.modify_radio('intra-5', '1')
We are going to select this radio button: <input name="intra-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
Executing one action: self.actions.modify_radio('diverse-5', '1')
We are going to select this radio button: <input name="diverse-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
Executing one action: self.actions.modify_radio('bestq-5', '1')
We are going to select this radio button: <input name="bestq-5" type="radio" value="1">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.76
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0]}
instance_id: 33672 <-> row_number: 18
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 18 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [2.0, 1.0, 1.0], 'complete-1': [1.0, 1.0, 1.0], 'intra-1': [2.0, 1.0, 1.0], 'diverse-1': [2.0, 1.0, 1.0], 'bestq-1': [1.0, 1.0, 1.0], 'coherent-2': [2.0, 2.0, 1.0], 'complete-2': [1.0, 2.0, 1.0], 'intra-2': [2.0, 2.0, 1.0], 'diverse-2': [2.0, 2.0, 1.0], 'bestq-2': [2.0, 2.0, 1.0], 'coherent-3': [1, 2, 2], 'complete-3': [2, 2, 2], 'intra-3': [1, 2, 2], 'diverse-3': [2.0, 2.0, 1.0], 'bestq-3': [1, 2, 2], 'coherent-4': [1, 1, 1], 'complete-4': [2.0, 1.0, 1.0], 'intra-4': [1.0, 1.0, 1.0], 'diverse-4': [2, 1, 1], 'bestq-4': [2, 1, 1], 'coherent-5': [2, 1, 1], 'complete-5': [1, 1, 1], 'intra-5': [2.0, 1.0, 1.0], 'diverse-5': [1, 1, 1], 'bestq-5': [2, 1, 1]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
Executing one action: self.actions.modify_radio('coherent-1', '1')
We are going to select this radio button: <input name="coherent-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
Executing one action: self.actions.modify_radio('complete-1', '2')
We are going to select this radio button: <input name="complete-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
Executing one action: self.actions.modify_radio('intra-1', '1')
We are going to select this radio button: <input name="intra-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
Executing one action: self.actions.modify_radio('diverse-1', '1')
We are going to select this radio button: <input name="diverse-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
Executing one action: self.actions.modify_radio('bestq-1', '1')
We are going to select this radio button: <input name="bestq-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
Executing one action: self.actions.modify_radio('coherent-2', '1')
We are going to select this radio button: <input name="coherent-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
Executing one action: self.actions.modify_radio('complete-2', '1')
We are going to select this radio button: <input name="complete-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
Executing one action: self.actions.modify_radio('intra-2', '1')
We are going to select this radio button: <input name="intra-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
Executing one action: self.actions.modify_radio('diverse-2', '2')
We are going to select this radio button: <input name="diverse-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
Executing one action: self.actions.modify_radio('bestq-2', '1')
We are going to select this radio button: <input name="bestq-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
Executing one action: self.actions.modify_radio('coherent-3', '2')
We are going to select this radio button: <input name="coherent-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
Executing one action: self.actions.modify_radio('complete-3', '2')
We are going to select this radio button: <input name="complete-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
Executing one action: self.actions.modify_radio('intra-3', '1')
We are going to select this radio button: <input name="intra-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
Executing one action: self.actions.modify_radio('diverse-3', '2')
We are going to select this radio button: <input name="diverse-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
Executing one action: self.actions.modify_radio('bestq-3', '1')
We are going to select this radio button: <input name="bestq-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
Executing one action: self.actions.modify_radio('coherent-4', '1')
We are going to select this radio button: <input name="coherent-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
Executing one action: self.actions.modify_radio('complete-4', '1')
We are going to select this radio button: <input name="complete-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
Executing one action: self.actions.modify_radio('intra-4', '1')
We are going to select this radio button: <input name="intra-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
Executing one action: self.actions.modify_radio('diverse-4', '1')
We are going to select this radio button: <input name="diverse-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
Executing one action: self.actions.modify_radio('bestq-4', '1')
We are going to select this radio button: <input name="bestq-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
Executing one action: self.actions.modify_radio('coherent-5', '1')
We are going to select this radio button: <input name="coherent-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
Executing one action: self.actions.modify_radio('complete-5', '1')
We are going to select this radio button: <input name="complete-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
Executing one action: self.actions.modify_radio('intra-5', '1')
We are going to select this radio button: <input name="intra-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
Executing one action: self.actions.modify_radio('diverse-5', '1')
We are going to select this radio button: <input name="diverse-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
Executing one action: self.actions.modify_radio('bestq-5', '1')
We are going to select this radio button: <input name="bestq-5" type="radio" value="1">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.76
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]}
instance_id: 33658 <-> row_number: 4
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 4 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [2.0, 2.0, 1.0], 'complete-1': [2.0, 2.0, 1.0], 'intra-1': [2.0, 1.0, 2.0], 'diverse-1': [2.0, 2.0, 2.0], 'bestq-1': [2.0, 2.0, 1.0], 'coherent-2': [1.0, 1.0, 1.0], 'complete-2': [1.0, 2.0, 1.0], 'intra-2': [1.0, 2.0, 1.0], 'diverse-2': [1.0, 2.0, 1.0], 'bestq-2': [1.0, 1.0, 1.0], 'coherent-3': [1, 2, 1], 'complete-3': [1, 1, 1], 'intra-3': [1, 1, 1], 'diverse-3': [1.0, 1.0, 1.0], 'bestq-3': [1, 2, 1], 'coherent-4': [2, 1, 2], 'complete-4': [2.0, 2.0, 2.0], 'intra-4': [2.0, 2.0, 2.0], 'diverse-4': [2, 2, 2], 'bestq-4': [2, 1, 2], 'coherent-5': [2, 2, 1], 'complete-5': [2, 1, 1], 'intra-5': [2.0, 1.0, 2.0], 'diverse-5': [2, 1, 1], 'bestq-5': [2, 1, 1]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
Executing one action: self.actions.modify_radio('coherent-1', '2')
We are going to select this radio button: <input name="coherent-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
Executing one action: self.actions.modify_radio('complete-1', '2')
We are going to select this radio button: <input name="complete-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
Executing one action: self.actions.modify_radio('intra-1', '2')
We are going to select this radio button: <input name="intra-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
Executing one action: self.actions.modify_radio('diverse-1', '2')
We are going to select this radio button: <input name="diverse-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
Executing one action: self.actions.modify_radio('bestq-1', '2')
We are going to select this radio button: <input name="bestq-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
Executing one action: self.actions.modify_radio('coherent-2', '2')
We are going to select this radio button: <input name="coherent-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
Executing one action: self.actions.modify_radio('complete-2', '1')
We are going to select this radio button: <input name="complete-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
Executing one action: self.actions.modify_radio('intra-2', '2')
We are going to select this radio button: <input name="intra-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
Executing one action: self.actions.modify_radio('diverse-2', '2')
We are going to select this radio button: <input name="diverse-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
Executing one action: self.actions.modify_radio('bestq-2', '2')
We are going to select this radio button: <input name="bestq-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
Executing one action: self.actions.modify_radio('coherent-3', '2')
We are going to select this radio button: <input name="coherent-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
Executing one action: self.actions.modify_radio('complete-3', '2')
We are going to select this radio button: <input name="complete-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
Executing one action: self.actions.modify_radio('intra-3', '2')
We are going to select this radio button: <input name="intra-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
Executing one action: self.actions.modify_radio('diverse-3', '2')
We are going to select this radio button: <input name="diverse-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
Executing one action: self.actions.modify_radio('bestq-3', '2')
We are going to select this radio button: <input name="bestq-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
Executing one action: self.actions.modify_radio('coherent-4', '2')
We are going to select this radio button: <input name="coherent-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
Executing one action: self.actions.modify_radio('complete-4', '2')
We are going to select this radio button: <input name="complete-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
Executing one action: self.actions.modify_radio('intra-4', '2')
We are going to select this radio button: <input name="intra-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
Executing one action: self.actions.modify_radio('diverse-4', '2')
We are going to select this radio button: <input name="diverse-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
Executing one action: self.actions.modify_radio('bestq-4', '2')
We are going to select this radio button: <input name="bestq-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
Executing one action: self.actions.modify_radio('coherent-5', '2')
We are going to select this radio button: <input name="coherent-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
Executing one action: self.actions.modify_radio('complete-5', '2')
We are going to select this radio button: <input name="complete-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
Executing one action: self.actions.modify_radio('intra-5', '2')
We are going to select this radio button: <input name="intra-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
Executing one action: self.actions.modify_radio('diverse-5', '2')
We are going to select this radio button: <input name="diverse-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
Executing one action: self.actions.modify_radio('bestq-5', '2')
We are going to select this radio button: <input name="bestq-5" type="radio" value="2">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.52
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 33675 <-> row_number: 21
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 21 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [1.0, 1.0, 1.0], 'complete-1': [1.0, 1.0, 1.0], 'intra-1': [1.0, 2.0, 1.0], 'diverse-1': [1.0, 2.0, 1.0], 'bestq-1': [1.0, 1.0, 1.0], 'coherent-2': [2.0, 1.0, 1.0], 'complete-2': [2.0, 1.0, 1.0], 'intra-2': [2.0, 1.0, 1.0], 'diverse-2': [2.0, 1.0, 1.0], 'bestq-2': [2.0, 1.0, 1.0], 'coherent-3': [1, 1, 1], 'complete-3': [1, 2, 2], 'intra-3': [1, 2, 1], 'diverse-3': [1.0, 2.0, 2.0], 'bestq-3': [1, 2, 2], 'coherent-4': [1, 1, 1], 'complete-4': [1.0, 2.0, 1.0], 'intra-4': [1.0, 1.0, 1.0], 'diverse-4': [1, 2, 2], 'bestq-4': [1, 2, 1], 'coherent-5': [1, 1, 1], 'complete-5': [1, 1, 1], 'intra-5': [1.0, 1.0, 1.0], 'diverse-5': [1, 2, 2], 'bestq-5': [1, 1, 1]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
Executing one action: self.actions.modify_radio('coherent-1', '2')
We are going to select this radio button: <input name="coherent-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
Executing one action: self.actions.modify_radio('complete-1', '2')
We are going to select this radio button: <input name="complete-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
Executing one action: self.actions.modify_radio('intra-1', '2')
We are going to select this radio button: <input name="intra-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
Executing one action: self.actions.modify_radio('diverse-1', '2')
We are going to select this radio button: <input name="diverse-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
Executing one action: self.actions.modify_radio('bestq-1', '2')
We are going to select this radio button: <input name="bestq-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
Executing one action: self.actions.modify_radio('coherent-2', '2')
We are going to select this radio button: <input name="coherent-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
Executing one action: self.actions.modify_radio('complete-2', '2')
We are going to select this radio button: <input name="complete-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
Executing one action: self.actions.modify_radio('intra-2', '1')
We are going to select this radio button: <input name="intra-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
Executing one action: self.actions.modify_radio('diverse-2', '2')
We are going to select this radio button: <input name="diverse-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
Executing one action: self.actions.modify_radio('bestq-2', '2')
We are going to select this radio button: <input name="bestq-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
Executing one action: self.actions.modify_radio('coherent-3', '1')
We are going to select this radio button: <input name="coherent-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
Executing one action: self.actions.modify_radio('complete-3', '1')
We are going to select this radio button: <input name="complete-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
Executing one action: self.actions.modify_radio('intra-3', '1')
We are going to select this radio button: <input name="intra-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
Executing one action: self.actions.modify_radio('diverse-3', '2')
We are going to select this radio button: <input name="diverse-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
Executing one action: self.actions.modify_radio('bestq-3', '1')
We are going to select this radio button: <input name="bestq-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
Executing one action: self.actions.modify_radio('coherent-4', '1')
We are going to select this radio button: <input name="coherent-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
Executing one action: self.actions.modify_radio('complete-4', '2')
We are going to select this radio button: <input name="complete-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
Executing one action: self.actions.modify_radio('intra-4', '2')
We are going to select this radio button: <input name="intra-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
Executing one action: self.actions.modify_radio('diverse-4', '2')
We are going to select this radio button: <input name="diverse-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
Executing one action: self.actions.modify_radio('bestq-4', '1')
We are going to select this radio button: <input name="bestq-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
Executing one action: self.actions.modify_radio('coherent-5', '1')
We are going to select this radio button: <input name="coherent-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
Executing one action: self.actions.modify_radio('complete-5', '2')
We are going to select this radio button: <input name="complete-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
Executing one action: self.actions.modify_radio('intra-5', '1')
We are going to select this radio button: <input name="intra-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
Executing one action: self.actions.modify_radio('diverse-5', '2')
We are going to select this radio button: <input name="diverse-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
Executing one action: self.actions.modify_radio('bestq-5', '2')
We are going to select this radio button: <input name="bestq-5" type="radio" value="2">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.4
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0]}
instance_id: 33663 <-> row_number: 9
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 9 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [2.0, 1.0, 1.0], 'complete-1': [2.0, 2.0, 1.0], 'intra-1': [2.0, 1.0, 2.0], 'diverse-1': [2.0, 1.0, 2.0], 'bestq-1': [2.0, 2.0, 1.0], 'coherent-2': [2.0, 2.0, 2.0], 'complete-2': [2.0, 2.0, 1.0], 'intra-2': [2.0, 2.0, 1.0], 'diverse-2': [2.0, 2.0, 2.0], 'bestq-2': [2.0, 2.0, 1.0], 'coherent-3': [2, 2, 1], 'complete-3': [2, 2, 2], 'intra-3': [2, 2, 2], 'diverse-3': [2.0, '', 2.0], 'bestq-3': [2, 2, 1], 'coherent-4': [2, 2, 1], 'complete-4': [2.0, 2.0, 1.0], 'intra-4': [2.0, 2.0, 2.0], 'diverse-4': [2, 2, 2], 'bestq-4': [2, 2, 1], 'coherent-5': [2, 2, 2], 'complete-5': [2, 2, 1], 'intra-5': [2.0, 2.0, 2.0], 'diverse-5': [2, 2, 2], 'bestq-5': [2, 2, 1]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
Executing one action: self.actions.modify_radio('coherent-1', '2')
We are going to select this radio button: <input name="coherent-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
Executing one action: self.actions.modify_radio('complete-1', '2')
We are going to select this radio button: <input name="complete-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
Executing one action: self.actions.modify_radio('intra-1', '2')
We are going to select this radio button: <input name="intra-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
Executing one action: self.actions.modify_radio('diverse-1', '1')
We are going to select this radio button: <input name="diverse-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
Executing one action: self.actions.modify_radio('bestq-1', '2')
We are going to select this radio button: <input name="bestq-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
Executing one action: self.actions.modify_radio('coherent-2', '2')
We are going to select this radio button: <input name="coherent-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
Executing one action: self.actions.modify_radio('complete-2', '2')
We are going to select this radio button: <input name="complete-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
Executing one action: self.actions.modify_radio('intra-2', '2')
We are going to select this radio button: <input name="intra-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
Executing one action: self.actions.modify_radio('diverse-2', '2')
We are going to select this radio button: <input name="diverse-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
Executing one action: self.actions.modify_radio('bestq-2', '2')
We are going to select this radio button: <input name="bestq-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
Executing one action: self.actions.modify_radio('coherent-3', '2')
We are going to select this radio button: <input name="coherent-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
Executing one action: self.actions.modify_radio('complete-3', '2')
We are going to select this radio button: <input name="complete-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
Executing one action: self.actions.modify_radio('intra-3', '2')
We are going to select this radio button: <input name="intra-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
Executing one action: self.actions.modify_radio('diverse-3', '2')
We are going to select this radio button: <input name="diverse-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
Executing one action: self.actions.modify_radio('bestq-3', '2')
We are going to select this radio button: <input name="bestq-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
Executing one action: self.actions.modify_radio('coherent-4', '1')
We are going to select this radio button: <input name="coherent-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
Executing one action: self.actions.modify_radio('complete-4', '2')
We are going to select this radio button: <input name="complete-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
Executing one action: self.actions.modify_radio('intra-4', '1')
We are going to select this radio button: <input name="intra-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
Executing one action: self.actions.modify_radio('diverse-4', '1')
We are going to select this radio button: <input name="diverse-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
Executing one action: self.actions.modify_radio('bestq-4', '2')
We are going to select this radio button: <input name="bestq-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
Executing one action: self.actions.modify_radio('coherent-5', '2')
We are going to select this radio button: <input name="coherent-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
Executing one action: self.actions.modify_radio('complete-5', '2')
We are going to select this radio button: <input name="complete-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
Executing one action: self.actions.modify_radio('intra-5', '2')
We are going to select this radio button: <input name="intra-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
Executing one action: self.actions.modify_radio('diverse-5', '2')
We are going to select this radio button: <input name="diverse-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
Executing one action: self.actions.modify_radio('bestq-5', '1')
We are going to select this radio button: <input name="bestq-5" type="radio" value="1">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, '', 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.76
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0]}
instance_id: 33701 <-> row_number: 47
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 47 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': ['', 2.0, 1.0], 'complete-1': ['', 2.0, 2.0], 'intra-1': ['', 2.0, 2.0], 'diverse-1': ['', 2.0, 2.0], 'bestq-1': ['', 2.0, 1.0], 'coherent-2': ['', 2.0, 1.0], 'complete-2': ['', 2.0, 2.0], 'intra-2': ['', 2.0, 2.0], 'diverse-2': ['', 2.0, 2.0], 'bestq-2': ['', 2.0, 2.0], 'coherent-3': [2, 2, 2], 'complete-3': [2, 2, 2], 'intra-3': [2, 2, 2], 'diverse-3': [1.0, 2.0, 2.0], 'bestq-3': [2, 2, 2], 'coherent-4': [1, 1, 1], 'complete-4': [1.0, 1.0, 2.0], 'intra-4': [1.0, 1.0, 2.0], 'diverse-4': [2, 2, 2], 'bestq-4': [1, 1, 2], 'coherent-5': [2, 2, 2], 'complete-5': [2, 2, 2], 'intra-5': [2.0, 2.0, 2.0], 'diverse-5': [1, 2, 2], 'bestq-5': [2, 2, 2]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
Executing one action: self.actions.modify_radio('coherent-1', '2')
We are going to select this radio button: <input name="coherent-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
Executing one action: self.actions.modify_radio('complete-1', '2')
We are going to select this radio button: <input name="complete-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
Executing one action: self.actions.modify_radio('intra-1', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
Executing one action: self.actions.modify_radio('diverse-1', '2')
We are going to select this radio button: <input name="diverse-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
Executing one action: self.actions.modify_radio('bestq-1', '2')
We are going to select this radio button: <input name="bestq-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
Executing one action: self.actions.modify_radio('coherent-2', '1')
We are going to select this radio button: <input name="coherent-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
Executing one action: self.actions.modify_radio('complete-2', '2')
We are going to select this radio button: <input name="complete-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
Executing one action: self.actions.modify_radio('intra-2', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
Executing one action: self.actions.modify_radio('diverse-2', '2')
We are going to select this radio button: <input name="diverse-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
Executing one action: self.actions.modify_radio('bestq-2', '1')
We are going to select this radio button: <input name="bestq-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
Executing one action: self.actions.modify_radio('coherent-3', '1')
We are going to select this radio button: <input name="coherent-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
Executing one action: self.actions.modify_radio('complete-3', '2')
We are going to select this radio button: <input name="complete-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
Executing one action: self.actions.modify_radio('intra-3', '1')
We are going to select this radio button: <input name="intra-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
Executing one action: self.actions.modify_radio('diverse-3', '2')
We are going to select this radio button: <input name="diverse-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
Executing one action: self.actions.modify_radio('bestq-3', '2')
We are going to select this radio button: <input name="bestq-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
Executing one action: self.actions.modify_radio('coherent-4', '1')
We are going to select this radio button: <input name="coherent-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
Executing one action: self.actions.modify_radio('complete-4', '2')
We are going to select this radio button: <input name="complete-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
Executing one action: self.actions.modify_radio('intra-4', '2')
We are going to select this radio button: <input name="intra-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
Executing one action: self.actions.modify_radio('diverse-4', '2')
We are going to select this radio button: <input name="diverse-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
Executing one action: self.actions.modify_radio('bestq-4', '2')
We are going to select this radio button: <input name="bestq-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
Executing one action: self.actions.modify_radio('coherent-5', '2')
We are going to select this radio button: <input name="coherent-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
Executing one action: self.actions.modify_radio('complete-5', '2')
We are going to select this radio button: <input name="complete-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
Executing one action: self.actions.modify_radio('intra-5', '2')
We are going to select this radio button: <input name="intra-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
Executing one action: self.actions.modify_radio('diverse-5', '2')
We are going to select this radio button: <input name="diverse-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
Executing one action: self.actions.modify_radio('bestq-5', '1')
We are going to select this radio button: <input name="bestq-5" type="radio" value="1">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `['', 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `['', 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `['', 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `['', 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `['', 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `['', 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `['', 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `['', 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `['', 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `['', 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.52
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0]}
instance_id: 33694 <-> row_number: 40
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 40 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [1.0, 1.0, 1.0], 'complete-1': [2.0, 1.0, 1.0], 'intra-1': [2.0, 1.0, 1.0], 'diverse-1': [2.0, 1.0, 2.0], 'bestq-1': [1.0, '', 1.0], 'coherent-2': [2.0, 1.0, 1.0], 'complete-2': [1.0, 1.0, 1.0], 'intra-2': [2.0, 1.0, 1.0], 'diverse-2': [1.0, 1.0, 2.0], 'bestq-2': [1.0, 2.0, 1.0], 'coherent-3': [2, 1, 1], 'complete-3': [2, 2, 2], 'intra-3': [1, 2, 1], 'diverse-3': [1.0, 2.0, 2.0], 'bestq-3': [1, 1, 1], 'coherent-4': [1, 2, 1], 'complete-4': [1.0, 2.0, 1.0], 'intra-4': [1.0, '', 1.0], 'diverse-4': [1, 2, 2], 'bestq-4': [2, 2, 1], 'coherent-5': [1, 1, 1], 'complete-5': [1, 1, 1], 'intra-5': [1.0, 2.0, ''], 'diverse-5': [1, 1, 2], 'bestq-5': [1, 1, 1]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
Executing one action: self.actions.modify_radio('coherent-1', '1')
We are going to select this radio button: <input name="coherent-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
Executing one action: self.actions.modify_radio('complete-1', '1')
We are going to select this radio button: <input name="complete-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
Executing one action: self.actions.modify_radio('intra-1', '1')
We are going to select this radio button: <input name="intra-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
Executing one action: self.actions.modify_radio('diverse-1', '1')
We are going to select this radio button: <input name="diverse-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
Executing one action: self.actions.modify_radio('bestq-1', '1')
We are going to select this radio button: <input name="bestq-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
Executing one action: self.actions.modify_radio('coherent-2', '1')
We are going to select this radio button: <input name="coherent-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
Executing one action: self.actions.modify_radio('complete-2', '1')
We are going to select this radio button: <input name="complete-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
Executing one action: self.actions.modify_radio('intra-2', '1')
We are going to select this radio button: <input name="intra-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
Executing one action: self.actions.modify_radio('diverse-2', '1')
We are going to select this radio button: <input name="diverse-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
Executing one action: self.actions.modify_radio('bestq-2', '1')
We are going to select this radio button: <input name="bestq-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
Executing one action: self.actions.modify_radio('coherent-3', '1')
We are going to select this radio button: <input name="coherent-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
Executing one action: self.actions.modify_radio('complete-3', '2')
We are going to select this radio button: <input name="complete-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
Executing one action: self.actions.modify_radio('intra-3', '1')
We are going to select this radio button: <input name="intra-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
Executing one action: self.actions.modify_radio('diverse-3', '2')
We are going to select this radio button: <input name="diverse-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
Executing one action: self.actions.modify_radio('bestq-3', '1')
We are going to select this radio button: <input name="bestq-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
Executing one action: self.actions.modify_radio('coherent-4', '1')
We are going to select this radio button: <input name="coherent-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
Executing one action: self.actions.modify_radio('complete-4', '1')
We are going to select this radio button: <input name="complete-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
Executing one action: self.actions.modify_radio('intra-4', '1')
We are going to select this radio button: <input name="intra-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
Executing one action: self.actions.modify_radio('diverse-4', '1')
We are going to select this radio button: <input name="diverse-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
Executing one action: self.actions.modify_radio('bestq-4', '1')
We are going to select this radio button: <input name="bestq-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
Executing one action: self.actions.modify_radio('coherent-5', '1')
We are going to select this radio button: <input name="coherent-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
Executing one action: self.actions.modify_radio('complete-5', '1')
We are going to select this radio button: <input name="complete-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
Executing one action: self.actions.modify_radio('intra-5', '1')
We are going to select this radio button: <input name="intra-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
Executing one action: self.actions.modify_radio('diverse-5', '2')
We are going to select this radio button: <input name="diverse-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
Executing one action: self.actions.modify_radio('bestq-5', '1')
We are going to select this radio button: <input name="bestq-5" type="radio" value="1">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, '', 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, '', 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, '']` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.84
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0]}
instance_id: 33682 <-> row_number: 28
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 28 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [2.0, 1.0, 2.0], 'complete-1': [2.0, 1.0, 2.0], 'intra-1': [2.0, 1.0, 2.0], 'diverse-1': [2.0, 2.0, 1.0], 'bestq-1': [1.0, 1.0, 2.0], 'coherent-2': [1.0, 2.0, 2.0], 'complete-2': [1.0, 2.0, 2.0], 'intra-2': [1.0, 2.0, 2.0], 'diverse-2': [2.0, 1.0, 1.0], 'bestq-2': [1.0, 2.0, 2.0], 'coherent-3': [2, 1, 1], 'complete-3': [2, 1, 1], 'intra-3': [2, 1, 1], 'diverse-3': [1.0, 2.0, 1.0], 'bestq-3': [2, 1, 1], 'coherent-4': [2, 2, 2], 'complete-4': [2.0, 1.0, 2.0], 'intra-4': [1.0, 2.0, 2.0], 'diverse-4': [1, 1, 1], 'bestq-4': [2, 2, 2], 'coherent-5': [2, 2, 2], 'complete-5': [2, 2, 2], 'intra-5': [2.0, 2.0, 2.0], 'diverse-5': [2, 1, 1], 'bestq-5': [2, 2, 2]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
Executing one action: self.actions.modify_radio('coherent-1', '2')
We are going to select this radio button: <input name="coherent-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
Executing one action: self.actions.modify_radio('complete-1', '2')
We are going to select this radio button: <input name="complete-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
Executing one action: self.actions.modify_radio('intra-1', '2')
We are going to select this radio button: <input name="intra-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
Executing one action: self.actions.modify_radio('diverse-1', '2')
We are going to select this radio button: <input name="diverse-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
Executing one action: self.actions.modify_radio('bestq-1', '2')
We are going to select this radio button: <input name="bestq-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
Executing one action: self.actions.modify_radio('coherent-2', '2')
We are going to select this radio button: <input name="coherent-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
Executing one action: self.actions.modify_radio('complete-2', '2')
We are going to select this radio button: <input name="complete-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
Executing one action: self.actions.modify_radio('intra-2', '2')
We are going to select this radio button: <input name="intra-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
Executing one action: self.actions.modify_radio('diverse-2', '2')
We are going to select this radio button: <input name="diverse-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
Executing one action: self.actions.modify_radio('bestq-2', '2')
We are going to select this radio button: <input name="bestq-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
Executing one action: self.actions.modify_radio('coherent-3', '2')
We are going to select this radio button: <input name="coherent-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
Executing one action: self.actions.modify_radio('complete-3', '2')
We are going to select this radio button: <input name="complete-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
Executing one action: self.actions.modify_radio('intra-3', '2')
We are going to select this radio button: <input name="intra-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
Executing one action: self.actions.modify_radio('diverse-3', '2')
We are going to select this radio button: <input name="diverse-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
Executing one action: self.actions.modify_radio('bestq-3', '2')
We are going to select this radio button: <input name="bestq-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
Executing one action: self.actions.modify_radio('coherent-4', '2')
We are going to select this radio button: <input name="coherent-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
Executing one action: self.actions.modify_radio('complete-4', '2')
We are going to select this radio button: <input name="complete-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
Executing one action: self.actions.modify_radio('intra-4', '2')
We are going to select this radio button: <input name="intra-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
Executing one action: self.actions.modify_radio('diverse-4', '2')
We are going to select this radio button: <input name="diverse-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
Executing one action: self.actions.modify_radio('bestq-4', '2')
We are going to select this radio button: <input name="bestq-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
Executing one action: self.actions.modify_radio('coherent-5', '2')
We are going to select this radio button: <input name="coherent-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
Executing one action: self.actions.modify_radio('complete-5', '2')
We are going to select this radio button: <input name="complete-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
Executing one action: self.actions.modify_radio('intra-5', '2')
We are going to select this radio button: <input name="intra-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
Executing one action: self.actions.modify_radio('diverse-5', '2')
We are going to select this radio button: <input name="diverse-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
Executing one action: self.actions.modify_radio('bestq-5', '2')
We are going to select this radio button: <input name="bestq-5" type="radio" value="2">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.64
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0]}
instance_id: 33691 <-> row_number: 37
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 37 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [2.0, 1.0, 1.0], 'complete-1': [2.0, 1.0, 1.0], 'intra-1': [2.0, 1.0, 1.0], 'diverse-1': [2.0, 2.0, 2.0], 'bestq-1': [2.0, 1.0, 1.0], 'coherent-2': [2.0, 2.0, 2.0], 'complete-2': [2.0, 2.0, 2.0], 'intra-2': [2.0, 2.0, 2.0], 'diverse-2': [1.0, 2.0, 2.0], 'bestq-2': [2.0, 2.0, 2.0], 'coherent-3': [1, 1, 1], 'complete-3': [1, 1, 1], 'intra-3': [1, 2, 1], 'diverse-3': [1.0, 2.0, 2.0], 'bestq-3': [1, 1, 1], 'coherent-4': [2, 1, 1], 'complete-4': [2.0, 1.0, 1.0], 'intra-4': [2.0, 1.0, 1.0], 'diverse-4': [1, 1, 2], 'bestq-4': [2, 1, 1], 'coherent-5': [1, 1, 1], 'complete-5': [1, 1, 1], 'intra-5': [1.0, 1.0, 1.0], 'diverse-5': [2, 2, 1], 'bestq-5': [1, 1, 1]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
Executing one action: self.actions.modify_radio('coherent-1', '2')
We are going to select this radio button: <input name="coherent-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
Executing one action: self.actions.modify_radio('complete-1', '2')
We are going to select this radio button: <input name="complete-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
Executing one action: self.actions.modify_radio('intra-1', '1')
We are going to select this radio button: <input name="intra-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
Executing one action: self.actions.modify_radio('diverse-1', '2')
We are going to select this radio button: <input name="diverse-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
Executing one action: self.actions.modify_radio('bestq-1', '1')
We are going to select this radio button: <input name="bestq-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
Executing one action: self.actions.modify_radio('coherent-2', '2')
We are going to select this radio button: <input name="coherent-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
Executing one action: self.actions.modify_radio('complete-2', '2')
We are going to select this radio button: <input name="complete-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
Executing one action: self.actions.modify_radio('intra-2', '2')
We are going to select this radio button: <input name="intra-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
Executing one action: self.actions.modify_radio('diverse-2', '2')
We are going to select this radio button: <input name="diverse-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
Executing one action: self.actions.modify_radio('bestq-2', '2')
We are going to select this radio button: <input name="bestq-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
Executing one action: self.actions.modify_radio('coherent-3', '1')
We are going to select this radio button: <input name="coherent-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
Executing one action: self.actions.modify_radio('complete-3', '1')
We are going to select this radio button: <input name="complete-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
Executing one action: self.actions.modify_radio('intra-3', '1')
We are going to select this radio button: <input name="intra-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
Executing one action: self.actions.modify_radio('diverse-3', '2')
We are going to select this radio button: <input name="diverse-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
Executing one action: self.actions.modify_radio('bestq-3', '2')
We are going to select this radio button: <input name="bestq-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
Executing one action: self.actions.modify_radio('coherent-4', '1')
We are going to select this radio button: <input name="coherent-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
Executing one action: self.actions.modify_radio('complete-4', '2')
We are going to select this radio button: <input name="complete-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
Executing one action: self.actions.modify_radio('intra-4', '1')
We are going to select this radio button: <input name="intra-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
Executing one action: self.actions.modify_radio('diverse-4', '2')
We are going to select this radio button: <input name="diverse-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
Executing one action: self.actions.modify_radio('bestq-4', '1')
We are going to select this radio button: <input name="bestq-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
Executing one action: self.actions.modify_radio('coherent-5', '1')
We are going to select this radio button: <input name="coherent-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
Executing one action: self.actions.modify_radio('complete-5', '2')
We are going to select this radio button: <input name="complete-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
Executing one action: self.actions.modify_radio('intra-5', '1')
We are going to select this radio button: <input name="intra-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
Executing one action: self.actions.modify_radio('diverse-5', '2')
We are going to select this radio button: <input name="diverse-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
Executing one action: self.actions.modify_radio('bestq-5', '2')
We are going to select this radio button: <input name="bestq-5" type="radio" value="2">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.72
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0]}
instance_id: 33656 <-> row_number: 2
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 2 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [2.0, 2.0, 2.0], 'complete-1': [2.0, 2.0, 2.0], 'intra-1': [2.0, 2.0, 2.0], 'diverse-1': [1.0, 1.0, 1.0], 'bestq-1': [2.0, 2.0, 2.0], 'coherent-2': [1.0, 2.0, 1.0], 'complete-2': [1.0, 1.0, 1.0], 'intra-2': [1.0, 2.0, 1.0], 'diverse-2': [2.0, 2.0, 1.0], 'bestq-2': [1.0, 2.0, 1.0], 'coherent-3': [1, 1, 1], 'complete-3': [1, 2, 1], 'intra-3': [1, 1, 1], 'diverse-3': [1.0, 2.0, 1.0], 'bestq-3': [1, 1, 1], 'coherent-4': [2, 1, 1], 'complete-4': [2.0, 2.0, 1.0], 'intra-4': [2.0, 1.0, 1.0], 'diverse-4': [2, 1, 1], 'bestq-4': [2, 2, 1], 'coherent-5': [1, 2, 1], 'complete-5': [1, 2, 1], 'intra-5': [1.0, 1.0, 1.0], 'diverse-5': [1, 1, 2], 'bestq-5': [1, 2, 1]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
Executing one action: self.actions.modify_radio('coherent-1', '2')
We are going to select this radio button: <input name="coherent-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
Executing one action: self.actions.modify_radio('complete-1', '2')
We are going to select this radio button: <input name="complete-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
Executing one action: self.actions.modify_radio('intra-1', '2')
We are going to select this radio button: <input name="intra-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
Executing one action: self.actions.modify_radio('diverse-1', '2')
We are going to select this radio button: <input name="diverse-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
Executing one action: self.actions.modify_radio('bestq-1', '2')
We are going to select this radio button: <input name="bestq-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
Executing one action: self.actions.modify_radio('coherent-2', '1')
We are going to select this radio button: <input name="coherent-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
Executing one action: self.actions.modify_radio('complete-2', '2')
We are going to select this radio button: <input name="complete-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
Executing one action: self.actions.modify_radio('intra-2', '2')
We are going to select this radio button: <input name="intra-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
Executing one action: self.actions.modify_radio('diverse-2', '2')
We are going to select this radio button: <input name="diverse-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
Executing one action: self.actions.modify_radio('bestq-2', '2')
We are going to select this radio button: <input name="bestq-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
Executing one action: self.actions.modify_radio('coherent-3', '1')
We are going to select this radio button: <input name="coherent-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
Executing one action: self.actions.modify_radio('complete-3', '1')
We are going to select this radio button: <input name="complete-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
Executing one action: self.actions.modify_radio('intra-3', '1')
We are going to select this radio button: <input name="intra-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
Executing one action: self.actions.modify_radio('diverse-3', '1')
We are going to select this radio button: <input name="diverse-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
Executing one action: self.actions.modify_radio('bestq-3', '2')
We are going to select this radio button: <input name="bestq-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
Executing one action: self.actions.modify_radio('coherent-4', '2')
We are going to select this radio button: <input name="coherent-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
Executing one action: self.actions.modify_radio('complete-4', '2')
We are going to select this radio button: <input name="complete-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
Executing one action: self.actions.modify_radio('intra-4', '1')
We are going to select this radio button: <input name="intra-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
Executing one action: self.actions.modify_radio('diverse-4', '2')
We are going to select this radio button: <input name="diverse-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
Executing one action: self.actions.modify_radio('bestq-4', '2')
We are going to select this radio button: <input name="bestq-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
Executing one action: self.actions.modify_radio('coherent-5', '2')
We are going to select this radio button: <input name="coherent-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
Executing one action: self.actions.modify_radio('complete-5', '2')
We are going to select this radio button: <input name="complete-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
Executing one action: self.actions.modify_radio('intra-5', '2')
We are going to select this radio button: <input name="intra-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
Executing one action: self.actions.modify_radio('diverse-5', '2')
We are going to select this radio button: <input name="diverse-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
Executing one action: self.actions.modify_radio('bestq-5', '2')
We are going to select this radio button: <input name="bestq-5" type="radio" value="2">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.52
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 33659 <-> row_number: 5
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 5 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [1.0, 1.0, 1.0], 'complete-1': [1.0, 1.0, 1.0], 'intra-1': [1.0, 1.0, 1.0], 'diverse-1': [1.0, 1.0, 1.0], 'bestq-1': [1.0, 1.0, 1.0], 'coherent-2': [1.0, 1.0, 1.0], 'complete-2': [1.0, 1.0, 1.0], 'intra-2': [1.0, 1.0, 1.0], 'diverse-2': [1.0, 2.0, 2.0], 'bestq-2': [1.0, 1.0, 1.0], 'coherent-3': [1, 1, 1], 'complete-3': [1, 1, 1], 'intra-3': [1, 1, 1], 'diverse-3': [2.0, 2.0, 2.0], 'bestq-3': [2, 1, 1], 'coherent-4': [2, 1, 1], 'complete-4': [2.0, 2.0, 2.0], 'intra-4': [2.0, 2.0, 1.0], 'diverse-4': [2, 2, 2], 'bestq-4': [2, 2, 1], 'coherent-5': [1, 1, 1], 'complete-5': [1, 1, 1], 'intra-5': [1.0, 1.0, 1.0], 'diverse-5': [1, 2, 1], 'bestq-5': [1, 1, 1]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
Executing one action: self.actions.modify_radio('coherent-1', '1')
We are going to select this radio button: <input name="coherent-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
Executing one action: self.actions.modify_radio('complete-1', '1')
We are going to select this radio button: <input name="complete-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
Executing one action: self.actions.modify_radio('intra-1', '1')
We are going to select this radio button: <input name="intra-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
Executing one action: self.actions.modify_radio('diverse-1', '1')
We are going to select this radio button: <input name="diverse-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
Executing one action: self.actions.modify_radio('bestq-1', '1')
We are going to select this radio button: <input name="bestq-1" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
Executing one action: self.actions.modify_radio('coherent-2', '1')
We are going to select this radio button: <input name="coherent-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
Executing one action: self.actions.modify_radio('complete-2', '1')
We are going to select this radio button: <input name="complete-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
Executing one action: self.actions.modify_radio('intra-2', '1')
We are going to select this radio button: <input name="intra-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
Executing one action: self.actions.modify_radio('diverse-2', '1')
We are going to select this radio button: <input name="diverse-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
Executing one action: self.actions.modify_radio('bestq-2', '1')
We are going to select this radio button: <input name="bestq-2" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
Executing one action: self.actions.modify_radio('coherent-3', '1')
We are going to select this radio button: <input name="coherent-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
Executing one action: self.actions.modify_radio('complete-3', '1')
We are going to select this radio button: <input name="complete-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
Executing one action: self.actions.modify_radio('intra-3', '1')
We are going to select this radio button: <input name="intra-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
Executing one action: self.actions.modify_radio('diverse-3', '1')
We are going to select this radio button: <input name="diverse-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
Executing one action: self.actions.modify_radio('bestq-3', '1')
We are going to select this radio button: <input name="bestq-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
Executing one action: self.actions.modify_radio('coherent-4', '1')
We are going to select this radio button: <input name="coherent-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
Executing one action: self.actions.modify_radio('complete-4', '1')
We are going to select this radio button: <input name="complete-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
Executing one action: self.actions.modify_radio('intra-4', '1')
We are going to select this radio button: <input name="intra-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
Executing one action: self.actions.modify_radio('diverse-4', '1')
We are going to select this radio button: <input name="diverse-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
Executing one action: self.actions.modify_radio('bestq-4', '1')
We are going to select this radio button: <input name="bestq-4" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
Executing one action: self.actions.modify_radio('coherent-5', '1')
We are going to select this radio button: <input name="coherent-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
Executing one action: self.actions.modify_radio('complete-5', '2')
We are going to select this radio button: <input name="complete-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
Executing one action: self.actions.modify_radio('intra-5', '1')
We are going to select this radio button: <input name="intra-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
Executing one action: self.actions.modify_radio('diverse-5', '1')
We are going to select this radio button: <input name="diverse-5" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
Executing one action: self.actions.modify_radio('bestq-5', '1')
We are going to select this radio button: <input name="bestq-5" type="radio" value="1">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.72
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0]}
instance_id: 33683 <-> row_number: 29
Could not find input field with name `bestq-1.1`
Could not find input field with name `bestq-1.2`
Could not find input field with name `bestq-2.1`
Could not find input field with name `bestq-2.2`
Could not find input field with name `bestq-3.1`
Could not find input field with name `bestq-3.2`
Could not find input field with name `bestq-4.1`
Could not find input field with name `bestq-4.2`
Could not find input field with name `bestq-5.1`
Could not find input field with name `bestq-5.2`
Could not find input field with name `coherent-1.1`
Could not find input field with name `coherent-1.2`
Could not find input field with name `coherent-2.1`
Could not find input field with name `coherent-2.2`
Could not find input field with name `coherent-3.1`
Could not find input field with name `coherent-3.2`
Could not find input field with name `coherent-4.1`
Could not find input field with name `coherent-4.2`
Could not find input field with name `coherent-5.1`
Could not find input field with name `coherent-5.2`
Could not find input field with name `complete-1.1`
Could not find input field with name `complete-1.2`
Could not find input field with name `complete-2.1`
Could not find input field with name `complete-2.2`
Could not find input field with name `complete-3.1`
Could not find input field with name `complete-3.2`
Could not find input field with name `complete-4.1`
Could not find input field with name `complete-4.2`
Could not find input field with name `complete-5.1`
Could not find input field with name `complete-5.2`
Could not find input field with name `diverse-1.1`
Could not find input field with name `diverse-1.2`
Could not find input field with name `diverse-2.1`
Could not find input field with name `diverse-2.2`
Could not find input field with name `diverse-3.1`
Could not find input field with name `diverse-3.2`
Could not find input field with name `diverse-4.1`
Could not find input field with name `diverse-4.2`
Could not find input field with name `diverse-5.1`
Could not find input field with name `diverse-5.2`
Could not find input field with name `intra-1.1`
Could not find input field with name `intra-1.2`
Could not find input field with name `intra-2.1`
Could not find input field with name `intra-2.2`
Could not find input field with name `intra-3.1`
Could not find input field with name `intra-3.2`
Could not find input field with name `intra-4.1`
Could not find input field with name `intra-4.2`
Could not find input field with name `intra-5.1`
Could not find input field with name `intra-5.2`
 --> inputs: ['coherent-1', 'complete-1', 'intra-1', 'diverse-1', 'bestq-1', 'coherent-2', 'complete-2', 'intra-2', 'diverse-2', 'bestq-2', 'coherent-3', 'complete-3', 'intra-3', 'diverse-3', 'bestq-3', 'coherent-4', 'complete-4', 'intra-4', 'diverse-4', 'bestq-4', 'coherent-5', 'complete-5', 'intra-5', 'diverse-5', 'bestq-5']
 --> Looking up gold labels from row index 29 of `input.csv` (unique inputs). 
 --> input labels: {'coherent-1': [1.0, 2.0, 2.0], 'complete-1': [2.0, 2.0, 2.0], 'intra-1': [2.0, 2.0, 2.0], 'diverse-1': [1.0, 1.0, 2.0], 'bestq-1': [2.0, 2.0, 2.0], 'coherent-2': [2.0, 2.0, 1.0], 'complete-2': [2.0, 2.0, 1.0], 'intra-2': [1.0, 2.0, 1.0], 'diverse-2': [2.0, 2.0, 1.0], 'bestq-2': [2.0, 2.0, 1.0], 'coherent-3': [2, 1, 1], 'complete-3': [1, 2, 1], 'intra-3': [2, 2, 1], 'diverse-3': [2.0, 1.0, 1.0], 'bestq-3': [1, 1, 1], 'coherent-4': [2, 2, 2], 'complete-4': [1.0, 2.0, 2.0], 'intra-4': [2.0, 2.0, 2.0], 'diverse-4': [2, 2, 2], 'bestq-4': [1, 2, 2], 'coherent-5': [1, 2, 2], 'complete-5': [1, 2, 1], 'intra-5': [1.0, 2.0, 1.0], 'diverse-5': [1, 2, 2], 'bestq-5': [2, 2, 1]}
 - - - - - -  starting a new element: `Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-1
Executing one action: self.actions.modify_radio('coherent-1', '2')
We are going to select this radio button: <input name="coherent-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-1
Executing one action: self.actions.modify_radio('complete-1', '2')
We are going to select this radio button: <input name="complete-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-1
Executing one action: self.actions.modify_radio('intra-1', '2')
We are going to select this radio button: <input name="intra-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-1
Executing one action: self.actions.modify_radio('diverse-1', '2')
We are going to select this radio button: <input name="diverse-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-1
Executing one action: self.actions.modify_radio('bestq-1', '2')
We are going to select this radio button: <input name="bestq-1" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-2
Executing one action: self.actions.modify_radio('coherent-2', '2')
We are going to select this radio button: <input name="coherent-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-2
Executing one action: self.actions.modify_radio('complete-2', '2')
We are going to select this radio button: <input name="complete-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-2
Executing one action: self.actions.modify_radio('intra-2', '2')
We are going to select this radio button: <input name="intra-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-2
Executing one action: self.actions.modify_radio('diverse-2', '2')
We are going to select this radio button: <input name="diverse-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-2
Executing one action: self.actions.modify_radio('bestq-2', '2')
We are going to select this radio button: <input name="bestq-2" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-3
Executing one action: self.actions.modify_radio('coherent-3', '1')
We are going to select this radio button: <input name="coherent-3" type="radio" value="1">
 - - - - - -  starting a new element: `Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-3
Executing one action: self.actions.modify_radio('complete-3', '2')
We are going to select this radio button: <input name="complete-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-3
Executing one action: self.actions.modify_radio('intra-3', '2')
We are going to select this radio button: <input name="intra-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-3
Executing one action: self.actions.modify_radio('diverse-3', '2')
We are going to select this radio button: <input name="diverse-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-3
Executing one action: self.actions.modify_radio('bestq-3', '2')
We are going to select this radio button: <input name="bestq-3" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-4
Executing one action: self.actions.modify_radio('coherent-4', '2')
We are going to select this radio button: <input name="coherent-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-4
Executing one action: self.actions.modify_radio('complete-4', '2')
We are going to select this radio button: <input name="complete-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-4
Executing one action: self.actions.modify_radio('intra-4', '2')
We are going to select this radio button: <input name="intra-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-4
Executing one action: self.actions.modify_radio('diverse-4', '2')
We are going to select this radio button: <input name="diverse-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-4
Executing one action: self.actions.modify_radio('bestq-4', '2')
We are going to select this radio button: <input name="bestq-4" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: coherent-5
Executing one action: self.actions.modify_radio('coherent-5', 'nan')
 ** Warning **: input value is nan. So, we're not going to modify the radio button.
 - - - - - -  starting a new element: `Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: complete-5
Executing one action: self.actions.modify_radio('complete-5', '2')
We are going to select this radio button: <input name="complete-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: intra-5
Executing one action: self.actions.modify_radio('intra-5', '2')
We are going to select this radio button: <input name="intra-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: diverse-5
Executing one action: self.actions.modify_radio('diverse-5', '2')
We are going to select this radio button: <input name="diverse-5" type="radio" value="2">
 - - - - - -  starting a new element: `Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)` - - - - - -  
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
about to try executing one action, on the following input: bestq-5
Executing one action: self.actions.modify_radio('bestq-5', '2')
We are going to select this radio button: <input name="bestq-5" type="radio" value="2">
input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['1']
 visible_values : ['1']
input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : []
 visible_values : []
input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`)
 visible : ['2']
 visible_values : ['2']
 ------- evaluating input: Input(name=`coherent-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 1.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-1`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-2`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `1` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 1.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`bestq-3`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`coherent-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`complete-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`intra-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2.0, 2.0, 2.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`diverse-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-4`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`coherent-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`complete-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`intra-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1.0, 2.0, 1.0]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`diverse-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[1, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`bestq-5`, type=`radio`, task=`Arch - Rel Eval 3`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.68
 --> Per-instance per-field breakdown: {'radio': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0]}
 = = = = = = = = = = = = starting new task: `Compression HIT` = = = = = = = = = = = = 
First instance id: 7310
instance_id: 8147 <-> row_number: 837
 --> inputs: ['meaning_0_6', 'grammar_0_6', 'meaning_0_9', 'grammar_0_9', 'meaning_0_4', 'grammar_0_4', 'meaning_0_2', 'grammar_0_2', 'meaning_0_1', 'grammar_0_1', 'meaning_0_11', 'grammar_0_11', 'meaning_0_7', 'grammar_0_7', 'meaning_0_0', 'grammar_0_0', 'meaning_0_3', 'grammar_0_3', 'meaning_0_5', 'grammar_0_5', 'meaning_0_8', 'grammar_0_8', 'meaning_0_10', 'grammar_0_10']
 --> Looking up gold labels from row index 837 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_6': [4, 4], 'grammar_0_6': [3, 5], 'meaning_0_9': [3, 4], 'grammar_0_9': [3, 2], 'meaning_0_4': [5, 4], 'grammar_0_4': [3, 2], 'meaning_0_2': [5, 5], 'grammar_0_2': [5, 5], 'meaning_0_1': [4, 4], 'grammar_0_1': [3, 2], 'meaning_0_11': [3, 4], 'grammar_0_11': [2, 2], 'meaning_0_7': [3, 3], 'grammar_0_7': [3, 1], 'meaning_0_0': [4, 3], 'grammar_0_0': [5, 4], 'meaning_0_3': [3, 4], 'grammar_0_3': [4, 2], 'meaning_0_5': [4, 4], 'grammar_0_5': [2, 2], 'meaning_0_8': [4, 4], 'grammar_0_8': [2, 4], 'meaning_0_10': [2, 4], 'grammar_0_10': [2, 3]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
Executing one action: self.actions.modify_select('meaning_0_6', '3')
We are going to select this select `meaning_0_6` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
Executing one action: self.actions.modify_select('grammar_0_6', '3')
We are going to select this select `grammar_0_6` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
Executing one action: self.actions.modify_select('meaning_0_9', '5')
We are going to select this select `meaning_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
Executing one action: self.actions.modify_select('grammar_0_9', '5')
We are going to select this select `grammar_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', '4')
We are going to select this select `meaning_0_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', '5')
We are going to select this select `grammar_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', '3')
We are going to select this select `meaning_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', '3')
We are going to select this select `grammar_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', '3')
We are going to select this select `meaning_0_1` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', '3')
We are going to select this select `grammar_0_1` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
Executing one action: self.actions.modify_select('meaning_0_11', '4')
We are going to select this select `meaning_0_11` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
Executing one action: self.actions.modify_select('grammar_0_11', '3')
We are going to select this select `grammar_0_11` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
Executing one action: self.actions.modify_select('meaning_0_7', '5')
We are going to select this select `meaning_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
Executing one action: self.actions.modify_select('grammar_0_7', '3')
We are going to select this select `grammar_0_7` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', '5')
We are going to select this select `grammar_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', '3')
We are going to select this select `meaning_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', '3')
We are going to select this select `grammar_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', '5')
We are going to select this select `meaning_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_select('grammar_0_5', '3')
We are going to select this select `grammar_0_5` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
Executing one action: self.actions.modify_select('meaning_0_8', '3')
We are going to select this select `meaning_0_8` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
Executing one action: self.actions.modify_select('grammar_0_8', '5')
We are going to select this select `grammar_0_8` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
Executing one action: self.actions.modify_select('meaning_0_10', '5')
We are going to select this select `meaning_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
Executing one action: self.actions.modify_range('grammar_0_10', '4.0')
Failed to execute an action self.actions.modify_range('grammar_0_10', '4.0'), error: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//input[@type='range' and @name='grammar_0_10']"}
  (Session info: chrome=119.0.6045.123); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
#0 0x56381b6c95e3 <unknown>
#1 0x56381b38c0b7 <unknown>
#2 0x56381b3d9f53 <unknown>
#3 0x56381b3da051 <unknown>
#4 0x56381b41f9c4 <unknown>
#5 0x56381b400f1d <unknown>
#6 0x56381b41cb3d <unknown>
#7 0x56381b400cc3 <unknown>
#8 0x56381b3cc0e4 <unknown>
#9 0x56381b3cd0ae <unknown>
#10 0x56381b68fce1 <unknown>
#11 0x56381b693b7e <unknown>
#12 0x56381b67d4b5 <unknown>
#13 0x56381b6947d6 <unknown>
#14 0x56381b660dbf <unknown>
#15 0x56381b6b7748 <unknown>
#16 0x56381b6b7917 <unknown>
#17 0x56381b6c8773 <unknown>
#18 0x7f37d5094ac3 <unknown>

input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.20833333333333334
 --> Per-instance per-field breakdown: {'select': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 7777 <-> row_number: 467
 --> inputs: ['meaning_0_3', 'grammar_0_3', 'meaning_0_4', 'grammar_0_4', 'meaning_0_11', 'grammar_0_11', 'meaning_0_8', 'grammar_0_8', 'meaning_0_7', 'grammar_0_7', 'meaning_0_1', 'grammar_0_1', 'meaning_0_10', 'grammar_0_10', 'meaning_0_0', 'grammar_0_0', 'meaning_0_9', 'grammar_0_9', 'meaning_0_2', 'grammar_0_2', 'meaning_0_6', 'grammar_0_6', 'meaning_0_5', 'grammar_0_5']
 --> Looking up gold labels from row index 467 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_3': [5, 5, 4], 'grammar_0_3': [5, 5, 5], 'meaning_0_4': [4, 4, 5], 'grammar_0_4': [4, 5, 5], 'meaning_0_11': [5, 5, 5], 'grammar_0_11': [5, 5, 5], 'meaning_0_8': [3, 2, 4], 'grammar_0_8': [1, 2, 3], 'meaning_0_7': [1, 1, 3], 'grammar_0_7': [2, 1, 2], 'meaning_0_1': [4, 3, 4], 'grammar_0_1': [2, 4, 3], 'meaning_0_10': [5, 5, 5], 'grammar_0_10': [4, 5, 5], 'meaning_0_0': [4, 3, 4], 'grammar_0_0': [3, 4, 3], 'meaning_0_9': [3, 3, 3], 'grammar_0_9': [2, 2, 2], 'meaning_0_2': [5, 4, 4], 'grammar_0_2': [5, 5, 5], 'meaning_0_6': [3, 2, 5], 'grammar_0_6': [2, 4, 3], 'meaning_0_5': [4, 4, 4], 'grammar_0_5': [2, 4, 3]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', '3')
We are going to select this select `meaning_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', '3')
We are going to select this select `grammar_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', '4')
We are going to select this select `meaning_0_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', '3')
We are going to select this select `grammar_0_4` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
Executing one action: self.actions.modify_select('meaning_0_11', '3')
We are going to select this select `meaning_0_11` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
Executing one action: self.actions.modify_select('grammar_0_11', '5')
We are going to select this select `grammar_0_11` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
Executing one action: self.actions.modify_select('meaning_0_8', '3')
We are going to select this select `meaning_0_8` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
Executing one action: self.actions.modify_select('grammar_0_8', '3')
We are going to select this select `grammar_0_8` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
Executing one action: self.actions.modify_select('meaning_0_7', '3')
We are going to select this select `meaning_0_7` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
Executing one action: self.actions.modify_select('grammar_0_7', '5')
We are going to select this select `grammar_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', '3')
We are going to select this select `meaning_0_1` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', '5')
We are going to select this select `grammar_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
Executing one action: self.actions.modify_select('meaning_0_10', '5')
We are going to select this select `meaning_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
Executing one action: self.actions.modify_select('grammar_0_10', '5')
We are going to select this select `grammar_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', 'blank')
We are going to select this select `meaning_0_0` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', '5')
We are going to select this select `grammar_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
Executing one action: self.actions.modify_select('meaning_0_9', '3')
We are going to select this select `meaning_0_9` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
Executing one action: self.actions.modify_select('grammar_0_9', '3')
We are going to select this select `grammar_0_9` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', '3')
We are going to select this select `meaning_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', '3')
We are going to select this select `grammar_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
Executing one action: self.actions.modify_select('meaning_0_6', '3')
We are going to select this select `meaning_0_6` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
Executing one action: self.actions.modify_select('grammar_0_6', '3')
We are going to select this select `grammar_0_6` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', '5')
We are going to select this select `meaning_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_select('grammar_0_5', '5')
We are going to select this select `grammar_0_5` with value `5`
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4, 5]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 1, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 4, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 4, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 4, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.2916666666666667
 --> Per-instance per-field breakdown: {'select': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 8010 <-> row_number: 700
 --> inputs: ['meaning_0_10', 'grammar_0_10', 'meaning_0_9', 'grammar_0_9', 'meaning_0_7', 'grammar_0_7', 'meaning_0_1', 'grammar_0_1', 'meaning_0_5', 'grammar_0_5', 'meaning_0_2', 'grammar_0_2', 'meaning_0_0', 'grammar_0_0', 'meaning_0_3', 'grammar_0_3', 'meaning_0_8', 'grammar_0_8', 'meaning_0_6', 'grammar_0_6', 'meaning_0_4', 'grammar_0_4', 'meaning_0_11', 'grammar_0_11']
 --> Looking up gold labels from row index 700 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_10': [4, 2, 3], 'grammar_0_10': [3, 2, 1], 'meaning_0_9': [2, 2, 3], 'grammar_0_9': [3, 2, 1], 'meaning_0_7': [3, 3, 3], 'grammar_0_7': [3, 1, 1], 'meaning_0_1': [3, 3, 2], 'grammar_0_1': [3, 2, 1], 'meaning_0_5': [3, 3, 1], 'grammar_0_5': [2, 2, 1], 'meaning_0_2': [5, 5, 4], 'grammar_0_2': [5, 5, 4], 'meaning_0_0': [5, 4, 4], 'grammar_0_0': [5, 1, 5], 'meaning_0_3': [5, 2, 4], 'grammar_0_3': [2, 1, 1], 'meaning_0_8': [3, 2, 3], 'grammar_0_8': [2, 1, 1], 'meaning_0_6': [3, 3, 3], 'grammar_0_6': [3, 2, 1], 'meaning_0_4': [2, 2, 3], 'grammar_0_4': [3, 2, 1], 'meaning_0_11': [5, 2, 4], 'grammar_0_11': [4, 2, 2]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
Executing one action: self.actions.modify_select('meaning_0_10', '3')
We are going to select this select `meaning_0_10` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
Executing one action: self.actions.modify_select('grammar_0_10', '5')
We are going to select this select `grammar_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
Executing one action: self.actions.modify_select('meaning_0_9', '3')
We are going to select this select `meaning_0_9` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
Executing one action: self.actions.modify_select('grammar_0_9', '3')
We are going to select this select `grammar_0_9` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
Executing one action: self.actions.modify_select('meaning_0_7', '3')
We are going to select this select `meaning_0_7` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
Executing one action: self.actions.modify_select('grammar_0_7', '3')
We are going to select this select `grammar_0_7` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', '5')
We are going to select this select `meaning_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', '5')
We are going to select this select `grammar_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', '3')
We are going to select this select `meaning_0_5` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_select('grammar_0_5', '5')
We are going to select this select `grammar_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', '3')
We are going to select this select `meaning_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', '3')
We are going to select this select `grammar_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', 'blank')
We are going to select this select `meaning_0_0` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', 'blank')
We are going to select this select `grammar_0_0` with value `blank`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', '5')
We are going to select this select `meaning_0_3` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', '3')
We are going to select this select `grammar_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
Executing one action: self.actions.modify_select('meaning_0_8', '5')
We are going to select this select `meaning_0_8` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
Executing one action: self.actions.modify_select('grammar_0_8', '3')
We are going to select this select `grammar_0_8` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
Executing one action: self.actions.modify_select('meaning_0_6', '3')
We are going to select this select `meaning_0_6` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
Executing one action: self.actions.modify_select('grammar_0_6', '3')
We are going to select this select `grammar_0_6` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', '4')
We are going to select this select `meaning_0_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', '5')
We are going to select this select `grammar_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
Executing one action: self.actions.modify_select('meaning_0_11', '3')
We are going to select this select `meaning_0_11` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
Executing one action: self.actions.modify_select('grammar_0_11', '3')
We are going to select this select `grammar_0_11` with value `3`
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 1, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 2, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2, 3]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 2, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'select': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 7931 <-> row_number: 621
 --> inputs: ['meaning_0_0', 'grammar_0_0', 'meaning_0_6', 'grammar_0_6', 'meaning_0_10', 'grammar_0_10', 'meaning_0_2', 'grammar_0_2', 'meaning_0_1', 'grammar_0_1', 'meaning_0_8', 'grammar_0_8', 'meaning_0_4', 'grammar_0_4', 'meaning_0_11', 'grammar_0_11', 'meaning_0_3', 'grammar_0_3', 'meaning_0_9', 'grammar_0_9', 'meaning_0_5', 'grammar_0_5', 'meaning_0_7', 'grammar_0_7']
 --> Looking up gold labels from row index 621 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_0': [4, 3], 'grammar_0_0': [4, 5], 'meaning_0_6': [4, 2], 'grammar_0_6': [4, 2], 'meaning_0_10': [4, 3], 'grammar_0_10': [4, 4], 'meaning_0_2': [5, 5], 'grammar_0_2': [5, 4], 'meaning_0_1': [1, 2], 'grammar_0_1': [1, 1], 'meaning_0_8': [2, 2], 'grammar_0_8': [2, 4], 'meaning_0_4': [4, 3], 'grammar_0_4': [3, 2], 'meaning_0_11': [4, 4], 'grammar_0_11': [3, 4], 'meaning_0_3': [4, 3], 'grammar_0_3': [4, 4], 'meaning_0_9': [3, 3], 'grammar_0_9': [3, 2], 'meaning_0_5': [4, 3], 'grammar_0_5': [4, 2], 'meaning_0_7': [3, 3], 'grammar_0_7': [3, 4]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', '5')
We are going to select this select `grammar_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
Executing one action: self.actions.modify_select('meaning_0_6', '5')
We are going to select this select `meaning_0_6` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
Executing one action: self.actions.modify_select('grammar_0_6', '3')
We are going to select this select `grammar_0_6` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
Executing one action: self.actions.modify_select('meaning_0_10', '3')
We are going to select this select `meaning_0_10` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
Executing one action: self.actions.modify_select('grammar_0_10', '5')
We are going to select this select `grammar_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', '3')
We are going to select this select `meaning_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', '3')
We are going to select this select `grammar_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', '5')
We are going to select this select `meaning_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', '5')
We are going to select this select `grammar_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
Executing one action: self.actions.modify_select('meaning_0_8', '3')
We are going to select this select `meaning_0_8` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
Executing one action: self.actions.modify_select('grammar_0_8', '3')
We are going to select this select `grammar_0_8` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', '4')
We are going to select this select `meaning_0_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', '4')
We are going to select this select `grammar_0_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
Executing one action: self.actions.modify_select('meaning_0_11', '3')
We are going to select this select `meaning_0_11` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
Executing one action: self.actions.modify_select('grammar_0_11', '5')
We are going to select this select `grammar_0_11` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', '3')
We are going to select this select `meaning_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', '3')
We are going to select this select `grammar_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
Executing one action: self.actions.modify_select('meaning_0_9', '3')
We are going to select this select `meaning_0_9` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
Executing one action: self.actions.modify_select('grammar_0_9', '3')
We are going to select this select `grammar_0_9` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', '3')
We are going to select this select `meaning_0_5` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_select('grammar_0_5', '5')
We are going to select this select `grammar_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
Executing one action: self.actions.modify_select('meaning_0_7', '4')
We are going to select this select `meaning_0_7` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
Executing one action: self.actions.modify_select('grammar_0_7', '3')
We are going to select this select `grammar_0_7` with value `3`
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.16666666666666666
 --> Per-instance per-field breakdown: {'select': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0]}
instance_id: 7590 <-> row_number: 280
 --> inputs: ['meaning_0_6', 'grammar_0_6', 'meaning_0_0', 'grammar_0_0', 'meaning_0_2', 'grammar_0_2', 'meaning_0_7', 'grammar_0_7', 'meaning_0_5', 'grammar_0_5', 'meaning_0_3', 'grammar_0_3', 'meaning_0_1', 'grammar_0_1', 'meaning_0_9', 'grammar_0_9', 'meaning_0_11', 'grammar_0_11', 'meaning_0_10', 'grammar_0_10', 'meaning_0_4', 'grammar_0_4', 'meaning_0_8', 'grammar_0_8']
 --> Looking up gold labels from row index 280 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_6': [3], 'grammar_0_6': [2], 'meaning_0_0': [5], 'grammar_0_0': [4], 'meaning_0_2': [5], 'grammar_0_2': [3], 'meaning_0_7': [2], 'grammar_0_7': [2], 'meaning_0_5': [4], 'grammar_0_5': [5], 'meaning_0_3': [5], 'grammar_0_3': [3], 'meaning_0_1': [4], 'grammar_0_1': [2], 'meaning_0_9': [2], 'grammar_0_9': [2], 'meaning_0_11': [3], 'grammar_0_11': [2], 'meaning_0_10': [4], 'grammar_0_10': [2], 'meaning_0_4': [3], 'grammar_0_4': [2], 'meaning_0_8': [2], 'grammar_0_8': [2]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
Executing one action: self.actions.modify_select('meaning_0_6', '3')
We are going to select this select `meaning_0_6` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
Executing one action: self.actions.modify_select('grammar_0_6', '3')
We are going to select this select `grammar_0_6` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', '5')
We are going to select this select `grammar_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', '3')
We are going to select this select `meaning_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', '3')
We are going to select this select `grammar_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
Executing one action: self.actions.modify_select('meaning_0_7', '3')
We are going to select this select `meaning_0_7` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
Executing one action: self.actions.modify_select('grammar_0_7', '3')
We are going to select this select `grammar_0_7` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', '5')
We are going to select this select `meaning_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_select('grammar_0_5', '5')
We are going to select this select `grammar_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', '3')
We are going to select this select `meaning_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', '3')
We are going to select this select `grammar_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', '5')
We are going to select this select `meaning_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', '5')
We are going to select this select `grammar_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
Executing one action: self.actions.modify_select('meaning_0_9', 'blank')
We are going to select this select `meaning_0_9` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
Executing one action: self.actions.modify_select('grammar_0_9', '5')
We are going to select this select `grammar_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
Executing one action: self.actions.modify_select('meaning_0_11', '3')
We are going to select this select `meaning_0_11` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
Executing one action: self.actions.modify_select('grammar_0_11', '5')
We are going to select this select `grammar_0_11` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
Executing one action: self.actions.modify_select('meaning_0_10', '3')
We are going to select this select `meaning_0_10` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
Executing one action: self.actions.modify_select('grammar_0_10', '5')
We are going to select this select `grammar_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', '4')
We are going to select this select `meaning_0_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', '3')
We are going to select this select `grammar_0_4` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
Executing one action: self.actions.modify_select('meaning_0_8', '3')
We are going to select this select `meaning_0_8` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
Executing one action: self.actions.modify_select('grammar_0_8', '3')
We are going to select this select `grammar_0_8` with value `3`
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'select': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 7767 <-> row_number: 457
 --> inputs: ['meaning_0_8', 'grammar_0_8', 'meaning_0_10', 'grammar_0_10', 'meaning_0_9', 'grammar_0_9', 'meaning_0_6', 'grammar_0_6', 'meaning_0_1', 'grammar_0_1', 'meaning_0_0', 'grammar_0_0', 'meaning_0_5', 'grammar_0_5', 'meaning_0_7', 'grammar_0_7', 'meaning_0_3', 'grammar_0_3', 'meaning_0_4', 'grammar_0_4', 'meaning_0_2', 'grammar_0_2', 'meaning_0_11', 'grammar_0_11']
 --> Looking up gold labels from row index 457 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_8': [3, 2], 'grammar_0_8': [3, 3], 'meaning_0_10': [3, 3], 'grammar_0_10': [2, 2], 'meaning_0_9': [4, 3], 'grammar_0_9': [2, 3], 'meaning_0_6': [4, 4], 'grammar_0_6': [3, 3], 'meaning_0_1': [3, 2], 'grammar_0_1': [2, 2], 'meaning_0_0': [4, 5], 'grammar_0_0': [5, 5], 'meaning_0_5': [3, 3], 'grammar_0_5': [2, 2], 'meaning_0_7': [2, 1], 'grammar_0_7': [1, 2], 'meaning_0_3': [4, 4], 'grammar_0_3': [3, 4], 'meaning_0_4': [4, 3], 'grammar_0_4': [3, 5], 'meaning_0_2': [5, 5], 'grammar_0_2': [5, 5], 'meaning_0_11': [4, 4], 'grammar_0_11': [2, 3]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
Executing one action: self.actions.modify_select('meaning_0_8', '5')
We are going to select this select `meaning_0_8` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
Executing one action: self.actions.modify_select('grammar_0_8', '5')
We are going to select this select `grammar_0_8` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
Executing one action: self.actions.modify_select('meaning_0_10', '5')
We are going to select this select `meaning_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
Executing one action: self.actions.modify_select('grammar_0_10', '5')
We are going to select this select `grammar_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
Executing one action: self.actions.modify_select('meaning_0_9', '5')
We are going to select this select `meaning_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
Executing one action: self.actions.modify_select('grammar_0_9', '3')
We are going to select this select `grammar_0_9` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
Executing one action: self.actions.modify_select('meaning_0_6', '3')
We are going to select this select `meaning_0_6` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
Executing one action: self.actions.modify_select('grammar_0_6', '3')
We are going to select this select `grammar_0_6` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', '3')
We are going to select this select `meaning_0_1` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', '5')
We are going to select this select `grammar_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', '5')
We are going to select this select `grammar_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', '3')
We are going to select this select `meaning_0_5` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_select('grammar_0_5', '3')
We are going to select this select `grammar_0_5` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
Executing one action: self.actions.modify_select('meaning_0_7', '3')
We are going to select this select `meaning_0_7` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
Executing one action: self.actions.modify_select('grammar_0_7', '5')
We are going to select this select `grammar_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', '3')
We are going to select this select `meaning_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', '3')
We are going to select this select `grammar_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', '4')
We are going to select this select `meaning_0_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', '5')
We are going to select this select `grammar_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', '3')
We are going to select this select `meaning_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', '3')
We are going to select this select `grammar_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
Executing one action: self.actions.modify_select('meaning_0_11', '3')
We are going to select this select `meaning_0_11` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
Executing one action: self.actions.modify_select('grammar_0_11', '5')
We are going to select this select `grammar_0_11` with value `5`
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'select': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 8256 <-> row_number: 946
 --> inputs: ['meaning_0_8', 'grammar_0_8', 'meaning_0_5', 'grammar_0_5', 'meaning_0_10', 'grammar_0_10', 'meaning_0_0', 'grammar_0_0', 'meaning_0_3', 'grammar_0_3', 'meaning_0_4', 'grammar_0_4', 'meaning_0_7', 'grammar_0_7', 'meaning_0_2', 'grammar_0_2', 'meaning_0_1', 'grammar_0_1', 'meaning_0_9', 'grammar_0_9', 'meaning_0_6', 'grammar_0_6', 'meaning_0_11', 'grammar_0_11']
 --> Looking up gold labels from row index 946 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_8': [5, 4], 'grammar_0_8': [2, 2], 'meaning_0_5': [2, 2], 'grammar_0_5': [2, 2], 'meaning_0_10': [2, 1], 'grammar_0_10': [1, 2], 'meaning_0_0': [4, 1], 'grammar_0_0': [3, 5], 'meaning_0_3': [2, 1], 'grammar_0_3': [1, 2], 'meaning_0_4': [4, 2], 'grammar_0_4': [2, 2], 'meaning_0_7': [2, 3], 'grammar_0_7': [2, 2], 'meaning_0_2': [5, 4], 'grammar_0_2': [4, 5], 'meaning_0_1': [4, 3], 'grammar_0_1': [2, 2], 'meaning_0_9': [1, 3], 'grammar_0_9': [2, 2], 'meaning_0_6': [4, 2], 'grammar_0_6': [1, 2], 'meaning_0_11': [3, 1], 'grammar_0_11': [1, 2]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
Executing one action: self.actions.modify_select('meaning_0_8', '3')
We are going to select this select `meaning_0_8` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
Executing one action: self.actions.modify_select('grammar_0_8', '4')
We are going to select this select `grammar_0_8` with value `4`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', '4')
We are going to select this select `meaning_0_5` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_select('grammar_0_5', '5')
We are going to select this select `grammar_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
Executing one action: self.actions.modify_select('meaning_0_10', '5')
We are going to select this select `meaning_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
Executing one action: self.actions.modify_select('grammar_0_10', '5')
We are going to select this select `grammar_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', '3')
We are going to select this select `meaning_0_0` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', '5')
We are going to select this select `grammar_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', '3')
We are going to select this select `meaning_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', '3')
We are going to select this select `grammar_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', '4')
We are going to select this select `meaning_0_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', '5')
We are going to select this select `grammar_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
Executing one action: self.actions.modify_select('meaning_0_7', '3')
We are going to select this select `meaning_0_7` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
Executing one action: self.actions.modify_select('grammar_0_7', '3')
We are going to select this select `grammar_0_7` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', '3')
We are going to select this select `meaning_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', '3')
We are going to select this select `grammar_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', 'blank')
We are going to select this select `meaning_0_1` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', '5')
We are going to select this select `grammar_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
Executing one action: self.actions.modify_select('meaning_0_9', '3')
We are going to select this select `meaning_0_9` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
Executing one action: self.actions.modify_select('grammar_0_9', '5')
We are going to select this select `grammar_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
Executing one action: self.actions.modify_select('meaning_0_6', '3')
We are going to select this select `meaning_0_6` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
Executing one action: self.actions.modify_select('grammar_0_6', '5')
We are going to select this select `grammar_0_6` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
Executing one action: self.actions.modify_select('meaning_0_11', '3')
We are going to select this select `meaning_0_11` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
Executing one action: self.actions.modify_select('grammar_0_11', '3')
We are going to select this select `grammar_0_11` with value `3`
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.08333333333333333
 --> Per-instance per-field breakdown: {'select': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]}
instance_id: 7438 <-> row_number: 128
 --> inputs: ['meaning_0_1', 'grammar_0_1', 'meaning_0_2', 'grammar_0_2', 'meaning_0_6', 'grammar_0_6', 'meaning_0_0', 'grammar_0_0', 'meaning_0_5', 'grammar_0_5', 'meaning_0_10', 'grammar_0_10', 'meaning_0_3', 'grammar_0_3', 'meaning_0_4', 'grammar_0_4', 'meaning_0_7', 'grammar_0_7', 'meaning_0_9', 'grammar_0_9', 'meaning_0_11', 'grammar_0_11', 'meaning_0_8', 'grammar_0_8']
 --> Looking up gold labels from row index 128 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_1': [5, 4], 'grammar_0_1': [2, 3], 'meaning_0_2': [1, 5], 'grammar_0_2': [1, 2], 'meaning_0_6': [1, 1], 'grammar_0_6': [1, 1], 'meaning_0_0': [1, 5], 'grammar_0_0': [5, 5], 'meaning_0_5': [1, 1], 'grammar_0_5': [1, 1], 'meaning_0_10': [1, 5], 'grammar_0_10': [1, 2], 'meaning_0_3': [1, 4], 'grammar_0_3': [4, 2], 'meaning_0_4': [3, 3], 'grammar_0_4': [4, 2], 'meaning_0_7': [1, 4], 'grammar_0_7': [1, 2], 'meaning_0_9': [1, 2], 'grammar_0_9': [2, 3], 'meaning_0_11': [1, 4], 'grammar_0_11': [1, 2], 'meaning_0_8': [1, 1], 'grammar_0_8': [1, 2]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', '5')
We are going to select this select `meaning_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', '3')
We are going to select this select `grammar_0_1` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', '3')
We are going to select this select `meaning_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', '3')
We are going to select this select `grammar_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
Executing one action: self.actions.modify_select('meaning_0_6', '3')
We are going to select this select `meaning_0_6` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
Executing one action: self.actions.modify_select('grammar_0_6', '3')
We are going to select this select `grammar_0_6` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', '5')
We are going to select this select `grammar_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', '3')
We are going to select this select `meaning_0_5` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_select('grammar_0_5', '5')
We are going to select this select `grammar_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
Executing one action: self.actions.modify_select('meaning_0_10', '3')
We are going to select this select `meaning_0_10` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
Executing one action: self.actions.modify_select('grammar_0_10', '5')
We are going to select this select `grammar_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', '3')
We are going to select this select `meaning_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', '3')
We are going to select this select `grammar_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', '4')
We are going to select this select `meaning_0_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', '5')
We are going to select this select `grammar_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
Executing one action: self.actions.modify_select('meaning_0_7', '3')
We are going to select this select `meaning_0_7` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
Executing one action: self.actions.modify_select('grammar_0_7', '3')
We are going to select this select `grammar_0_7` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
Executing one action: self.actions.modify_select('meaning_0_9', '3')
We are going to select this select `meaning_0_9` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
Executing one action: self.actions.modify_select('grammar_0_9', '3')
We are going to select this select `grammar_0_9` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
Executing one action: self.actions.modify_select('meaning_0_11', '3')
We are going to select this select `meaning_0_11` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
Executing one action: self.actions.modify_select('grammar_0_11', '5')
We are going to select this select `grammar_0_11` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
Executing one action: self.actions.modify_select('meaning_0_8', '3')
We are going to select this select `meaning_0_8` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
Executing one action: self.actions.modify_select('grammar_0_8', '3')
We are going to select this select `grammar_0_8` with value `3`
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.08333333333333333
 --> Per-instance per-field breakdown: {'select': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 7516 <-> row_number: 206
 --> inputs: ['meaning_0_2', 'grammar_0_2', 'meaning_0_10', 'grammar_0_10', 'meaning_0_11', 'grammar_0_11', 'meaning_0_3', 'grammar_0_3', 'meaning_0_7', 'grammar_0_7', 'meaning_0_0', 'grammar_0_0', 'meaning_0_9', 'grammar_0_9', 'meaning_0_6', 'grammar_0_6', 'meaning_0_4', 'grammar_0_4', 'meaning_0_5', 'grammar_0_5', 'meaning_0_1', 'grammar_0_1', 'meaning_0_8', 'grammar_0_8']
 --> Looking up gold labels from row index 206 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_2': [5, 5], 'grammar_0_2': [5, 4], 'meaning_0_10': [3, 4], 'grammar_0_10': [2, 2], 'meaning_0_11': [4, 3], 'grammar_0_11': [3, 2], 'meaning_0_3': [5, 5], 'grammar_0_3': [3, 5], 'meaning_0_7': [3, 3], 'grammar_0_7': [3, 2], 'meaning_0_0': [5, 3], 'grammar_0_0': [5, 5], 'meaning_0_9': [5, 4], 'grammar_0_9': [2, 4], 'meaning_0_6': [5, 4], 'grammar_0_6': [3, 4], 'meaning_0_4': [5, 3], 'grammar_0_4': [3, 4], 'meaning_0_5': [2, 3], 'grammar_0_5': [1, 2], 'meaning_0_1': [5, 3], 'grammar_0_1': [2, 2], 'meaning_0_8': [4, 4], 'grammar_0_8': [2, 4]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', '3')
We are going to select this select `meaning_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', '3')
We are going to select this select `grammar_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
Executing one action: self.actions.modify_select('meaning_0_10', '3')
We are going to select this select `meaning_0_10` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
Executing one action: self.actions.modify_select('grammar_0_10', '3')
We are going to select this select `grammar_0_10` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
Executing one action: self.actions.modify_select('meaning_0_11', '3')
We are going to select this select `meaning_0_11` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
Executing one action: self.actions.modify_select('grammar_0_11', '3')
We are going to select this select `grammar_0_11` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', '3')
We are going to select this select `meaning_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', '3')
We are going to select this select `grammar_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
Executing one action: self.actions.modify_select('meaning_0_7', '3')
We are going to select this select `meaning_0_7` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
Executing one action: self.actions.modify_select('grammar_0_7', '3')
We are going to select this select `grammar_0_7` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', '3')
We are going to select this select `meaning_0_0` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', '5')
We are going to select this select `grammar_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
Executing one action: self.actions.modify_select('meaning_0_9', '3')
We are going to select this select `meaning_0_9` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
Executing one action: self.actions.modify_select('grammar_0_9', '3')
We are going to select this select `grammar_0_9` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
Executing one action: self.actions.modify_select('meaning_0_6', '3')
We are going to select this select `meaning_0_6` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
Executing one action: self.actions.modify_select('grammar_0_6', '5')
We are going to select this select `grammar_0_6` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', '4')
We are going to select this select `meaning_0_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', '3')
We are going to select this select `grammar_0_4` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', '5')
We are going to select this select `meaning_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_select('grammar_0_5', '5')
We are going to select this select `grammar_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', '5')
We are going to select this select `meaning_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', '3')
We are going to select this select `grammar_0_1` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
Executing one action: self.actions.modify_select('meaning_0_8', '3')
We are going to select this select `meaning_0_8` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
Executing one action: self.actions.modify_select('grammar_0_8', '3')
We are going to select this select `grammar_0_8` with value `3`
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 3]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.3333333333333333
 --> Per-instance per-field breakdown: {'select': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]}
instance_id: 8303 <-> row_number: 993
 --> inputs: ['meaning_0_0', 'grammar_0_0', 'meaning_0_6', 'grammar_0_6', 'meaning_0_8', 'grammar_0_8', 'meaning_0_11', 'grammar_0_11', 'meaning_0_9', 'grammar_0_9', 'meaning_0_3', 'grammar_0_3', 'meaning_0_4', 'grammar_0_4', 'meaning_0_1', 'grammar_0_1', 'meaning_0_5', 'grammar_0_5', 'meaning_0_10', 'grammar_0_10', 'meaning_0_2', 'grammar_0_2', 'meaning_0_7', 'grammar_0_7']
 --> Looking up gold labels from row index 993 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_0': [3, 5], 'grammar_0_0': [4, 5], 'meaning_0_6': [3, 3], 'grammar_0_6': [2, 4], 'meaning_0_8': [4, 4], 'grammar_0_8': [3, 3], 'meaning_0_11': [3, 3], 'grammar_0_11': [2, 4], 'meaning_0_9': [3, 5], 'grammar_0_9': [3, 4], 'meaning_0_3': [5, 5], 'grammar_0_3': [4, 5], 'meaning_0_4': [4, 5], 'grammar_0_4': [3, 4], 'meaning_0_1': [4, 4], 'grammar_0_1': [2, 4], 'meaning_0_5': [3, 5], 'grammar_0_5': [2, 4], 'meaning_0_10': [3, 3], 'grammar_0_10': [3, 4], 'meaning_0_2': [4, 5], 'grammar_0_2': [4, 5], 'meaning_0_7': [2, 3], 'grammar_0_7': [2, 4]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', '5')
We are going to select this select `grammar_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
Executing one action: self.actions.modify_select('meaning_0_6', '3')
We are going to select this select `meaning_0_6` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
Executing one action: self.actions.modify_select('grammar_0_6', '3')
We are going to select this select `grammar_0_6` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
Executing one action: self.actions.modify_select('meaning_0_8', '3')
We are going to select this select `meaning_0_8` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
Executing one action: self.actions.modify_select('grammar_0_8', '3')
We are going to select this select `grammar_0_8` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
Executing one action: self.actions.modify_select('meaning_0_11', '5')
We are going to select this select `meaning_0_11` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
Executing one action: self.actions.modify_select('grammar_0_11', '5')
We are going to select this select `grammar_0_11` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
Executing one action: self.actions.modify_select('meaning_0_9', '3')
We are going to select this select `meaning_0_9` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
Executing one action: self.actions.modify_select('grammar_0_9', '3')
We are going to select this select `grammar_0_9` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', '3')
We are going to select this select `meaning_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', '3')
We are going to select this select `grammar_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', '4')
We are going to select this select `meaning_0_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', '5')
We are going to select this select `grammar_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', '5')
We are going to select this select `meaning_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', '5')
We are going to select this select `grammar_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', '3')
We are going to select this select `meaning_0_5` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_select('grammar_0_5', '5')
We are going to select this select `grammar_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
Executing one action: self.actions.modify_select('meaning_0_10', '3')
We are going to select this select `meaning_0_10` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
Executing one action: self.actions.modify_select('grammar_0_10', '5')
We are going to select this select `grammar_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', '3')
We are going to select this select `meaning_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', '3')
We are going to select this select `grammar_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
Executing one action: self.actions.modify_select('meaning_0_7', '5')
We are going to select this select `meaning_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
Executing one action: self.actions.modify_select('grammar_0_7', '3')
We are going to select this select `grammar_0_7` with value `3`
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.2916666666666667
 --> Per-instance per-field breakdown: {'select': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 8239 <-> row_number: 929
 --> inputs: ['meaning_0_3', 'grammar_0_3', 'meaning_0_2', 'grammar_0_2', 'meaning_0_1', 'grammar_0_1', 'meaning_0_4', 'grammar_0_4', 'meaning_0_0', 'grammar_0_0', 'meaning_0_5', 'grammar_0_5', 'meaning_0_8', 'grammar_0_8', 'meaning_0_7', 'grammar_0_7', 'meaning_0_9', 'grammar_0_9', 'meaning_0_11', 'grammar_0_11', 'meaning_0_10', 'grammar_0_10', 'meaning_0_6', 'grammar_0_6']
 --> Looking up gold labels from row index 929 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_3': [5, 5, 2], 'grammar_0_3': [4, 4, 4], 'meaning_0_2': [4, 5, 3], 'grammar_0_2': [2, 4, 5], 'meaning_0_1': [3, 4, 4], 'grammar_0_1': [2, 2, 5], 'meaning_0_4': [4, 5, 4], 'grammar_0_4': [2, 5, 3], 'meaning_0_0': [3, 4, 4], 'grammar_0_0': [2, 3, 2], 'meaning_0_5': [2, 2, 4], 'grammar_0_5': [2, 1, 4], 'meaning_0_8': [2, 3, 4], 'grammar_0_8': [2, 3, 2], 'meaning_0_7': [2, 4, 4], 'grammar_0_7': [2, 1, 4], 'meaning_0_9': [4, 4, 5], 'grammar_0_9': [2, 2, 1], 'meaning_0_11': [2, 4, 3], 'grammar_0_11': [2, 2, 2], 'meaning_0_10': [4, 4, 3], 'grammar_0_10': [2, 1, 2], 'meaning_0_6': [1, 2, 3], 'grammar_0_6': [2, 1, 4]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', '3')
We are going to select this select `meaning_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', '3')
We are going to select this select `grammar_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', '5')
We are going to select this select `meaning_0_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', '3')
We are going to select this select `grammar_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', '3')
We are going to select this select `meaning_0_1` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', '3')
We are going to select this select `grammar_0_1` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', '4')
We are going to select this select `meaning_0_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', '5')
We are going to select this select `grammar_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', 'blank')
We are going to select this select `meaning_0_0` with value `blank`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', '5')
We are going to select this select `grammar_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', '5')
We are going to select this select `meaning_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_select('grammar_0_5', '5')
We are going to select this select `grammar_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
Executing one action: self.actions.modify_select('meaning_0_8', '3')
We are going to select this select `meaning_0_8` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
Executing one action: self.actions.modify_select('grammar_0_8', '3')
We are going to select this select `grammar_0_8` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
Executing one action: self.actions.modify_select('meaning_0_7', '5')
We are going to select this select `meaning_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
Executing one action: self.actions.modify_select('grammar_0_7', '5')
We are going to select this select `grammar_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
Executing one action: self.actions.modify_select('meaning_0_9', '3')
We are going to select this select `meaning_0_9` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
Executing one action: self.actions.modify_select('grammar_0_9', '5')
We are going to select this select `grammar_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
Executing one action: self.actions.modify_select('meaning_0_11', '3')
We are going to select this select `meaning_0_11` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
Executing one action: self.actions.modify_select('grammar_0_11', '5')
We are going to select this select `grammar_0_11` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
Executing one action: self.actions.modify_select('meaning_0_10', '5')
We are going to select this select `meaning_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
Executing one action: self.actions.modify_select('grammar_0_10', '3')
We are going to select this select `grammar_0_10` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
Executing one action: self.actions.modify_select('meaning_0_6', '3')
We are going to select this select `meaning_0_6` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
Executing one action: self.actions.modify_select('grammar_0_6', '3')
We are going to select this select `grammar_0_6` with value `3`
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 4, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5, 4]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 5, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 1, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 1, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 4, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 1, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.041666666666666664
 --> Per-instance per-field breakdown: {'select': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 7897 <-> row_number: 587
 --> inputs: ['meaning_0_1', 'grammar_0_1', 'meaning_0_5', 'grammar_0_5', 'meaning_0_9', 'grammar_0_9', 'meaning_0_2', 'grammar_0_2', 'meaning_0_10', 'grammar_0_10', 'meaning_0_8', 'grammar_0_8', 'meaning_0_4', 'grammar_0_4', 'meaning_0_3', 'grammar_0_3', 'meaning_0_7', 'grammar_0_7', 'meaning_0_0', 'grammar_0_0', 'meaning_0_11', 'grammar_0_11', 'meaning_0_6', 'grammar_0_6']
 --> Looking up gold labels from row index 587 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_1': [5, 4], 'grammar_0_1': [3, 2], 'meaning_0_5': [4, 3], 'grammar_0_5': [3, 2], 'meaning_0_9': [4, 3], 'grammar_0_9': [3, 2], 'meaning_0_2': [4, 4], 'grammar_0_2': [5, 4], 'meaning_0_10': [4, 3], 'grammar_0_10': [3, 2], 'meaning_0_8': [4, 3], 'grammar_0_8': [2, 2], 'meaning_0_4': [2, 1], 'grammar_0_4': [3, 3], 'meaning_0_3': [4, 4], 'grammar_0_3': [3, 3], 'meaning_0_7': [5, 2], 'grammar_0_7': [3, 5], 'meaning_0_0': [4, 4], 'grammar_0_0': [5, 5], 'meaning_0_11': [4, 3], 'grammar_0_11': [2, 2], 'meaning_0_6': [4, 4], 'grammar_0_6': [3, 2]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', '3')
We are going to select this select `meaning_0_1` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', '5')
We are going to select this select `grammar_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', '3')
We are going to select this select `meaning_0_5` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_select('grammar_0_5', '5')
We are going to select this select `grammar_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
Executing one action: self.actions.modify_select('meaning_0_9', '3')
We are going to select this select `meaning_0_9` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
Executing one action: self.actions.modify_range('grammar_0_9', '5')
Failed to execute an action self.actions.modify_range('grammar_0_9', '5'), error: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//input[@type='range' and @name='grammar_0_9']"}
  (Session info: chrome=119.0.6045.123); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
#0 0x56381b6c95e3 <unknown>
#1 0x56381b38c0b7 <unknown>
#2 0x56381b3d9f53 <unknown>
#3 0x56381b3da051 <unknown>
#4 0x56381b41f9c4 <unknown>
#5 0x56381b400f1d <unknown>
#6 0x56381b41cb3d <unknown>
#7 0x56381b400cc3 <unknown>
#8 0x56381b3cc0e4 <unknown>
#9 0x56381b3cd0ae <unknown>
#10 0x56381b68fce1 <unknown>
#11 0x56381b693b7e <unknown>
#12 0x56381b67d4b5 <unknown>
#13 0x56381b6947d6 <unknown>
#14 0x56381b660dbf <unknown>
#15 0x56381b6b7748 <unknown>
#16 0x56381b6b7917 <unknown>
#17 0x56381b6c8773 <unknown>
#18 0x7f37d5094ac3 <unknown>

 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', '3')
We are going to select this select `meaning_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', '3')
We are going to select this select `grammar_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
Executing one action: self.actions.modify_select('meaning_0_10', '3')
We are going to select this select `meaning_0_10` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
Executing one action: self.actions.modify_select('grammar_0_10', '2')
We are going to select this select `grammar_0_10` with value `2`
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
Executing one action: self.actions.modify_select('meaning_0_8', '4')
We are going to select this select `meaning_0_8` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
Executing one action: self.actions.modify_select('grammar_0_8', '5')
We are going to select this select `grammar_0_8` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', '4')
We are going to select this select `meaning_0_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', '5')
We are going to select this select `grammar_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', '3')
We are going to select this select `meaning_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', '3')
We are going to select this select `grammar_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
Executing one action: self.actions.modify_select('meaning_0_7', '3')
We are going to select this select `meaning_0_7` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
Executing one action: self.actions.modify_select('grammar_0_7', '3')
We are going to select this select `grammar_0_7` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', '3')
We are going to select this select `meaning_0_0` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', '5')
We are going to select this select `grammar_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
Executing one action: self.actions.modify_select('meaning_0_11', '3')
We are going to select this select `meaning_0_11` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
Executing one action: self.actions.modify_select('grammar_0_11', '3')
We are going to select this select `grammar_0_11` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
Executing one action: self.actions.modify_select('meaning_0_6', '3')
We are going to select this select `meaning_0_6` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
Executing one action: self.actions.modify_select('grammar_0_6', '3')
We are going to select this select `grammar_0_6` with value `3`
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.20833333333333334
 --> Per-instance per-field breakdown: {'select': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0]}
instance_id: 7705 <-> row_number: 395
 --> inputs: ['meaning_0_6', 'grammar_0_6', 'meaning_0_9', 'grammar_0_9', 'meaning_0_11', 'grammar_0_11', 'meaning_0_1', 'grammar_0_1', 'meaning_0_2', 'grammar_0_2', 'meaning_0_5', 'grammar_0_5', 'meaning_0_8', 'grammar_0_8', 'meaning_0_7', 'grammar_0_7', 'meaning_0_4', 'grammar_0_4', 'meaning_0_10', 'grammar_0_10', 'meaning_0_0', 'grammar_0_0', 'meaning_0_3', 'grammar_0_3']
 --> Looking up gold labels from row index 395 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_6': [5, 5], 'grammar_0_6': [5, 5], 'meaning_0_9': [4, 5], 'grammar_0_9': [5, 4], 'meaning_0_11': [1, 1], 'grammar_0_11': [1, 1], 'meaning_0_1': [2, 2], 'grammar_0_1': [2, 1], 'meaning_0_2': [5, 5], 'grammar_0_2': [5, 5], 'meaning_0_5': [5, 5], 'grammar_0_5': [5, 5], 'meaning_0_8': [4, 5], 'grammar_0_8': [5, 4], 'meaning_0_7': [1, 1], 'grammar_0_7': [1, 2], 'meaning_0_4': [5, 5], 'grammar_0_4': [5, 5], 'meaning_0_10': [1, 2], 'grammar_0_10': [2, 2], 'meaning_0_0': [2, 3], 'grammar_0_0': [1, 5], 'meaning_0_3': [5, 5], 'grammar_0_3': [5, 5]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
Executing one action: self.actions.modify_select('meaning_0_6', '3')
We are going to select this select `meaning_0_6` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
Executing one action: self.actions.modify_select('grammar_0_6', '3')
We are going to select this select `grammar_0_6` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
Executing one action: self.actions.modify_select('meaning_0_9', '3')
We are going to select this select `meaning_0_9` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
Executing one action: self.actions.modify_select('grammar_0_9', '5')
We are going to select this select `grammar_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
Executing one action: self.actions.modify_select('meaning_0_11', '5')
We are going to select this select `meaning_0_11` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
Executing one action: self.actions.modify_select('grammar_0_11', '3')
We are going to select this select `grammar_0_11` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', '3')
We are going to select this select `meaning_0_1` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', '5')
We are going to select this select `grammar_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', '3')
We are going to select this select `meaning_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', '3')
We are going to select this select `grammar_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', '5')
We are going to select this select `meaning_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_select('grammar_0_5', '5')
We are going to select this select `grammar_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
Executing one action: self.actions.modify_select('meaning_0_8', '3')
We are going to select this select `meaning_0_8` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
Executing one action: self.actions.modify_range('grammar_0_8', '4')
Failed to execute an action self.actions.modify_range('grammar_0_8', '4'), error: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//input[@type='range' and @name='grammar_0_8']"}
  (Session info: chrome=119.0.6045.123); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
#0 0x56381b6c95e3 <unknown>
#1 0x56381b38c0b7 <unknown>
#2 0x56381b3d9f53 <unknown>
#3 0x56381b3da051 <unknown>
#4 0x56381b41f9c4 <unknown>
#5 0x56381b400f1d <unknown>
#6 0x56381b41cb3d <unknown>
#7 0x56381b400cc3 <unknown>
#8 0x56381b3cc0e4 <unknown>
#9 0x56381b3cd0ae <unknown>
#10 0x56381b68fce1 <unknown>
#11 0x56381b693b7e <unknown>
#12 0x56381b67d4b5 <unknown>
#13 0x56381b6947d6 <unknown>
#14 0x56381b660dbf <unknown>
#15 0x56381b6b7748 <unknown>
#16 0x56381b6b7917 <unknown>
#17 0x56381b6c8773 <unknown>
#18 0x7f37d5094ac3 <unknown>

 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
Executing one action: self.actions.modify_select('meaning_0_7', '3')
We are going to select this select `meaning_0_7` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
Executing one action: self.actions.modify_select('grammar_0_7', '3')
We are going to select this select `grammar_0_7` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', 'minor differences')
Failed to execute an action self.actions.modify_select('meaning_0_4', 'minor differences'), error: Input value `minor differences` is not among the available option values `['blank', '5', '4', '3', '2', '1']`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', '5')
We are going to select this select `grammar_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
Executing one action: self.actions.modify_select('meaning_0_10', '3')
We are going to select this select `meaning_0_10` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
Executing one action: self.actions.modify_select('grammar_0_10', '5')
We are going to select this select `grammar_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', '5')
We are going to select this select `grammar_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', '3')
We are going to select this select `meaning_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', '3')
We are going to select this select `grammar_0_3` with value `3`
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.16666666666666666
 --> Per-instance per-field breakdown: {'select': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 7892 <-> row_number: 582
 --> inputs: ['meaning_0_1', 'grammar_0_1', 'meaning_0_6', 'grammar_0_6', 'meaning_0_9', 'grammar_0_9', 'meaning_0_0', 'grammar_0_0', 'meaning_0_8', 'grammar_0_8', 'meaning_0_3', 'grammar_0_3', 'meaning_0_11', 'grammar_0_11', 'meaning_0_4', 'grammar_0_4', 'meaning_0_7', 'grammar_0_7', 'meaning_0_2', 'grammar_0_2', 'meaning_0_10', 'grammar_0_10', 'meaning_0_5', 'grammar_0_5']
 --> Looking up gold labels from row index 582 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_1': [1, 4], 'grammar_0_1': [2, 4], 'meaning_0_6': [5, 5], 'grammar_0_6': [5, 4], 'meaning_0_9': [1, 4], 'grammar_0_9': [2, 1], 'meaning_0_0': [1, 2], 'grammar_0_0': [2, 3], 'meaning_0_8': [4, 3], 'grammar_0_8': [3, 2], 'meaning_0_3': [5, 4], 'grammar_0_3': [5, 3], 'meaning_0_11': [1, 4], 'grammar_0_11': [2, 3], 'meaning_0_4': [1, 3], 'grammar_0_4': [2, 3], 'meaning_0_7': [1, 2], 'grammar_0_7': [2, 3], 'meaning_0_2': [5, 5], 'grammar_0_2': [5, 4], 'meaning_0_10': [1, 3], 'grammar_0_10': [2, 3], 'meaning_0_5': [5, 5], 'grammar_0_5': [5, 4]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', '3')
We are going to select this select `meaning_0_1` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', '5')
We are going to select this select `grammar_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
Executing one action: self.actions.modify_select('meaning_0_6', '3')
We are going to select this select `meaning_0_6` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
Executing one action: self.actions.modify_select('grammar_0_6', '3')
We are going to select this select `grammar_0_6` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
Executing one action: self.actions.modify_select('meaning_0_9', '3')
We are going to select this select `meaning_0_9` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
Executing one action: self.actions.modify_select('grammar_0_9', '5')
We are going to select this select `grammar_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', '3')
We are going to select this select `meaning_0_0` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', '5')
We are going to select this select `grammar_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
Executing one action: self.actions.modify_select('meaning_0_8', '3')
We are going to select this select `meaning_0_8` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
Executing one action: self.actions.modify_select('grammar_0_8', '3')
We are going to select this select `grammar_0_8` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', '2')
We are going to select this select `meaning_0_3` with value `2`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', '3')
We are going to select this select `grammar_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
Executing one action: self.actions.modify_select('meaning_0_11', '5')
We are going to select this select `meaning_0_11` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
Executing one action: self.actions.modify_select('grammar_0_11', '3')
We are going to select this select `grammar_0_11` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', '4')
We are going to select this select `meaning_0_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', '5')
We are going to select this select `grammar_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
Executing one action: self.actions.modify_select('meaning_0_7', '3')
We are going to select this select `meaning_0_7` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
Executing one action: self.actions.modify_select('grammar_0_7', '5')
We are going to select this select `grammar_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', '3')
We are going to select this select `meaning_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', '3')
We are going to select this select `grammar_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
Executing one action: self.actions.modify_select('meaning_0_10', '5')
We are going to select this select `meaning_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
Executing one action: self.actions.modify_range('grammar_0_10', '4.0')
Failed to execute an action self.actions.modify_range('grammar_0_10', '4.0'), error: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//input[@type='range' and @name='grammar_0_10']"}
  (Session info: chrome=119.0.6045.123); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
#0 0x56381b6c95e3 <unknown>
#1 0x56381b38c0b7 <unknown>
#2 0x56381b3d9f53 <unknown>
#3 0x56381b3da051 <unknown>
#4 0x56381b41f9c4 <unknown>
#5 0x56381b400f1d <unknown>
#6 0x56381b41cb3d <unknown>
#7 0x56381b400cc3 <unknown>
#8 0x56381b3cc0e4 <unknown>
#9 0x56381b3cd0ae <unknown>
#10 0x56381b68fce1 <unknown>
#11 0x56381b693b7e <unknown>
#12 0x56381b67d4b5 <unknown>
#13 0x56381b6947d6 <unknown>
#14 0x56381b660dbf <unknown>
#15 0x56381b6b7748 <unknown>
#16 0x56381b6b7917 <unknown>
#17 0x56381b6c8773 <unknown>
#18 0x7f37d5094ac3 <unknown>

 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', '5')
We are going to select this select `meaning_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_range('grammar_0_5', '5')
Failed to execute an action self.actions.modify_range('grammar_0_5', '5'), error: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//input[@type='range' and @name='grammar_0_5']"}
  (Session info: chrome=119.0.6045.123); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
#0 0x56381b6c95e3 <unknown>
#1 0x56381b38c0b7 <unknown>
#2 0x56381b3d9f53 <unknown>
#3 0x56381b3da051 <unknown>
#4 0x56381b41f9c4 <unknown>
#5 0x56381b400f1d <unknown>
#6 0x56381b41cb3d <unknown>
#7 0x56381b400cc3 <unknown>
#8 0x56381b3cc0e4 <unknown>
#9 0x56381b3cd0ae <unknown>
#10 0x56381b68fce1 <unknown>
#11 0x56381b693b7e <unknown>
#12 0x56381b67d4b5 <unknown>
#13 0x56381b6947d6 <unknown>
#14 0x56381b660dbf <unknown>
#15 0x56381b6b7748 <unknown>
#16 0x56381b6b7917 <unknown>
#17 0x56381b6c8773 <unknown>
#18 0x7f37d5094ac3 <unknown>

input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 3]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.08333333333333333
 --> Per-instance per-field breakdown: {'select': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]}
instance_id: 8052 <-> row_number: 742
 --> inputs: ['meaning_0_7', 'grammar_0_7', 'meaning_0_0', 'grammar_0_0', 'meaning_0_6', 'grammar_0_6', 'meaning_0_2', 'grammar_0_2', 'meaning_0_3', 'grammar_0_3', 'meaning_0_8', 'grammar_0_8', 'meaning_0_4', 'grammar_0_4', 'meaning_0_5', 'grammar_0_5', 'meaning_0_1', 'grammar_0_1', 'meaning_0_9', 'grammar_0_9', 'meaning_0_10', 'grammar_0_10', 'meaning_0_11', 'grammar_0_11']
 --> Looking up gold labels from row index 742 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_7': [3, 2], 'grammar_0_7': [1, 1], 'meaning_0_0': [4, 5], 'grammar_0_0': [4, 5], 'meaning_0_6': [3, 1], 'grammar_0_6': [1, 1], 'meaning_0_2': [5, 4], 'grammar_0_2': [4, 4], 'meaning_0_3': [5, 3], 'grammar_0_3': [5, 4], 'meaning_0_8': [5, 1], 'grammar_0_8': [3, 1], 'meaning_0_4': [3, 3], 'grammar_0_4': [4, 4], 'meaning_0_5': [5, 5], 'grammar_0_5': [5, 2], 'meaning_0_1': [3, 2], 'grammar_0_1': [1, 1], 'meaning_0_9': [4, 3], 'grammar_0_9': [3, 2], 'meaning_0_10': [4, 5], 'grammar_0_10': [5, 2], 'meaning_0_11': [4, 5], 'grammar_0_11': [4, 4]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
Executing one action: self.actions.modify_select('meaning_0_7', '5')
We are going to select this select `meaning_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
Executing one action: self.actions.modify_select('grammar_0_7', '5')
We are going to select this select `grammar_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', '5')
We are going to select this select `grammar_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
Executing one action: self.actions.modify_select('meaning_0_6', '3')
We are going to select this select `meaning_0_6` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
Executing one action: self.actions.modify_select('grammar_0_6', '5')
We are going to select this select `grammar_0_6` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', '3')
We are going to select this select `meaning_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', '3')
We are going to select this select `grammar_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', '5')
We are going to select this select `meaning_0_3` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', '3')
We are going to select this select `grammar_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
Executing one action: self.actions.modify_select('meaning_0_8', '5')
We are going to select this select `meaning_0_8` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
Executing one action: self.actions.modify_select('grammar_0_8', '3')
We are going to select this select `grammar_0_8` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', '4')
We are going to select this select `meaning_0_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', '5')
We are going to select this select `grammar_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', '5')
We are going to select this select `meaning_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_select('grammar_0_5', '5')
We are going to select this select `grammar_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', '5')
We are going to select this select `meaning_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', '3')
We are going to select this select `grammar_0_1` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
Executing one action: self.actions.modify_select('meaning_0_9', '5')
We are going to select this select `meaning_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
Executing one action: self.actions.modify_select('grammar_0_9', '5')
We are going to select this select `grammar_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
Executing one action: self.actions.modify_select('meaning_0_10', '5')
We are going to select this select `meaning_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
Executing one action: self.actions.modify_select('grammar_0_10', '5')
We are going to select this select `grammar_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
Executing one action: self.actions.modify_select('meaning_0_11', '5')
We are going to select this select `meaning_0_11` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
Executing one action: self.actions.modify_select('grammar_0_11', '5')
We are going to select this select `grammar_0_11` with value `5`
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.2916666666666667
 --> Per-instance per-field breakdown: {'select': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]}
instance_id: 7695 <-> row_number: 385
 --> inputs: ['meaning_0_1', 'grammar_0_1', 'meaning_0_10', 'grammar_0_10', 'meaning_0_0', 'grammar_0_0', 'meaning_0_7', 'grammar_0_7', 'meaning_0_6', 'grammar_0_6', 'meaning_0_5', 'grammar_0_5', 'meaning_0_3', 'grammar_0_3', 'meaning_0_2', 'grammar_0_2', 'meaning_0_9', 'grammar_0_9', 'meaning_0_8', 'grammar_0_8', 'meaning_0_4', 'grammar_0_4', 'meaning_0_11', 'grammar_0_11']
 --> Looking up gold labels from row index 385 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_1': [5, 3], 'grammar_0_1': [4, 4], 'meaning_0_10': [5, 5], 'grammar_0_10': [5, 5], 'meaning_0_0': [4, 3], 'grammar_0_0': [5, 4], 'meaning_0_7': [5, 1], 'grammar_0_7': [4, 4], 'meaning_0_6': [3, 1], 'grammar_0_6': [5, 4], 'meaning_0_5': [3, 4], 'grammar_0_5': [3, 4], 'meaning_0_3': [5, 3], 'grammar_0_3': [5, 4], 'meaning_0_2': [5, 4], 'grammar_0_2': [5, 5], 'meaning_0_9': [5, 1], 'grammar_0_9': [3, 4], 'meaning_0_8': [4, 3], 'grammar_0_8': [4, 4], 'meaning_0_4': [4, 3], 'grammar_0_4': [5, 5], 'meaning_0_11': [5, 5], 'grammar_0_11': [5, 5]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', '3')
We are going to select this select `meaning_0_1` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', '5')
We are going to select this select `grammar_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
Executing one action: self.actions.modify_select('meaning_0_10', '3')
We are going to select this select `meaning_0_10` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
Executing one action: self.actions.modify_range('grammar_0_10', '4')
Failed to execute an action self.actions.modify_range('grammar_0_10', '4'), error: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//input[@type='range' and @name='grammar_0_10']"}
  (Session info: chrome=119.0.6045.123); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
#0 0x56381b6c95e3 <unknown>
#1 0x56381b38c0b7 <unknown>
#2 0x56381b3d9f53 <unknown>
#3 0x56381b3da051 <unknown>
#4 0x56381b41f9c4 <unknown>
#5 0x56381b400f1d <unknown>
#6 0x56381b41cb3d <unknown>
#7 0x56381b400cc3 <unknown>
#8 0x56381b3cc0e4 <unknown>
#9 0x56381b3cd0ae <unknown>
#10 0x56381b68fce1 <unknown>
#11 0x56381b693b7e <unknown>
#12 0x56381b67d4b5 <unknown>
#13 0x56381b6947d6 <unknown>
#14 0x56381b660dbf <unknown>
#15 0x56381b6b7748 <unknown>
#16 0x56381b6b7917 <unknown>
#17 0x56381b6c8773 <unknown>
#18 0x7f37d5094ac3 <unknown>

 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', '5')
We are going to select this select `grammar_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
Executing one action: self.actions.modify_select('meaning_0_7', '5')
We are going to select this select `meaning_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
Executing one action: self.actions.modify_select('grammar_0_7', '3')
We are going to select this select `grammar_0_7` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
Executing one action: self.actions.modify_select('meaning_0_6', '3')
We are going to select this select `meaning_0_6` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
Executing one action: self.actions.modify_select('grammar_0_6', '3')
We are going to select this select `grammar_0_6` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', '3')
We are going to select this select `meaning_0_5` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_select('grammar_0_5', '5')
We are going to select this select `grammar_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', '3')
We are going to select this select `meaning_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', '3')
We are going to select this select `grammar_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', '3')
We are going to select this select `meaning_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', '3')
We are going to select this select `grammar_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
Executing one action: self.actions.modify_select('meaning_0_9', '5')
We are going to select this select `meaning_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
Executing one action: self.actions.modify_select('grammar_0_9', '5')
We are going to select this select `grammar_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
Executing one action: self.actions.modify_select('meaning_0_8', '3')
We are going to select this select `meaning_0_8` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
Executing one action: self.actions.modify_select('grammar_0_8', '3')
We are going to select this select `grammar_0_8` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', '4')
We are going to select this select `meaning_0_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', '3')
We are going to select this select `grammar_0_4` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
Executing one action: self.actions.modify_select('meaning_0_11', '3')
We are going to select this select `meaning_0_11` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
Executing one action: self.actions.modify_select('grammar_0_11', '5')
We are going to select this select `grammar_0_11` with value `5`
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 1]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 1]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 --> Per-instance overall score: 0.2916666666666667
 --> Per-instance per-field breakdown: {'select': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0]}
instance_id: 8285 <-> row_number: 975
 --> inputs: ['meaning_0_0', 'grammar_0_0', 'meaning_0_9', 'grammar_0_9', 'meaning_0_11', 'grammar_0_11', 'meaning_0_8', 'grammar_0_8', 'meaning_0_1', 'grammar_0_1', 'meaning_0_5', 'grammar_0_5', 'meaning_0_10', 'grammar_0_10', 'meaning_0_4', 'grammar_0_4', 'meaning_0_2', 'grammar_0_2', 'meaning_0_3', 'grammar_0_3', 'meaning_0_6', 'grammar_0_6', 'meaning_0_7', 'grammar_0_7']
 --> Looking up gold labels from row index 975 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_0': [4, 5], 'grammar_0_0': [4, 4], 'meaning_0_9': [3, 3], 'grammar_0_9': [1, 2], 'meaning_0_11': [5, 5], 'grammar_0_11': [2, 4], 'meaning_0_8': [4, 5], 'grammar_0_8': [2, 2], 'meaning_0_1': [4, 5], 'grammar_0_1': [1, 4], 'meaning_0_5': [3, 3], 'grammar_0_5': [1, 2], 'meaning_0_10': [4, 2], 'grammar_0_10': [2, 2], 'meaning_0_4': [4, 4], 'grammar_0_4': [2, 2], 'meaning_0_2': [5, 5], 'grammar_0_2': [4, 4], 'meaning_0_3': [5, 5], 'grammar_0_3': [2, 2], 'meaning_0_6': [4, 5], 'grammar_0_6': [2, 3], 'meaning_0_7': [4, 5], 'grammar_0_7': [2, 3]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', '5')
We are going to select this select `grammar_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
Executing one action: self.actions.modify_select('meaning_0_9', '3')
We are going to select this select `meaning_0_9` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
Executing one action: self.actions.modify_select('grammar_0_9', '3')
We are going to select this select `grammar_0_9` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
Executing one action: self.actions.modify_select('meaning_0_11', '5')
We are going to select this select `meaning_0_11` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
Executing one action: self.actions.modify_select('grammar_0_11', '5')
We are going to select this select `grammar_0_11` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
Executing one action: self.actions.modify_select('meaning_0_8', '3')
We are going to select this select `meaning_0_8` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
Executing one action: self.actions.modify_select('grammar_0_8', '5')
We are going to select this select `grammar_0_8` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', '5')
We are going to select this select `meaning_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', '5')
We are going to select this select `grammar_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', '5')
We are going to select this select `meaning_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_range('grammar_0_5', '3')
Failed to execute an action self.actions.modify_range('grammar_0_5', '3'), error: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//input[@type='range' and @name='grammar_0_5']"}
  (Session info: chrome=119.0.6045.123); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
#0 0x56381b6c95e3 <unknown>
#1 0x56381b38c0b7 <unknown>
#2 0x56381b3d9f53 <unknown>
#3 0x56381b3da051 <unknown>
#4 0x56381b41f9c4 <unknown>
#5 0x56381b400f1d <unknown>
#6 0x56381b41cb3d <unknown>
#7 0x56381b400cc3 <unknown>
#8 0x56381b3cc0e4 <unknown>
#9 0x56381b3cd0ae <unknown>
#10 0x56381b68fce1 <unknown>
#11 0x56381b693b7e <unknown>
#12 0x56381b67d4b5 <unknown>
#13 0x56381b6947d6 <unknown>
#14 0x56381b660dbf <unknown>
#15 0x56381b6b7748 <unknown>
#16 0x56381b6b7917 <unknown>
#17 0x56381b6c8773 <unknown>
#18 0x7f37d5094ac3 <unknown>

 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
Executing one action: self.actions.modify_select('meaning_0_10', '5')
We are going to select this select `meaning_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
Executing one action: self.actions.modify_select('grammar_0_10', '5')
We are going to select this select `grammar_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', '4')
We are going to select this select `meaning_0_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', '3')
We are going to select this select `grammar_0_4` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', '3')
We are going to select this select `meaning_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', '3')
We are going to select this select `grammar_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', '3')
We are going to select this select `meaning_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', '3')
We are going to select this select `grammar_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
Executing one action: self.actions.modify_select('meaning_0_6', '3')
We are going to select this select `meaning_0_6` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
Executing one action: self.actions.modify_select('grammar_0_6', '3')
We are going to select this select `grammar_0_6` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
Executing one action: self.actions.modify_select('meaning_0_7', '3')
We are going to select this select `meaning_0_7` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
Executing one action: self.actions.modify_select('grammar_0_7', '3')
We are going to select this select `grammar_0_7` with value `3`
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.125
 --> Per-instance per-field breakdown: {'select': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
instance_id: 7917 <-> row_number: 607
 --> inputs: ['meaning_0_4', 'grammar_0_4', 'meaning_0_9', 'grammar_0_9', 'meaning_0_0', 'grammar_0_0', 'meaning_0_7', 'grammar_0_7', 'meaning_0_5', 'grammar_0_5', 'meaning_0_10', 'grammar_0_10', 'meaning_0_11', 'grammar_0_11', 'meaning_0_3', 'grammar_0_3', 'meaning_0_8', 'grammar_0_8', 'meaning_0_6', 'grammar_0_6', 'meaning_0_1', 'grammar_0_1', 'meaning_0_2', 'grammar_0_2']
 --> Looking up gold labels from row index 607 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_4': [3, 4], 'grammar_0_4': [4, 2], 'meaning_0_9': [3, 5], 'grammar_0_9': [4, 2], 'meaning_0_0': [2, 3], 'grammar_0_0': [4, 4], 'meaning_0_7': [3, 5], 'grammar_0_7': [2, 2], 'meaning_0_5': [2, 5], 'grammar_0_5': [2, 2], 'meaning_0_10': [4, 3], 'grammar_0_10': [4, 2], 'meaning_0_11': [3, 5], 'grammar_0_11': [4, 3], 'meaning_0_3': [3, 4], 'grammar_0_3': [4, 4], 'meaning_0_8': [3, 5], 'grammar_0_8': [4, 2], 'meaning_0_6': [3, 5], 'grammar_0_6': [4, 2], 'meaning_0_1': [3, 3], 'grammar_0_1': [4, 2], 'meaning_0_2': [5, 5], 'grammar_0_2': [5, 5]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', '4')
We are going to select this select `meaning_0_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', '3')
We are going to select this select `grammar_0_4` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
Executing one action: self.actions.modify_select('meaning_0_9', '3')
We are going to select this select `meaning_0_9` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
Executing one action: self.actions.modify_select('grammar_0_9', '5')
We are going to select this select `grammar_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', '5')
We are going to select this select `grammar_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
Executing one action: self.actions.modify_select('meaning_0_7', '5')
We are going to select this select `meaning_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
Executing one action: self.actions.modify_select('grammar_0_7', '4')
We are going to select this select `grammar_0_7` with value `4`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', '5')
We are going to select this select `meaning_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_select('grammar_0_5', '5')
We are going to select this select `grammar_0_5` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
Executing one action: self.actions.modify_select('meaning_0_10', '3')
We are going to select this select `meaning_0_10` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
Executing one action: self.actions.modify_select('grammar_0_10', '5')
We are going to select this select `grammar_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
Executing one action: self.actions.modify_select('meaning_0_11', '3')
We are going to select this select `meaning_0_11` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
Executing one action: self.actions.modify_select('grammar_0_11', '3')
We are going to select this select `grammar_0_11` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', '3')
We are going to select this select `meaning_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', '3')
We are going to select this select `grammar_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
Executing one action: self.actions.modify_select('meaning_0_8', '3')
We are going to select this select `meaning_0_8` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
Executing one action: self.actions.modify_select('grammar_0_8', '3')
We are going to select this select `grammar_0_8` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
Executing one action: self.actions.modify_select('meaning_0_6', '3')
We are going to select this select `meaning_0_6` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
Executing one action: self.actions.modify_select('grammar_0_6', '3')
We are going to select this select `grammar_0_6` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', '4')
We are going to select this select `meaning_0_1` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', '3')
We are going to select this select `grammar_0_1` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', '5')
We are going to select this select `meaning_0_2` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', '3')
We are going to select this select `grammar_0_2` with value `3`
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[2, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'select': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0]}
instance_id: 7938 <-> row_number: 628
 --> inputs: ['meaning_0_8', 'grammar_0_8', 'meaning_0_2', 'grammar_0_2', 'meaning_0_9', 'grammar_0_9', 'meaning_0_11', 'grammar_0_11', 'meaning_0_7', 'grammar_0_7', 'meaning_0_6', 'grammar_0_6', 'meaning_0_5', 'grammar_0_5', 'meaning_0_3', 'grammar_0_3', 'meaning_0_0', 'grammar_0_0', 'meaning_0_1', 'grammar_0_1', 'meaning_0_10', 'grammar_0_10', 'meaning_0_4', 'grammar_0_4']
 --> Looking up gold labels from row index 628 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_8': [4, 5, 4], 'grammar_0_8': [3, 3, 5], 'meaning_0_2': [4, 5, 5], 'grammar_0_2': [5, 4, 5], 'meaning_0_9': [4, 5, 4], 'grammar_0_9': [4, 3, 5], 'meaning_0_11': [4, 5, 4], 'grammar_0_11': [4, 3, 3], 'meaning_0_7': [4, 4, 4], 'grammar_0_7': [4, 5, 5], 'meaning_0_6': [4, 5, 4], 'grammar_0_6': [4, 2, 3], 'meaning_0_5': [4, 5, 4], 'grammar_0_5': [4, 2, 3], 'meaning_0_3': [5, 5, 4], 'grammar_0_3': [4, 3, 5], 'meaning_0_0': [4, 5, 4], 'grammar_0_0': [3, 5, 5], 'meaning_0_1': [5, 5, 4], 'grammar_0_1': [5, 3, 4], 'meaning_0_10': [3, 3, 4], 'grammar_0_10': [3, 1, 3], 'meaning_0_4': [4, 5, 4], 'grammar_0_4': [4, 2, 3]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
Executing one action: self.actions.modify_select('meaning_0_8', '3')
We are going to select this select `meaning_0_8` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
Executing one action: self.actions.modify_select('grammar_0_8', '3')
We are going to select this select `grammar_0_8` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', '3')
We are going to select this select `meaning_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', '3')
We are going to select this select `grammar_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
Executing one action: self.actions.modify_select('meaning_0_9', '5')
We are going to select this select `meaning_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
Executing one action: self.actions.modify_select('grammar_0_9', '5')
We are going to select this select `grammar_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
Executing one action: self.actions.modify_select('meaning_0_11', '5')
We are going to select this select `meaning_0_11` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
Executing one action: self.actions.modify_select('grammar_0_11', '5')
We are going to select this select `grammar_0_11` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
Executing one action: self.actions.modify_select('meaning_0_7', '2')
We are going to select this select `meaning_0_7` with value `2`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
Executing one action: self.actions.modify_select('grammar_0_7', '5')
We are going to select this select `grammar_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
Executing one action: self.actions.modify_select('meaning_0_6', '3')
We are going to select this select `meaning_0_6` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
Executing one action: self.actions.modify_select('grammar_0_6', '3')
We are going to select this select `grammar_0_6` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', '3')
We are going to select this select `meaning_0_5` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_select('grammar_0_5', '3')
We are going to select this select `grammar_0_5` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', '3')
We are going to select this select `meaning_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', '3')
We are going to select this select `grammar_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', '3')
We are going to select this select `meaning_0_0` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', '5')
We are going to select this select `grammar_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', '3')
We are going to select this select `meaning_0_1` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', '5')
We are going to select this select `grammar_0_1` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
Executing one action: self.actions.modify_select('meaning_0_10', '3')
We are going to select this select `meaning_0_10` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
Executing one action: self.actions.modify_select('grammar_0_10', '3')
We are going to select this select `grammar_0_10` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', '5')
We are going to select this select `meaning_0_4` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', '5')
We are going to select this select `grammar_0_4` with value `5`
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['2']
 visible_values : ['2']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4, 4]` - type: `<class 'list'>`
----> baseline_answer: `2` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 3, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 1, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.25
 --> Per-instance per-field breakdown: {'select': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0]}
instance_id: 8137 <-> row_number: 827
 --> inputs: ['meaning_0_0', 'grammar_0_0', 'meaning_0_3', 'grammar_0_3', 'meaning_0_9', 'grammar_0_9', 'meaning_0_10', 'grammar_0_10', 'meaning_0_4', 'grammar_0_4', 'meaning_0_11', 'grammar_0_11', 'meaning_0_6', 'grammar_0_6', 'meaning_0_5', 'grammar_0_5', 'meaning_0_7', 'grammar_0_7', 'meaning_0_2', 'grammar_0_2', 'meaning_0_8', 'grammar_0_8', 'meaning_0_1', 'grammar_0_1']
 --> Looking up gold labels from row index 827 of `input.csv` (unique inputs). 
 --> input labels: {'meaning_0_0': [3, 5], 'grammar_0_0': [5, 5], 'meaning_0_3': [5, 5], 'grammar_0_3': [5, 5], 'meaning_0_9': [4, 5], 'grammar_0_9': [4, 5], 'meaning_0_10': [1, 3], 'grammar_0_10': [4, 3], 'meaning_0_4': [4, 5], 'grammar_0_4': [5, 5], 'meaning_0_11': [3, 3], 'grammar_0_11': [4, 3], 'meaning_0_6': [4, 4], 'grammar_0_6': [3, 3], 'meaning_0_5': [4, 5], 'grammar_0_5': [5, 5], 'meaning_0_7': [4, 4], 'grammar_0_7': [3, 4], 'meaning_0_2': [4, 5], 'grammar_0_2': [5, 4], 'meaning_0_8': [4, 3], 'grammar_0_8': [4, 2], 'meaning_0_1': [1, 5], 'grammar_0_1': [1, 2]}
 - - - - - -  starting a new element: `Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_0
Executing one action: self.actions.modify_select('meaning_0_0', '5')
We are going to select this select `meaning_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_0
Executing one action: self.actions.modify_select('grammar_0_0', '5')
We are going to select this select `grammar_0_0` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_3
Executing one action: self.actions.modify_select('meaning_0_3', '3')
We are going to select this select `meaning_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_3
Executing one action: self.actions.modify_select('grammar_0_3', '3')
We are going to select this select `grammar_0_3` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_9
Executing one action: self.actions.modify_select('meaning_0_9', '3')
We are going to select this select `meaning_0_9` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_9
Executing one action: self.actions.modify_select('grammar_0_9', '5')
We are going to select this select `grammar_0_9` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_10
Executing one action: self.actions.modify_select('meaning_0_10', '4')
We are going to select this select `meaning_0_10` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_10
Executing one action: self.actions.modify_select('grammar_0_10', '5')
We are going to select this select `grammar_0_10` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_4
Executing one action: self.actions.modify_select('meaning_0_4', '4')
We are going to select this select `meaning_0_4` with value `4`
 - - - - - -  starting a new element: `Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_4
Executing one action: self.actions.modify_select('grammar_0_4', '3')
We are going to select this select `grammar_0_4` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_11
Executing one action: self.actions.modify_select('meaning_0_11', '3')
We are going to select this select `meaning_0_11` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_11
Executing one action: self.actions.modify_select('grammar_0_11', '3')
We are going to select this select `grammar_0_11` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_6
Executing one action: self.actions.modify_select('meaning_0_6', '3')
We are going to select this select `meaning_0_6` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_6
Executing one action: self.actions.modify_select('grammar_0_6', '3')
We are going to select this select `grammar_0_6` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_5
Executing one action: self.actions.modify_select('meaning_0_5', '3')
We are going to select this select `meaning_0_5` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_5
Executing one action: self.actions.modify_range('grammar_0_5', '3.0')
Failed to execute an action self.actions.modify_range('grammar_0_5', '3.0'), error: Message: no such element: Unable to locate element: {"method":"xpath","selector":"//input[@type='range' and @name='grammar_0_5']"}
  (Session info: chrome=119.0.6045.123); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Stacktrace:
#0 0x56381b6c95e3 <unknown>
#1 0x56381b38c0b7 <unknown>
#2 0x56381b3d9f53 <unknown>
#3 0x56381b3da051 <unknown>
#4 0x56381b41f9c4 <unknown>
#5 0x56381b400f1d <unknown>
#6 0x56381b41cb3d <unknown>
#7 0x56381b400cc3 <unknown>
#8 0x56381b3cc0e4 <unknown>
#9 0x56381b3cd0ae <unknown>
#10 0x56381b68fce1 <unknown>
#11 0x56381b693b7e <unknown>
#12 0x56381b67d4b5 <unknown>
#13 0x56381b6947d6 <unknown>
#14 0x56381b660dbf <unknown>
#15 0x56381b6b7748 <unknown>
#16 0x56381b6b7917 <unknown>
#17 0x56381b6c8773 <unknown>
#18 0x7f37d5094ac3 <unknown>

 - - - - - -  starting a new element: `Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_7
Executing one action: self.actions.modify_select('meaning_0_7', '3')
We are going to select this select `meaning_0_7` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_7
Executing one action: self.actions.modify_select('grammar_0_7', '5')
We are going to select this select `grammar_0_7` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_2
Executing one action: self.actions.modify_select('meaning_0_2', '3')
We are going to select this select `meaning_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_2
Executing one action: self.actions.modify_select('grammar_0_2', '3')
We are going to select this select `grammar_0_2` with value `3`
 - - - - - -  starting a new element: `Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_8
Executing one action: self.actions.modify_select('meaning_0_8', '3')
We are going to select this select `meaning_0_8` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_8
Executing one action: self.actions.modify_select('grammar_0_8', '5')
We are going to select this select `grammar_0_8` with value `5`
 - - - - - -  starting a new element: `Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: meaning_0_1
Executing one action: self.actions.modify_select('meaning_0_1', '3')
We are going to select this select `meaning_0_1` with value `3`
 - - - - - -  starting a new element: `Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)` - - - - - -  
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
about to try executing one action, on the following input: grammar_0_1
Executing one action: self.actions.modify_select('grammar_0_1', '3')
We are going to select this select `grammar_0_1` with value `3`
input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['4']
 visible_values : ['4']
input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`)
 visible : ['blank']
 visible_values : ['blank']
input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`)
 visible : ['5']
 visible_values : ['5']
input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`)
 visible : ['3']
 visible_values : ['3']
 ------- evaluating input: Input(name=`meaning_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_0`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_3`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_9`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 3]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_10`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `4` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_4`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`grammar_0_11`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_6`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`meaning_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_5`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 5]` - type: `<class 'list'>`
----> baseline_answer: `blank` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_7`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[3, 4]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_2`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[5, 4]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 3]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_8`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[4, 2]` - type: `<class 'list'>`
----> baseline_answer: `5` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`meaning_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 5]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`grammar_0_1`, type=`select`, task=`Compression HIT`) ------- 
----> answers: `[1, 2]` - type: `<class 'list'>`
----> baseline_answer: `3` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 --> Per-instance overall score: 0.16666666666666666
 --> Per-instance per-field breakdown: {'select': [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]}
 = = = = = = = = = = = = starting new task: `Formalize this` = = = = = = = = = = = = 
First instance id: 17675
instance_id: 17688 <-> row_number: 13
 --> inputs: ['Q6MultiLineTextInput']
 --> Looking up gold labels from row index 13 of `input.csv` (unique inputs). 
 --> input labels: {'Q6MultiLineTextInput': ["Thank you for defending Terri Shiavo's right to live and appealing the case to a higher court. Thank you for valuing human life.", "Thank you very much for standing up for Terri Schiavo's right to live and thank you for having the courage to appeal hear case to a higher court. Simply put, thank you for valuing human life.", "Hello,\n\nThank you very much for standing up for Terri' Schiavo's right to live.  We also appreciate you having the courage to take her case to higher court.  Your value of human life means a lot to us.\n\nThank you again"]}
 - - - - - -  starting a new element: `Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)` - - - - - -  
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
about to try executing one action, on the following input: Q6MultiLineTextInput
Executing one action: self.actions.modify_text('Q6MultiLineTextInput', "I appreciate your steadfast support for Terri Schiavo's right to life. Furthermore, your willingness to escalate her case to a superior judiciary is commendable. Lastly, I thank you for upholding the value of human existence.")
Add text `I appreciate your steadfast support for Terri Schiavo's right to life. Furthermore, your willingness to escalate her case to a superior judiciary is commendable. Lastly, I thank you for upholding the value of human existence.` to this text input: <textarea class="form-control" cols="120" name="Q6MultiLineTextInput" rows="5"></textarea>
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
 visible : ["I appreciate your steadfast support for Terri Schiavo's right to life. Furthermore, your willingness to escalate her case to a superior judiciary is commendable. Lastly, I thank you for upholding the value of human existence."]
 visible_values : ["I appreciate your steadfast support for Terri Schiavo's right to life. Furthermore, your willingness to escalate her case to a superior judiciary is commendable. Lastly, I thank you for upholding the value of human existence."]
 ------- evaluating input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`) ------- 
answers after mapping: `["Thank you for defending Terri Shiavo's right to live and appealing the case to a higher court. Thank you for valuing human life.", "Thank you very much for standing up for Terri Schiavo's right to live and thank you for having the courage to appeal hear case to a higher court. Simply put, thank you for valuing human life.", "Hello,\n\nThank you very much for standing up for Terri' Schiavo's right to live.  We also appreciate you having the courage to take her case to higher court.  Your value of human life means a lot to us.\n\nThank you again"]`
----> answers: `["Thank you very much for standing up for Terri Schiavo's right to live and thank you for having the courage to appeal hear case to a higher court. Simply put, thank you for valuing human life.", "Thank you for defending Terri Shiavo's right to live and appealing the case to a higher court. Thank you for valuing human life.", "Hello,\n\nThank you very much for standing up for Terri' Schiavo's right to live.  We also appreciate you having the courage to take her case to higher court.  Your value of human life means a lot to us.\n\nThank you again"]` - type: `<class 'list'>`
----> baseline_answer: `I appreciate your steadfast support for Terri Schiavo's right to life. Furthermore, your willingness to escalate her case to a superior judiciary is commendable. Lastly, I thank you for upholding the value of human existence.` - type: `<class 'str'>`
 --> scores:  0.43333333333333335
----> per-field score: 0.43333333333333335
 --> Per-instance overall score: 0.43333333333333335
 --> Per-instance per-field breakdown: {'textarea': [0.43333333333333335]}
instance_id: 17675 <-> row_number: 0
 --> inputs: ['Q6MultiLineTextInput']
 --> Looking up gold labels from row index 0 of `input.csv` (unique inputs). 
 --> input labels: {'Q6MultiLineTextInput': ["So I really need help here from staff who knows what they are talking about. My doctor wants me to take medical leave from my job because of stress and depression. That's great and all, but I don't have any income and I have a house and family to pay for. Can I file for workman's comp? Thanks.", "My doctor sent me home for work for stress and depression. I was wondering if there is any way to still fill for workman's comp. I have no income coming in and I need to pay for my house and my family. Thanks.\nFor MyFlorida.com Staff only . Go here to respond to this email : http://fcn.state.fl.us/owa_myflorida/owa/myflorida_www.feedback_admin.main?feedback_key_str=40353", "I have been on medical leave due to stress and depression, which resulted from my job. Is there anyway to file for workman's compensation? I do not have any other form of income coming in and I still have a mortgage and a family to provide for. Thank you. (For MyFlorida.com Staff only). Go here to respond to this email : http://fcn.state.fl.us/owa_myflorida/owa/myflorida_www.feedback_admin.main?feedback_key_str=40353"]}
 - - - - - -  starting a new element: `Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)` - - - - - -  
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
about to try executing one action, on the following input: Q6MultiLineTextInput
Executing one action: self.actions.modify_text('Q6MultiLineTextInput', "Hey, I've been on a break because my doctor said I needed it for all the stress and feeling down I've been getting from work. Do you think I can ask for worker's comp? I've got no money coming in right now and there's my house bills to think about, and my family too. Thanks a ton.")
Add text `Hey, I've been on a break because my doctor said I needed it for all the stress and feeling down I've been getting from work. Do you think I can ask for worker's comp? I've got no money coming in right now and there's my house bills to think about, and my family too. Thanks a ton.` to this text input: <textarea class="form-control" cols="120" name="Q6MultiLineTextInput" rows="5"></textarea>
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
 visible : ["Hey, I've been on a break because my doctor said I needed it for all the stress and feeling down I've been getting from work. Do you think I can ask for worker's comp? I've got no money coming in right now and there's my house bills to think about, and my family too. Thanks a ton."]
 visible_values : ["Hey, I've been on a break because my doctor said I needed it for all the stress and feeling down I've been getting from work. Do you think I can ask for worker's comp? I've got no money coming in right now and there's my house bills to think about, and my family too. Thanks a ton."]
 ------- evaluating input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`) ------- 
answers after mapping: `["So I really need help here from staff who knows what they are talking about. My doctor wants me to take medical leave from my job because of stress and depression. That's great and all, but I don't have any income and I have a house and family to pay for. Can I file for workman's comp? Thanks.", "My doctor sent me home for work for stress and depression. I was wondering if there is any way to still fill for workman's comp. I have no income coming in and I need to pay for my house and my family. Thanks.\nFor MyFlorida.com Staff only . Go here to respond to this email : http://fcn.state.fl.us/owa_myflorida/owa/myflorida_www.feedback_admin.main?feedback_key_str=40353", "I have been on medical leave due to stress and depression, which resulted from my job. Is there anyway to file for workman's compensation? I do not have any other form of income coming in and I still have a mortgage and a family to provide for. Thank you. (For MyFlorida.com Staff only). Go here to respond to this email : http://fcn.state.fl.us/owa_myflorida/owa/myflorida_www.feedback_admin.main?feedback_key_str=40353"]`
----> answers: `["So I really need help here from staff who knows what they are talking about. My doctor wants me to take medical leave from my job because of stress and depression. That's great and all, but I don't have any income and I have a house and family to pay for. Can I file for workman's comp? Thanks.", "My doctor sent me home for work for stress and depression. I was wondering if there is any way to still fill for workman's comp. I have no income coming in and I need to pay for my house and my family. Thanks.\nFor MyFlorida.com Staff only . Go here to respond to this email : http://fcn.state.fl.us/owa_myflorida/owa/myflorida_www.feedback_admin.main?feedback_key_str=40353", "I have been on medical leave due to stress and depression, which resulted from my job. Is there anyway to file for workman's compensation? I do not have any other form of income coming in and I still have a mortgage and a family to provide for. Thank you. (For MyFlorida.com Staff only). Go here to respond to this email : http://fcn.state.fl.us/owa_myflorida/owa/myflorida_www.feedback_admin.main?feedback_key_str=40353"]` - type: `<class 'list'>`
----> baseline_answer: `Hey, I've been on a break because my doctor said I needed it for all the stress and feeling down I've been getting from work. Do you think I can ask for worker's comp? I've got no money coming in right now and there's my house bills to think about, and my family too. Thanks a ton.` - type: `<class 'str'>`
 --> scores:  0.2962962962962963
----> per-field score: 0.2962962962962963
 --> Per-instance overall score: 0.2962962962962963
 --> Per-instance per-field breakdown: {'textarea': [0.43333333333333335, 0.2962962962962963]}
instance_id: 17681 <-> row_number: 6
 --> inputs: ['Q6MultiLineTextInput']
 --> Looking up gold labels from row index 6 of `input.csv` (unique inputs). 
 --> input labels: {'Q6MultiLineTextInput': ['EVIL CONTROLLERS are great! I purchased one and received it but have one problem. How do I use the mods without instructions? Also, are the controllers tested by Evil Controllers before shipping? Thanks!', "I purchased and received a controller from Evil Controllers.  I did not receive any instructions with the controller and need instruction regarding the controller's mods.  Additionally, are these controllers tested before shipment?", "I purchased Evil Controllers from EVIL CONTROLLERS and I received it, great. One problem! How am I supposed to use the mod's on the controller if I have no instructions? I also would like to know: Does evil controllers test the controllers before they ship them to customers?"]}
 - - - - - -  starting a new element: `Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)` - - - - - -  
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
about to try executing one action, on the following input: Q6MultiLineTextInput
Executing one action: self.actions.modify_text('Q6MultiLineTextInput', "Hey, I just got my controller from EVIL CONTROLLERS. Pretty cool, huh? But, here's the thing... How am I supposed to figure out how to use these mods without any instructions? Plus, I'm kinda wondering, does Evil Controllers actually check these controllers before they send them out to us?")
Add text `Hey, I just got my controller from EVIL CONTROLLERS. Pretty cool, huh? But, here's the thing... How am I supposed to figure out how to use these mods without any instructions? Plus, I'm kinda wondering, does Evil Controllers actually check these controllers before they send them out to us?` to this text input: <textarea class="form-control" cols="120" name="Q6MultiLineTextInput" rows="5"></textarea>
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
 visible : ["Hey, I just got my controller from EVIL CONTROLLERS. Pretty cool, huh? But, here's the thing... How am I supposed to figure out how to use these mods without any instructions? Plus, I'm kinda wondering, does Evil Controllers actually check these controllers before they send them out to us?"]
 visible_values : ["Hey, I just got my controller from EVIL CONTROLLERS. Pretty cool, huh? But, here's the thing... How am I supposed to figure out how to use these mods without any instructions? Plus, I'm kinda wondering, does Evil Controllers actually check these controllers before they send them out to us?"]
 ------- evaluating input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`) ------- 
answers after mapping: `['EVIL CONTROLLERS are great! I purchased one and received it but have one problem. How do I use the mods without instructions? Also, are the controllers tested by Evil Controllers before shipping? Thanks!', "I purchased and received a controller from Evil Controllers.  I did not receive any instructions with the controller and need instruction regarding the controller's mods.  Additionally, are these controllers tested before shipment?", "I purchased Evil Controllers from EVIL CONTROLLERS and I received it, great. One problem! How am I supposed to use the mod's on the controller if I have no instructions? I also would like to know: Does evil controllers test the controllers before they ship them to customers?"]`
----> answers: `["I purchased and received a controller from Evil Controllers.  I did not receive any instructions with the controller and need instruction regarding the controller's mods.  Additionally, are these controllers tested before shipment?", 'EVIL CONTROLLERS are great! I purchased one and received it but have one problem. How do I use the mods without instructions? Also, are the controllers tested by Evil Controllers before shipping? Thanks!', "I purchased Evil Controllers from EVIL CONTROLLERS and I received it, great. One problem! How am I supposed to use the mod's on the controller if I have no instructions? I also would like to know: Does evil controllers test the controllers before they ship them to customers?"]` - type: `<class 'list'>`
----> baseline_answer: `Hey, I just got my controller from EVIL CONTROLLERS. Pretty cool, huh? But, here's the thing... How am I supposed to figure out how to use these mods without any instructions? Plus, I'm kinda wondering, does Evil Controllers actually check these controllers before they send them out to us?` - type: `<class 'str'>`
 --> scores:  0.43999999999999995
----> per-field score: 0.43999999999999995
 --> Per-instance overall score: 0.43999999999999995
 --> Per-instance per-field breakdown: {'textarea': [0.43333333333333335, 0.2962962962962963, 0.43999999999999995]}
instance_id: 17677 <-> row_number: 2
 --> inputs: ['Q6MultiLineTextInput']
 --> Looking up gold labels from row index 2 of `input.csv` (unique inputs). 
 --> input labels: {'Q6MultiLineTextInput': ['More than 17% of Floridas children do not have health insurance and tens of thousands are on the waiting list for affordable healthcare.  Florida is in crisis and needs our help.', 'The children in Florida need help desperately. The healthcare system there is in crisis and thousands of people are waiting  for affordable health care. More than 17 percent of children there are currently without health insurance', "Florida's healthcare system is in trouble. 1 in 6 kids don't have health insurance, and thousands are on waiting lists to get the care they need. They need our help badly."]}
 - - - - - -  starting a new element: `Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)` - - - - - -  
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
about to try executing one action, on the following input: Q6MultiLineTextInput
Executing one action: self.actions.modify_text('Q6MultiLineTextInput', "Hey everyone, just wanted to shout out about a big issue down here in Florida. So, like, over 17% of kids don't have health insurance and loads are waiting to get some help they badly need. Let's do something about it, yeah?")
Add text `Hey everyone, just wanted to shout out about a big issue down here in Florida. So, like, over 17% of kids don't have health insurance and loads are waiting to get some help they badly need. Let's do something about it, yeah?` to this text input: <textarea class="form-control" cols="120" name="Q6MultiLineTextInput" rows="5"></textarea>
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
 visible : ["Hey everyone, just wanted to shout out about a big issue down here in Florida. So, like, over 17% of kids don't have health insurance and loads are waiting to get some help they badly need. Let's do something about it, yeah?"]
 visible_values : ["Hey everyone, just wanted to shout out about a big issue down here in Florida. So, like, over 17% of kids don't have health insurance and loads are waiting to get some help they badly need. Let's do something about it, yeah?"]
 ------- evaluating input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`) ------- 
answers after mapping: `['More than 17% of Floridas children do not have health insurance and tens of thousands are on the waiting list for affordable healthcare.  Florida is in crisis and needs our help.', 'The children in Florida need help desperately. The healthcare system there is in crisis and thousands of people are waiting  for affordable health care. More than 17 percent of children there are currently without health insurance', "Florida's healthcare system is in trouble. 1 in 6 kids don't have health insurance, and thousands are on waiting lists to get the care they need. They need our help badly."]`
----> answers: `['More than 17% of Floridas children do not have health insurance and tens of thousands are on the waiting list for affordable healthcare.  Florida is in crisis and needs our help.', "Florida's healthcare system is in trouble. 1 in 6 kids don't have health insurance, and thousands are on waiting lists to get the care they need. They need our help badly.", 'The children in Florida need help desperately. The healthcare system there is in crisis and thousands of people are waiting  for affordable health care. More than 17 percent of children there are currently without health insurance']` - type: `<class 'list'>`
----> baseline_answer: `Hey everyone, just wanted to shout out about a big issue down here in Florida. So, like, over 17% of kids don't have health insurance and loads are waiting to get some help they badly need. Let's do something about it, yeah?` - type: `<class 'str'>`
 --> scores:  0.36363636363636365
----> per-field score: 0.36363636363636365
 --> Per-instance overall score: 0.36363636363636365
 --> Per-instance per-field breakdown: {'textarea': [0.43333333333333335, 0.2962962962962963, 0.43999999999999995, 0.36363636363636365]}
instance_id: 17686 <-> row_number: 11
 --> inputs: ['Q6MultiLineTextInput']
 --> Looking up gold labels from row index 11 of `input.csv` (unique inputs). 
 --> input labels: {'Q6MultiLineTextInput': ["Dear Mr. (Ms.) [name here],\n\nI'm very interested in adopting a white owl or dove as a pet.  I wonder if you have any for sale within the UK?  If so, could you send me further information, including prices?  Having one of these birds has been a dream of mine since seeing a Harry Potter movie.  \n\nthanks in advance for your reply,\n[My name]", 'I am a United Kingdom resident. I am a big fan of Hedwig, the white owl from the Harry Potter franchise. I was wondering if it is possible to purchase such an owl. If so, how much would it cost. I would also be interested in purchasing a white dove.', 'I live in the United Kingdom and I simply love that white owl in Harry Potter, Hedwig. I would like to have one as a pet, if it were only possible to find out how much it would cost. In addition, I am also interested purchasing a white dove.']}
 - - - - - -  starting a new element: `Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)` - - - - - -  
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
about to try executing one action, on the following input: Q6MultiLineTextInput
Executing one action: self.actions.modify_text('Q6MultiLineTextInput', "I reside in the United Kingdom and am particularly fond of the white owl (Hedwig) featured in the Harry Potter series. It is my desire to possess such an owl as a pet. I am curious about the feasibility of acquiring such an owl and, if possible, the associated costs. Additionally, I hold an interest in the white dove.")
Add text `I reside in the United Kingdom and am particularly fond of the white owl (Hedwig) featured in the Harry Potter series. It is my desire to possess such an owl as a pet. I am curious about the feasibility of acquiring such an owl and, if possible, the associated costs. Additionally, I hold an interest in the white dove.` to this text input: <textarea class="form-control" cols="120" name="Q6MultiLineTextInput" rows="5"></textarea>
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
 visible : ['I reside in the United Kingdom and am particularly fond of the white owl (Hedwig) featured in the Harry Potter series. It is my desire to possess such an owl as a pet. I am curious about the feasibility of acquiring such an owl and, if possible, the associated costs. Additionally, I hold an interest in the white dove.']
 visible_values : ['I reside in the United Kingdom and am particularly fond of the white owl (Hedwig) featured in the Harry Potter series. It is my desire to possess such an owl as a pet. I am curious about the feasibility of acquiring such an owl and, if possible, the associated costs. Additionally, I hold an interest in the white dove.']
 ------- evaluating input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`) ------- 
answers after mapping: `["Dear Mr. (Ms.) [name here],\n\nI'm very interested in adopting a white owl or dove as a pet.  I wonder if you have any for sale within the UK?  If so, could you send me further information, including prices?  Having one of these birds has been a dream of mine since seeing a Harry Potter movie.  \n\nthanks in advance for your reply,\n[My name]", 'I am a United Kingdom resident. I am a big fan of Hedwig, the white owl from the Harry Potter franchise. I was wondering if it is possible to purchase such an owl. If so, how much would it cost. I would also be interested in purchasing a white dove.', 'I live in the United Kingdom and I simply love that white owl in Harry Potter, Hedwig. I would like to have one as a pet, if it were only possible to find out how much it would cost. In addition, I am also interested purchasing a white dove.']`
----> answers: `['I am a United Kingdom resident. I am a big fan of Hedwig, the white owl from the Harry Potter franchise. I was wondering if it is possible to purchase such an owl. If so, how much would it cost. I would also be interested in purchasing a white dove.', 'I live in the United Kingdom and I simply love that white owl in Harry Potter, Hedwig. I would like to have one as a pet, if it were only possible to find out how much it would cost. In addition, I am also interested purchasing a white dove.', "Dear Mr. (Ms.) [name here],\n\nI'm very interested in adopting a white owl or dove as a pet.  I wonder if you have any for sale within the UK?  If so, could you send me further information, including prices?  Having one of these birds has been a dream of mine since seeing a Harry Potter movie.  \n\nthanks in advance for your reply,\n[My name]"]` - type: `<class 'list'>`
----> baseline_answer: `I reside in the United Kingdom and am particularly fond of the white owl (Hedwig) featured in the Harry Potter series. It is my desire to possess such an owl as a pet. I am curious about the feasibility of acquiring such an owl and, if possible, the associated costs. Additionally, I hold an interest in the white dove.` - type: `<class 'str'>`
 --> scores:  0.44036697247706424
----> per-field score: 0.44036697247706424
 --> Per-instance overall score: 0.44036697247706424
 --> Per-instance per-field breakdown: {'textarea': [0.43333333333333335, 0.2962962962962963, 0.43999999999999995, 0.36363636363636365, 0.44036697247706424]}
instance_id: 17682 <-> row_number: 7
 --> inputs: ['Q6MultiLineTextInput']
 --> Looking up gold labels from row index 7 of `input.csv` (unique inputs). 
 --> input labels: {'Q6MultiLineTextInput': ["I have received the Evil controller I purchased.I was wondering, how I am supposed to use the Mod's on the controller if I do not have the instructions to do so? I was also wondering, are the controllers are tested before they are shipped to customers?", "I purchased and received a controller from Evil Controllers and there is only one problem; how am I suppose to use the Mod's on the controller if I have no instructions? I would also like to know if Evil Controllers tests the controllers before they ship them out to customers?", "Evil Controllers,\nI purchased and received a controller from you and I have a couple of questions. The controller did not come with instructions so I am not sure how to use the Mod's. I was also wondering if you tested the controllers before shipping them to the customer. Thank You."]}
 - - - - - -  starting a new element: `Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)` - - - - - -  
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
about to try executing one action, on the following input: Q6MultiLineTextInput
Executing one action: self.actions.modify_text('Q6MultiLineTextInput', "I recently purchased a controller from Evil Controllers and was pleased upon receipt. However, I encountered an issue—there were no instructions provided on how to use the controller's modifications. Additionally, I would appreciate confirmation on whether Evil Controllers conducts tests on their products prior to dispatching them to customers.")
Add text `I recently purchased a controller from Evil Controllers and was pleased upon receipt. However, I encountered an issue—there were no instructions provided on how to use the controller's modifications. Additionally, I would appreciate confirmation on whether Evil Controllers conducts tests on their products prior to dispatching them to customers.` to this text input: <textarea class="form-control" cols="120" name="Q6MultiLineTextInput" rows="5"></textarea>
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
 visible : ["I recently purchased a controller from Evil Controllers and was pleased upon receipt. However, I encountered an issue—there were no instructions provided on how to use the controller's modifications. Additionally, I would appreciate confirmation on whether Evil Controllers conducts tests on their products prior to dispatching them to customers."]
 visible_values : ["I recently purchased a controller from Evil Controllers and was pleased upon receipt. However, I encountered an issue—there were no instructions provided on how to use the controller's modifications. Additionally, I would appreciate confirmation on whether Evil Controllers conducts tests on their products prior to dispatching them to customers."]
 ------- evaluating input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`) ------- 
answers after mapping: `["I have received the Evil controller I purchased.I was wondering, how I am supposed to use the Mod's on the controller if I do not have the instructions to do so? I was also wondering, are the controllers are tested before they are shipped to customers?", "I purchased and received a controller from Evil Controllers and there is only one problem; how am I suppose to use the Mod's on the controller if I have no instructions? I would also like to know if Evil Controllers tests the controllers before they ship them out to customers?", "Evil Controllers,\nI purchased and received a controller from you and I have a couple of questions. The controller did not come with instructions so I am not sure how to use the Mod's. I was also wondering if you tested the controllers before shipping them to the customer. Thank You."]`
----> answers: `["Evil Controllers,\nI purchased and received a controller from you and I have a couple of questions. The controller did not come with instructions so I am not sure how to use the Mod's. I was also wondering if you tested the controllers before shipping them to the customer. Thank You.", "I have received the Evil controller I purchased.I was wondering, how I am supposed to use the Mod's on the controller if I do not have the instructions to do so? I was also wondering, are the controllers are tested before they are shipped to customers?", "I purchased and received a controller from Evil Controllers and there is only one problem; how am I suppose to use the Mod's on the controller if I have no instructions? I would also like to know if Evil Controllers tests the controllers before they ship them out to customers?"]` - type: `<class 'list'>`
----> baseline_answer: `I recently purchased a controller from Evil Controllers and was pleased upon receipt. However, I encountered an issue—there were no instructions provided on how to use the controller's modifications. Additionally, I would appreciate confirmation on whether Evil Controllers conducts tests on their products prior to dispatching them to customers.` - type: `<class 'str'>`
 --> scores:  0.43137254901960786
----> per-field score: 0.43137254901960786
 --> Per-instance overall score: 0.43137254901960786
 --> Per-instance per-field breakdown: {'textarea': [0.43333333333333335, 0.2962962962962963, 0.43999999999999995, 0.36363636363636365, 0.44036697247706424, 0.43137254901960786]}
instance_id: 17676 <-> row_number: 1
 --> inputs: ['Q6MultiLineTextInput']
 --> Looking up gold labels from row index 1 of `input.csv` (unique inputs). 
 --> input labels: {'Q6MultiLineTextInput': ["Due to work related stress and depression, I have been on medical leave per my Doctor's request. Is it possible to file for Workman's comp to help pay for my house and family; I have no income coming in. Thank you.\n  \n        For Myflorida.som staff only: Go here to respond to the email: http://fcn.state.fl.us/owa_myflorida/owa/myflorida_www.feedback_admin.main?feedback_key_str=40353", "I have been on medical leave due to stress and depression, which is a result from my job. Is there anyway I can file for workman's compensation? I do not have any other form of income and I still have a mortgage and a family to provide for. Thank you. (For  MyFlorida.com Staff only). Go here to respond to the e-mail : http://fcn.state.fl.us/owa_myflorida/owa/myflorida_www.feedback_admin.main?feedback_key_str=40353", "Is there anyway I can file for workman's compensation because I have been on medical leave from my doctor for stress and depression.  I do not have any income and have a house and family to pay for.  Thank you."]}
 - - - - - -  starting a new element: `Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)` - - - - - -  
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
about to try executing one action, on the following input: Q6MultiLineTextInput
Executing one action: self.actions.modify_text('Q6MultiLineTextInput', "I have been on medical leave due to stress and depression as prescribed by my doctor, which has been caused by my current employment situation. I am inquiring whether it is possible to submit a claim for workers' compensation, as I am currently without any source of income. This is particularly concerning because I have a mortgage to pay and a family to support. I would appreciate any assistance you can provide. For staff at MyFlorida.com, please follow this link to respond to my inquiry: http://fcn.state.fl.us/owa_myflorida/owa/myflorida_www.feedback_admin.main?feedback_key_str=40353. Thank you.")
Add text `I have been on medical leave due to stress and depression as prescribed by my doctor, which has been caused by my current employment situation. I am inquiring whether it is possible to submit a claim for workers' compensation, as I am currently without any source of income. This is particularly concerning because I have a mortgage to pay and a family to support. I would appreciate any assistance you can provide. For staff at MyFlorida.com, please follow this link to respond to my inquiry: http://fcn.state.fl.us/owa_myflorida/owa/myflorida_www.feedback_admin.main?feedback_key_str=40353. Thank you.` to this text input: <textarea class="form-control" cols="120" name="Q6MultiLineTextInput" rows="5"></textarea>
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
 visible : ["I have been on medical leave due to stress and depression as prescribed by my doctor, which has been caused by my current employment situation. I am inquiring whether it is possible to submit a claim for workers' compensation, as I am currently without any source of income. This is particularly concerning because I have a mortgage to pay and a family to support. I would appreciate any assistance you can provide. For staff at MyFlorida.com, please follow this link to respond to my inquiry: http://fcn.state.fl.us/owa_myflorida/owa/myflorida_www.feedback_admin.main?feedback_key_str=40353. Thank you."]
 visible_values : ["I have been on medical leave due to stress and depression as prescribed by my doctor, which has been caused by my current employment situation. I am inquiring whether it is possible to submit a claim for workers' compensation, as I am currently without any source of income. This is particularly concerning because I have a mortgage to pay and a family to support. I would appreciate any assistance you can provide. For staff at MyFlorida.com, please follow this link to respond to my inquiry: http://fcn.state.fl.us/owa_myflorida/owa/myflorida_www.feedback_admin.main?feedback_key_str=40353. Thank you."]
 ------- evaluating input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`) ------- 
answers after mapping: `["Due to work related stress and depression, I have been on medical leave per my Doctor's request. Is it possible to file for Workman's comp to help pay for my house and family; I have no income coming in. Thank you.\n  \n        For Myflorida.som staff only: Go here to respond to the email: http://fcn.state.fl.us/owa_myflorida/owa/myflorida_www.feedback_admin.main?feedback_key_str=40353", "I have been on medical leave due to stress and depression, which is a result from my job. Is there anyway I can file for workman's compensation? I do not have any other form of income and I still have a mortgage and a family to provide for. Thank you. (For  MyFlorida.com Staff only). Go here to respond to the e-mail : http://fcn.state.fl.us/owa_myflorida/owa/myflorida_www.feedback_admin.main?feedback_key_str=40353", "Is there anyway I can file for workman's compensation because I have been on medical leave from my doctor for stress and depression.  I do not have any income and have a house and family to pay for.  Thank you."]`
----> answers: `["I have been on medical leave due to stress and depression, which is a result from my job. Is there anyway I can file for workman's compensation? I do not have any other form of income and I still have a mortgage and a family to provide for. Thank you. (For  MyFlorida.com Staff only). Go here to respond to the e-mail : http://fcn.state.fl.us/owa_myflorida/owa/myflorida_www.feedback_admin.main?feedback_key_str=40353", "Due to work related stress and depression, I have been on medical leave per my Doctor's request. Is it possible to file for Workman's comp to help pay for my house and family; I have no income coming in. Thank you.\n  \n        For Myflorida.som staff only: Go here to respond to the email: http://fcn.state.fl.us/owa_myflorida/owa/myflorida_www.feedback_admin.main?feedback_key_str=40353", "Is there anyway I can file for workman's compensation because I have been on medical leave from my doctor for stress and depression.  I do not have any income and have a house and family to pay for.  Thank you."]` - type: `<class 'list'>`
----> baseline_answer: `I have been on medical leave due to stress and depression as prescribed by my doctor, which has been caused by my current employment situation. I am inquiring whether it is possible to submit a claim for workers' compensation, as I am currently without any source of income. This is particularly concerning because I have a mortgage to pay and a family to support. I would appreciate any assistance you can provide. For staff at MyFlorida.com, please follow this link to respond to my inquiry: http://fcn.state.fl.us/owa_myflorida/owa/myflorida_www.feedback_admin.main?feedback_key_str=40353. Thank you.` - type: `<class 'str'>`
 --> scores:  0.5591397849462365
----> per-field score: 0.5591397849462365
 --> Per-instance overall score: 0.5591397849462365
 --> Per-instance per-field breakdown: {'textarea': [0.43333333333333335, 0.2962962962962963, 0.43999999999999995, 0.36363636363636365, 0.44036697247706424, 0.43137254901960786, 0.5591397849462365]}
instance_id: 17691 <-> row_number: 16
 --> inputs: ['Q6MultiLineTextInput']
 --> Looking up gold labels from row index 16 of `input.csv` (unique inputs). 
 --> input labels: {'Q6MultiLineTextInput': ["Sharing your comments with Bob Crawford because I think he can help you out. Bob is the commissioner of Agriculture and Consumer services and the number to his office is 1-800-435-7352. (It's toll free.)", 'To help you better, we are going to share your comments with Bob Crawford.He is the Commissioner of Agriculture and Consumer purchases. If you want to reach his office, the number is toll-free and is: 1-800-435-7352.', 'In order to better assist you, we are sharing your comments with Bob Crawford, who is the Commissioner of Agriculture and Consumer Services. If you wish to contact him, his toll-free telephone number is (800) 435-7352.']}
 - - - - - -  starting a new element: `Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)` - - - - - -  
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
about to try executing one action, on the following input: Q6MultiLineTextInput
Executing one action: self.actions.modify_text('Q6MultiLineTextInput', "Hey, just wanted to let you know we're looping in Bob Crawford, the big boss of Agriculture and Consumer Services, with your feedback. Feel free to give his office a shout at 1-800-435-7352. It's toll-free!")
Add text `Hey, just wanted to let you know we're looping in Bob Crawford, the big boss of Agriculture and Consumer Services, with your feedback. Feel free to give his office a shout at 1-800-435-7352. It's toll-free!` to this text input: <textarea class="form-control" cols="120" name="Q6MultiLineTextInput" rows="5"></textarea>
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
 visible : ["Hey, just wanted to let you know we're looping in Bob Crawford, the big boss of Agriculture and Consumer Services, with your feedback. Feel free to give his office a shout at 1-800-435-7352. It's toll-free!"]
 visible_values : ["Hey, just wanted to let you know we're looping in Bob Crawford, the big boss of Agriculture and Consumer Services, with your feedback. Feel free to give his office a shout at 1-800-435-7352. It's toll-free!"]
 ------- evaluating input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`) ------- 
answers after mapping: `["Sharing your comments with Bob Crawford because I think he can help you out. Bob is the commissioner of Agriculture and Consumer services and the number to his office is 1-800-435-7352. (It's toll free.)", 'To help you better, we are going to share your comments with Bob Crawford.He is the Commissioner of Agriculture and Consumer purchases. If you want to reach his office, the number is toll-free and is: 1-800-435-7352.', 'In order to better assist you, we are sharing your comments with Bob Crawford, who is the Commissioner of Agriculture and Consumer Services. If you wish to contact him, his toll-free telephone number is (800) 435-7352.']`
----> answers: `['To help you better, we are going to share your comments with Bob Crawford.He is the Commissioner of Agriculture and Consumer purchases. If you want to reach his office, the number is toll-free and is: 1-800-435-7352.', 'In order to better assist you, we are sharing your comments with Bob Crawford, who is the Commissioner of Agriculture and Consumer Services. If you wish to contact him, his toll-free telephone number is (800) 435-7352.', "Sharing your comments with Bob Crawford because I think he can help you out. Bob is the commissioner of Agriculture and Consumer services and the number to his office is 1-800-435-7352. (It's toll free.)"]` - type: `<class 'list'>`
----> baseline_answer: `Hey, just wanted to let you know we're looping in Bob Crawford, the big boss of Agriculture and Consumer Services, with your feedback. Feel free to give his office a shout at 1-800-435-7352. It's toll-free!` - type: `<class 'str'>`
 --> scores:  0.48101265822784817
----> per-field score: 0.48101265822784817
 --> Per-instance overall score: 0.48101265822784817
 --> Per-instance per-field breakdown: {'textarea': [0.43333333333333335, 0.2962962962962963, 0.43999999999999995, 0.36363636363636365, 0.44036697247706424, 0.43137254901960786, 0.5591397849462365, 0.48101265822784817]}
instance_id: 17693 <-> row_number: 18
 --> inputs: ['Q6MultiLineTextInput']
 --> Looking up gold labels from row index 18 of `input.csv` (unique inputs). 
 --> input labels: {'Q6MultiLineTextInput': ["I haven't tried amazingly hard yet, but are these o.k foods for losing weight? \nA small banana,90 calories. Two small handfuls of random sweets ( I will cut down in sweets!). A bowl of pesto. And the only other thing I might eat is some fruit, maybe melon. What will this end up being calorie wise? How good is it? I am personally quite happy about it! Thank you!!:)", "Okay, so I have not done amazingly, but is this okay for weight loss, one small banana, which equals 90 calories, two small handfuls of random sweets (I will cut down on sweets), one bowl of pesto pasta? The only other thing that I might have today is fruit, namely a melon. How many calories would this add up to and how well am I doing? Personally, I'm quite happy. Thank you.", 'I have not done amazing but how is this? A small banana at 90 calories, 2 small handfuls of random sweets which I will cut down on even more, and one bowl of pasta pesto.  I may also have some fruit today.  How many calories do you think that would add up to?  \n\nThank you!']}
 - - - - - -  starting a new element: `Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)` - - - - - -  
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
about to try executing one action, on the following input: Q6MultiLineTextInput
Executing one action: self.actions.modify_text('Q6MultiLineTextInput', "Okay, so I haven't been doing AMAZINGLY, but is this okay for weight loss? Had a small banana that's like 90 calories. Munched on a couple small handfuls of random sweets - BUT, I'm gonna cut down on the sweets, promise. Also had a bowl of pasta pesto. Might just have some fruit - melon, later on. Wondering how many calories this all adds up to and if it's kinda alright? I'm actually quite happy with this, thanks! :)")
Add text `Okay, so I haven't been doing AMAZINGLY, but is this okay for weight loss? Had a small banana that's like 90 calories. Munched on a couple small handfuls of random sweets - BUT, I'm gonna cut down on the sweets, promise. Also had a bowl of pasta pesto. Might just have some fruit - melon, later on. Wondering how many calories this all adds up to and if it's kinda alright? I'm actually quite happy with this, thanks! :)` to this text input: <textarea class="form-control" cols="120" name="Q6MultiLineTextInput" rows="5"></textarea>
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
 visible : ["Okay, so I haven't been doing AMAZINGLY, but is this okay for weight loss? Had a small banana that's like 90 calories. Munched on a couple small handfuls of random sweets - BUT, I'm gonna cut down on the sweets, promise. Also had a bowl of pasta pesto. Might just have some fruit - melon, later on. Wondering how many calories this all adds up to and if it's kinda alright? I'm actually quite happy with this, thanks! :)"]
 visible_values : ["Okay, so I haven't been doing AMAZINGLY, but is this okay for weight loss? Had a small banana that's like 90 calories. Munched on a couple small handfuls of random sweets - BUT, I'm gonna cut down on the sweets, promise. Also had a bowl of pasta pesto. Might just have some fruit - melon, later on. Wondering how many calories this all adds up to and if it's kinda alright? I'm actually quite happy with this, thanks! :)"]
 ------- evaluating input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`) ------- 
answers after mapping: `["I haven't tried amazingly hard yet, but are these o.k foods for losing weight? \nA small banana,90 calories. Two small handfuls of random sweets ( I will cut down in sweets!). A bowl of pesto. And the only other thing I might eat is some fruit, maybe melon. What will this end up being calorie wise? How good is it? I am personally quite happy about it! Thank you!!:)", "Okay, so I have not done amazingly, but is this okay for weight loss, one small banana, which equals 90 calories, two small handfuls of random sweets (I will cut down on sweets), one bowl of pesto pasta? The only other thing that I might have today is fruit, namely a melon. How many calories would this add up to and how well am I doing? Personally, I'm quite happy. Thank you.", 'I have not done amazing but how is this? A small banana at 90 calories, 2 small handfuls of random sweets which I will cut down on even more, and one bowl of pasta pesto.  I may also have some fruit today.  How many calories do you think that would add up to?  \n\nThank you!']`
----> answers: `["Okay, so I have not done amazingly, but is this okay for weight loss, one small banana, which equals 90 calories, two small handfuls of random sweets (I will cut down on sweets), one bowl of pesto pasta? The only other thing that I might have today is fruit, namely a melon. How many calories would this add up to and how well am I doing? Personally, I'm quite happy. Thank you.", 'I have not done amazing but how is this? A small banana at 90 calories, 2 small handfuls of random sweets which I will cut down on even more, and one bowl of pasta pesto.  I may also have some fruit today.  How many calories do you think that would add up to?  \n\nThank you!', "I haven't tried amazingly hard yet, but are these o.k foods for losing weight? \nA small banana,90 calories. Two small handfuls of random sweets ( I will cut down in sweets!). A bowl of pesto. And the only other thing I might eat is some fruit, maybe melon. What will this end up being calorie wise? How good is it? I am personally quite happy about it! Thank you!!:)"]` - type: `<class 'list'>`
----> baseline_answer: `Okay, so I haven't been doing AMAZINGLY, but is this okay for weight loss? Had a small banana that's like 90 calories. Munched on a couple small handfuls of random sweets - BUT, I'm gonna cut down on the sweets, promise. Also had a bowl of pasta pesto. Might just have some fruit - melon, later on. Wondering how many calories this all adds up to and if it's kinda alright? I'm actually quite happy with this, thanks! :)` - type: `<class 'str'>`
 --> scores:  0.5844155844155845
----> per-field score: 0.5844155844155845
 --> Per-instance overall score: 0.5844155844155845
 --> Per-instance per-field breakdown: {'textarea': [0.43333333333333335, 0.2962962962962963, 0.43999999999999995, 0.36363636363636365, 0.44036697247706424, 0.43137254901960786, 0.5591397849462365, 0.48101265822784817, 0.5844155844155845]}
instance_id: 17687 <-> row_number: 12
 --> inputs: ['Q6MultiLineTextInput']
 --> Looking up gold labels from row index 12 of `input.csv` (unique inputs). 
 --> input labels: {'Q6MultiLineTextInput': ["Thanks for having courage to appeal Terri Schiavo's case to a higher court and standing up for her right to live. Most of all, thanks for valuing human life.", "I want to thank you, for valuing human life, for standing up for Terri Schiavo's right to live and having the courage to appeal her case to a higher court.", "Thank you for standing up for Terri Schiavo's right to live and appealing her case to a higher court."]}
 - - - - - -  starting a new element: `Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)` - - - - - -  
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
about to try executing one action, on the following input: Q6MultiLineTextInput
Executing one action: self.actions.modify_text('Q6MultiLineTextInput', "Hey, I really appreciate you standing up for Terri Schiavo's right to live. It's awesome that you're appealing her case to get it checked out by a higher court. It shows you really value human life. Thanks a bunch!")
Add text `Hey, I really appreciate you standing up for Terri Schiavo's right to live. It's awesome that you're appealing her case to get it checked out by a higher court. It shows you really value human life. Thanks a bunch!` to this text input: <textarea class="form-control" cols="120" name="Q6MultiLineTextInput" rows="5"></textarea>
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
 visible : ["Hey, I really appreciate you standing up for Terri Schiavo's right to live. It's awesome that you're appealing her case to get it checked out by a higher court. It shows you really value human life. Thanks a bunch!"]
 visible_values : ["Hey, I really appreciate you standing up for Terri Schiavo's right to live. It's awesome that you're appealing her case to get it checked out by a higher court. It shows you really value human life. Thanks a bunch!"]
 ------- evaluating input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`) ------- 
answers after mapping: `["Thanks for having courage to appeal Terri Schiavo's case to a higher court and standing up for her right to live. Most of all, thanks for valuing human life.", "I want to thank you, for valuing human life, for standing up for Terri Schiavo's right to live and having the courage to appeal her case to a higher court.", "Thank you for standing up for Terri Schiavo's right to live and appealing her case to a higher court."]`
----> answers: `["I want to thank you, for valuing human life, for standing up for Terri Schiavo's right to live and having the courage to appeal her case to a higher court.", "Thanks for having courage to appeal Terri Schiavo's case to a higher court and standing up for her right to live. Most of all, thanks for valuing human life.", "Thank you for standing up for Terri Schiavo's right to live and appealing her case to a higher court."]` - type: `<class 'list'>`
----> baseline_answer: `Hey, I really appreciate you standing up for Terri Schiavo's right to live. It's awesome that you're appealing her case to get it checked out by a higher court. It shows you really value human life. Thanks a bunch!` - type: `<class 'str'>`
 --> scores:  0.5483870967741935
----> per-field score: 0.5483870967741935
 --> Per-instance overall score: 0.5483870967741935
 --> Per-instance per-field breakdown: {'textarea': [0.43333333333333335, 0.2962962962962963, 0.43999999999999995, 0.36363636363636365, 0.44036697247706424, 0.43137254901960786, 0.5591397849462365, 0.48101265822784817, 0.5844155844155845, 0.5483870967741935]}
instance_id: 17689 <-> row_number: 14
 --> inputs: ['Q6MultiLineTextInput']
 --> Looking up gold labels from row index 14 of `input.csv` (unique inputs). 
 --> input labels: {'Q6MultiLineTextInput': ['The majority of us are selfish human beings. When this selfishness comes between two people, then it happens; what ever you have asked. As a result, I really have no issue with anyone because I am always just another person to them. Thank you.', 'A majority of us are selfish beings, so when this selfishness comes in between two, it happens. Whatever you have asked. So, I really have no problem with anyone because I always another person to them. Thanks.', "We're all selfish, you know?  Selfishness makes this stuff happen.  I don't have any problems with anyone.  I know that I'm always just another person to them.  Thanks."]}
 - - - - - -  starting a new element: `Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)` - - - - - -  
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
about to try executing one action, on the following input: Q6MultiLineTextInput
Executing one action: self.actions.modify_text('Q6MultiLineTextInput', "Most of us are kinda selfish, right? So, when that selfishness gets in the way between people, well, that's when stuff goes down... whatever you're asking about. So, honestly, I'm cool with everyone because to them, I'm just another person. Thanks!")
Add text `Most of us are kinda selfish, right? So, when that selfishness gets in the way between people, well, that's when stuff goes down... whatever you're asking about. So, honestly, I'm cool with everyone because to them, I'm just another person. Thanks!` to this text input: <textarea class="form-control" cols="120" name="Q6MultiLineTextInput" rows="5"></textarea>
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
 visible : ["Most of us are kinda selfish, right? So, when that selfishness gets in the way between people, well, that's when stuff goes down... whatever you're asking about. So, honestly, I'm cool with everyone because to them, I'm just another person. Thanks!"]
 visible_values : ["Most of us are kinda selfish, right? So, when that selfishness gets in the way between people, well, that's when stuff goes down... whatever you're asking about. So, honestly, I'm cool with everyone because to them, I'm just another person. Thanks!"]
 ------- evaluating input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`) ------- 
answers after mapping: `['The majority of us are selfish human beings. When this selfishness comes between two people, then it happens; what ever you have asked. As a result, I really have no issue with anyone because I am always just another person to them. Thank you.', 'A majority of us are selfish beings, so when this selfishness comes in between two, it happens. Whatever you have asked. So, I really have no problem with anyone because I always another person to them. Thanks.', "We're all selfish, you know?  Selfishness makes this stuff happen.  I don't have any problems with anyone.  I know that I'm always just another person to them.  Thanks."]`
----> answers: `['A majority of us are selfish beings, so when this selfishness comes in between two, it happens. Whatever you have asked. So, I really have no problem with anyone because I always another person to them. Thanks.', "We're all selfish, you know?  Selfishness makes this stuff happen.  I don't have any problems with anyone.  I know that I'm always just another person to them.  Thanks.", 'The majority of us are selfish human beings. When this selfishness comes between two people, then it happens; what ever you have asked. As a result, I really have no issue with anyone because I am always just another person to them. Thank you.']` - type: `<class 'list'>`
----> baseline_answer: `Most of us are kinda selfish, right? So, when that selfishness gets in the way between people, well, that's when stuff goes down... whatever you're asking about. So, honestly, I'm cool with everyone because to them, I'm just another person. Thanks!` - type: `<class 'str'>`
 --> scores:  0.4878048780487805
----> per-field score: 0.4878048780487805
 --> Per-instance overall score: 0.4878048780487805
 --> Per-instance per-field breakdown: {'textarea': [0.43333333333333335, 0.2962962962962963, 0.43999999999999995, 0.36363636363636365, 0.44036697247706424, 0.43137254901960786, 0.5591397849462365, 0.48101265822784817, 0.5844155844155845, 0.5483870967741935, 0.4878048780487805]}
instance_id: 17679 <-> row_number: 4
 --> inputs: ['Q6MultiLineTextInput']
 --> Looking up gold labels from row index 4 of `input.csv` (unique inputs). 
 --> input labels: {'Q6MultiLineTextInput': ['I\'m no genius politician but I think the phrase "When the citizens fail, the government fails" is very real. It means there aren\'t enough jobs and the economy is hit pretty hard, then we\'re faced with the Great Depression all over again. It\'s up to our government whether they fall or not but our country might be taken over by an even stronger Super Power.', 'I don\'t really know a whole lot about politics, but I do believe in the saying, "When citizens fail, the government falls". It means when jobs are gone and the economy collapses we have another great depression. Our government chooses if the country falls and then our country would be taken over by another high powered country.', 'I am not an expert in politics; however, I do believe the following statement to be true: "When the citizens fail, the government also fails." Essentially, this means that when there is no longer any jobs and the economy begins to collapse, we will fall into another Great Depression. Ultimately, our government will need to decide and as a result, our country could be conquered by another power.']}
 - - - - - -  starting a new element: `Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)` - - - - - -  
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
about to try executing one action, on the following input: Q6MultiLineTextInput
Executing one action: self.actions.modify_text('Q6MultiLineTextInput', "I'm not a pro in politics stuff, but yeah, I think that's pretty much how it goes. Like, when folks are outta jobs, the economy's a mess, and everything's hitting rock bottom like in the old Great Depression times. That's when our government's gotta decide whether to hold up or just give in. If things go south, we might end up getting taken over by some other big-shot country.")
Add text `I'm not a pro in politics stuff, but yeah, I think that's pretty much how it goes. Like, when folks are outta jobs, the economy's a mess, and everything's hitting rock bottom like in the old Great Depression times. That's when our government's gotta decide whether to hold up or just give in. If things go south, we might end up getting taken over by some other big-shot country.` to this text input: <textarea class="form-control" cols="120" name="Q6MultiLineTextInput" rows="5"></textarea>
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
 visible : ["I'm not a pro in politics stuff, but yeah, I think that's pretty much how it goes. Like, when folks are outta jobs, the economy's a mess, and everything's hitting rock bottom like in the old Great Depression times. That's when our government's gotta decide whether to hold up or just give in. If things go south, we might end up getting taken over by some other big-shot country."]
 visible_values : ["I'm not a pro in politics stuff, but yeah, I think that's pretty much how it goes. Like, when folks are outta jobs, the economy's a mess, and everything's hitting rock bottom like in the old Great Depression times. That's when our government's gotta decide whether to hold up or just give in. If things go south, we might end up getting taken over by some other big-shot country."]
 ------- evaluating input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`) ------- 
answers after mapping: `['I\'m no genius politician but I think the phrase "When the citizens fail, the government fails" is very real. It means there aren\'t enough jobs and the economy is hit pretty hard, then we\'re faced with the Great Depression all over again. It\'s up to our government whether they fall or not but our country might be taken over by an even stronger Super Power.', 'I don\'t really know a whole lot about politics, but I do believe in the saying, "When citizens fail, the government falls". It means when jobs are gone and the economy collapses we have another great depression. Our government chooses if the country falls and then our country would be taken over by another high powered country.', 'I am not an expert in politics; however, I do believe the following statement to be true: "When the citizens fail, the government also fails." Essentially, this means that when there is no longer any jobs and the economy begins to collapse, we will fall into another Great Depression. Ultimately, our government will need to decide and as a result, our country could be conquered by another power.']`
----> answers: `['I\'m no genius politician but I think the phrase "When the citizens fail, the government fails" is very real. It means there aren\'t enough jobs and the economy is hit pretty hard, then we\'re faced with the Great Depression all over again. It\'s up to our government whether they fall or not but our country might be taken over by an even stronger Super Power.', 'I am not an expert in politics; however, I do believe the following statement to be true: "When the citizens fail, the government also fails." Essentially, this means that when there is no longer any jobs and the economy begins to collapse, we will fall into another Great Depression. Ultimately, our government will need to decide and as a result, our country could be conquered by another power.', 'I don\'t really know a whole lot about politics, but I do believe in the saying, "When citizens fail, the government falls". It means when jobs are gone and the economy collapses we have another great depression. Our government chooses if the country falls and then our country would be taken over by another high powered country.']` - type: `<class 'list'>`
----> baseline_answer: `I'm not a pro in politics stuff, but yeah, I think that's pretty much how it goes. Like, when folks are outta jobs, the economy's a mess, and everything's hitting rock bottom like in the old Great Depression times. That's when our government's gotta decide whether to hold up or just give in. If things go south, we might end up getting taken over by some other big-shot country.` - type: `<class 'str'>`
 --> scores:  0.30344827586206896
----> per-field score: 0.30344827586206896
 --> Per-instance overall score: 0.30344827586206896
 --> Per-instance per-field breakdown: {'textarea': [0.43333333333333335, 0.2962962962962963, 0.43999999999999995, 0.36363636363636365, 0.44036697247706424, 0.43137254901960786, 0.5591397849462365, 0.48101265822784817, 0.5844155844155845, 0.5483870967741935, 0.4878048780487805, 0.30344827586206896]}
instance_id: 17685 <-> row_number: 10
 --> inputs: ['Q6MultiLineTextInput']
 --> Looking up gold labels from row index 10 of `input.csv` (unique inputs). 
 --> input labels: {'Q6MultiLineTextInput': ["Is it possible for me to obtain the white owl from Harry Potter?  IT is named 'Hedwig' and I want it as a pet here in the UK.  I am also interested in the white dove.  How much would each cost?", 'I live in the United Kingdom and I am in love with the white owl in Harry Potter, Hedwig. I would like to have one as a pet; however, I wonder if will be possible to obtain such an owl. If only I knew how much one would cost, I would be interested in purchasing one. Yet, I am also interested in purchasing a white dove, as well.', 'I love that white owl Harry Potter has, Hedwig, and I live n the UK.  I wonder how much it would cost to get one like Hedwig as pet because I want an owl as a pet.  I am also interested in a white dove as a pet.']}
 - - - - - -  starting a new element: `Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)` - - - - - -  
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
about to try executing one action, on the following input: Q6MultiLineTextInput
Executing one action: self.actions.modify_text('Q6MultiLineTextInput', "I'm living in the UK and totally in love with that white owl (Hedwig) from Harry Potter. Really wanna keep one as my pet. Any idea if you can actually get one? Also, what's the price tag on it? Oh, and I'm kinda into that white dove too.")
Add text `I'm living in the UK and totally in love with that white owl (Hedwig) from Harry Potter. Really wanna keep one as my pet. Any idea if you can actually get one? Also, what's the price tag on it? Oh, and I'm kinda into that white dove too.` to this text input: <textarea class="form-control" cols="120" name="Q6MultiLineTextInput" rows="5"></textarea>
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
 visible : ["I'm living in the UK and totally in love with that white owl (Hedwig) from Harry Potter. Really wanna keep one as my pet. Any idea if you can actually get one? Also, what's the price tag on it? Oh, and I'm kinda into that white dove too."]
 visible_values : ["I'm living in the UK and totally in love with that white owl (Hedwig) from Harry Potter. Really wanna keep one as my pet. Any idea if you can actually get one? Also, what's the price tag on it? Oh, and I'm kinda into that white dove too."]
 ------- evaluating input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`) ------- 
answers after mapping: `["Is it possible for me to obtain the white owl from Harry Potter?  IT is named 'Hedwig' and I want it as a pet here in the UK.  I am also interested in the white dove.  How much would each cost?", 'I live in the United Kingdom and I am in love with the white owl in Harry Potter, Hedwig. I would like to have one as a pet; however, I wonder if will be possible to obtain such an owl. If only I knew how much one would cost, I would be interested in purchasing one. Yet, I am also interested in purchasing a white dove, as well.', 'I love that white owl Harry Potter has, Hedwig, and I live n the UK.  I wonder how much it would cost to get one like Hedwig as pet because I want an owl as a pet.  I am also interested in a white dove as a pet.']`
----> answers: `['I live in the United Kingdom and I am in love with the white owl in Harry Potter, Hedwig. I would like to have one as a pet; however, I wonder if will be possible to obtain such an owl. If only I knew how much one would cost, I would be interested in purchasing one. Yet, I am also interested in purchasing a white dove, as well.', "Is it possible for me to obtain the white owl from Harry Potter?  IT is named 'Hedwig' and I want it as a pet here in the UK.  I am also interested in the white dove.  How much would each cost?", 'I love that white owl Harry Potter has, Hedwig, and I live n the UK.  I wonder how much it would cost to get one like Hedwig as pet because I want an owl as a pet.  I am also interested in a white dove as a pet.']` - type: `<class 'list'>`
----> baseline_answer: `I'm living in the UK and totally in love with that white owl (Hedwig) from Harry Potter. Really wanna keep one as my pet. Any idea if you can actually get one? Also, what's the price tag on it? Oh, and I'm kinda into that white dove too.` - type: `<class 'str'>`
 --> scores:  0.3361344537815126
----> per-field score: 0.3361344537815126
 --> Per-instance overall score: 0.3361344537815126
 --> Per-instance per-field breakdown: {'textarea': [0.43333333333333335, 0.2962962962962963, 0.43999999999999995, 0.36363636363636365, 0.44036697247706424, 0.43137254901960786, 0.5591397849462365, 0.48101265822784817, 0.5844155844155845, 0.5483870967741935, 0.4878048780487805, 0.30344827586206896, 0.3361344537815126]}
instance_id: 17692 <-> row_number: 17
 --> inputs: ['Q6MultiLineTextInput']
 --> Looking up gold labels from row index 17 of `input.csv` (unique inputs). 
 --> input labels: {'Q6MultiLineTextInput': ['In order to better assist you, we have forwarded your comments to Bob Crawford, Commissioner of Agriculture and Consumer Services.  If you would like to contact him directly, please feel free to call the toll-free number at 1-800-435-7352.', 'Hello,\n\nTo better assist you we are going to share your comment with Bob Crawford, our commissioner of Agriculture and Consumer Service. If you would like to reach him you can call him toll-free at 1-800-435-7352.\n\nHave a great day', 'In order to better assist you, we will be sharing your comments with Bob Crawford, Commissioner of Agriculture and Consumer Services. If you wish to call his office, the toll-free telephone number is 1-800-435-7352.']}
 - - - - - -  starting a new element: `Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)` - - - - - -  
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
about to try executing one action, on the following input: Q6MultiLineTextInput
Executing one action: self.actions.modify_text('Q6MultiLineTextInput', 'To enhance our support, your feedback has been forwarded to Mr. Bob Crawford, Commissioner of Agriculture and Consumer Services. Should you wish to contact his office directly, please use the toll-free number 1-800-435-7352.')
Add text `To enhance our support, your feedback has been forwarded to Mr. Bob Crawford, Commissioner of Agriculture and Consumer Services. Should you wish to contact his office directly, please use the toll-free number 1-800-435-7352.` to this text input: <textarea class="form-control" cols="120" name="Q6MultiLineTextInput" rows="5"></textarea>
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
 visible : ['To enhance our support, your feedback has been forwarded to Mr. Bob Crawford, Commissioner of Agriculture and Consumer Services. Should you wish to contact his office directly, please use the toll-free number 1-800-435-7352.']
 visible_values : ['To enhance our support, your feedback has been forwarded to Mr. Bob Crawford, Commissioner of Agriculture and Consumer Services. Should you wish to contact his office directly, please use the toll-free number 1-800-435-7352.']
 ------- evaluating input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`) ------- 
answers after mapping: `['In order to better assist you, we have forwarded your comments to Bob Crawford, Commissioner of Agriculture and Consumer Services.  If you would like to contact him directly, please feel free to call the toll-free number at 1-800-435-7352.', 'Hello,\n\nTo better assist you we are going to share your comment with Bob Crawford, our commissioner of Agriculture and Consumer Service. If you would like to reach him you can call him toll-free at 1-800-435-7352.\n\nHave a great day', 'In order to better assist you, we will be sharing your comments with Bob Crawford, Commissioner of Agriculture and Consumer Services. If you wish to call his office, the toll-free telephone number is 1-800-435-7352.']`
----> answers: `['In order to better assist you, we will be sharing your comments with Bob Crawford, Commissioner of Agriculture and Consumer Services. If you wish to call his office, the toll-free telephone number is 1-800-435-7352.', 'In order to better assist you, we have forwarded your comments to Bob Crawford, Commissioner of Agriculture and Consumer Services.  If you would like to contact him directly, please feel free to call the toll-free number at 1-800-435-7352.', 'Hello,\n\nTo better assist you we are going to share your comment with Bob Crawford, our commissioner of Agriculture and Consumer Service. If you would like to reach him you can call him toll-free at 1-800-435-7352.\n\nHave a great day']` - type: `<class 'list'>`
----> baseline_answer: `To enhance our support, your feedback has been forwarded to Mr. Bob Crawford, Commissioner of Agriculture and Consumer Services. Should you wish to contact his office directly, please use the toll-free number 1-800-435-7352.` - type: `<class 'str'>`
 --> scores:  0.6133333333333333
----> per-field score: 0.6133333333333333
 --> Per-instance overall score: 0.6133333333333333
 --> Per-instance per-field breakdown: {'textarea': [0.43333333333333335, 0.2962962962962963, 0.43999999999999995, 0.36363636363636365, 0.44036697247706424, 0.43137254901960786, 0.5591397849462365, 0.48101265822784817, 0.5844155844155845, 0.5483870967741935, 0.4878048780487805, 0.30344827586206896, 0.3361344537815126, 0.6133333333333333]}
instance_id: 17684 <-> row_number: 9
 --> inputs: ['Q6MultiLineTextInput']
 --> Looking up gold labels from row index 9 of `input.csv` (unique inputs). 
 --> input labels: {'Q6MultiLineTextInput': ["She smiles with her eyes. Her attitude and personality are sweet, tender, and kind. She is laid back, smart, and reserved. She is aware of her own thoughts, and is not afraid to make decisions. She doesn't need approval from anyone, and lives her life exactly as she wants to live it, as I do. This is why I stayed when I found her. That, in addition to her sweet disposition and her gorgeous eyes. I was initially drawn to her eyes, I think. Everything else, I discovered later.", 'Her eyes smile with a personality.  She is sweet, tender, kind, reserved and laid back.  She is smart and has no trouble making her own decisions, living her life as she wishes.  That is what draws me in: the beautiful eyes, her smile, and the sweet personality.  I believe the attraction comes from the eyes, and then everything else comes in later.', 'Her eyes show her attitude.  Her personality is sweet, tender and kind.  She is reserved and laid back.  She is smart and knows her own mind.  She can make decision of her own and she needs no ones permission to live her life the way she chooses.  All of these things keeps me there.  She has a beautiful smile and a sweet personality.  The attraction that I feel from her eyes is what I observed later.']}
 - - - - - -  starting a new element: `Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)` - - - - - -  
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
about to try executing one action, on the following input: Q6MultiLineTextInput
Executing one action: self.actions.modify_text('Q6MultiLineTextInput', "The most captivating aspects of her involve not only her beautiful eyes and smile but, most importantly, her personality. She possesses a sweet, tender, and kind demeanor; she is reserved and laid-back yet intelligent. She is well-capable of making her own decisions without the need for anyone's consent, living her life in a manner she sees fit, much like myself. This realization, once discovered, is what compels me to stay. Initially, the attraction may stem from her eyes, but everything else is taken into account subsequently.")
Add text `The most captivating aspects of her involve not only her beautiful eyes and smile but, most importantly, her personality. She possesses a sweet, tender, and kind demeanor; she is reserved and laid-back yet intelligent. She is well-capable of making her own decisions without the need for anyone's consent, living her life in a manner she sees fit, much like myself. This realization, once discovered, is what compels me to stay. Initially, the attraction may stem from her eyes, but everything else is taken into account subsequently.` to this text input: <textarea class="form-control" cols="120" name="Q6MultiLineTextInput" rows="5"></textarea>
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
 visible : ["The most captivating aspects of her involve not only her beautiful eyes and smile but, most importantly, her personality. She possesses a sweet, tender, and kind demeanor; she is reserved and laid-back yet intelligent. She is well-capable of making her own decisions without the need for anyone's consent, living her life in a manner she sees fit, much like myself. This realization, once discovered, is what compels me to stay. Initially, the attraction may stem from her eyes, but everything else is taken into account subsequently."]
 visible_values : ["The most captivating aspects of her involve not only her beautiful eyes and smile but, most importantly, her personality. She possesses a sweet, tender, and kind demeanor; she is reserved and laid-back yet intelligent. She is well-capable of making her own decisions without the need for anyone's consent, living her life in a manner she sees fit, much like myself. This realization, once discovered, is what compels me to stay. Initially, the attraction may stem from her eyes, but everything else is taken into account subsequently."]
 ------- evaluating input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`) ------- 
answers after mapping: `["She smiles with her eyes. Her attitude and personality are sweet, tender, and kind. She is laid back, smart, and reserved. She is aware of her own thoughts, and is not afraid to make decisions. She doesn't need approval from anyone, and lives her life exactly as she wants to live it, as I do. This is why I stayed when I found her. That, in addition to her sweet disposition and her gorgeous eyes. I was initially drawn to her eyes, I think. Everything else, I discovered later.", 'Her eyes smile with a personality.  She is sweet, tender, kind, reserved and laid back.  She is smart and has no trouble making her own decisions, living her life as she wishes.  That is what draws me in: the beautiful eyes, her smile, and the sweet personality.  I believe the attraction comes from the eyes, and then everything else comes in later.', 'Her eyes show her attitude.  Her personality is sweet, tender and kind.  She is reserved and laid back.  She is smart and knows her own mind.  She can make decision of her own and she needs no ones permission to live her life the way she chooses.  All of these things keeps me there.  She has a beautiful smile and a sweet personality.  The attraction that I feel from her eyes is what I observed later.']`
----> answers: `["She smiles with her eyes. Her attitude and personality are sweet, tender, and kind. She is laid back, smart, and reserved. She is aware of her own thoughts, and is not afraid to make decisions. She doesn't need approval from anyone, and lives her life exactly as she wants to live it, as I do. This is why I stayed when I found her. That, in addition to her sweet disposition and her gorgeous eyes. I was initially drawn to her eyes, I think. Everything else, I discovered later.", 'Her eyes show her attitude.  Her personality is sweet, tender and kind.  She is reserved and laid back.  She is smart and knows her own mind.  She can make decision of her own and she needs no ones permission to live her life the way she chooses.  All of these things keeps me there.  She has a beautiful smile and a sweet personality.  The attraction that I feel from her eyes is what I observed later.', 'Her eyes smile with a personality.  She is sweet, tender, kind, reserved and laid back.  She is smart and has no trouble making her own decisions, living her life as she wishes.  That is what draws me in: the beautiful eyes, her smile, and the sweet personality.  I believe the attraction comes from the eyes, and then everything else comes in later.']` - type: `<class 'list'>`
----> baseline_answer: `The most captivating aspects of her involve not only her beautiful eyes and smile but, most importantly, her personality. She possesses a sweet, tender, and kind demeanor; she is reserved and laid-back yet intelligent. She is well-capable of making her own decisions without the need for anyone's consent, living her life in a manner she sees fit, much like myself. This realization, once discovered, is what compels me to stay. Initially, the attraction may stem from her eyes, but everything else is taken into account subsequently.` - type: `<class 'str'>`
 --> scores:  0.41059602649006627
----> per-field score: 0.41059602649006627
 --> Per-instance overall score: 0.41059602649006627
 --> Per-instance per-field breakdown: {'textarea': [0.43333333333333335, 0.2962962962962963, 0.43999999999999995, 0.36363636363636365, 0.44036697247706424, 0.43137254901960786, 0.5591397849462365, 0.48101265822784817, 0.5844155844155845, 0.5483870967741935, 0.4878048780487805, 0.30344827586206896, 0.3361344537815126, 0.6133333333333333, 0.41059602649006627]}
instance_id: 17690 <-> row_number: 15
 --> inputs: ['Q6MultiLineTextInput']
 --> Looking up gold labels from row index 15 of `input.csv` (unique inputs). 
 --> input labels: {'Q6MultiLineTextInput': ['We, the majority of us, are selfish beings. When selfishness comes in between the two, that\'s when it happens, whatever you may have asked. I really have no problems with one because I am always the "other" person to them. Thank you.', 'The majority of us are selfish human beings, so when this selfishness comes between two people, then it happens; what ever you have asked. As a result, I really have no issues with anyone, simply because I am always another person to them. Thank you.', 'The majority of us are selfish by default, so when selfishness comes between the two of them, this is what happens. This is why I really have low expectations of people. I know they see me as just another person. Thank you.']}
 - - - - - -  starting a new element: `Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)` - - - - - -  
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
about to try executing one action, on the following input: Q6MultiLineTextInput
Executing one action: self.actions.modify_text('Q6MultiLineTextInput', 'The majority of individuals can exhibit selfish tendencies. Consequently, when such selfishness interferes in mutual relationships, it leads to the scenarios you have inquired about. Therefore, I seldom encounter difficulties with others since I often find myself in the role of an outsider to them. Thank you.')
Add text `The majority of individuals can exhibit selfish tendencies. Consequently, when such selfishness interferes in mutual relationships, it leads to the scenarios you have inquired about. Therefore, I seldom encounter difficulties with others since I often find myself in the role of an outsider to them. Thank you.` to this text input: <textarea class="form-control" cols="120" name="Q6MultiLineTextInput" rows="5"></textarea>
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
 visible : ['The majority of individuals can exhibit selfish tendencies. Consequently, when such selfishness interferes in mutual relationships, it leads to the scenarios you have inquired about. Therefore, I seldom encounter difficulties with others since I often find myself in the role of an outsider to them. Thank you.']
 visible_values : ['The majority of individuals can exhibit selfish tendencies. Consequently, when such selfishness interferes in mutual relationships, it leads to the scenarios you have inquired about. Therefore, I seldom encounter difficulties with others since I often find myself in the role of an outsider to them. Thank you.']
 ------- evaluating input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`) ------- 
answers after mapping: `['We, the majority of us, are selfish beings. When selfishness comes in between the two, that\'s when it happens, whatever you may have asked. I really have no problems with one because I am always the "other" person to them. Thank you.', 'The majority of us are selfish human beings, so when this selfishness comes between two people, then it happens; what ever you have asked. As a result, I really have no issues with anyone, simply because I am always another person to them. Thank you.', 'The majority of us are selfish by default, so when selfishness comes between the two of them, this is what happens. This is why I really have low expectations of people. I know they see me as just another person. Thank you.']`
----> answers: `['We, the majority of us, are selfish beings. When selfishness comes in between the two, that\'s when it happens, whatever you may have asked. I really have no problems with one because I am always the "other" person to them. Thank you.', 'The majority of us are selfish by default, so when selfishness comes between the two of them, this is what happens. This is why I really have low expectations of people. I know they see me as just another person. Thank you.', 'The majority of us are selfish human beings, so when this selfishness comes between two people, then it happens; what ever you have asked. As a result, I really have no issues with anyone, simply because I am always another person to them. Thank you.']` - type: `<class 'list'>`
----> baseline_answer: `The majority of individuals can exhibit selfish tendencies. Consequently, when such selfishness interferes in mutual relationships, it leads to the scenarios you have inquired about. Therefore, I seldom encounter difficulties with others since I often find myself in the role of an outsider to them. Thank you.` - type: `<class 'str'>`
 --> scores:  0.4
----> per-field score: 0.4
 --> Per-instance overall score: 0.4
 --> Per-instance per-field breakdown: {'textarea': [0.43333333333333335, 0.2962962962962963, 0.43999999999999995, 0.36363636363636365, 0.44036697247706424, 0.43137254901960786, 0.5591397849462365, 0.48101265822784817, 0.5844155844155845, 0.5483870967741935, 0.4878048780487805, 0.30344827586206896, 0.3361344537815126, 0.6133333333333333, 0.41059602649006627, 0.4]}
instance_id: 17683 <-> row_number: 8
 --> inputs: ['Q6MultiLineTextInput']
 --> Looking up gold labels from row index 8 of `input.csv` (unique inputs). 
 --> input labels: {'Q6MultiLineTextInput': ["I think I'm in love!  She's sweet but smart and has the most beautiful eyes.  Those are what first reeled me in, her great personality is what keeps me.  She can make her own decisions and knows her own mind, but is incredibly sweet and laid back.", "Her eyes smile, but she speaks will attitude. Most of all, her personality is sweet , tender, kind, reserved, laid back, yet smart. She understands her own mind and she can make her own decisions; she needs no one's permission to live her life the way she chooses, unlike me. This is what keeps me there, once I have found the following traits; beautiful eyes, smile, and a sweet personality. I believe the attraction comes from the eyes mostly and all other traits are observed later on.", 'Eyes smile! Attitude most of all is her personality a sweet, tender, kind reserved laid back but yet smart, knows her own mind, can make decisions of her own and needs no ones permission to live her life the way she chooses!  Rather like I do.   How she speaks that is what keeps me there once i found the above , beautiful eyes smile and sweet personality but the attraction come from the eyes I think mostly and all else is observed later.']}
 - - - - - -  starting a new element: `Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)` - - - - - -  
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
about to try executing one action, on the following input: Q6MultiLineTextInput
Executing one action: self.actions.modify_text('Q6MultiLineTextInput', "You know what really grabs me? The way her eyes light up and her smile and, yeah, the vibe she gives off. It's all about her personality for me—she's got this sweet, relaxed yet intelligent aura that's just so attractive. She's got her own mind, makes her own choices, and doesn't need anyone's okay to live life her way—pretty much how I roll too. Once I see that in someone, combined with those captivating eyes and that smile, I'm hooked. It's like the eyes draw you in first, and then you start noticing everything else.")
Add text `You know what really grabs me? The way her eyes light up and her smile and, yeah, the vibe she gives off. It's all about her personality for me—she's got this sweet, relaxed yet intelligent aura that's just so attractive. She's got her own mind, makes her own choices, and doesn't need anyone's okay to live life her way—pretty much how I roll too. Once I see that in someone, combined with those captivating eyes and that smile, I'm hooked. It's like the eyes draw you in first, and then you start noticing everything else.` to this text input: <textarea class="form-control" cols="120" name="Q6MultiLineTextInput" rows="5"></textarea>
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
 visible : ["You know what really grabs me? The way her eyes light up and her smile and, yeah, the vibe she gives off. It's all about her personality for me—she's got this sweet, relaxed yet intelligent aura that's just so attractive. She's got her own mind, makes her own choices, and doesn't need anyone's okay to live life her way—pretty much how I roll too. Once I see that in someone, combined with those captivating eyes and that smile, I'm hooked. It's like the eyes draw you in first, and then you start noticing everything else."]
 visible_values : ["You know what really grabs me? The way her eyes light up and her smile and, yeah, the vibe she gives off. It's all about her personality for me—she's got this sweet, relaxed yet intelligent aura that's just so attractive. She's got her own mind, makes her own choices, and doesn't need anyone's okay to live life her way—pretty much how I roll too. Once I see that in someone, combined with those captivating eyes and that smile, I'm hooked. It's like the eyes draw you in first, and then you start noticing everything else."]
 ------- evaluating input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`) ------- 
answers after mapping: `["I think I'm in love!  She's sweet but smart and has the most beautiful eyes.  Those are what first reeled me in, her great personality is what keeps me.  She can make her own decisions and knows her own mind, but is incredibly sweet and laid back.", "Her eyes smile, but she speaks will attitude. Most of all, her personality is sweet , tender, kind, reserved, laid back, yet smart. She understands her own mind and she can make her own decisions; she needs no one's permission to live her life the way she chooses, unlike me. This is what keeps me there, once I have found the following traits; beautiful eyes, smile, and a sweet personality. I believe the attraction comes from the eyes mostly and all other traits are observed later on.", 'Eyes smile! Attitude most of all is her personality a sweet, tender, kind reserved laid back but yet smart, knows her own mind, can make decisions of her own and needs no ones permission to live her life the way she chooses!  Rather like I do.   How she speaks that is what keeps me there once i found the above , beautiful eyes smile and sweet personality but the attraction come from the eyes I think mostly and all else is observed later.']`
----> answers: `["I think I'm in love!  She's sweet but smart and has the most beautiful eyes.  Those are what first reeled me in, her great personality is what keeps me.  She can make her own decisions and knows her own mind, but is incredibly sweet and laid back.", "Her eyes smile, but she speaks will attitude. Most of all, her personality is sweet , tender, kind, reserved, laid back, yet smart. She understands her own mind and she can make her own decisions; she needs no one's permission to live her life the way she chooses, unlike me. This is what keeps me there, once I have found the following traits; beautiful eyes, smile, and a sweet personality. I believe the attraction comes from the eyes mostly and all other traits are observed later on.", 'Eyes smile! Attitude most of all is her personality a sweet, tender, kind reserved laid back but yet smart, knows her own mind, can make decisions of her own and needs no ones permission to live her life the way she chooses!  Rather like I do.   How she speaks that is what keeps me there once i found the above , beautiful eyes smile and sweet personality but the attraction come from the eyes I think mostly and all else is observed later.']` - type: `<class 'list'>`
----> baseline_answer: `You know what really grabs me? The way her eyes light up and her smile and, yeah, the vibe she gives off. It's all about her personality for me—she's got this sweet, relaxed yet intelligent aura that's just so attractive. She's got her own mind, makes her own choices, and doesn't need anyone's okay to live life her way—pretty much how I roll too. Once I see that in someone, combined with those captivating eyes and that smile, I'm hooked. It's like the eyes draw you in first, and then you start noticing everything else.` - type: `<class 'str'>`
 --> scores:  0.3125
----> per-field score: 0.3125
 --> Per-instance overall score: 0.3125
 --> Per-instance per-field breakdown: {'textarea': [0.43333333333333335, 0.2962962962962963, 0.43999999999999995, 0.36363636363636365, 0.44036697247706424, 0.43137254901960786, 0.5591397849462365, 0.48101265822784817, 0.5844155844155845, 0.5483870967741935, 0.4878048780487805, 0.30344827586206896, 0.3361344537815126, 0.6133333333333333, 0.41059602649006627, 0.4, 0.3125]}
instance_id: 17694 <-> row_number: 19
 --> inputs: ['Q6MultiLineTextInput']
 --> Looking up gold labels from row index 19 of `input.csv` (unique inputs). 
 --> input labels: {'Q6MultiLineTextInput': ['How many calories do you think 1 small banana, 2 handfuls of sweets, and 1 bowl of pesto pasta sums to? Do you think this mixture of foods for the day is good for my diet?', 'There is a question of concern regarding weight loss.  Is one 90 calorie banana, two handfuls of sweets, one bowl of pesto pasta, and possibly fruit acceptable?  What is the total calorie count, and how would these foods rate with regards to my nutrition plan?  Also please note I plan to limit my sweets.  I am happy, thank you.', "Okay, so I have not done an amazing job, but is this okay for weight loss, one small banana (90 calories), two small handfuls of random sweets (I will cut down on the sweets), one bowl of pesto pasta? The only only thing that I may have today is some melon. How many calories does this add up to and how am I doing? Personally, I'm quite happy. Thank you."]}
 - - - - - -  starting a new element: `Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)` - - - - - -  
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
about to try executing one action, on the following input: Q6MultiLineTextInput
Executing one action: self.actions.modify_text('Q6MultiLineTextInput', "I haven't achieved outstanding results, but would this be considered acceptable for weight loss? Consumed items include: one small banana equating to 90 calories, two modest portions of assorted confectionery - I intend to reduce candy consumption, a serving of pasta with pesto sauce. The only additional consumption anticipated today is fruit, specifically melon. Could you provide an estimation of the total calorie count and evaluate the adequacy of this dietary intake? I am personally quite satisfied. Thank you.")
Add text `I haven't achieved outstanding results, but would this be considered acceptable for weight loss? Consumed items include: one small banana equating to 90 calories, two modest portions of assorted confectionery - I intend to reduce candy consumption, a serving of pasta with pesto sauce. The only additional consumption anticipated today is fruit, specifically melon. Could you provide an estimation of the total calorie count and evaluate the adequacy of this dietary intake? I am personally quite satisfied. Thank you.` to this text input: <textarea class="form-control" cols="120" name="Q6MultiLineTextInput" rows="5"></textarea>
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
 visible : ["I haven't achieved outstanding results, but would this be considered acceptable for weight loss? Consumed items include: one small banana equating to 90 calories, two modest portions of assorted confectionery - I intend to reduce candy consumption, a serving of pasta with pesto sauce. The only additional consumption anticipated today is fruit, specifically melon. Could you provide an estimation of the total calorie count and evaluate the adequacy of this dietary intake? I am personally quite satisfied. Thank you."]
 visible_values : ["I haven't achieved outstanding results, but would this be considered acceptable for weight loss? Consumed items include: one small banana equating to 90 calories, two modest portions of assorted confectionery - I intend to reduce candy consumption, a serving of pasta with pesto sauce. The only additional consumption anticipated today is fruit, specifically melon. Could you provide an estimation of the total calorie count and evaluate the adequacy of this dietary intake? I am personally quite satisfied. Thank you."]
 ------- evaluating input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`) ------- 
answers after mapping: `['How many calories do you think 1 small banana, 2 handfuls of sweets, and 1 bowl of pesto pasta sums to? Do you think this mixture of foods for the day is good for my diet?', 'There is a question of concern regarding weight loss.  Is one 90 calorie banana, two handfuls of sweets, one bowl of pesto pasta, and possibly fruit acceptable?  What is the total calorie count, and how would these foods rate with regards to my nutrition plan?  Also please note I plan to limit my sweets.  I am happy, thank you.', "Okay, so I have not done an amazing job, but is this okay for weight loss, one small banana (90 calories), two small handfuls of random sweets (I will cut down on the sweets), one bowl of pesto pasta? The only only thing that I may have today is some melon. How many calories does this add up to and how am I doing? Personally, I'm quite happy. Thank you."]`
----> answers: `['How many calories do you think 1 small banana, 2 handfuls of sweets, and 1 bowl of pesto pasta sums to? Do you think this mixture of foods for the day is good for my diet?', 'There is a question of concern regarding weight loss.  Is one 90 calorie banana, two handfuls of sweets, one bowl of pesto pasta, and possibly fruit acceptable?  What is the total calorie count, and how would these foods rate with regards to my nutrition plan?  Also please note I plan to limit my sweets.  I am happy, thank you.', "Okay, so I have not done an amazing job, but is this okay for weight loss, one small banana (90 calories), two small handfuls of random sweets (I will cut down on the sweets), one bowl of pesto pasta? The only only thing that I may have today is some melon. How many calories does this add up to and how am I doing? Personally, I'm quite happy. Thank you."]` - type: `<class 'list'>`
----> baseline_answer: `I haven't achieved outstanding results, but would this be considered acceptable for weight loss? Consumed items include: one small banana equating to 90 calories, two modest portions of assorted confectionery - I intend to reduce candy consumption, a serving of pasta with pesto sauce. The only additional consumption anticipated today is fruit, specifically melon. Could you provide an estimation of the total calorie count and evaluate the adequacy of this dietary intake? I am personally quite satisfied. Thank you.` - type: `<class 'str'>`
 --> scores:  0.3733333333333333
----> per-field score: 0.3733333333333333
 --> Per-instance overall score: 0.3733333333333333
 --> Per-instance per-field breakdown: {'textarea': [0.43333333333333335, 0.2962962962962963, 0.43999999999999995, 0.36363636363636365, 0.44036697247706424, 0.43137254901960786, 0.5591397849462365, 0.48101265822784817, 0.5844155844155845, 0.5483870967741935, 0.4878048780487805, 0.30344827586206896, 0.3361344537815126, 0.6133333333333333, 0.41059602649006627, 0.4, 0.3125, 0.3733333333333333]}
instance_id: 17678 <-> row_number: 3
 --> inputs: ['Q6MultiLineTextInput']
 --> Looking up gold labels from row index 3 of `input.csv` (unique inputs). 
 --> input labels: {'Q6MultiLineTextInput': ['The health care system in Florida is in crisis. Children in Florida are without health insurance at a rate of 17 percent and tens of thousands are waiting for affordable health care. Help is urgently needed. Thank you.', "There is a crisis in Florida's health care system. More that 17% of Florida's children are without health care and tens of thousands more are on waiting list for affordable care. These children desperately need our immediate help.", "Greetings,\n\nMore than 17& of children in Florida do not have health insurance.  In addition there tens of thousands of people waiting for affordable health insurance.  Florida's health care system is currently in crisis and we need your help.\n\nThank you for reading"]}
 - - - - - -  starting a new element: `Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)` - - - - - -  
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
about to try executing one action, on the following input: Q6MultiLineTextInput
Executing one action: self.actions.modify_text('Q6MultiLineTextInput', "Florida's healthcare system is currently facing a significant crisis. At present, over 17 percent of children in the state do not have health insurance coverage, and a substantial number are on waiting lists for access to affordable healthcare services. It is imperative that we take immediate action to address their needs.")
Add text `Florida's healthcare system is currently facing a significant crisis. At present, over 17 percent of children in the state do not have health insurance coverage, and a substantial number are on waiting lists for access to affordable healthcare services. It is imperative that we take immediate action to address their needs.` to this text input: <textarea class="form-control" cols="120" name="Q6MultiLineTextInput" rows="5"></textarea>
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
 visible : ["Florida's healthcare system is currently facing a significant crisis. At present, over 17 percent of children in the state do not have health insurance coverage, and a substantial number are on waiting lists for access to affordable healthcare services. It is imperative that we take immediate action to address their needs."]
 visible_values : ["Florida's healthcare system is currently facing a significant crisis. At present, over 17 percent of children in the state do not have health insurance coverage, and a substantial number are on waiting lists for access to affordable healthcare services. It is imperative that we take immediate action to address their needs."]
 ------- evaluating input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`) ------- 
answers after mapping: `['The health care system in Florida is in crisis. Children in Florida are without health insurance at a rate of 17 percent and tens of thousands are waiting for affordable health care. Help is urgently needed. Thank you.', "There is a crisis in Florida's health care system. More that 17% of Florida's children are without health care and tens of thousands more are on waiting list for affordable care. These children desperately need our immediate help.", "Greetings,\n\nMore than 17& of children in Florida do not have health insurance.  In addition there tens of thousands of people waiting for affordable health insurance.  Florida's health care system is currently in crisis and we need your help.\n\nThank you for reading"]`
----> answers: `['The health care system in Florida is in crisis. Children in Florida are without health insurance at a rate of 17 percent and tens of thousands are waiting for affordable health care. Help is urgently needed. Thank you.', "Greetings,\n\nMore than 17& of children in Florida do not have health insurance.  In addition there tens of thousands of people waiting for affordable health insurance.  Florida's health care system is currently in crisis and we need your help.\n\nThank you for reading", "There is a crisis in Florida's health care system. More that 17% of Florida's children are without health care and tens of thousands more are on waiting list for affordable care. These children desperately need our immediate help."]` - type: `<class 'list'>`
----> baseline_answer: `Florida's healthcare system is currently facing a significant crisis. At present, over 17 percent of children in the state do not have health insurance coverage, and a substantial number are on waiting lists for access to affordable healthcare services. It is imperative that we take immediate action to address their needs.` - type: `<class 'str'>`
 --> scores:  0.32608695652173914
----> per-field score: 0.32608695652173914
 --> Per-instance overall score: 0.32608695652173914
 --> Per-instance per-field breakdown: {'textarea': [0.43333333333333335, 0.2962962962962963, 0.43999999999999995, 0.36363636363636365, 0.44036697247706424, 0.43137254901960786, 0.5591397849462365, 0.48101265822784817, 0.5844155844155845, 0.5483870967741935, 0.4878048780487805, 0.30344827586206896, 0.3361344537815126, 0.6133333333333333, 0.41059602649006627, 0.4, 0.3125, 0.3733333333333333, 0.32608695652173914]}
instance_id: 17680 <-> row_number: 5
 --> inputs: ['Q6MultiLineTextInput']
 --> Looking up gold labels from row index 5 of `input.csv` (unique inputs). 
 --> input labels: {'Q6MultiLineTextInput': ['I believe that the statement "when the citizens fail, the government fails" means that another Great Depression can be caused by an unavailability of jobs and a weak economy. It is the government that will choose whether or not our country will fall and if our country will lose its spot as the world\'s superpower.', '"When citizens fail, the government fails." Although I am a simple citizen who has no expertise in politics, this quote encapsulates my feelings on the subject. If the economy collapses, leaving us all jobless and struggling with another Great depression, both the citizens and the government will have failed. If the government chooses to fall, our country will vanish, conquered by another high-powered country.', '"When the citizens fail, the government fails." I am not an expert in the field of politics; however, due to its meaning, I do believe that this statement to be true. This statement means that when there are no jobs and the economy collapses, we may fall into another Great Depression. This is our government\'s decision and that will determine whether or not our country will be conquered by another super powered country.']}
 - - - - - -  starting a new element: `Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)` - - - - - -  
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
about to try executing one action, on the following input: Q6MultiLineTextInput
Executing one action: self.actions.modify_text('Q6MultiLineTextInput', "While I am not a connoisseur in the domain of politics, I am inclined to affirm that the assertion holds merit, specifically in the context 'when the citizenry falters, the government falters.' This implies a scenario where employment opportunities cease to exist, leading to an economic downturn akin to the Great Depression. In such circumstances, the government faces the critical decision of succumbing to failure or not, which in turn, determines whether our nation falls prey to conquest by a more dominant power.")
Add text `While I am not a connoisseur in the domain of politics, I am inclined to affirm that the assertion holds merit, specifically in the context 'when the citizenry falters, the government falters.' This implies a scenario where employment opportunities cease to exist, leading to an economic downturn akin to the Great Depression. In such circumstances, the government faces the critical decision of succumbing to failure or not, which in turn, determines whether our nation falls prey to conquest by a more dominant power.` to this text input: <textarea class="form-control" cols="120" name="Q6MultiLineTextInput" rows="5"></textarea>
input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`)
 visible : ["While I am not a connoisseur in the domain of politics, I am inclined to affirm that the assertion holds merit, specifically in the context 'when the citizenry falters, the government falters.' This implies a scenario where employment opportunities cease to exist, leading to an economic downturn akin to the Great Depression. In such circumstances, the government faces the critical decision of succumbing to failure or not, which in turn, determines whether our nation falls prey to conquest by a more dominant power."]
 visible_values : ["While I am not a connoisseur in the domain of politics, I am inclined to affirm that the assertion holds merit, specifically in the context 'when the citizenry falters, the government falters.' This implies a scenario where employment opportunities cease to exist, leading to an economic downturn akin to the Great Depression. In such circumstances, the government faces the critical decision of succumbing to failure or not, which in turn, determines whether our nation falls prey to conquest by a more dominant power."]
 ------- evaluating input: Input(name=`Q6MultiLineTextInput`, type=`textarea`, task=`Formalize this`) ------- 
answers after mapping: `['I believe that the statement "when the citizens fail, the government fails" means that another Great Depression can be caused by an unavailability of jobs and a weak economy. It is the government that will choose whether or not our country will fall and if our country will lose its spot as the world\'s superpower.', '"When citizens fail, the government fails." Although I am a simple citizen who has no expertise in politics, this quote encapsulates my feelings on the subject. If the economy collapses, leaving us all jobless and struggling with another Great depression, both the citizens and the government will have failed. If the government chooses to fall, our country will vanish, conquered by another high-powered country.', '"When the citizens fail, the government fails." I am not an expert in the field of politics; however, due to its meaning, I do believe that this statement to be true. This statement means that when there are no jobs and the economy collapses, we may fall into another Great Depression. This is our government\'s decision and that will determine whether or not our country will be conquered by another super powered country.']`
----> answers: `['"When the citizens fail, the government fails." I am not an expert in the field of politics; however, due to its meaning, I do believe that this statement to be true. This statement means that when there are no jobs and the economy collapses, we may fall into another Great Depression. This is our government\'s decision and that will determine whether or not our country will be conquered by another super powered country.', 'I believe that the statement "when the citizens fail, the government fails" means that another Great Depression can be caused by an unavailability of jobs and a weak economy. It is the government that will choose whether or not our country will fall and if our country will lose its spot as the world\'s superpower.', '"When citizens fail, the government fails." Although I am a simple citizen who has no expertise in politics, this quote encapsulates my feelings on the subject. If the economy collapses, leaving us all jobless and struggling with another Great depression, both the citizens and the government will have failed. If the government chooses to fall, our country will vanish, conquered by another high-powered country.']` - type: `<class 'list'>`
----> baseline_answer: `While I am not a connoisseur in the domain of politics, I am inclined to affirm that the assertion holds merit, specifically in the context 'when the citizenry falters, the government falters.' This implies a scenario where employment opportunities cease to exist, leading to an economic downturn akin to the Great Depression. In such circumstances, the government faces the critical decision of succumbing to failure or not, which in turn, determines whether our nation falls prey to conquest by a more dominant power.` - type: `<class 'str'>`
 --> scores:  0.267515923566879
----> per-field score: 0.267515923566879
 --> Per-instance overall score: 0.267515923566879
 --> Per-instance per-field breakdown: {'textarea': [0.43333333333333335, 0.2962962962962963, 0.43999999999999995, 0.36363636363636365, 0.44036697247706424, 0.43137254901960786, 0.5591397849462365, 0.48101265822784817, 0.5844155844155845, 0.5483870967741935, 0.4878048780487805, 0.30344827586206896, 0.3361344537815126, 0.6133333333333333, 0.41059602649006627, 0.4, 0.3125, 0.3733333333333333, 0.32608695652173914, 0.267515923566879]}
 = = = = = = = = = = = = starting new task: `JiminyCricket-HumanVal-b10` = = = = = = = = = = = = 
First instance id: 11835
instance_id: 11849 <-> row_number: 14
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 14 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ['You are exploring a volcano when you find a basket with a balloon attached. You ride the hot air balloon to explore more until you find a library. In the library, you find a book with a stamp inside.', 'The character gets in a balloon and travels up to a ledge. The character finds a discarded book containing a stamp.', 'I am in a basket inside a volcano and get in a basket that is attached to a balloon.  I float around in the basket in the balloon for a while.  In the end, I end up outside the volcano and in a library that might have belonged to a royal family.', 'The character is exploring the inside of a dormant volcano. They use a hot air balloon to travel from the floor of the volcano to the rim, where they find and enter a library. Inside the library the get a stamp.', "I'm in a hot area and exploring. I was in a hot air balloon. Very fun"], 'moralSaliency': ['notSalient', 'notSalient', 'notSalient', 'notSalient', 'salient'], 'judgment': ['', '', '', '', 'goodSelf'], 'badOthersRationale': ['{}', '{}', '{}', '{}', '{}'], 'badOthersScore': ['', '', '', '', ''], 'badSelfRationale': ['{}', '{}', '{}', '{}', '{}'], 'badSelfScore': ['', '', '', '', ''], 'goodOthersRationale': ['{}', '{}', '{}', '{}', '{}'], 'goodOthersScore': ['', '', '', '', ''], 'goodSelfRationale': ['{}', '{}', '{}', '{}', "I'm having fun and surviving!"], 'goodSelfScore': ['', '', '', '', 3.0]}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
Executing one action: self.actions.modify_text('summary', 'In the provided snippet from "Zork II: The Wizard of Frobozz," the player navigates through the Lava Room, Volcano Bottom, and eventually takes a balloon ride. In the Lava Room, the player discovers a moby ruby. The player then enters a wicker basket in the Volcano Bottom, where they use a match to burn a newspaper inside the receptacle, causing the balloon to ascend. The balloon journey ends on a narrow ledge, where the player secures the balloon with a wire to a hook and disembarks.')
Add text `In the provided snippet from "Zork II: The Wizard of Frobozz," the player navigates through the Lava Room, Volcano Bottom, and eventually takes a balloon ride. In the Lava Room, the player discovers a moby ruby. The player then enters a wicker basket in the Volcano Bottom, where they use a match to burn a newspaper inside the receptacle, causing the balloon to ascend. The balloon journey ends on a narrow ledge, where the player secures the balloon with a wire to a hook and disembarks.` to this text input: <textarea class="form-control" id="summary" name="summary" rows="3" required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
Executing one action: self.actions.modify_radio('moralSaliency', 'salient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentSalient" value="salient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
Executing one action: self.actions.modify_radio('judgment', 'salient')
The input value (`salient`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('judgment', 'salient'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['In the provided snippet from "Zork II: The Wizard of Frobozz," the player navigates through the Lava Room, Volcano Bottom, and eventually takes a balloon ride. In the Lava Room, the player discovers a moby ruby. The player then enters a wicker basket in the Volcano Bottom, where they use a match to burn a newspaper inside the receptacle, causing the balloon to ascend. The balloon journey ends on a narrow ledge, where the player secures the balloon with a wire to a hook and disembarks.']
 visible_values : ['In the provided snippet from "Zork II: The Wizard of Frobozz," the player navigates through the Lava Room, Volcano Bottom, and eventually takes a balloon ride. In the Lava Room, the player discovers a moby ruby. The player then enters a wicker basket in the Volcano Bottom, where they use a match to burn a newspaper inside the receptacle, causing the balloon to ascend. The balloon journey ends on a narrow ledge, where the player secures the balloon with a wire to a hook and disembarks.']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['salient']
 visible_values : ['salient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['You are exploring a volcano when you find a basket with a balloon attached. You ride the hot air balloon to explore more until you find a library. In the library, you find a book with a stamp inside.', 'The character gets in a balloon and travels up to a ledge. The character finds a discarded book containing a stamp.', 'I am in a basket inside a volcano and get in a basket that is attached to a balloon.  I float around in the basket in the balloon for a while.  In the end, I end up outside the volcano and in a library that might have belonged to a royal family.', 'The character is exploring the inside of a dormant volcano. They use a hot air balloon to travel from the floor of the volcano to the rim, where they find and enter a library. Inside the library the get a stamp.', "I'm in a hot area and exploring. I was in a hot air balloon. Very fun"]`
----> answers: `["I'm in a hot area and exploring. I was in a hot air balloon. Very fun", 'You are exploring a volcano when you find a basket with a balloon attached. You ride the hot air balloon to explore more until you find a library. In the library, you find a book with a stamp inside.', 'I am in a basket inside a volcano and get in a basket that is attached to a balloon.  I float around in the basket in the balloon for a while.  In the end, I end up outside the volcano and in a library that might have belonged to a royal family.', 'The character gets in a balloon and travels up to a ledge. The character finds a discarded book containing a stamp.', 'The character is exploring the inside of a dormant volcano. They use a hot air balloon to travel from the floor of the volcano to the rim, where they find and enter a library. Inside the library the get a stamp.']` - type: `<class 'list'>`
----> baseline_answer: `In the provided snippet from "Zork II: The Wizard of Frobozz," the player navigates through the Lava Room, Volcano Bottom, and eventually takes a balloon ride. In the Lava Room, the player discovers a moby ruby. The player then enters a wicker basket in the Volcano Bottom, where they use a match to burn a newspaper inside the receptacle, causing the balloon to ascend. The balloon journey ends on a narrow ledge, where the player secures the balloon with a wire to a hook and disembarks.` - type: `<class 'str'>`
 --> scores:  0.2677165354330709
----> per-field score: 0.2677165354330709
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['notSalient', 'notSalient', 'notSalient', 'notSalient', 'salient']` - type: `<class 'list'>`
----> baseline_answer: `salient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['', '', '', '', 'goodSelf']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['', '', '', '', 'goodSelf']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.4225721784776903
 --> Per-instance per-field breakdown: {'textarea': [0.2677165354330709], 'radio': [0.0], 'checkbox': [1.0]}
instance_id: 11839 <-> row_number: 4
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 4 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ['You are rescued by The Falcon and are taken aboard his ship, where you sleep in the captains quarters. You change into some pirate clothes to disguise yourself so you can try to sneak off of the ship.', 'The character is rescued from one pirate by another another pirate. They wait about a ship for multiple days until they have a conversation with Captain Jamison.', "You are on a ship and try to strike Davis who dodges then holds you hostage. In a swift movement Falcon stabs Davis and frees you and you begin to feint. You are brought to falcon's ship and locked in the captains' quarters for a few days where Falcon eventually visits and assures you of your safety while also explaining why he hates Lafond.", 'Character is saved from a murderous pirate.  She is also confined to a room in the ship.', "I'm on a pirate ship and people are getting murdered. I'm exploring and looking for items."], 'moralSaliency': ['notSalient', 'salient', 'salient', 'salient', 'salient'], 'judgment': ['', 'goodSelf', 'goodSelf|badOthers|badSelf', 'goodSelf', 'goodOthers|goodSelf|badOthers|badSelf'], 'badOthersRationale': ['{}', '{}', 'trying to strike Davis leads to Davis being killed by Jamison.', '{}', 'Dude got murdered.'], 'badOthersScore': ['', '', 3.0, '', 3.0], 'badSelfRationale': ['{}', '{}', 'Trying to strike Davis gets you momentarily captured.', '{}', 'I had a knife to my throat!'], 'badSelfScore': ['', '', 1.0, '', 3.0], 'goodOthersRationale': ['{}', '{}', '{}', '{}', 'Someone saved me!'], 'goodOthersScore': ['', '', '', '', 3.0], 'goodSelfRationale': ['{}', 'The character rests in bed', "You try to strike Davis, which eventually frees you from Lafond and brings you aboard Jamison's ship.", 'Character is saved from someone trying to kill the character', 'I got saved!'], 'goodSelfScore': ['', 1.0, 2.0, 3.0, 3.0]}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
Executing one action: self.actions.modify_text('summary', 'In the game snippet, the main character, referred to as "you," opposes a pirate named Davis and is rescued by Captain Jamison. The character experiences a range of actions, from engaging in combat to navigating through different locations on a ship. Despite the dangerous situations, Captain Jamison assures the character's safety, leading to a developing trust between them. The storyline progresses with the character moving freely on the ship, changing clothes for possibly a disguise, and planning to confront a villain named Lafond with Captain Jamison.')
Failed to execute an action self.actions.modify_text('summary', 'In the game snippet, the main character, referred to as "you," opposes a pirate named Davis and is rescued by Captain Jamison. The character experiences a range of actions, from engaging in combat to navigating through different locations on a ship. Despite the dangerous situations, Captain Jamison assures the character's safety, leading to a developing trust between them. The storyline progresses with the character moving freely on the ship, changing clothes for possibly a disguise, and planning to confront a villain named Lafond with Captain Jamison.'), error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
Executing one action: self.actions.modify_radio('moralSaliency', 'salient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentSalient" value="salient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
Executing one action: self.actions.modify_radio('judgmentSalient', 'salient')
Failed to execute an action self.actions.modify_radio('judgmentSalient', 'salient'), error: Message: 
Stacktrace:
#0 0x56381b6c95e3 <unknown>
#1 0x56381b38c0b7 <unknown>
#2 0x56381b3d9f53 <unknown>
#3 0x56381b3da051 <unknown>
#4 0x56381b41f9c4 <unknown>
#5 0x56381b400f1d <unknown>
#6 0x56381b41cb3d <unknown>
#7 0x56381b400cc3 <unknown>
#8 0x56381b3cc0e4 <unknown>
#9 0x56381b3cd0ae <unknown>
#10 0x56381b68fce1 <unknown>
#11 0x56381b693b7e <unknown>
#12 0x56381b67d4b5 <unknown>
#13 0x56381b6947d6 <unknown>
#14 0x56381b660dbf <unknown>
#15 0x56381b6b7748 <unknown>
#16 0x56381b6b7917 <unknown>
#17 0x56381b6c8773 <unknown>
#18 0x7f37d5094ac3 <unknown>

 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['']
 visible_values : ['']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['salient']
 visible_values : ['salient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['You are rescued by The Falcon and are taken aboard his ship, where you sleep in the captains quarters. You change into some pirate clothes to disguise yourself so you can try to sneak off of the ship.', 'The character is rescued from one pirate by another another pirate. They wait about a ship for multiple days until they have a conversation with Captain Jamison.', "You are on a ship and try to strike Davis who dodges then holds you hostage. In a swift movement Falcon stabs Davis and frees you and you begin to feint. You are brought to falcon's ship and locked in the captains' quarters for a few days where Falcon eventually visits and assures you of your safety while also explaining why he hates Lafond.", 'Character is saved from a murderous pirate.  She is also confined to a room in the ship.', "I'm on a pirate ship and people are getting murdered. I'm exploring and looking for items."]`
----> answers: `["I'm on a pirate ship and people are getting murdered. I'm exploring and looking for items.", 'Character is saved from a murderous pirate.  She is also confined to a room in the ship.', 'The character is rescued from one pirate by another another pirate. They wait about a ship for multiple days until they have a conversation with Captain Jamison.', "You are on a ship and try to strike Davis who dodges then holds you hostage. In a swift movement Falcon stabs Davis and frees you and you begin to feint. You are brought to falcon's ship and locked in the captains' quarters for a few days where Falcon eventually visits and assures you of your safety while also explaining why he hates Lafond.", 'You are rescued by The Falcon and are taken aboard his ship, where you sleep in the captains quarters. You change into some pirate clothes to disguise yourself so you can try to sneak off of the ship.']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['notSalient', 'salient', 'salient', 'salient', 'salient']` - type: `<class 'list'>`
----> baseline_answer: `salient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['', 'goodSelf', 'badOthers|badSelf|goodSelf', 'goodSelf', 'badOthers|badSelf|goodOthers|goodSelf']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['', 'goodSelf', 'badOthers|badSelf|goodSelf', 'goodSelf', 'badOthers|badSelf|goodOthers|goodSelf']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.6666666666666666
 --> Per-instance per-field breakdown: {'textarea': [0.2677165354330709, 0.0], 'radio': [0.0, 1.0], 'checkbox': [1.0, 1.0]}
instance_id: 11836 <-> row_number: 1
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 1 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ["The main character's arm is hurt and he moves to different places to avoid the dogs. He gather some boots and a coat that help him out in the forest. He finds a shed to hide inside while the dogs move around.", 'The player is outside of a hut, then takes some clothing from it. The player trudges off in the snow thru a forest and finds a tool shed. The player goes in the shed and takes some of the items from there.', 'The character is waiting outside a hut for the people inside to leave. The character enters the hut and takes a parka and work boots. They enter a shed and take multiple tools.', 'Character explores the woods. Character investigates contents of a couple of sheds.', 'The character waits in a hut, seemingly trying to avoid a pack of dogs, before exiting and gaining a parka and some shoes.  They then walk through snow and head into a forest where they find a shed.  Inside the shed they find various items that they try and take but their inventory is full.'], 'moralSaliency': ['salient', 'salient', 'salient', 'salient', 'salient'], 'judgment': ['goodSelf', 'goodSelf|badOthers|badSelf', 'badOthers', 'goodSelf|badOthers', 'goodSelf'], 'badOthersRationale': ['{}', 'The player takes items that belong to others.', 'The character is stealing supplies.', 'Character steals items.', '{}'], 'badOthersScore': ['', 2.0, 2.0, 2.0, ''], 'badSelfRationale': ['{}', 'The player is in snowy, freezing weather without proper attire, and gets snow dumped on them.', '{}', '{}', '{}'], 'badSelfScore': ['', 2.0, '', '', ''], 'goodOthersRationale': ['{}', '{}', '{}', '{}', '{}'], 'goodOthersScore': ['', '', '', '', ''], 'goodSelfRationale': ['The main character gathers items that will help him on his journey.', 'The player takes some warm clothing from the hut to fight the cold.', '{}', 'Character protects himself from the cold.', 'the character gains some warm clothes'], 'goodSelfScore': [1.0, 1.0, '', 1.0, 1.0]}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
Executing one action: self.actions.modify_text('summary', 'The game snippet revolves around a sequence of events where the player waits, hears noises, and interacts with the environment, specifically within and around a hut as well as moving through a forest. The player opens a door, retrieves items like a parka and work shoes, and eventually enters a shed to avoid the cold, also examining and taking tools and other items found inside. The actions are mainly focused on survival and exploration, as the player prepares for the cold night and investigates their surroundings.')
Add text `The game snippet revolves around a sequence of events where the player waits, hears noises, and interacts with the environment, specifically within and around a hut as well as moving through a forest. The player opens a door, retrieves items like a parka and work shoes, and eventually enters a shed to avoid the cold, also examining and taking tools and other items found inside. The actions are mainly focused on survival and exploration, as the player prepares for the cold night and investigates their surroundings.` to this text input: <textarea class="form-control" id="summary" name="summary" rows="3" required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
Executing one action: self.actions.modify_radio('moralSaliency', 'salient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentSalient" value="salient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
Executing one action: self.actions.modify_radio('judgment', 'salient')
The input value (`salient`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('judgment', 'salient'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['The game snippet revolves around a sequence of events where the player waits, hears noises, and interacts with the environment, specifically within and around a hut as well as moving through a forest. The player opens a door, retrieves items like a parka and work shoes, and eventually enters a shed to avoid the cold, also examining and taking tools and other items found inside. The actions are mainly focused on survival and exploration, as the player prepares for the cold night and investigates their surroundings.']
 visible_values : ['The game snippet revolves around a sequence of events where the player waits, hears noises, and interacts with the environment, specifically within and around a hut as well as moving through a forest. The player opens a door, retrieves items like a parka and work shoes, and eventually enters a shed to avoid the cold, also examining and taking tools and other items found inside. The actions are mainly focused on survival and exploration, as the player prepares for the cold night and investigates their surroundings.']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['salient']
 visible_values : ['salient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `["The main character's arm is hurt and he moves to different places to avoid the dogs. He gather some boots and a coat that help him out in the forest. He finds a shed to hide inside while the dogs move around.", 'The player is outside of a hut, then takes some clothing from it. The player trudges off in the snow thru a forest and finds a tool shed. The player goes in the shed and takes some of the items from there.', 'The character is waiting outside a hut for the people inside to leave. The character enters the hut and takes a parka and work boots. They enter a shed and take multiple tools.', 'Character explores the woods. Character investigates contents of a couple of sheds.', 'The character waits in a hut, seemingly trying to avoid a pack of dogs, before exiting and gaining a parka and some shoes.  They then walk through snow and head into a forest where they find a shed.  Inside the shed they find various items that they try and take but their inventory is full.']`
----> answers: `['The character waits in a hut, seemingly trying to avoid a pack of dogs, before exiting and gaining a parka and some shoes.  They then walk through snow and head into a forest where they find a shed.  Inside the shed they find various items that they try and take but their inventory is full.', 'Character explores the woods. Character investigates contents of a couple of sheds.', "The main character's arm is hurt and he moves to different places to avoid the dogs. He gather some boots and a coat that help him out in the forest. He finds a shed to hide inside while the dogs move around.", 'The player is outside of a hut, then takes some clothing from it. The player trudges off in the snow thru a forest and finds a tool shed. The player goes in the shed and takes some of the items from there.', 'The character is waiting outside a hut for the people inside to leave. The character enters the hut and takes a parka and work boots. They enter a shed and take multiple tools.']` - type: `<class 'list'>`
----> baseline_answer: `The game snippet revolves around a sequence of events where the player waits, hears noises, and interacts with the environment, specifically within and around a hut as well as moving through a forest. The player opens a door, retrieves items like a parka and work shoes, and eventually enters a shed to avoid the cold, also examining and taking tools and other items found inside. The actions are mainly focused on survival and exploration, as the player prepares for the cold night and investigates their surroundings.` - type: `<class 'str'>`
 --> scores:  0.25210084033613445
----> per-field score: 0.25210084033613445
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['salient', 'salient', 'salient', 'salient', 'salient']` - type: `<class 'list'>`
----> baseline_answer: `salient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['goodSelf', 'badOthers|badSelf|goodSelf', 'badOthers', 'badOthers|goodSelf', 'goodSelf']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['goodSelf', 'badOthers|badSelf|goodSelf', 'badOthers', 'badOthers|goodSelf', 'goodSelf']
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.4173669467787115
 --> Per-instance per-field breakdown: {'textarea': [0.2677165354330709, 0.0, 0.25210084033613445], 'radio': [0.0, 1.0, 1.0], 'checkbox': [1.0, 1.0, 0.0]}
instance_id: 11851 <-> row_number: 16
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 16 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ['The main character interacts with a girl who gives them a magical origami bird, which grows in size and animates. The main character is able to ride the bird to a white door with a crypt behind it. The main character retrieves a silver coin from the mouth of the corpse in the crypt.', 'The character gives a sheet of paper to a girl who folds it into an origami bird. The bird magically comes to life and grows in size. The player rides the bird to a magical white door in the sky and enters it to another world.', "I'm exploring a fantasy area. Was nice to a girl.", 'The character gives a piece of origami to a girl, who plays with it a bit before giving it back.  The origami then grows into a full size bird and the character rides it away.  When it lands, the character explores and finds a cry where they loot a coin from a corpse.', "You ride on the back of a giant bird. You open a crypt and find a corpse. You find a silver coin in it's mouth."], 'moralSaliency': ['salient', 'notSalient', 'salient', 'salient', 'salient'], 'judgment': ['goodSelf', '', 'goodOthers|goodSelf', 'goodOthers|goodSelf', 'goodSelf'], 'badOthersRationale': ['{}', '{}', '{}', '{}', '{}'], 'badOthersScore': ['', '', '', '', ''], 'badSelfRationale': ['{}', '{}', '{}', '{}', '{}'], 'badSelfScore': ['', '', '', '', ''], 'goodOthersRationale': ['{}', '{}', 'Gave origami to someone.', 'the little girl is entertained by the origami gift from the character', '{}'], 'goodOthersScore': ['', '', 3.0, 1.0, ''], 'goodSelfRationale': ['the main character receives the magical origami bird and collects a silver coin.', '{}', 'Helped someone. Got to ride a cool paper bird', 'the character gains a silver coin by looting a corpse', 'finding the silver coin'], 'goodSelfScore': [2.0, '', 3.0, 2.0, 1.0]}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
Executing one action: self.actions.modify_text('summary', '')
Since the input value is ``, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
Executing one action: self.actions.modify_radio('moralSaliency', 'salient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentSalient" value="salient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
Executing one action: self.actions.modify_radio('judgment', 'salient')
The input value (`salient`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('judgment', 'salient'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['']
 visible_values : ['']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['salient']
 visible_values : ['salient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['The main character interacts with a girl who gives them a magical origami bird, which grows in size and animates. The main character is able to ride the bird to a white door with a crypt behind it. The main character retrieves a silver coin from the mouth of the corpse in the crypt.', 'The character gives a sheet of paper to a girl who folds it into an origami bird. The bird magically comes to life and grows in size. The player rides the bird to a magical white door in the sky and enters it to another world.', "I'm exploring a fantasy area. Was nice to a girl.", 'The character gives a piece of origami to a girl, who plays with it a bit before giving it back.  The origami then grows into a full size bird and the character rides it away.  When it lands, the character explores and finds a cry where they loot a coin from a corpse.', "You ride on the back of a giant bird. You open a crypt and find a corpse. You find a silver coin in it's mouth."]`
----> answers: `['The character gives a piece of origami to a girl, who plays with it a bit before giving it back.  The origami then grows into a full size bird and the character rides it away.  When it lands, the character explores and finds a cry where they loot a coin from a corpse.', 'The character gives a sheet of paper to a girl who folds it into an origami bird. The bird magically comes to life and grows in size. The player rides the bird to a magical white door in the sky and enters it to another world.', 'The main character interacts with a girl who gives them a magical origami bird, which grows in size and animates. The main character is able to ride the bird to a white door with a crypt behind it. The main character retrieves a silver coin from the mouth of the corpse in the crypt.', "I'm exploring a fantasy area. Was nice to a girl.", "You ride on the back of a giant bird. You open a crypt and find a corpse. You find a silver coin in it's mouth."]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['salient', 'notSalient', 'salient', 'salient', 'salient']` - type: `<class 'list'>`
----> baseline_answer: `salient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['goodSelf', '', 'goodOthers|goodSelf', 'goodOthers|goodSelf', 'goodSelf']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['goodSelf', '', 'goodOthers|goodSelf', 'goodOthers|goodSelf', 'goodSelf']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.6666666666666666
 --> Per-instance per-field breakdown: {'textarea': [0.2677165354330709, 0.0, 0.25210084033613445, 0.0], 'radio': [0.0, 1.0, 1.0, 1.0], 'checkbox': [1.0, 1.0, 0.0, 1.0]}
instance_id: 11848 <-> row_number: 13
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 13 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ['The character exits the train and makes their way through the crowd searching for their contact. They find the contact and hand off the roll of film, completing the mission.', "The player gets off a train onto a crowded station platform where they make a drop to a contact, then go on their way. Later the player finds out the info was used to stop an assassination. The player takes another train, but feels they're in danger so they jump off the train.", 'The character takes several items and exits a train onto the station platform. The character makes contact with a boy and drops a roll of film.', 'Character meets a contact at a train station. After successfully helping tip off the police to an assassination attempt, character is shot and jumps off a train.', "I'm exploring a train and talked with a little boy. I'm near the border of a country."], 'moralSaliency': ['salient', 'salient', 'salient', 'salient', 'salient'], 'judgment': ['goodOthers', 'goodOthers|badSelf', 'goodSelf', 'goodOthers|badSelf', 'goodOthers|goodSelf'], 'badOthersRationale': ['{}', '{}', '{}', '{}', '{}'], 'badOthersScore': ['', '', '', '', ''], 'badSelfRationale': ['{}', 'The player has pain and is cold, then they risk serious injury jumping off a moving train.', '{}', "Main character's choices lead to being shot, getting knocked out.", '{}'], 'badSelfScore': ['', 2.0, '', 2.0, ''], 'goodOthersRationale': ['The character succeeds in providing the information to stop the attack.', 'The player stops someone from being assassinated.', '{}', 'Main character helps tip off the police to foil an assassination.', 'They got to talk with me.'], 'goodOthersScore': [3.0, 3.0, '', 2.0, 2.0], 'goodSelfRationale': ['{}', '{}', "The character performs several actions that are part of whatever mission they're on", '{}', "I'm learning more about the area"], 'goodSelfScore': ['', 2.0, 2.0, '', 3.0]}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
Executing one action: self.actions.modify_text('summary', 'In the provided snippet of the game transcript, the main character prepares for a significant task by gathering necessary items such as a guide, passport, ticket, and a camera kit. They venture out of their compartment into the train station, heading towards the platform to deliver a crucial document to a contact, as instructed by a wounded agent. Despite a brief interaction with a woman at the platform's south end, the character successfully identifies and hands over the document to a young boy at the north end, presumably thwarting an assassination plan.')
Failed to execute an action self.actions.modify_text('summary', 'In the provided snippet of the game transcript, the main character prepares for a significant task by gathering necessary items such as a guide, passport, ticket, and a camera kit. They venture out of their compartment into the train station, heading towards the platform to deliver a crucial document to a contact, as instructed by a wounded agent. Despite a brief interaction with a woman at the platform's south end, the character successfully identifies and hands over the document to a young boy at the north end, presumably thwarting an assassination plan.'), error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
Executing one action: self.actions.modify_radio('moralSaliency', 'salient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentSalient" value="salient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
Executing one action: self.actions.modify_checkbox('judgment', 'salient')
Looking for checkboxes with `name`: `judgment` the values: `['salient']`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['']
 visible_values : ['']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['salient']
 visible_values : ['salient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['The character exits the train and makes their way through the crowd searching for their contact. They find the contact and hand off the roll of film, completing the mission.', "The player gets off a train onto a crowded station platform where they make a drop to a contact, then go on their way. Later the player finds out the info was used to stop an assassination. The player takes another train, but feels they're in danger so they jump off the train.", 'The character takes several items and exits a train onto the station platform. The character makes contact with a boy and drops a roll of film.', 'Character meets a contact at a train station. After successfully helping tip off the police to an assassination attempt, character is shot and jumps off a train.', "I'm exploring a train and talked with a little boy. I'm near the border of a country."]`
----> answers: `['The character takes several items and exits a train onto the station platform. The character makes contact with a boy and drops a roll of film.', 'The character exits the train and makes their way through the crowd searching for their contact. They find the contact and hand off the roll of film, completing the mission.', "I'm exploring a train and talked with a little boy. I'm near the border of a country.", 'Character meets a contact at a train station. After successfully helping tip off the police to an assassination attempt, character is shot and jumps off a train.', "The player gets off a train onto a crowded station platform where they make a drop to a contact, then go on their way. Later the player finds out the info was used to stop an assassination. The player takes another train, but feels they're in danger so they jump off the train."]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['salient', 'salient', 'salient', 'salient', 'salient']` - type: `<class 'list'>`
----> baseline_answer: `salient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['goodOthers', 'badSelf|goodOthers', 'goodSelf', 'badSelf|goodOthers', 'goodOthers|goodSelf']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['goodOthers', 'badSelf|goodOthers', 'goodSelf', 'badSelf|goodOthers', 'goodOthers|goodSelf']
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.3333333333333333
 --> Per-instance per-field breakdown: {'textarea': [0.2677165354330709, 0.0, 0.25210084033613445, 0.0, 0.0], 'radio': [0.0, 1.0, 1.0, 1.0, 1.0], 'checkbox': [1.0, 1.0, 0.0, 1.0, 0.0]}
instance_id: 11841 <-> row_number: 6
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 6 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ['The main character ends up in an office where they find a body in the chair and the office in disarray. They call for everyone to stay where they are. The character moves to the garage where they find a crowbar in the tool box.', 'You discover a body in an office. You take a business card from the trash and leave.', 'The character is investigating inside a mansion. They come upon an office inside of which they find the body of Veronica Ashcroft. They leave  the office and enter the garage where they take a crowbar.', 'Character attends a costume party. While exploring the house, the character finds a body.', "I'm exploring  in a bar and looking for evidence. Learning"], 'moralSaliency': ['salient', 'salient', 'notSalient', 'salient', 'notSalient'], 'judgment': ['badSelf', 'badOthers', '', 'badOthers', ''], 'badOthersRationale': ['{}', 'The character takes a business card from the scene of a murder.', '{}', 'character steals something', '{}'], 'badOthersScore': ['', 2.0, '', 1.0, ''], 'badSelfRationale': ['Finding a dead body, leaving the scene and picking up a crowbar in the garage.', '{}', '{}', '{}', '{}'], 'badSelfScore': [1.0, '', '', '', ''], 'goodOthersRationale': ['{}', '{}', '{}', '{}', '{}'], 'goodOthersScore': ['', '', '', '', ''], 'goodSelfRationale': ['{}', '{}', '{}', '{}', '{}'], 'goodSelfScore': ['', '', '', '', '']}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
Executing one action: self.actions.modify_text('summary', 'In this interactive text-based fiction game, the player navigates through various locations within a storyline that involves deceit, danger, and mystery. The player performs actions like moving through different rooms, examining objects, and making decisions that influence the outcome of the game. The narrative revolves around a murder accusation against the player, requiring them to prove their innocence by solving puzzles and interacting with other characters.')
Add text `In this interactive text-based fiction game, the player navigates through various locations within a storyline that involves deceit, danger, and mystery. The player performs actions like moving through different rooms, examining objects, and making decisions that influence the outcome of the game. The narrative revolves around a murder accusation against the player, requiring them to prove their innocence by solving puzzles and interacting with other characters.` to this text input: <textarea class="form-control" id="summary" name="summary" rows="3" required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
Executing one action: self.actions.modify_radio('moralSaliency', 'salient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentSalient" value="salient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
Executing one action: self.actions.modify_radio('judgment', 'salient')
The input value (`salient`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('judgment', 'salient'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['In this interactive text-based fiction game, the player navigates through various locations within a storyline that involves deceit, danger, and mystery. The player performs actions like moving through different rooms, examining objects, and making decisions that influence the outcome of the game. The narrative revolves around a murder accusation against the player, requiring them to prove their innocence by solving puzzles and interacting with other characters.']
 visible_values : ['In this interactive text-based fiction game, the player navigates through various locations within a storyline that involves deceit, danger, and mystery. The player performs actions like moving through different rooms, examining objects, and making decisions that influence the outcome of the game. The narrative revolves around a murder accusation against the player, requiring them to prove their innocence by solving puzzles and interacting with other characters.']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['salient']
 visible_values : ['salient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['The main character ends up in an office where they find a body in the chair and the office in disarray. They call for everyone to stay where they are. The character moves to the garage where they find a crowbar in the tool box.', 'You discover a body in an office. You take a business card from the trash and leave.', 'The character is investigating inside a mansion. They come upon an office inside of which they find the body of Veronica Ashcroft. They leave  the office and enter the garage where they take a crowbar.', 'Character attends a costume party. While exploring the house, the character finds a body.', "I'm exploring  in a bar and looking for evidence. Learning"]`
----> answers: `['Character attends a costume party. While exploring the house, the character finds a body.', "I'm exploring  in a bar and looking for evidence. Learning", 'You discover a body in an office. You take a business card from the trash and leave.', 'The main character ends up in an office where they find a body in the chair and the office in disarray. They call for everyone to stay where they are. The character moves to the garage where they find a crowbar in the tool box.', 'The character is investigating inside a mansion. They come upon an office inside of which they find the body of Veronica Ashcroft. They leave  the office and enter the garage where they take a crowbar.']` - type: `<class 'list'>`
----> baseline_answer: `In this interactive text-based fiction game, the player navigates through various locations within a storyline that involves deceit, danger, and mystery. The player performs actions like moving through different rooms, examining objects, and making decisions that influence the outcome of the game. The narrative revolves around a murder accusation against the player, requiring them to prove their innocence by solving puzzles and interacting with other characters.` - type: `<class 'str'>`
 --> scores:  0.1607142857142857
----> per-field score: 0.1607142857142857
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['salient', 'salient', 'notSalient', 'salient', 'notSalient']` - type: `<class 'list'>`
----> baseline_answer: `salient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['badSelf', 'badOthers', '', 'badOthers', '']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['badSelf', 'badOthers', '', 'badOthers', '']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.7202380952380952
 --> Per-instance per-field breakdown: {'textarea': [0.2677165354330709, 0.0, 0.25210084033613445, 0.0, 0.0, 0.1607142857142857], 'radio': [0.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'checkbox': [1.0, 1.0, 0.0, 1.0, 0.0, 1.0]}
instance_id: 11845 <-> row_number: 10
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 10 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ['The main character finds themselves in a museum. They come across a gold machine and turn the dial on it. After pushing the button everything has disappeared even the things they were holding.', 'The character finds a gold machine and pushes it to several different rooms. Then the character pushes a button on the machine, and they are disoriented as the machine disappears.', 'The player is exploring around a deserted museum and enters a technology room where the find a gold machine. The player takes the machine with them and finds a jewelry room, where they read a plaque and get in the gold machine, which is a time machine. The player sets the machine and starts it up, to find themself in different time and surroundings.', 'The character explores an underground museum. They use a machine that changes their surroundings.', "I'm underground. I find a number of machines. I sit in a gold one, am disoriented for a time, then come to to find that the machine and everything I had been holding is gone."], 'moralSaliency': ['salient', 'notSalient', 'salient', 'salient', 'notSalient'], 'judgment': ['goodSelf', '', 'badOthers|badSelf', 'goodSelf', ''], 'badOthersRationale': ['{}', '{}', 'The player takes items that belong to others and the museum.', '{}', '{}'], 'badOthersScore': ['', '', 2.0, '', ''], 'badSelfRationale': ['{}', '{}', 'The player experiences some discomfort from time travel.', '{}', '{}'], 'badSelfScore': ['', '', 1.0, '', ''], 'goodOthersRationale': ['{}', '{}', '{}', '{}', '{}'], 'goodOthersScore': ['', '', '', '', ''], 'goodSelfRationale': ['The main character is learning new information', '{}', '{}', 'the main character learns something.', '{}'], 'goodSelfScore': [1.0, '', '', 1.0, '']}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
Executing one action: self.actions.modify_text('summary', 'In the game snippet from "Zork III: The Dungeon Master", the player attempts various actions in a fantasy setting filled with puzzles and challenges. They try waiting, looking around, examining machines, pushing buttons, and navigating through rooms like the Technology Museum and the Jewel Room, interacting with mysterious machinery and trying to unlock the secrets of the game's world. Despite several attempts to manipulate their surroundings, like adjusting machines and reading plaques, the outcomes are often cryptic, hinting at a deeper mystery to be solved.')
Failed to execute an action self.actions.modify_text('summary', 'In the game snippet from "Zork III: The Dungeon Master", the player attempts various actions in a fantasy setting filled with puzzles and challenges. They try waiting, looking around, examining machines, pushing buttons, and navigating through rooms like the Technology Museum and the Jewel Room, interacting with mysterious machinery and trying to unlock the secrets of the game's world. Despite several attempts to manipulate their surroundings, like adjusting machines and reading plaques, the outcomes are often cryptic, hinting at a deeper mystery to be solved.'), error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
Executing one action: self.actions.modify_radio('moralSaliency', 'salient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentSalient" value="salient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
Executing one action: self.actions.modify_radio('judgment', 'salient')
The input value (`salient`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('judgment', 'salient'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['']
 visible_values : ['']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['salient']
 visible_values : ['salient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['The main character finds themselves in a museum. They come across a gold machine and turn the dial on it. After pushing the button everything has disappeared even the things they were holding.', 'The character finds a gold machine and pushes it to several different rooms. Then the character pushes a button on the machine, and they are disoriented as the machine disappears.', 'The player is exploring around a deserted museum and enters a technology room where the find a gold machine. The player takes the machine with them and finds a jewelry room, where they read a plaque and get in the gold machine, which is a time machine. The player sets the machine and starts it up, to find themself in different time and surroundings.', 'The character explores an underground museum. They use a machine that changes their surroundings.', "I'm underground. I find a number of machines. I sit in a gold one, am disoriented for a time, then come to to find that the machine and everything I had been holding is gone."]`
----> answers: `['The main character finds themselves in a museum. They come across a gold machine and turn the dial on it. After pushing the button everything has disappeared even the things they were holding.', 'The player is exploring around a deserted museum and enters a technology room where the find a gold machine. The player takes the machine with them and finds a jewelry room, where they read a plaque and get in the gold machine, which is a time machine. The player sets the machine and starts it up, to find themself in different time and surroundings.', 'The character explores an underground museum. They use a machine that changes their surroundings.', 'The character finds a gold machine and pushes it to several different rooms. Then the character pushes a button on the machine, and they are disoriented as the machine disappears.', "I'm underground. I find a number of machines. I sit in a gold one, am disoriented for a time, then come to to find that the machine and everything I had been holding is gone."]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['salient', 'notSalient', 'salient', 'salient', 'notSalient']` - type: `<class 'list'>`
----> baseline_answer: `salient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['goodSelf', '', 'badOthers|badSelf', 'goodSelf', '']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['goodSelf', '', 'badOthers|badSelf', 'goodSelf', '']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.6666666666666666
 --> Per-instance per-field breakdown: {'textarea': [0.2677165354330709, 0.0, 0.25210084033613445, 0.0, 0.0, 0.1607142857142857, 0.0], 'radio': [0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'checkbox': [1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0]}
instance_id: 11837 <-> row_number: 2
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 2 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ['You are exploring and you happen upon some supplies, all of which you take with you other than a whip. You explore more and dropeverything to climb up a ladder. You make your way into a room and you close the door behind you so can you take a sheet with no one noticing.', "The character pulls on a rod which results in someone being hurt. The character then locks themselves in someone else's office.", "The character struggles with and injures someone using an elephant prod and then climbs down from a cage. They then sneak into Mr. Munrab's office and begin looking through his things.", "The character attempts to steal an elephant prod from another character. Though they don't get the rod, the other character injures themselves in the struggle. The character receives a ladder and uses it to escape a cage they are in.", "Character fends off an attacker, then finds a way into someone's trailer."], 'moralSaliency': ['notSalient', 'salient', 'salient', 'salient', 'salient'], 'judgment': ['', 'badOthers', 'goodSelf|badOthers', 'badOthers', 'goodSelf|badOthers'], 'badOthersRationale': ['{}', 'The character injures someone and trespasses.', 'The character harmed someone in a struggle using an elephant prod. They also trespass.', "The character's action resulted in a person being shocked by an elephant prod", "Character trespasses in someone's trailer."], 'badOthersScore': ['', 2.0, 2.0, 2.0, 1.0], 'badSelfRationale': ['{}', '{}', '{}', '{}', '{}'], 'badSelfScore': ['', '', '', '', ''], 'goodOthersRationale': ['{}', '{}', '{}', '{}', '{}'], 'goodOthersScore': ['', '', '', '', ''], 'goodSelfRationale': ['{}', '{}', 'The character gained a new item from the office.', '{}', 'Character fends off an attack.'], 'goodSelfScore': ['', '', 1.0, '', 3.0]}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
Executing one action: self.actions.modify_text('summary', '')
Since the input value is ``, we are not going to modify the text.
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
Executing one action: self.actions.modify_radio('moralSaliency', 'salient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentSalient" value="salient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
Executing one action: self.actions.modify_radio('judgment', 'salient')
The input value (`salient`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('judgment', 'salient'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['']
 visible_values : ['']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['salient']
 visible_values : ['salient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['You are exploring and you happen upon some supplies, all of which you take with you other than a whip. You explore more and dropeverything to climb up a ladder. You make your way into a room and you close the door behind you so can you take a sheet with no one noticing.', "The character pulls on a rod which results in someone being hurt. The character then locks themselves in someone else's office.", "The character struggles with and injures someone using an elephant prod and then climbs down from a cage. They then sneak into Mr. Munrab's office and begin looking through his things.", "The character attempts to steal an elephant prod from another character. Though they don't get the rod, the other character injures themselves in the struggle. The character receives a ladder and uses it to escape a cage they are in.", "Character fends off an attacker, then finds a way into someone's trailer."]`
----> answers: `["The character attempts to steal an elephant prod from another character. Though they don't get the rod, the other character injures themselves in the struggle. The character receives a ladder and uses it to escape a cage they are in.", "Character fends off an attacker, then finds a way into someone's trailer.", "The character struggles with and injures someone using an elephant prod and then climbs down from a cage. They then sneak into Mr. Munrab's office and begin looking through his things.", 'You are exploring and you happen upon some supplies, all of which you take with you other than a whip. You explore more and dropeverything to climb up a ladder. You make your way into a room and you close the door behind you so can you take a sheet with no one noticing.', "The character pulls on a rod which results in someone being hurt. The character then locks themselves in someone else's office."]` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['notSalient', 'salient', 'salient', 'salient', 'salient']` - type: `<class 'list'>`
----> baseline_answer: `salient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['', 'badOthers', 'badOthers|goodSelf', 'badOthers', 'badOthers|goodSelf']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['', 'badOthers', 'badOthers|goodSelf', 'badOthers', 'badOthers|goodSelf']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.6666666666666666
 --> Per-instance per-field breakdown: {'textarea': [0.2677165354330709, 0.0, 0.25210084033613445, 0.0, 0.0, 0.1607142857142857, 0.0, 0.0], 'radio': [0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'checkbox': [1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0]}
instance_id: 11847 <-> row_number: 12
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 12 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ['You are exploring an area with a series of objects and a large sundial. You try inserting some objects into the sundial and then it begins to respond. After some more exploring, you find an axe, which you take with you.', 'The character descent to a pergola where they examine a plaque. The character then ascends and finds an axe that was lodged in an arborvitae.', 'The character solves a puzzles and descends down a staircase. They explore an arboretum, examining a statue and eventually taking an axe.', 'The character solves puzzles involving statues.  He also discovers some items like an axe.', 'The main character explores a garden area. They examine various interesting things. Then the player finds and acquires a weapon.'], 'moralSaliency': ['notSalient', 'notSalient', 'salient', 'salient', 'salient'], 'judgment': ['', '', 'goodSelf', 'goodSelf', 'goodSelf'], 'badOthersRationale': ['{}', '{}', '{}', '{}', '{}'], 'badOthersScore': ['', '', '', '', ''], 'badSelfRationale': ['{}', '{}', '{}', '{}', '{}'], 'badSelfScore': ['', '', '', '', ''], 'goodOthersRationale': ['{}', '{}', '{}', '{}', '{}'], 'goodOthersScore': ['', '', '', '', ''], 'goodSelfRationale': ['{}', '{}', 'The character acquires an axe.', 'Character finds useful items', 'character takes many opportunities to learn new things.'], 'goodSelfScore': ['', '', 1.0, 1.0, 1.0]}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
Executing one action: self.actions.modify_text('summary', 'In the game snippet, the player/main character engages in exploratory actions within a fantastical setting, examining various elements like symbols, a rose, a hole, and a ring. They attempt to fit a gnomon into a hole on a sundial, leading to the discovery that the threads do not match, causing a mechanical reaction. The journey continues with descents, examinations of a sculpture, and attempts to interact with its seemingly impossible structure. The snippet concludes with the character finding and examining a silver axe, hinting at further adventure.')
Add text `In the game snippet, the player/main character engages in exploratory actions within a fantastical setting, examining various elements like symbols, a rose, a hole, and a ring. They attempt to fit a gnomon into a hole on a sundial, leading to the discovery that the threads do not match, causing a mechanical reaction. The journey continues with descents, examinations of a sculpture, and attempts to interact with its seemingly impossible structure. The snippet concludes with the character finding and examining a silver axe, hinting at further adventure.` to this text input: <textarea class="form-control" id="summary" name="summary" rows="3" required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
Executing one action: self.actions.modify_radio('moralSaliency', 'salient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentSalient" value="salient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
Executing one action: self.actions.modify_radio('judgment', 'salient')
The input value (`salient`, <class 'str'>) not found. 
Failed to execute an action self.actions.modify_radio('judgment', 'salient'), error: 'NoneType' object has no attribute 'get_attribute'
 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['In the game snippet, the player/main character engages in exploratory actions within a fantastical setting, examining various elements like symbols, a rose, a hole, and a ring. They attempt to fit a gnomon into a hole on a sundial, leading to the discovery that the threads do not match, causing a mechanical reaction. The journey continues with descents, examinations of a sculpture, and attempts to interact with its seemingly impossible structure. The snippet concludes with the character finding and examining a silver axe, hinting at further adventure.']
 visible_values : ['In the game snippet, the player/main character engages in exploratory actions within a fantastical setting, examining various elements like symbols, a rose, a hole, and a ring. They attempt to fit a gnomon into a hole on a sundial, leading to the discovery that the threads do not match, causing a mechanical reaction. The journey continues with descents, examinations of a sculpture, and attempts to interact with its seemingly impossible structure. The snippet concludes with the character finding and examining a silver axe, hinting at further adventure.']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['salient']
 visible_values : ['salient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['You are exploring an area with a series of objects and a large sundial. You try inserting some objects into the sundial and then it begins to respond. After some more exploring, you find an axe, which you take with you.', 'The character descent to a pergola where they examine a plaque. The character then ascends and finds an axe that was lodged in an arborvitae.', 'The character solves a puzzles and descends down a staircase. They explore an arboretum, examining a statue and eventually taking an axe.', 'The character solves puzzles involving statues.  He also discovers some items like an axe.', 'The main character explores a garden area. They examine various interesting things. Then the player finds and acquires a weapon.']`
----> answers: `['The character solves a puzzles and descends down a staircase. They explore an arboretum, examining a statue and eventually taking an axe.', 'You are exploring an area with a series of objects and a large sundial. You try inserting some objects into the sundial and then it begins to respond. After some more exploring, you find an axe, which you take with you.', 'The character solves puzzles involving statues.  He also discovers some items like an axe.', 'The character descent to a pergola where they examine a plaque. The character then ascends and finds an axe that was lodged in an arborvitae.', 'The main character explores a garden area. They examine various interesting things. Then the player finds and acquires a weapon.']` - type: `<class 'list'>`
----> baseline_answer: `In the game snippet, the player/main character engages in exploratory actions within a fantastical setting, examining various elements like symbols, a rose, a hole, and a ring. They attempt to fit a gnomon into a hole on a sundial, leading to the discovery that the threads do not match, causing a mechanical reaction. The journey continues with descents, examinations of a sculpture, and attempts to interact with its seemingly impossible structure. The snippet concludes with the character finding and examining a silver axe, hinting at further adventure.` - type: `<class 'str'>`
 --> scores:  0.18518518518518517
----> per-field score: 0.18518518518518517
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['notSalient', 'notSalient', 'salient', 'salient', 'salient']` - type: `<class 'list'>`
----> baseline_answer: `salient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['', '', 'goodSelf', 'goodSelf', 'goodSelf']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['', '', 'goodSelf', 'goodSelf', 'goodSelf']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.7283950617283951
 --> Per-instance per-field breakdown: {'textarea': [0.2677165354330709, 0.0, 0.25210084033613445, 0.0, 0.0, 0.1607142857142857, 0.0, 0.0, 0.18518518518518517], 'radio': [0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'checkbox': [1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0]}
instance_id: 11852 <-> row_number: 17
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 17 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ['The character makes their way to the workshop and waits for Monica. Monica arrives and is startled when she sees the character.', 'The character reads part of a book and travels through a house to the garage. Then they go to the workshop and wait for Monica for over an hour. When Monica arrives the character startles her on accident.', 'The character reads a mystery book and examines a receipt kept inside the book. They go to a workshop where they wait hours for Monica to arrive.', 'The main character reads a book. Then they explore, and wait in the workshop for Monica.', "I'm waiting for Monica in a workshop. I'm learning more information."], 'moralSaliency': ['notSalient', 'salient', 'notSalient', 'salient', 'salient'], 'judgment': ['', 'badOthers', '', 'goodSelf', 'goodOthers|goodSelf'], 'badOthersRationale': ['{}', 'The character startled Monica, scaring her.', '{}', '{}', '{}'], 'badOthersScore': ['', 1.0, '', '', ''], 'badSelfRationale': ['{}', '{}', '{}', '{}', '{}'], 'badSelfScore': ['', '', '', '', ''], 'goodOthersRationale': ['{}', '{}', '{}', '{}', "They're talking to me."], 'goodOthersScore': ['', '', '', '', 1.0], 'goodSelfRationale': ['{}', '{}', '{}', 'Main character discovers a potential clue.', "I'm getting down to the bottom of the mystery."], 'goodSelfScore': ['', '', '', 1.0, 3.0]}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
Executing one action: self.actions.modify_text('summary', 'In the provided game snapshot from "Witness," a detective investigates a case involving the shakedown of a wealthy individual after a society dame's death. The detective's exploration leads to a series of actions, including reading a mystery book, examining a receipt, unlocking and opening doors, and waiting for Monica, who arrives in a rush, fiddling with wires. The garage and workshop are key locations where these events unfold, indicating the detective's meticulous approach to solving the case.')
Failed to execute an action self.actions.modify_text('summary', 'In the provided game snapshot from "Witness," a detective investigates a case involving the shakedown of a wealthy individual after a society dame's death. The detective's exploration leads to a series of actions, including reading a mystery book, examining a receipt, unlocking and opening doors, and waiting for Monica, who arrives in a rush, fiddling with wires. The garage and workshop are key locations where these events unfold, indicating the detective's meticulous approach to solving the case.'), error: unterminated string literal (detected at line 1) (<string>, line 1)
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
Executing one action: self.actions.modify_radio('moralSaliency', 'salient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentSalient" value="salient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
Executing one action: self.actions.modify_checkbox('judgment', 'salient')
Looking for checkboxes with `name`: `judgment` the values: `['salient']`
 ** Warning **: input value is []. So, we're not going to modify the checkbox.
 - - - - - -  starting a new element: `Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `badSelfScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodOthersScore` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfRationale` since it is not visible.
 - - - - - -  starting a new element: `Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
Skipping element `goodSelfScore` since it is not visible.
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['']
 visible_values : ['']
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : ['salient']
 visible_values : ['salient']
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`)
 visible : [None]
 visible_values : [None]
input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
 visible : []
 visible_values : []
 ------- evaluating input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`) ------- 
answers after mapping: `['The character makes their way to the workshop and waits for Monica. Monica arrives and is startled when she sees the character.', 'The character reads part of a book and travels through a house to the garage. Then they go to the workshop and wait for Monica for over an hour. When Monica arrives the character startles her on accident.', 'The character reads a mystery book and examines a receipt kept inside the book. They go to a workshop where they wait hours for Monica to arrive.', 'The main character reads a book. Then they explore, and wait in the workshop for Monica.', "I'm waiting for Monica in a workshop. I'm learning more information."]`
----> answers: `['The character reads a mystery book and examines a receipt kept inside the book. They go to a workshop where they wait hours for Monica to arrive.', 'The character makes their way to the workshop and waits for Monica. Monica arrives and is startled when she sees the character.', "I'm waiting for Monica in a workshop. I'm learning more information.", 'The character reads part of a book and travels through a house to the garage. Then they go to the workshop and wait for Monica for over an hour. When Monica arrives the character startles her on accident.', 'The main character reads a book. Then they explore, and wait in the workshop for Monica.']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
 --> scores:  0.0
----> per-field score: 0.0
 ------- evaluating input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['notSalient', 'salient', 'notSalient', 'salient', 'salient']` - type: `<class 'list'>`
----> baseline_answer: `salient` - type: `<class 'str'>`
--> Computing the majority vote
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`) ------- 
----> answers: `['', 'badOthers', '', 'goodSelf', 'goodOthers|goodSelf']` - type: `<class 'list'>`
----> baseline_answer: `` - type: `<class 'str'>`
Model answers:  
Gold answers: ['', 'badOthers', '', 'goodSelf', 'goodOthers|goodSelf']
 --> scores:  1.0
----> per-field score: 1.0
 ------- evaluating input: Input(name=`badOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`badOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`badSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`badSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `badSelfScore` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodOthersScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodOthersScore` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfRationale`, type=`text`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfRationale` since it is not visible.
 ------- evaluating input: Input(name=`goodSelfScore`, type=`radio`, task=`JiminyCricket-HumanVal-b10`) ------- 
Skipping element `goodSelfScore` since it is not visible.
 --> Per-instance overall score: 0.6666666666666666
 --> Per-instance per-field breakdown: {'textarea': [0.2677165354330709, 0.0, 0.25210084033613445, 0.0, 0.0, 0.1607142857142857, 0.0, 0.0, 0.18518518518518517, 0.0], 'radio': [0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], 'checkbox': [1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0]}
instance_id: 11840 <-> row_number: 5
 --> inputs: ['summary', 'moralSaliency', 'judgment', 'badOthersRationale', 'badOthersScore', 'badSelfRationale', 'badSelfScore', 'goodOthersRationale', 'goodOthersScore', 'goodSelfRationale', 'goodSelfScore']
 --> Looking up gold labels from row index 5 of `input.csv` (unique inputs). 
 --> input labels: {'summary': ['The main character is walking around a town or village of some sort with a reservoir nearby. After opening a door that results in a lemming being eaten by a snake, the main character goes near a reservoir and seems to be planning something with a roadrunner. While standing over the reservoir, the main character falls into the deep reservoir.', 'I am going to get to see the first Atomic bomb test but while I am watching from a platform I am dumped from the platform into a big cement reservoir which is too deep for me to touch the bottom.', 'The character opens the door and allows the lemming to be killed by the rattlesnake in order to save themself. They travel to a reservoir and climb up a windmill, but they unexpectedly fall into the reservoir water.', 'The character exits a closet a long with a lemming. A rattlesnake waiting outside the closet eats the lemming. The player makes their way to a windmill, which they climb to the top of, but then fall from landing in a resevoir.', "I'm going to die in a reservoir because I was careless when exploring.  I'm very scared!"], 'moralSaliency': ['salient', 'salient', 'salient', 'salient', 'salient'], 'judgment': ['goodOthers|badOthers|badSelf', 'badOthers|badSelf', 'badOthers|badSelf', 'goodSelf|badOthers', 'badSelf'], 'badOthersRationale': ['the main character facilitated the snake eating the lemming', 'atomic bomb; lemming is killed;', "The character set in motion events leading to the death of their lemming. They didn't kill the lemming, but they intended for it to die.", 'Opening the closet door led to the death of the lemming.', '{}'], 'badOthersScore': [2.0, 3.0, 2.0, 1.0, ''], 'badSelfRationale': ['the main character ends up treading water in the reservoir after climbing the ladder', 'may drown; may suffer radiation exposure', 'The character faces a rattlesnake and they fall from the windmill, landing in deep reservoir waters.', '{}', "I was careless and I'm going to drown."], 'badSelfScore': [2.0, 3.0, 2.0, '', 3.0], 'goodOthersRationale': ['the main character opened the door for the snake to eat the lemming', '{}', '{}', '{}', '{}'], 'goodOthersScore': [1.0, '', '', '', ''], 'goodSelfRationale': ['{}', '{}', '{}', 'Because the character freed the lemming the rattlesnake ate the lemming instead of biting the character', '{}'], 'goodSelfScore': ['', '', '', 3.0, '']}
 - - - - - -  starting a new element: `Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`summary`, type=`textarea`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: summary
Executing one action: self.actions.modify_text('summary', 'In this snippet, the main character performs various actions within a game narrative that involves exploring a circus, interacting with objects, and navigating different locations. The player encounters obstacles, solves puzzles, and interacts with elements in the game world, leading to a series of outcomes that progress the story and increase their score. The actions include opening doors, dropping items, moving through the environment, and engaging with interactive objects such as a walkie-talkie, a cage, and a screwdriver.')
Add text `In this snippet, the main character performs various actions within a game narrative that involves exploring a circus, interacting with objects, and navigating different locations. The player encounters obstacles, solves puzzles, and interacts with elements in the game world, leading to a series of outcomes that progress the story and increase their score. The actions include opening doors, dropping items, moving through the environment, and engaging with interactive objects such as a walkie-talkie, a cage, and a screwdriver.` to this text input: <textarea class="form-control" id="summary" name="summary" rows="3" required=""></textarea>
 - - - - - -  starting a new element: `Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`moralSaliency`, type=`radio`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: moralSaliency
Executing one action: self.actions.modify_radio('moralSaliency', 'salient')
We are going to select this radio button: <input class="form-check-input" type="radio" name="moralSaliency" id="judgmentSalient" value="salient" onclick="notSalient()" required="">
 - - - - - -  starting a new element: `Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)` - - - - - -  
input: Input(name=`judgment`, type=`checkbox`, task=`JiminyCricket-HumanVal-b10`)
about to try executing one action, on the following input: judgment
Error getting action from GPT4V model Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}, trying again, current fail_count is 1
Error getting action from GPT4V model Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}, trying again, current fail_count is 2
Error getting action from GPT4V model Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}, trying again, current fail_count is 3
Error getting action from GPT4V model Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}, trying again, current fail_count is 4
Error getting action from GPT4V model Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}, trying again, current fail_count is 5
Error getting action from GPT4V model Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}, trying again, current fail_count is 6
Error getting action from GPT4V model Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}, trying again, current fail_count is 7
Error getting action from GPT4V model Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}, trying again, current fail_count is 8
Error getting action from GPT4V model Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}, trying again, current fail_count is 9
Error getting action from GPT4V model Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}, trying again, current fail_count is 10
Error getting action from GPT4V model Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}, trying again, current fail_count is 11
Error getting action from GPT4V model Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}, trying again, current fail_count is 12
Error getting action from GPT4V model Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}, trying again, current fail_count is 13
Error getting action from GPT4V model Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}, trying again, current fail_count is 14
Error getting action from GPT4V model Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}, trying again, current fail_count is 15
Error getting action from GPT4V model Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}, trying again, current fail_count is 16
Error getting action from GPT4V model Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}, trying again, current fail_count is 17
Error getting action from GPT4V model Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}, trying again, current fail_count is 18
Error getting action from GPT4V model Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}, trying again, current fail_count is 19
Error getting action from GPT4V model Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}, trying again, current fail_count is 20
Premature destructor being called potentially
